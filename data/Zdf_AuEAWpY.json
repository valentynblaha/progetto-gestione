{"video": {"id": "Zdf_AuEAWpY", "title": "3Sum - The Daily Programmer #323", "description": "The 3SUM problem we are discussing was found here: https://www.reddit.com/r/dailyprogrammer/comments/6melen/20170710_challenge_323_easy_3sum/\n\nFollow me on twitter: https://twitter.com/CodyLSeibert\n\nHelp us improve our videos by taking this short survey here:\nhttps://goo.gl/forms/rustp398xzDYRZoI3\n\nFeel free to post links to your own solutions to this problem in the comments!\n\nI'm still working out the best audio / mic setup, so bear with me if the audio seems too loud in some places or sounds different between videos.\n\nLearn to code for free and get a developer job: https://www.freecodecamp.com\n\nRead hundreds of articles on programming: https://medium.freecodecamp.com", "duration": "PT9M2S", "likes": "414", "views": "36728"}, "comments": [{"topLevelComment": {"author": "Freddy Hagayev", "text": "The dislike bar is showing", "likes": 0}}, {"topLevelComment": {"author": "Thisura Thenuka", "text": "Wow ! This is the clearest explanation I've found on this topic. Thanks bro \u2764", "likes": 0}}, {"topLevelComment": {"author": "Maloof", "text": "Good explanation for  beginners but the Solution is super inefficient", "likes": 1}}, {"topLevelComment": {"author": "Kevin Chou", "text": "This video quality is a little bit low. It's just a brute force solution not worth mentioning.", "likes": 0}}, {"topLevelComment": {"author": "Eric Nelson", "text": "This doesn't clean out duplicates anyway. His own code output shows two instances of 9, -4, -5. Needs a sort() in there somewhere to make that work.", "likes": 0}}, {"topLevelComment": {"author": "Sean LaFlam", "text": "I too can write a function that's O(N^3) and also incorrect.", "likes": 1}}, {"topLevelComment": {"author": "Kumar Gandharv Singh", "text": "worst video ever", "likes": 0}}, {"topLevelComment": {"author": "Hassan Abbas", "text": "Thanks for helping with the 3some problem", "likes": 0}}, {"topLevelComment": {"author": "Mujtaba Mahmood", "text": "Nice presentation but you'd use a hashtable, it's free!", "likes": 0}}, {"topLevelComment": {"author": "Christopher", "text": "This doesn't remove duplicates if you're returning an array. Most implementations of this question don't want arrays with rearranged similar numbers.", "likes": 0}}, {"topLevelComment": {"author": "Rocky", "text": "isn't there a more efficient O(n^2) solution to this problem ?", "likes": 0}}, {"topLevelComment": {"author": "Jitendra Raghuwanshi", "text": "and i thought it would be an n**2.", "likes": 0}}, {"topLevelComment": {"author": "Vinay Sharma", "text": "Facepalm :/", "likes": 1}}, {"topLevelComment": {"author": "Kushal Mahajan", "text": "Programming for the poor. LMAO. You have the numbers but not the best content. You can have such a video on your youtube channel and not a well written article.  I don't feel bothered now that you did not consider my article submission. To access the depth you need the depth.", "likes": 0}}, {"topLevelComment": {"author": "Basheer AL-MOMANI", "text": "thanks, \nis \"9 -5 -4\" and \"-5 9 -4\" considered as duplicates?", "likes": 3}}, {"topLevelComment": {"author": "SWATI PRADHAN", "text": "Can anyone share this series first video link I mean the The daily programmer #1 if it exists", "likes": 0}}, {"topLevelComment": {"author": "MildTime", "text": "This is misleading video. Whats the point if you are doing it in O(n^3) No company will hire you for such solution", "likes": 0}}, {"topLevelComment": {"author": "Prasanna Sasne", "text": "There should be an algorithm that takes O(n^2) time complexity. You can do it in a more precise way.", "likes": 0}}, {"topLevelComment": {"author": "J C", "text": "O(\u221e)", "likes": 1}}, {"topLevelComment": {"author": "J C", "text": "O(n^\u221e)", "likes": 0}}, {"topLevelComment": {"author": "Coleman", "text": "Thumbs this down into oblivion! You should never encourage a solution like this.", "likes": 0}}, {"topLevelComment": {"author": "CCarnagEE", "text": "so..if they want 100 elements sum ,u would use 100 loops....!!!", "likes": 0}}, {"topLevelComment": {"author": "Belal Dif", "text": "O(3) isn't a good solution", "likes": 0}}, {"topLevelComment": {"author": "Mert Ertu\u011frul", "text": "This is definitely not an optimal solution.", "likes": 0}}, {"topLevelComment": {"author": "Kritin Gokharu", "text": "just unsubscribed the channel after seeing this N^3 solution.", "likes": 2}}, {"topLevelComment": {"author": "Ariel robles alvarez", "text": "That's a bad solution, even for 2sum, at least he admits at the end there is a better way to solve this.", "likes": 0}}, {"topLevelComment": {"author": "yutoliho", "text": "I don't think this code is right", "likes": 0}}, {"topLevelComment": {"author": "Juan Cabral", "text": "wasting people's time :(", "likes": 0}}, {"topLevelComment": {"author": "Joanna Tsang Ramberg", "text": "It won't submit.  :(  It's too slow!!!  :(", "likes": 0}}, {"topLevelComment": {"author": "WikiPeoples", "text": "Um... your duplicate check doesn't work.  It would not catch two equal sets such as this:  [-1,0,1] , [1,0,-1] because your strings would not be equal, but the sets actually are equal.", "likes": 1}}, {"topLevelComment": {"author": "Phuc Dao", "text": "this solution is absolute crap", "likes": 0}}, {"topLevelComment": {"author": "The Lavish Coder", "text": "This actually doesn't work. Given an array [0, 1, 2, 3, 4, 5]. 0, 3, and 5 would never be tested because i, j, and k are always adjacent.", "likes": 1}}, {"topLevelComment": {"author": "pegasus", "text": "this is not a good solution... O(n^3)", "likes": 2}}, {"topLevelComment": {"author": "Jonasz Karwacki", "text": "who the hell cares about an n^3 solution.", "likes": 3}}, {"topLevelComment": {"author": "Eva", "text": "I was expecting him to disapprove the O(n^3) approach and introduce a hashtable solution, but no.. -_- and it's surprising cuz it's a video by freeCodeCamp", "likes": 14}}, {"topLevelComment": {"author": "Youchuan Wang", "text": "not the threesome i'm looking for", "likes": 12}}, {"topLevelComment": {"author": "Kyaw Than Mong", "text": "O(N^3) . Thats LOL", "likes": 6}}, {"topLevelComment": {"author": "Adam", "text": "How can this have so many upvotes with so bad solution to the problem?", "likes": 0}}, {"topLevelComment": {"author": "Ian Ross", "text": "Man, I miss this series so much.", "likes": 0}}, {"topLevelComment": {"author": "Sean Laney", "text": "Wow. An O(n^3) solution is a surefire failure in an interview for a problem that can be solved in O(n^2). I'll be avoiding Free Code Camp in the future. Don't post coding videos with obviously suboptimal code.", "likes": 5}, "replies": [{"author": "peter chon", "text": "COMPLETELY agree", "likes": 0}]}, {"topLevelComment": {"author": "Semih Kek\u00fcl", "text": "drops the ball for large inputs (O(n^3)) and duplicate inputs such as [0,0,0,0...]", "likes": 1}}, {"topLevelComment": {"author": "Abhriya Roy", "text": "Time complexity is off the roof.", "likes": 2}}, {"topLevelComment": {"author": "Arjun Madgavkar", "text": "O(n^3) is not a good solution... this is a misleading video as there are more optimal solutions possible", "likes": 60}, "replies": [{"author": "vendetta Malize", "text": "I think you missed the guys point, after all he said \"a good overview\" not necessarily mean that this is his optimal answer", "likes": 0}]}, {"topLevelComment": {"author": "Lek TIN", "text": "Wow. O(n^3)!!!", "likes": 1}}, {"topLevelComment": {"author": "Prajwal Gadad", "text": "There should be an algorithm that runs in O(n^2).", "likes": 0}}, {"topLevelComment": {"author": "Thomas V", "text": "As most of the other comments said this is an n^3 solution. If an interviewer asked me a 3sum question I would say, \"Well it could easily be solved by just using three for loops, to construct all triplets, then check as each is created if it sums to zero. if so add it to the list... but thatd be super inefficient so this is my solution...\" \n\nThis is a leetcode medium problem, it cant be solved with 3 for loops (at least not solved correctly). \n\nFor those asking, there are two n^2 solutions for this:\nThe first one, (which is technically n^2 + n) would be construct all pairs, as youre constructing pairs, hash all of the numbers you see. Perhaps a dictionary where the key is the number, value is the amount of numbers you see. Then you loop through all pairs, and check your hash table to see if the value exists. to avoid duplicates, you would make the inner loop always start at the index of the outer loop. So youre really only searching from the outer index onward.\n\nanother solution, which is nlogn + n^2 is sort the array. Then loop through the array. For each loop, initalize a high and a low pointer, end of the array and the starting index + 1. If the triplet is greater than 0, you move the high pointer back. If the triplet is less than zero, you move the lower pointer forward, until you find a zero. Stick that in the array, and continue doing this until the low pointer is at the same index as the high, then break the loop and continue.", "likes": 38}, "replies": [{"author": "willie EkaIndLand", "text": "This  is genius idea, thanks for the inputs u gave me, Sir. How do u get such idea?", "likes": 0}, {"author": "AllTheFishAreDead", "text": "Exactly! I've seen some discussions that the hash solution is messier or some how less desirable, but I disagree (and as you point out it is technically faster too). I guess if you wanted to optimize for space then the 2nd one is the go to. \n\nAlso, if you have information about the range of the numbers you can potentially do radix sort and bring it to n + n^2", "likes": 0}]}, {"topLevelComment": {"author": "Abhishek Srivastava", "text": "The solution is not good because you are doing O(n^3)", "likes": 0}}, {"topLevelComment": {"author": "Sagiv Ofek", "text": "its n^3 and you can do it more efficient using n^2", "likes": 2}}, {"topLevelComment": {"author": "Abhishek Pal", "text": "O(n^3) mah :/", "likes": 77}, "replies": [{"author": "Daniyar Yeralin", "text": "Man, I was watching it till 5:00, and then was like \"isn't this guy doing N^3?\" *Time wasted*", "likes": 11}]}, {"topLevelComment": {"author": "Khaled Saleh", "text": "Thank you very much for the video but if you look at the result you're printing you'll find for instance [9 -5 -4] & [-5 9 -4] and also [-5 -4 9] so, in my opinion this is still duplicates but different order. Isn't it?", "likes": 3}, "replies": [{"author": "Mitesh Kumar", "text": "Yeah, this solution is inefficient and incorrect.", "likes": 1}]}, {"topLevelComment": {"author": "Soumya Darshan Rauth", "text": "great one. Hey, how would you eliminate the combination consist of [-1,0,1] and [1,0,-1].. They are not identical but , they both sums zero.", "likes": 0}, "replies": [{"author": "Randy D", "text": "At the top of the function, you could add numbers.sort((a,b)=> a-b); and that would remove duplicates combinations.", "likes": 0}, {"author": "Irving E", "text": "having the same problem lol, have you figured this one out?", "likes": 0}]}, {"topLevelComment": {"author": "Ian Ross", "text": "I am absolutely loving these Daily Programmer videos. They're my new favorite series on this channel!", "likes": 3}}, {"topLevelComment": {"author": "moreshwar dalavi", "text": "Thank you so much for such videos, so useful, and lots of earning..\u00a0 ;) \nwaiting for next challenges! :))", "likes": 1}}, {"topLevelComment": {"author": "Carlos Eduardo P\u00e9rez", "text": "Very informative! Thank you", "likes": 1}}, {"topLevelComment": {"author": "Luis Zapata", "text": "My solution: https://jsfiddle.net/zgluis/gtcgya4u/", "likes": 1}}, {"topLevelComment": {"author": "Sladyn Nunes", "text": "Can you tell me how to install the terminal for javascript on atom.Do i need to install the node.js package", "likes": 1}}, {"topLevelComment": {"author": "mohammad omer", "text": "Excuse m, are  those  daily problems in one playlist cause i cant find it", "likes": 2}, "replies": [{"author": "mohammad omer", "text": "freeCodeCamp amazing all of it thanks for the link", "likes": 2}, {"author": "Breakpoint", "text": "I agree, like these so far", "likes": 3}, {"author": "freeCodeCamp.org", "text": "We're glad this is useful for you!", "likes": 2}, {"author": "Ben", "text": "this is one of my favorite things you guys started doing. perfect length, very easy to follow. it's my \"code coffee\".", "likes": 4}, {"author": "freeCodeCamp.org", "text": "There should be two in a \"The Daily Programmer\" playlist at this moment:  https://www.youtube.com/watch?v=bK0o-8GMRss&list=PLWKjhJtqVAbk7zM11M36sGvU29hB8EDC4", "likes": 4}]}, {"topLevelComment": {"author": "Mirza Sisic", "text": "3Sum - sorry for being \ninfantile but this made me giggle..", "likes": 14}}, {"topLevelComment": {"author": "Ale Zuvic", "text": "Aye thank you! I implemented my solution in Python but I was having problems checking for duplicates, now your solution gave me an idea. Thanks!", "likes": 4}, "replies": [{"author": "Philippe Tremblay", "text": "+1 that's the way to do it in python", "likes": 0}, {"author": "Leonardo oliveira de freitas", "text": "try this:\n\nif set not in sets:\n   sets.append(set)", "likes": 1}]}]}