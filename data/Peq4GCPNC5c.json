{"video": {"id": "Peq4GCPNC5c", "title": "10 Common Coding Interview Problems - Solved!", "description": "Preparing for coding interviews? Competitive programming? Learn to solve 10 common coding problems and improve your problem-solving skills.\n\n\ud83d\udcbb Code: https://gist.github.com/syphh/173172ec9a4a1376e5096a187ecbddc9\n\n\u270f\ufe0f Course developed by Inside code. Check out their YouTube channel: https://www.youtube.com/channel/UCvLEP7Hu6SHd5a2CWeQXalg\n\n\u2328\ufe0f (0:00:00) Introduction\n\u2328\ufe0f (0:00:37) Valid anagram\n\u2328\ufe0f (0:05:10) First and last index in sorted array\n\u2328\ufe0f (0:13:44) Kth largest element\n\u2328\ufe0f (0:19:50) Symmetric tree\n\u2328\ufe0f (0:26:42) Generate parentheses\n\u2328\ufe0f (0:37:03) Gas station\n\u2328\ufe0f (0:50:06) Course schedule\n\u2328\ufe0f (1:06:50) Kth permutation\n\u2328\ufe0f (1:20:13) Minimum window substring\n\u2328\ufe0f (1:47:46) Largest rectangle in histogram\n\u2328\ufe0f (2:10:30) Conclusion\n\n\ud83c\udf89 Thanks to our Champion and Sponsor supporters:\n\ud83d\udc7e Raymond Odero\n\ud83d\udc7e Agust\u00edn Kussrow\n\ud83d\udc7e aldo ferretti\n\ud83d\udc7e Otis Morgan\n\ud83d\udc7e DeezMaster\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news", "duration": "PT2H10M50S", "likes": "13375", "views": "447504"}, "comments": [{"topLevelComment": {"id": "Ugy6qAnxC2h8rht3J294AaABAg", "publishedAt": "2022-01-11T15:54:13Z", "author": "Inside code", "text": "Thank you for the trust given! If you enjoyed the content, you can have a look at the YouTube channel where you will find more algorithms and data structures related videos, you can also ask me questions about this course here\nEnjoy!", "likes": 152}, "replies": [{"id": "Ugy6qAnxC2h8rht3J294AaABAg.9X3cCpweuvs9dyuK1vWXio", "publishedAt": "2022-07-27T06:48:12Z", "author": "deva Cherry", "text": "Sir do you have any complete course on data structures and algorithms course in python if yes recommend me from beginners to advance data structure algorithms course", "likes": 0}, {"id": "Ugy6qAnxC2h8rht3J294AaABAg.9X3cCpweuvs9cbmiABtzlv", "publishedAt": "2022-06-23T10:47:48Z", "author": "Gazeld", "text": "@Alok Mishra \"Sorry my bad\" : So then you could remove your comment or modify it, to avoid someone to get (!) a bad idea...", "likes": 0}, {"id": "Ugy6qAnxC2h8rht3J294AaABAg.9X3cCpweuvs9bzuXkye8ek", "publishedAt": "2022-06-07T23:06:31Z", "author": "DFS&BFS", "text": "47:08 one query about the inequality, if you change the cost of station[3] to 18, and gas[4] to 15, the inequality is still fine, but 8 can not be the result, I think you have to go over it again as previous ones.", "likes": 0}, {"id": "Ugy6qAnxC2h8rht3J294AaABAg.9X3cCpweuvs9ZB9KLrUNsI", "publishedAt": "2022-03-05T07:09:49Z", "author": "Tibetten Balls", "text": "I suqq you clean", "likes": 0}, {"id": "Ugy6qAnxC2h8rht3J294AaABAg.9X3cCpweuvs9XcDtGSAP9u", "publishedAt": "2022-01-25T11:45:37Z", "author": "Adam Driver", "text": "Please continue this series ! Great work", "likes": 0}]}, {"topLevelComment": {"id": "Ugw2xbJePfRiZ6YCyz54AaABAg", "publishedAt": "2023-02-02T04:17:59Z", "author": "Arpit Agrawal", "text": "Should one know the method from video or find it on his own ?", "likes": 0}}, {"topLevelComment": {"id": "UgzYRXkk4_s-LXCtqGt4AaABAg", "publishedAt": "2023-01-30T23:36:27Z", "author": "Ohmega Tech", "text": "thank you, these are useful examples. For next time I would appreciate it if you made an effort to try to enunciate your words more clearly or at least write out captions, as it's difficult to understand what you're saying much of the time and the auto caption tool doesn't seem to fare much better", "likes": 0}}, {"topLevelComment": {"id": "UgwQr5tnC5sa4nl3Kx54AaABAg", "publishedAt": "2023-01-21T15:08:51Z", "author": "Sakthimahendran", "text": "The anogram problem can be solved without HashMap why do we even use HashMap... Can any one explain plz?", "likes": 0}}, {"topLevelComment": {"id": "UgzIY8dS3m3QvBAUWUV4AaABAg", "publishedAt": "2023-01-21T11:51:00Z", "author": "Denis Kallen", "text": "For the gas station:\nI looked at the assignment and got this:\nPython:\ndef find_starting_station(gas, cost):\r\n    n = len(gas)\r\n    current_gas = 0\r\n    starting_point = 0\r\n    for i in range(n):\r\n        current_gas += gas[i]\r\n        current_gas -= cost[i]\r\n        if current_gas < 0:\r\n            starting_point = i + 1\r\n            current_gas = 0\r\n    for i in range(starting_point):\r\n        current_gas += gas[i]\r\n        current_gas -= cost[i]\r\n        if current_gas < 0:\r\n            return -1\r\n    return starting_point\n\n--This function takes in two lists: one for the gas at each station, and one for the cost to travel to the next station.\r\nIt starts by initializing the current_gas and the starting_point to 0.\r\nThen it iterates through the list of gas stations, adding the gas at each station to current_gas, and subtracting the cost to travel to the next station.\r\nIf at any point the current_gas becomes negative, it means it is not possible to traverse all the stations from that starting point, so it sets the starting point to the next index and resets current_gas to 0.\r\nAfter the first iteration, it checks again from the starting_point.\r\nIf at any point current_gas becomes negative, it returns -1, otherwise it returns the starting_point index. --\n\nIs this correct?", "likes": 0}, "replies": [{"id": "UgzIY8dS3m3QvBAUWUV4AaABAg.9l8mTWtoFad9l8mXZGMaNd", "publishedAt": "2023-01-21T11:51:33Z", "author": "Denis Kallen", "text": "Probaly not but i just tryed it without really watching the assignment.", "likes": 0}]}, {"topLevelComment": {"id": "UgxO1OyUtrrA-u5obmR4AaABAg", "publishedAt": "2023-01-13T01:50:40Z", "author": "Paul King", "text": "Too bad it's all in python :p", "likes": 0}}, {"topLevelComment": {"id": "Ugy4RxKZVxSuDbPie_Z4AaABAg", "publishedAt": "2023-01-03T19:04:21Z", "author": "Alexander Sage", "text": "really appreciated this. the course pre-requisite problem is not how courses work. if a course has two prerequisites, then both of those need to come first.", "likes": 0}}, {"topLevelComment": {"id": "UgxCbb-8ImWLEk8LjeF4AaABAg", "publishedAt": "2022-12-12T09:19:28Z", "author": "Amir Sharafkar", "text": "\"salesmen\" is correct at first problem. \"salesman\" is written wrong", "likes": 0}}, {"topLevelComment": {"id": "Ugw_dCclf7wSPw360Jl4AaABAg", "publishedAt": "2022-12-07T03:06:27Z", "author": "temerity", "text": "I think I have a faster way of solving the anagram:\n\ndef findAnagram(word1, word2):\r\n    for i in word1:\r\n        if i in [*word2] and len(word1) == len(word2):\r\n            pass\r\n        else:\r\n            return False\r\n    return True\r\n\r\na = findAnagram(\"garden\", \"danger\")\r\nprint(a)", "likes": 0}, "replies": [{"id": "Ugw_dCclf7wSPw360Jl4AaABAg.9jJyfICl5f99lBz3SAaOZR", "publishedAt": "2023-01-22T17:38:45Z", "author": "Sagar Borse", "text": "it won't work for input where there is a repetition of chars Ex. AAB, ABB.\nyour logic would return valid however, it won't be correct.", "likes": 0}]}, {"topLevelComment": {"id": "Ugw5MTWEu7gJz1vzrbl4AaABAg", "publishedAt": "2022-11-27T09:32:31Z", "author": "Ace Phelps", "text": "I would be so lucky if I\u2019ll get one of this problems \ud83d\ude05", "likes": 0}}, {"topLevelComment": {"id": "Ugx1chItaZ2bjLDIz0Z4AaABAg", "publishedAt": "2022-11-26T17:35:52Z", "author": "LW99", "text": "bro blinked my soul outta me", "likes": 1}}, {"topLevelComment": {"id": "UgzJLT7HpP_pp4j5VWF4AaABAg", "publishedAt": "2022-11-25T13:12:12Z", "author": "hutnelf", "text": "On the anagram problem, can't you just sort each string in alphabetic order then check if both strings matches eachother?", "likes": 0}, "replies": [{"id": "UgzJLT7HpP_pp4j5VWF4AaABAg.9ir9SUVgtY59jNxbSWydkT", "publishedAt": "2022-12-08T16:14:09Z", "author": "zyzden", "text": "You are able to do this, but in instances where an array (or a string) only needs searched once, it's better to do a linear pass over the string instead of sorting and then passing over the string.  Sorting is only an improvement if you need to do a search over a data set multiple times.", "likes": 1}]}, {"topLevelComment": {"id": "UgzTvisVy8d55Bre8cZ4AaABAg", "publishedAt": "2022-11-20T10:08:02Z", "author": "Dhiraj Patra", "text": "Sound of this tutorial is not clear to understand. However the topics are clearly explained. Thanks", "likes": 0}}, {"topLevelComment": {"id": "UgwA5MEoCxDATZ-O-nx4AaABAg", "publishedAt": "2022-11-20T05:11:22Z", "author": "Nadid Linchestein", "text": "English..", "likes": 0}}, {"topLevelComment": {"id": "Ugxr3j3FpcaruGFN6iZ4AaABAg", "publishedAt": "2022-11-19T00:19:28Z", "author": "Yitzhak Dayan", "text": "You have a mistake for the last one, the complexity is n^2 and can't be smaller, for the second solution you made a few errors calculating the complexity\nOne error it is not n/2 since you don't know how the smallest element will split, for instance assume it is perfectly ascending then the second iteration just takes a vector size n-1, then n-2 and so on. Finally you get n+n-1+n-2+\u2026 which is n^2.\nIt will actually be n^2 no matter the split if you do the math right it is just easier to see in this example.\nFurther more you have a problem in the code it self - what if the smallest element repeats 5 times? You now have 6 regions to search so you have to take this into account...", "likes": 0}}, {"topLevelComment": {"id": "UgyUheUbTUEwPsQy9054AaABAg", "publishedAt": "2022-11-18T03:35:56Z", "author": "Dana K", "text": "Thank you for this video and all your effort. \nAbout the course schedule question: for the DFS solution to maintain the \u2018order\u2019  list is unnecessary as we never actually use it or use if for any condition. \n\nAlso, for the BFS solution instead of maintaining list of order, cheaper to use a counter to count how many items were popped from the queue. \nYour solution works better if you need to return the order.\nThanks again!", "likes": 1}}, {"topLevelComment": {"id": "Ugwkjo_YvMu-aeTSgK54AaABAg", "publishedAt": "2022-11-16T20:55:27Z", "author": "Tom McKenna", "text": "There is a mistake at 9:57\n\nIndex mid-1 and index mid+1 could access an index outside the array. This should be changed.", "likes": 0}}, {"topLevelComment": {"id": "Ugxs5CufmQcr7uSr_tl4AaABAg", "publishedAt": "2022-10-29T13:00:01Z", "author": "XShadder22", "text": "Yo guys, what is the difficulty of these problems? I have been learning python for 3 weeks, and I need a reference as a beginner. I was able to solve some of these questions using my own method,  but I find his optimized solutions quite complicated.", "likes": 0}, "replies": [{"id": "Ugxs5CufmQcr7uSr_tl4AaABAg.9hlbaWtHxMW9jkW0UVBhSe", "publishedAt": "2022-12-17T19:46:04Z", "author": "Notyour Dan", "text": "Don\u2019t expect to be able to solve these problems as a beginner. There is still MUCH you need to learn, but do not fret. You will get there eventually! No-one is born a master of algorithms.", "likes": 0}]}, {"topLevelComment": {"id": "UgzLeU2oWT1YqYEqXg14AaABAg", "publishedAt": "2022-10-27T06:27:40Z", "author": "OR Simhon", "text": "In the Kth permutation problem 1:07:40 \nThe time complexity of the first solution is not O(n!) ? \nYou said it is O(n * n!) but the time complexity of itertools.permutations(range(1, n + 1)) is O(n!)\nThanks!", "likes": 1}}, {"topLevelComment": {"id": "UgzcbeFdAKTTNvW0BBF4AaABAg", "publishedAt": "2022-10-20T16:49:36Z", "author": "Ricardo Antonietto", "text": "For the first exercise, don't you think it's way easier to convert the strings do an ordered list and check if they're the same?", "likes": 1}}, {"topLevelComment": {"id": "Ugwsa9OjQZ0s_ofIAkh4AaABAg", "publishedAt": "2022-10-19T08:38:22Z", "author": "Muhammad Zahir", "text": "Challenge2 kth largest element shld be 5.since 7 repeats itself. Correct me if I am wrong", "likes": 0}}, {"topLevelComment": {"id": "UgzB7OfpbQmap92PQtB4AaABAg", "publishedAt": "2022-10-14T15:01:00Z", "author": "Deep Vasoya", "text": "3:30 this code can be reduced more like this:\ndef sol(s, ss):\r\n\r\n    if len(s) != len(ss):\r\n        return False\r\n\r\n    d = dict()\r\n\r\n    for i in range(len(s)):\r\n        if s[i] not in d:\r\n            d[s[i]] = 1\r\n        else:\r\n            d[s[i]] += 1\r\n\r\n    for i in ss:\r\n        if i in d and d[i] > 0:\r\n            d[i] -= 1\r\n        else:\r\n            return False\r\n\r\n    return True\r\n\r\n\r\ns = \"garden\"\r\nss = \"danger\"\r\nprint(sol(s, ss))", "likes": 0}}, {"topLevelComment": {"id": "Ugw04p1vMm5pAbvjL_J4AaABAg", "publishedAt": "2022-10-14T03:40:50Z", "author": "The Cringe King", "text": "if set(word_1.strip()) == set(word_2.strip()):\n\t\tprint(\"anagram\")\n\telse:\n\t\tprint(\"not anagram\")", "likes": 0}}, {"topLevelComment": {"id": "UgxCwmfjrUXlTt0sq3l4AaABAg", "publishedAt": "2022-10-13T05:06:41Z", "author": "Yiwen Xu", "text": "Without time and space complexity limitations, most of these problems are so easy.", "likes": 0}}, {"topLevelComment": {"id": "Ugx0XYtfrY-4DCxmza54AaABAg", "publishedAt": "2022-10-09T15:44:02Z", "author": "zufall", "text": "There is actually an error at 4:27. \"nameless\" and \"salesman\" are NOT anagrams. because the later one does not have two times the character \"e\" as it shown on the slide", "likes": 4}, "replies": [{"id": "Ugx0XYtfrY-4DCxmza54AaABAg.9gyPTNvlHX19jSlxRxvuU-", "publishedAt": "2022-12-10T13:08:30Z", "author": "Brenda Kuekia", "text": "salesmen* not salesman", "likes": 1}]}, {"topLevelComment": {"id": "UgyVjzP6VpydTnqKQPp4AaABAg", "publishedAt": "2022-10-05T15:31:25Z", "author": "Famous Badger", "text": "This video serves 2 purposes - you can learn from it, and it can be a bed time story on the Calm app. Great material, but maybe next time have a coffee before you record", "likes": 0}}, {"topLevelComment": {"id": "UgxONTr71rNgEizBZjR4AaABAg", "publishedAt": "2022-10-03T02:57:18Z", "author": "Jose Matute", "text": "Thank you for this content!", "likes": 1}}, {"topLevelComment": {"id": "UgydNXgs4bcSbb03leZ4AaABAg", "publishedAt": "2022-09-16T20:22:30Z", "author": "Ismael", "text": "The memory complexity of the first one can be further reduced by using a single hash map. The first word increments the values, the second one decrements. After that only 0 must exist as a value in the hash map", "likes": 9}, "replies": [{"id": "UgydNXgs4bcSbb03leZ4AaABAg.9g2g2jGrfJ49kH-8wGenyL", "publishedAt": "2022-12-30T19:53:03Z", "author": "PKperformance", "text": "I was thinking about the same too!", "likes": 1}]}, {"topLevelComment": {"id": "UgwNBJvLxhq_eZAZ9Hl4AaABAg", "publishedAt": "2022-09-16T16:42:52Z", "author": "Salahuddin Bangash", "text": "if (len(s1) == len(s2)):\r\n        if s1.count(i) == s2.count(i):", "likes": 0}}, {"topLevelComment": {"id": "UgzodDcE1mECfcdJrbt4AaABAg", "publishedAt": "2022-09-01T04:52:12Z", "author": "Serge Kamga", "text": "Definitely doing this", "likes": 0}}, {"topLevelComment": {"id": "UgxEFBAy-tCSNwQyUwh4AaABAg", "publishedAt": "2022-08-31T18:28:50Z", "author": "Dom1", "text": "For the first one, you can just do:\n\ndef validAnagram(s1, s2):\n    return Counter(s1) == Counter(s2)", "likes": 0}}, {"topLevelComment": {"id": "UgyvbVgwN_LykIbF3e54AaABAg", "publishedAt": "2022-08-27T16:00:16Z", "author": "Jelani Nelson", "text": "Your are_anagrams code seems incorrect at 4:10, in particular if freq2 has a key that's not in freq1 (consider s1='a' and s2='ab').", "likes": 0}}, {"topLevelComment": {"id": "UgxR8O63tR4PcLhFv3J4AaABAg", "publishedAt": "2022-08-14T23:43:05Z", "author": "Mohamed Eljahmi", "text": "salesmen and nameless are anagram but salesman and nameless are not.", "likes": 0}}, {"topLevelComment": {"id": "Ugzc5WyLcSO89JQCMX14AaABAg", "publishedAt": "2022-08-12T13:21:41Z", "author": "Dade Miller", "text": "thanks for this free content but the subtitles are bad and the accent too. I didn't get why space complexity is O(1) since the array is not a costant but a function parameter. thank you very much", "likes": 0}}, {"topLevelComment": {"id": "UgzIv6wmd1g-9iQexa14AaABAg", "publishedAt": "2022-08-11T13:31:10Z", "author": "Amanda Flood", "text": "In the 'Generate Parentheses' problem, I don't understand why we must pop the closing bracket ')' from comb after performing the second recursive function. \nIt seems to me that this 'comb' list will never be evaluated, so a pop isn't required. A new 'comb' list has already been passed into the next function.\nWhen I try it in code, the final pop is clearly required - if I comment it out, the final results are longer than they should be and therefore inaccurate.\nI just can't work out why! I must be missing something.\nAny help would be much appreciated.", "likes": 0}, "replies": [{"id": "UgzIv6wmd1g-9iQexa14AaABAg.9eaFMaAJdO79jluhFtyfSi", "publishedAt": "2022-12-18T08:49:44Z", "author": "Amanda Flood", "text": "@Notyour Dan thanks, really appreciate it. \nI hadn't understood that the same list is modified over and over. Recursive functions make more sense now!", "likes": 0}, {"id": "UgzIv6wmd1g-9iQexa14AaABAg.9eaFMaAJdO79jkVqdh2kYK", "publishedAt": "2022-12-17T19:44:35Z", "author": "Notyour Dan", "text": "It\u2019s always passing the same combs list, not passing a new one. To pass a new one, you should be passing the list combs[:] to create a copy with the same values.", "likes": 2}]}, {"topLevelComment": {"id": "UgyIikhZWFOH6TsDfst4AaABAg", "publishedAt": "2022-08-08T12:31:32Z", "author": "Killian Ward", "text": "For the second problem, I don't understand how the binary search algorithm doesn't just get stuck inside of the sequence of target numbers.\nCould someone please explain?", "likes": 1}, "replies": [{"id": "UgyIikhZWFOH6TsDfst4AaABAg.9eTQ98JebkL9lXDf4q3rj6", "publishedAt": "2023-01-30T23:39:09Z", "author": "Ohmega Tech", "text": "It's because of the if/else statements used to check our place with respect to the repeated sequence", "likes": 0}]}, {"topLevelComment": {"id": "Ugyyf-rtM0wbcKHvpoJ4AaABAg", "publishedAt": "2022-08-05T20:15:20Z", "author": "__Hannibaal__", "text": "For parentheses is \nEnter parentheses string s\nChar * c = s;\nInt n=0;\nDo {\nIf *c==\u2018(\u2018  than n+=1;\nIf *c==\u2018)\u2019 than  n+=-1;\n}while( *c++ != \u2018\\0\u2019)\nAnalyse your result if (-, 0 , +)", "likes": 0}}, {"topLevelComment": {"id": "Ugyp58TuiZON591gG4J4AaABAg", "publishedAt": "2022-08-05T19:54:18Z", "author": "__Hannibaal__", "text": "Int max, I=0;\n\nFor (int j=0 to k) \n{ max = v(i);\nFor(int i = j+1 to sizeof(v) )\n  If ( v(i) > max ) { max = v(i); I=i; }\n   v(I)=v(i);\n   V(j)=max;\n}\nD\u00e9clara al variable befor\nMax in k th max;", "likes": 0}}, {"topLevelComment": {"id": "UgxL_M8781dPHjmpM6t4AaABAg", "publishedAt": "2022-08-05T19:41:10Z", "author": "__Hannibaal__", "text": "For first problem it\u2019s quit long to solve in Python, In C or C++ easy to do it(without going to standard Library function)", "likes": 0}}, {"topLevelComment": {"id": "Ugz8oC5ynkgnZ9fwZ-p4AaABAg", "publishedAt": "2022-08-04T20:03:05Z", "author": "Mateusz Smendowski", "text": "def task(arr, k):\n    return heapq.nlargest(k, arr)[-1]", "likes": 0}}, {"topLevelComment": {"id": "Ugw4BEwuWVzjeiEQWal4AaABAg", "publishedAt": "2022-08-02T16:44:21Z", "author": "Carlos Vargas", "text": "For the third problem, with the parethesis,\nYou may produce all valid parenthesis using the Catalan recursion.", "likes": 3}}, {"topLevelComment": {"id": "UgxjcH3XBKBsqhKzBYp4AaABAg", "publishedAt": "2022-07-26T20:07:59Z", "author": "Kiddy Boy", "text": "Solutions: \nValid Anagram: 3:30\nFirst & Last Index of a Target num in sorted Array: 7:23\nKth Largest Element in an array: 15:03", "likes": 0}}, {"topLevelComment": {"id": "UgxX9mAG6y_oICvOFBt4AaABAg", "publishedAt": "2022-07-26T07:23:32Z", "author": "Amir Shimoni / van Delft", "text": "Isn't the cost of building a priority(or a heap) NlogN? I am super confused now, it cant be O(n )", "likes": 0}}, {"topLevelComment": {"id": "UgwO1x87mPuolKya4RV4AaABAg", "publishedAt": "2022-07-23T10:03:32Z", "author": "Sudarshan Pawar", "text": "Thanks for the video....It helped a lot !!", "likes": 0}}, {"topLevelComment": {"id": "Ugxr4FwTuevW-ngSxTt4AaABAg", "publishedAt": "2022-07-22T14:51:50Z", "author": "Maheswaran Manoharan", "text": "In 7:01, the code logic was wrong. It will fail if the target value is the last index value.\nCorrect Code:-\ndef first_last_pos(arr,target):\r\n    print(len(arr))\r\n    for i in range (len(arr)):\r\n        if arr[i] == target:\r\n            print(arr[i])\r\n            start = i\r\n            print(i)\r\n            while i < (len(arr)-1) and arr[i+1] == target:\r\n                i+=1\r\n            return [start,i]\r\n    return [-1,-1]", "likes": 0}}, {"topLevelComment": {"id": "UgzNwy2Y0tC_IH7kcWB4AaABAg", "publishedAt": "2022-07-18T22:46:44Z", "author": "Feng Liu", "text": "Actually for first problem starting from python 2.7 at least you can just do freq1 == freq2 and equality will do the job for you", "likes": 0}}, {"topLevelComment": {"id": "UgwQtWHUa_yKwfaMODd4AaABAg", "publishedAt": "2022-07-15T05:41:37Z", "author": "Jayanta Samaddar", "text": "4:25 - I'm sorry, nameless and salesman are not anagrams.\n\nsMap: Map(6) { 'n' => 1, 'a' => 1, 'm' => 1, 'e' => 2, 'l' => 1, 's' => 2 }, // for nameless\ntMap: Map(6) { 's' => 2, 'a' => 2, 'l' => 1, 'e' => 1, 'm' => 1, 'n' => 1 } // for salesman", "likes": 1}}, {"topLevelComment": {"id": "UgxizQ7EIzapjykuuOp4AaABAg", "publishedAt": "2022-07-14T14:45:12Z", "author": "sushant Jha", "text": "Isn't creating a proper max or min heap cost N*logN time complexity. Contradictory to the given one at 18:42 ?", "likes": 0}}, {"topLevelComment": {"id": "UgxEd6LbAMgcogkK-9B4AaABAg", "publishedAt": "2022-07-09T20:08:55Z", "author": "\u65e2\u591c", "text": "Wow, python has so many powerful built-in methods that make algorithm problems much easier, but I am not a python expert and I don't remember many methods in pythons... Still glad python makes the life easier for many people.", "likes": 3}}, {"topLevelComment": {"id": "UgzQUtgKoO-CjCnaU2F4AaABAg", "publishedAt": "2022-07-05T20:43:10Z", "author": "Barkvarosz", "text": "for the first one, cant i just convert the 2 strings to char array, sort them, check if they are the same and return the result?", "likes": 0}}, {"topLevelComment": {"id": "UgzUZq0OQx0U8hmBNGt4AaABAg", "publishedAt": "2022-06-27T11:45:41Z", "author": "Juan Marquinho Vilca Castro", "text": "Here for the second question another solution (javascript) and some unit tests:\n\n```\r\nfunction binarySearch(num, array) {\n  let begin = 0;\n  let end = array.length;\n  let m = Math.floor((begin + end) / 2);\n  while(begin != m) {\n    if (array[m] > num) {\n      end = m;\n    } else if (array[m] < num) {\n      begin = m;\n    } else {\n      return m;\n    }\n    m = Math.floor((begin + end) / 2);\n  }\n  return m;\n}\n\n\nfunction findFirstAndLastIndex(num, array) {\n  let index1 = binarySearch(num - 1, array);\n  let index2 = binarySearch(num + 1, array);\n  if (array[index1] < num) {\n    index1++;\n  }\n  if (array[index2] > num) {\n    index2--;\n  }\n  if (array[index1] != num) {\n    return [-1, -1]\n  }\n  return [index1, index2];\n}\n\n\nconst arr1 = [1, 2, 3, 3, 5, 5, 5, 5, 5, 6, 7];\nconsole.log(findFirstAndLastIndex(5, arr1));\n\nconst arr2 = [5, 5, 5, 5, 5, 6, 7];\nconsole.log(findFirstAndLastIndex(5, arr2));\n\nconst arr3 = [1, 2, 3, 5, 5, 5, 5, 5];\nconsole.log(findFirstAndLastIndex(5, arr3));\n\nconst arr4 = [5, 5, 5, 5, 5];\nconsole.log(findFirstAndLastIndex(5, arr4));\n\nconst arr5 = [5];\nconsole.log(findFirstAndLastIndex(5, arr5));\n\nconst arr6 = [1, 5, 6];\nconsole.log(findFirstAndLastIndex(5, arr6));\n\nconst arr7 = [1, 2, 3, 3, 5, 5, 5, 5, 5, 6, 7];\nconsole.log(findFirstAndLastIndex(8, arr7));\n\nconst arr8 = [1, 2, 2, 2, 6, 6, 6, 6, 6, 6, 7];\nconsole.log(findFirstAndLastIndex(5, arr8));\n\n```", "likes": 0}}, {"topLevelComment": {"id": "Ugw0OjHmb63nhFSaVkx4AaABAg", "publishedAt": "2022-06-23T10:46:09Z", "author": "Gazeld", "text": "Shame for the sound quality, lacks a lot of high frequencies, which makes you hard to follow (for me), compared to any other video. Maybe your mic is of bad quality? Or your recording conditions? I hope you can correct this for future videos.", "likes": 1}}, {"topLevelComment": {"id": "Ugz9_wyCbsijbZYZs7F4AaABAg", "publishedAt": "2022-06-22T23:00:47Z", "author": "RiduFly", "text": "Watching this before my Google interview \ud83d\ude02", "likes": 0}}, {"topLevelComment": {"id": "UgwheGeqP5ts-o0wbdt4AaABAg", "publishedAt": "2022-06-22T17:21:33Z", "author": "Dev Kumar", "text": "I don't want to visualise algos \ud83d\ude14, leave me alone log2base", "likes": 0}}, {"topLevelComment": {"id": "UgzvPpyrpgMpjhE5Vwx4AaABAg", "publishedAt": "2022-06-17T09:47:52Z", "author": "Fazoodle", "text": "Sorting then comparing is genius for anagrams! So ez n fast bb how we like it \ud83d\udc4c", "likes": 0}}, {"topLevelComment": {"id": "Ugy484P5UlnrOQ6Equ94AaABAg", "publishedAt": "2022-06-11T07:45:56Z", "author": "Rob Malford", "text": "Problem #1: Trying to understand some Russian idiot who barely speaks English as you struggle to maintain interest in joining a team which saw fit to hire such a person.", "likes": 0}}, {"topLevelComment": {"id": "UgxF5a2LB9et-GMklNd4AaABAg", "publishedAt": "2022-06-07T15:56:43Z", "author": "tan_05", "text": "Started coding 3 years ago since i was 9 still learning a lot of things from this channel its a blessing that this channel actualy exists", "likes": 7}, "replies": [{"id": "UgxF5a2LB9et-GMklNd4AaABAg.9bz8LknFZsn9c127Xyhsqj", "publishedAt": "2022-06-08T19:00:04Z", "author": "UndeadSoldierE", "text": "you gonna be the 20 years old dude with 12 years of experience XDDD", "likes": 3}]}, {"topLevelComment": {"id": "UgzrNUN1yvHtPxgz4wV4AaABAg", "publishedAt": "2022-06-04T21:56:30Z", "author": "Rain Tech", "text": "You can loop through the array from beginning ,find your target break from the array and then record it index number, Then do the same from back in another loop and break when target found .Since it's  a sorted array this consume less time\ud83d\ude42\ud83d\ude42\ud83d\ude42", "likes": 0}}, {"topLevelComment": {"id": "Ugz9QD2yHDx0qH4FuKR4AaABAg", "publishedAt": "2022-06-03T08:52:50Z", "author": "Michael Jordan", "text": "The first solution for find first and last position does not work for this example : first_and_last([2, 3, 5, 58, 3, 10, 26], 3) returns [1, 1] instead of [1, 4]", "likes": 0}, "replies": [{"id": "Ugz9QD2yHDx0qH4FuKR4AaABAg.9bo4efI26Ek9cELImofyv7", "publishedAt": "2022-06-13T22:57:45Z", "author": "vinay lasetti", "text": "Array needs to be sorted is the precondition to the problem", "likes": 0}]}, {"topLevelComment": {"id": "UgyIw0p7nMtJFKxdDQR4AaABAg", "publishedAt": "2022-06-01T08:32:10Z", "author": "Chidozie Nnachor", "text": "What a minute! \"nameless\" and \"salesman\" are not anagrams, contrary to 4:27. I guess \"salesman\" should have been \"salesmen\"", "likes": 0}}, {"topLevelComment": {"id": "UgyCeDO0ETbiHwfnFiZ4AaABAg", "publishedAt": "2022-05-29T14:02:43Z", "author": "Kyle Choy", "text": "For the anagram question, would it be possible to just add the total value of each string and compare them via ASCI value? If they're equal then they're an anagram if not then it's not (make all letters uppercase or lowercase first )?", "likes": 0}, "replies": [{"id": "UgyCeDO0ETbiHwfnFiZ4AaABAg.9bbl8rTf8y_9blsr5uWeG5", "publishedAt": "2022-06-02T12:22:27Z", "author": "gaurav sharma", "text": "I believe that will be inaccurate as you can have a character with higher ascii value which is equal to sum of the ascii values of other characters. So the two words will be different and you may still get the same total ascii value. I hope this answer's your question.", "likes": 0}]}, {"topLevelComment": {"id": "UgxLE31xbUFDbm8vw_Z4AaABAg", "publishedAt": "2022-05-27T16:44:37Z", "author": "NAOR BITTON", "text": "i think I have a better answer for the first qus1 \npublic static bool IsAnagram(string s1, string s2)\r\n        {\r\n            if (s1.Length != s2.Length)\r\n            {\r\n                return false;\r\n            }\r\n            if (s1.Length==0)\r\n            {\r\n                return true;\r\n            } \r\n            for (int i = 0; i < s1.Length  ; i++ )\r\n            {\r\n                if (s1[0] == s2[i])\r\n                {\r\n                    return IsAnagram(s1.Remove(0, 1), s2.Remove(i, 1));    \r\n                }\r\n            }\r\n            return false;\r\n        }", "likes": 0}}, {"topLevelComment": {"id": "UgzYPz0OFHZf0OhdPAx4AaABAg", "publishedAt": "2022-05-21T19:01:44Z", "author": "Jonas E. Barcelona Vlogs", "text": "nameless is not == salesman", "likes": 0}}, {"topLevelComment": {"id": "UgzfwlSzj9Xz2F-ozAR4AaABAg", "publishedAt": "2022-05-17T19:58:03Z", "author": "Zo\u00eb Rycroft", "text": "how about\ndef first_and_last(arr, target):\n    if target not in arr:\n        return [-1, -1]\n    \n    first = arr.index(target)\n    last = first + arr.count(target) - 1\n    \n    return [first, last]", "likes": 0}}, {"topLevelComment": {"id": "UgzqW6FxOYBL8q0vowR4AaABAg", "publishedAt": "2022-05-14T07:46:16Z", "author": "Althos Althos", "text": "I feel dumb but... for the first problem, can't you simply loop through each character and convert them to an int and add them together? If two words are anagrams then they should have the same value?", "likes": 0}, "replies": [{"id": "UgzqW6FxOYBL8q0vowR4AaABAg.9b-T8_3Cetv9cbmV5bQdX5", "publishedAt": "2022-06-23T10:45:52Z", "author": "sfnub", "text": "@Gazeld Now we can get into some fun compression algorithms that do preserve this trait.", "likes": 0}, {"id": "UgzqW6FxOYBL8q0vowR4AaABAg.9b-T8_3Cetv9cblEdR2fBh", "publishedAt": "2022-06-23T10:34:53Z", "author": "Gazeld", "text": "If A then B doesn't mean that if B then A. Basics of logic :)", "likes": 0}, {"id": "UgzqW6FxOYBL8q0vowR4AaABAg.9b-T8_3Cetv9b4M8uxyl2L", "publishedAt": "2022-05-16T05:21:21Z", "author": "sfnub", "text": "B + B + B would be the same as A + B + C", "likes": 3}]}, {"topLevelComment": {"id": "UgzS4eevxzNVFfNvfN54AaABAg", "publishedAt": "2022-05-11T23:19:10Z", "author": "Roberto Tom\u00e1s", "text": "What does gas station problem test? This looks like dynamic programming", "likes": 0}}, {"topLevelComment": {"id": "Ugw-gEeivTnekeBiH7l4AaABAg", "publishedAt": "2022-05-11T19:24:51Z", "author": "Roberto Tom\u00e1s", "text": "Nice coverage. Problem 5 presentation could be modified. You spend only about 4 seconds on the problem statement, before diving into definitions and sample code for several minutes.", "likes": 0}}, {"topLevelComment": {"id": "UgybKWvnUFBIcqKF8294AaABAg", "publishedAt": "2022-05-10T14:42:01Z", "author": "Sina Gh", "text": "The last problem in \"heights\" array there is an extra 10 in list at index 10 after 9, comapred with the histogram.", "likes": 1}}, {"topLevelComment": {"id": "UgwbhiHHTzvCiRe-yAd4AaABAg", "publishedAt": "2022-05-05T20:08:26Z", "author": "Natnael Berhane", "text": "Not sure some of the answers here are correct nor are the most optimised. For example, the recursion solution for first and last position question is incorrect. The code doesn't even work.\nThe first solution for the kth largest element problem has a time complexity of n^2, not O(n). That's because a max() function is used in a for loop. The max function itself has a time complexity of O(n) thereby making the solution n^2.", "likes": 0}}, {"topLevelComment": {"id": "UgwgC0S23iOXAsuhSht4AaABAg", "publishedAt": "2022-05-02T19:41:55Z", "author": "ajax333221", "text": "Haven't tested it but in the Symmetric tree problem (26:24), I think are_symmetric can only give True when going all the way down and finding two nodes that they both don't have children?, I think you are missing an elif with root1.val == root2.val then return True there?. Can someone confirm this?", "likes": 0}}, {"topLevelComment": {"id": "UgyzCQMUNuzwdCRSGw94AaABAg", "publishedAt": "2022-04-26T11:40:28Z", "author": "WindblownSquash", "text": "number 1 is even easier, just sort the strings and then if the collections are equal they are anagrams", "likes": 0}, "replies": [{"id": "UgyzCQMUNuzwdCRSGw94AaABAg.9aHXd7haZOo9eC_wLJIBwW", "publishedAt": "2022-08-01T23:38:40Z", "author": "WindblownSquash", "text": "@Soumyajit Ganguly yep I didn\u2019t think about it", "likes": 0}, {"id": "UgyzCQMUNuzwdCRSGw94AaABAg.9aHXd7haZOo9eCW7URP8WZ", "publishedAt": "2022-08-01T22:56:38Z", "author": "Soumyajit Ganguly", "text": "@WindblownSquash yea simple maybe but efficient??? sorting is not more efficient than a single linear scan.", "likes": 0}, {"id": "UgyzCQMUNuzwdCRSGw94AaABAg.9aHXd7haZOo9ccM5yagUc1", "publishedAt": "2022-06-23T16:05:45Z", "author": "WindblownSquash", "text": "@Gazeld also his solution is not the same as mine. He counts the letters frequency. My solution is much more simple and efficient so you don\u2019t even know what you\u2019re talking about. That\u2019s part 2 of your problem.", "likes": 0}, {"id": "UgyzCQMUNuzwdCRSGw94AaABAg.9aHXd7haZOo9ccLxEeUCWA", "publishedAt": "2022-06-23T16:04:26Z", "author": "WindblownSquash", "text": "@Gazeld also he said try to solve before watching the full solution. Speak for yourself bro that\u2019s your problem.", "likes": 0}, {"id": "UgyzCQMUNuzwdCRSGw94AaABAg.9aHXd7haZOo9ccLqsqdpqM", "publishedAt": "2022-06-23T16:03:33Z", "author": "WindblownSquash", "text": "@Gazeld why when whether I comment good or bad it helps his channel. Speak for yourself only. That\u2019s your problem!", "likes": 0}]}, {"topLevelComment": {"id": "UgywMIDqB2cJIhEZ3qV4AaABAg", "publishedAt": "2022-04-22T02:21:33Z", "author": "Kim Stuart", "text": "question for kth largest element:\n\nWe can assume that in the worst case, the kth largest element would be the len(arr)th element. so in the example where arr = [4, 2, 9, 7, 5, 6, 7, 1, 3], you could call for the 9th largest element, which would be the minimum element, which by the solution, you would have to essentially either use len(arr) if either starting from len(arr) - k or from i in range(len(arr)).  So could we not assume that in the worst case, k = n and say that the solution 1 would operate in n^2 time since we are characterizing the worst case? or would we technically say that the time complexity is O(kn), with the caveat that k could = n?", "likes": 0}}, {"topLevelComment": {"id": "UgxypTdSqrUzOzlTjyB4AaABAg", "publishedAt": "2022-04-19T10:38:38Z", "author": "Ahmed Javed", "text": "In Python we can simply sort both strings and compare them using comparison operator.", "likes": 0}, "replies": [{"id": "UgxypTdSqrUzOzlTjyB4AaABAg.9a-P-6ZqB3n9cbm4CpHd3T", "publishedAt": "2022-06-23T10:42:12Z", "author": "Ahmed Javed", "text": "@Gazeld boy you must have alot of useless time to reply to useless comment \ud83d\ude05", "likes": 0}, {"id": "UgxypTdSqrUzOzlTjyB4AaABAg.9a-P-6ZqB3n9cbl_74nkUR", "publishedAt": "2022-06-23T10:37:49Z", "author": "Gazeld", "text": "...which is the same he already proposed... And in Python only? Of course not! Just watch actually the video before writing a useless comment.", "likes": 0}]}, {"topLevelComment": {"id": "UgwMQw2lZCfHQApm75p4AaABAg", "publishedAt": "2022-04-17T14:13:58Z", "author": "The Parrot", "text": "At 11:29, would it make more sense to set the initial left value to the value found in the find_start method? Although it wouldn't change the time complexity, I think it would result in, on average, one less operation done by the find_end binary search.", "likes": 4}}, {"topLevelComment": {"id": "UgxmKoM4QMkNQTpNIFd4AaABAg", "publishedAt": "2022-04-16T03:29:03Z", "author": "Jarrod Burns", "text": "Great video, thanks for all the work you put into it. I would like to add though, if you are building a string histogram, like in the first problem, you can simply do:  for k in string:\r     my_dict[k] = my_dict.get(k, 0) + 1", "likes": 3}}, {"topLevelComment": {"id": "UgxMW1RiPvOMXRYRwfR4AaABAg", "publishedAt": "2022-04-15T20:07:07Z", "author": "Alexander Gladchenko", "text": "not optimal solution for the first task :(", "likes": 0}}, {"topLevelComment": {"id": "UgwVvM0W71vPvAaPlvV4AaABAg", "publishedAt": "2022-04-13T19:01:40Z", "author": "Tempus Magia", "text": "13:19 wouldn't the space complexity be O(n)? because in the part of the first and last element function you are looping the variable \"mid\"", "likes": 0}}, {"topLevelComment": {"id": "UgzoauApoX94PFTFdd54AaABAg", "publishedAt": "2022-04-13T00:52:09Z", "author": "Ferdootie Ng", "text": "for the anagrams, i think a 256-size array would be better tho", "likes": 0}}, {"topLevelComment": {"id": "UgwaNfEt1f3ILGsgwid4AaABAg", "publishedAt": "2022-04-10T03:12:41Z", "author": "Stefan", "text": "I learned for those interview questions, the most important things is to ask the interviewer FOR ALL THE SPECIFIC DETAILS, whether u get a answer or not.  Like the size of data, do we need to worry invalid data? what's the definition of anagram do white space count? etc \n\nFor the \"Kth largest element\", you just need to save the largest kth numbers into a array while run through the number and compare it to the Kmin.  If it's larger then Kmin, replace the Kmin, and so on.", "likes": 4}}, {"topLevelComment": {"id": "Ugz-dWQ8I62APnv-j3F4AaABAg", "publishedAt": "2022-04-08T21:59:27Z", "author": "Mikelis on coding", "text": "I guess I'm old if these seem way too easy.", "likes": 0}}, {"topLevelComment": {"id": "UgxUePe6WdTspyUvgIl4AaABAg", "publishedAt": "2022-04-06T10:02:51Z", "author": "dcts", "text": "Comment section feels like stackoverflow \ud83d\ude02", "likes": 2}}, {"topLevelComment": {"id": "UgwbVr9OYoDwYxPt2hV4AaABAg", "publishedAt": "2022-04-05T15:37:49Z", "author": "Vince Canger", "text": "nice one", "likes": 0}}, {"topLevelComment": {"id": "UgyRZO-Q_I2te64Kput4AaABAg", "publishedAt": "2022-03-28T01:54:04Z", "author": "MyWebUniversity Free Educational Videos", "text": "Python Introduction To Object-Oriented Programming (OOP)\nhttps://youtu.be/DZgVrRuXmFk", "likes": 0}}, {"topLevelComment": {"id": "Ugx_GUTnUOjx4KQYgex4AaABAg", "publishedAt": "2022-03-26T19:14:51Z", "author": "eduardopa", "text": "Finding the Kth largest/smallest element can be done in O(n) time with QuickSelect (https://en.wikipedia.org/wiki/Quickselect).\n\nTl;dr on the wikipedia description: You do Quicksort, without recursing on the side you aren't interested in. \n1 - Select a pivot at random\n2 - Put everything smaller than it to the left of the array, and everything larger than it to the right (reverse the logic if you're looking for Kth larger)\n3 - Put pivot in it's place\n4 - if pivot_idx == k, return pivot. Else, call recursively into the proper subarray to the left or right of pivot_idx\n\n\nThere is a theoretical worst case of n^2 (when the array is already sorted and you always pick the smallest/largest element on the subarray), but it is in practice avoided by selecting the pivot at random.", "likes": 1}, "replies": [{"id": "Ugx_GUTnUOjx4KQYgex4AaABAg.9_2X-3llQbp9_ubuPsoH_A", "publishedAt": "2022-04-17T04:44:44Z", "author": "sammy 1234", "text": "On average it is O(n) but worst case is O(n^2)", "likes": 1}]}, {"topLevelComment": {"id": "Ugz-BppfwdG_9xEQ1Ox4AaABAg", "publishedAt": "2022-03-18T01:18:03Z", "author": "llekann", "text": "This was very helpful. Thanks.", "likes": 0}}, {"topLevelComment": {"id": "UgyoPVvAm6DFH4pwotd4AaABAg", "publishedAt": "2022-03-12T23:33:19Z", "author": "Victor Vinson", "text": "Please learn correct english before making educational videos.", "likes": 0}}, {"topLevelComment": {"id": "UgwPcRSGxbkwck606K14AaABAg", "publishedAt": "2022-03-07T23:42:14Z", "author": "Shridhar Rao", "text": "Respect. \ud83d\ude4f", "likes": 0}}, {"topLevelComment": {"id": "UgyXXKrvhQ6F13WaIih4AaABAg", "publishedAt": "2022-03-07T03:14:09Z", "author": "cosmo", "text": "I love this channel, even though my English is no accurate to understand all content i always try to collect some good ideas they share. Thank you", "likes": 0}}, {"topLevelComment": {"id": "UgxuJwrNB3rqdCrkqGZ4AaABAg", "publishedAt": "2022-03-06T11:58:52Z", "author": "Repentance: The Missing Link Of True Salvation", "text": "Acts 20:21\nKing James Version\n21 Testifying both to the Jews, and also to the Greeks, repentance toward God, and faith toward our Lord Jesus Christ.\n\n*Did you know you\u2019re part of the ultimate statistics, 10 out of 10 people die. One day your heart will stop beating and you will be dead! The Bible says you\u2019ll then be judged by the holy and righteous God who created this universe.(Hebrew 9:27)You\u2019ll be judged for every word, thought, and action in your life.(Matthew 12:36-37) Will you be innocent or guilty?\n\n*Let\u2019s check the standard, the Ten Commandments. Have you ever lied (even a \u201cwhite\u201d lie)? (Revelation 21:8) Have you ever stolen anything (value is irrelevant and includes downloading or copying movies illegally)?  If you\u2019ve lusted, you\u2019ve committed adultery in your heart. (Matthew 5:27-30) (1 Corinthians 6:9-10)\n\nIf you\u2019ve hated someone, the Bible says you\u2019re a murderer(1 John 3:15). If you\u2019ve done any of these things, you will be guilty, and end up in Hell. God is perfect and He hates sin, but He sent His Son, Jesus Christ, to die on the Cross to take the punishment you deserve. Then He rose from the grave \u2013 defeating death. (Luke 24:46-48)\n\nRepent (turn from your sins) and trust in Jesus Christ to receive forgiveness and everlasting life. Read the Bible to learn about God and how to live. (Acts 20:21) \n\n*Do God\u2019s will, plan and purpose in your life; these are above and beyond, immeasurable compare to your grandest dream.\n\n* We obey God\u2019s moral law the Ten Commandments because we love our Lord and saviour Jesus Christ, the Father and the Holy Ghost(John 14:15) (John 14:1-6) (John 14:16-26) (Mark 12:30-31)  with all our heart, soul, mind and all our strength, and we believe and have faith in Him; also we Fear Him with reverence with deep respect. \n\nJob 28:28\nKing James Version\n28 And unto man he said, Behold, the fear of the Lord, that is wisdom; and to depart from evil is understanding.\n\nLiving water.", "likes": 0}}, {"topLevelComment": {"id": "UgxDV7faQtJkmBX4YLB4AaABAg", "publishedAt": "2022-03-05T01:26:07Z", "author": "shid.account", "text": "fantastic slides!", "likes": 0}}, {"topLevelComment": {"id": "UgzgijCW_MSt9JoXtaF4AaABAg", "publishedAt": "2022-03-02T11:54:59Z", "author": "Rudolf Klusal", "text": "That anagram stuff -- why not, but much simplier (in Python anyways) is just sort alphabetically both strings and compare them. If they are anagrams, sorted strings would be same.", "likes": 0}, "replies": [{"id": "UgzgijCW_MSt9JoXtaF4AaABAg.9Z3w_Ngg-ys9_PSbonPaiI", "publishedAt": "2022-04-04T16:59:07Z", "author": "Rudolf Klusal", "text": "@noobie-dev True (y) \ud83d\ude42", "likes": 0}, {"id": "UgzgijCW_MSt9JoXtaF4AaABAg.9Z3w_Ngg-ys9_PPhPAfBj7", "publishedAt": "2022-04-04T16:33:40Z", "author": "noobie-dev", "text": "You probably know this already.  Sorting has a bigger O complexity.  O (n log (n) ).   When you create a hash, you sacrifice space O(n); but you improve time complexity to Big O(n)", "likes": 2}]}, {"topLevelComment": {"id": "Ugz4ASneA0iM0hBf33d4AaABAg", "publishedAt": "2022-02-25T06:59:22Z", "author": "Roland Kov\u00e1cs", "text": "[Symmetric tree]26:10:  I don't clearly understand why space complexity is O(n log n)? I have implemented your solution is C# by the way.", "likes": 0}, "replies": [{"id": "Ugz4ASneA0iM0hBf33d4AaABAg.9YrXlsOLVQ59cusSu4FwF0", "publishedAt": "2022-06-30T20:43:34Z", "author": "James Burnett", "text": "The speaker says O(log n), which is smaller than O(n * log n). This is because we much consider the data the program puts on the stack as we enter each level of recursion. In this case, every time we check if the left and right sub trees are mirrors, we add a frame to the stack. We do this all the way down the tree.\r\n  \r\nHowever, the speaker made a minor mistake. They claim that symmetric trees must be balanced binary trees. Balanced binary trees are defined as a binary tre where the height of the left and right subtrees, for every node in the tree, cannot differ by more than 1. Therefore, the height of the a balanced binary tree must be O(log(n)).\r\n\r\nThe mistake is that symmetric trees do not need to be balanced binary trees. A symmetric tree height can be up to n/2 when the left subtree has all left nodes and the right subtree has all right nodes. Thus, the space complexity is O(n).\r\n\r\nExample:\r\n```\r\n    1\r\n   2 3\r\n  4   5\r\n 6     7\r\n8       9\r\n```\r\n\r\nIn this type of structure:\r\n```\r\n n height  log(n)   n/2\r\n 9   5      3.17    4.5\r\n11   6      3.45    5.5\r\n13   7      3.7     6.5\r\n```\r\n\r\nAs we can see, the height of the tree, and thus the number of frames on the stack, scale with O(n/2), which we write as O(n).", "likes": 0}]}, {"topLevelComment": {"id": "Ugxc93v1MJA1Ary98ZF4AaABAg", "publishedAt": "2022-02-25T04:13:56Z", "author": "Leonardo Ingalls Hern\u00e1ndez", "text": "Hi, i think i have a good solution to problem 2\nfunction first_last(arr, target){\n   \n    let start = 0;\n    let final = 0;\n   \n   for(let x = 0;x<arr.length;x++){\n       if(arr[x]== target&& arr[x-1] != target ){\n        start = x\n        }else if(arr[x]==target && arr[x+1] != target){\n            final = x;\n            break\n        }\n   }\n   return [start,final]\n}\nwhat you think ?", "likes": 0}, "replies": [{"id": "Ugxc93v1MJA1Ary98ZF4AaABAg.9YrEqCxYvBY9ZQ4REuDhAv", "publishedAt": "2022-03-11T02:15:40Z", "author": "Shiva Krishnan", "text": "Better solution would be using binary search", "likes": 0}]}, {"topLevelComment": {"id": "Ugy2wL-0xQ6TfgEa2Ih4AaABAg", "publishedAt": "2022-02-24T18:39:55Z", "author": "Sandraef Whitewm", "text": "I really love codefree camp", "likes": 0}}, {"topLevelComment": {"id": "UgwMceAyAIWzJRA565d4AaABAg", "publishedAt": "2022-02-24T17:37:01Z", "author": "Lance Abuan", "text": "much more elgant solution to problem 1 is to sort both strings into alphabetical order and see if they're equivalent", "likes": 0}, "replies": [{"id": "UgwMceAyAIWzJRA565d4AaABAg.9Yq5xFpm7dQ9eTR3Qf_HVR", "publishedAt": "2022-08-08T12:39:29Z", "author": "Killian Ward", "text": "It's not as fast though, because sorting is at best O(n logn) whereas counting each letter is O(n)", "likes": 0}]}, {"topLevelComment": {"id": "Ugy36QrUqfVJSyayTKZ4AaABAg", "publishedAt": "2022-02-24T15:10:20Z", "author": "Shreedhar Hegde", "text": "How come there are two 'e' s in 'salesman'?", "likes": 0}}, {"topLevelComment": {"id": "UgwOMm013c4aVVWEEyR4AaABAg", "publishedAt": "2022-02-22T06:20:31Z", "author": "Vedran \u010ca\u010di\u0107", "text": "51:05 wrong. 5 shouldn't come before 4.", "likes": 1}}, {"topLevelComment": {"id": "UgwwoVKwEbiSczz4qyx4AaABAg", "publishedAt": "2022-02-20T08:04:38Z", "author": "Emily Huang", "text": "K=n, n+klogn == nlogn 19:21\nK=0, n+klogn==n", "likes": 0}}, {"topLevelComment": {"id": "Ugw16v626WrT8VaRzUp4AaABAg", "publishedAt": "2022-02-14T18:16:10Z", "author": "Luna Eclipse", "text": "Before we watch this video lets hope\nthat the language wont be JS\nTa Da!\nits PYTHON WOOOOOOOO", "likes": 0}}, {"topLevelComment": {"id": "Ugyuo1Ijv36RGlAzCjB4AaABAg", "publishedAt": "2022-02-14T18:15:13Z", "author": "Luna Eclipse", "text": "nice", "likes": 0}}, {"topLevelComment": {"id": "UgzX5HIV08zA_KKEiRV4AaABAg", "publishedAt": "2022-02-10T06:31:32Z", "author": "\u179f\u17c1\u1784 \u17a0\u17ca\u17b6\u1784", "text": "\u17a2\u179a\u1782\u17bb\u178e", "likes": 0}}, {"topLevelComment": {"id": "Ugwtkb6_LubIOOrevx94AaABAg", "publishedAt": "2022-02-09T19:11:59Z", "author": "Valentino", "text": "at 1:03 my anagram checker solution\ndef are_anagram(s1,s2):\r\n\n    if len(s1) != len(s2) or set(s1) != set(s2):\r\n\n        return False\r\n    else:\r\n        return Truetemplate = 'garden'\r\nchecker  = 'danger'\nanagram_check(template,checker)", "likes": 0}}, {"topLevelComment": {"id": "UgxR58uptWMekOVkTbV4AaABAg", "publishedAt": "2022-02-09T12:21:53Z", "author": "Filipe Nobrega", "text": "Question 1 has space order o(1) because it could only be as big as the alphabet, if you think 26 lowercase letters, even though `n` could be infinite.", "likes": 0}}, {"topLevelComment": {"id": "Ugwns__RsYsAcF3-KWx4AaABAg", "publishedAt": "2022-02-05T01:43:22Z", "author": "Carlos Heredia", "text": "Te webeaste en el 10", "likes": 1}}, {"topLevelComment": {"id": "UgyDO_-o9uHTyNi7Ctt4AaABAg", "publishedAt": "2022-02-04T23:31:27Z", "author": "anon", "text": "28:36 no need for a stack\njust have a variable that represents at what nest level you're at (if c == '(' nestLevel++; if c == ')' nestLevel--)\nif it ever becomes negative return false and at the end of the loop it should be equal to 0", "likes": 1}}, {"topLevelComment": {"id": "UgwFsGgdlQQlsRW4RWZ4AaABAg", "publishedAt": "2022-02-04T16:15:25Z", "author": "anon", "text": "for the anagrams, isn't it preferable to use a 256-size array? each index corresponds to an extended ASCII character", "likes": 0}}, {"topLevelComment": {"id": "UgxkfhIWs5V8MNFcmZ54AaABAg", "publishedAt": "2022-02-04T10:36:58Z", "author": "CzPeter", "text": "Just iterating through only ONCE in a string and checking if the character is in the other string, probably less time complexity, and definietly less space complexity (you are not using any extra spaces in that case). \n\nit depends on the implementation of the string contains actually... It is probably O(n)", "likes": 0}}, {"topLevelComment": {"id": "UgzKudH1y2SUIA17xTF4AaABAg", "publishedAt": "2022-02-04T10:14:10Z", "author": "Andrew Erwin", "text": "I have been a developer for more than 20 years. In the last 10 (or less) of that, I have seen a lot of \"interview questions\" that are basically just \"show you know algorithms\". What I have not seen much at all are real world examples of how these are used. For example, show me a website on the internet where the developer needed to understand how to solve the anagram problem?", "likes": 13}, "replies": [{"id": "UgzKudH1y2SUIA17xTF4AaABAg.9Y0oNATfJA09aAbycfpxzy", "publishedAt": "2022-04-23T19:12:24Z", "author": "Jerald Macachor", "text": "You may not need to solve an anagram, but you need to know when and how to use a frequency counter.\n\nYou don\u2019t calculate the big O of every piece of code, but it helps to know that some solutions are blazingly faster than others, some solutions are way more space efficient. Time and storage cost money after all.", "likes": 0}, {"id": "UgzKudH1y2SUIA17xTF4AaABAg.9Y0oNATfJA09YsDVbMTrzr", "publishedAt": "2022-02-25T13:21:29Z", "author": "Vivekananthan Dhanasekaran", "text": "Website itself works based on graph algorithms.\n How DOM was parsed using HTML parser? (Traversal algorithms - DFS, BFS)\n How Database indexing works ? (Binary Search Tree)\n How identity columns was generated ? How Google Map works? (Random number algorithm)\n How files/folder ordering works in desktop? (sorting)\n How browser history was stored in the browser  ? (stack)\n \nCan you show us any application which doesn't use algorithms ?", "likes": 5}, {"id": "UgzKudH1y2SUIA17xTF4AaABAg.9Y0oNATfJA09Y0qMCETY4-", "publishedAt": "2022-02-04T10:31:30Z", "author": "Andrew Erwin", "text": "Don't get me wrong... I undesrand as well as anyone (and better than most) that programming is first and foremost about problem solving. And I love the idea of algorithms, which classically is simply breaking down a problem into individual steps. But creating such specific questions (problems) that require such specific solutions doesn't really test an applicants problem solving skills as much as it does their participation in certain bootcamps. I really believe this is all realted to the massive profits seens by bootcamps as corellation with the massive turnover at FANG, et al companies. It's pretty obvious.", "likes": 2}]}, {"topLevelComment": {"id": "UgwvG7phPd8cuBoxf2t4AaABAg", "publishedAt": "2022-02-03T17:17:40Z", "author": "SaveHunters", "text": "//* My solve #1\nconst isAnagrams = (s1, s2) => {\n\tif (s1.length !== s2.length) return false;\n\tlet equealString = {\n\t\tbool: true,\n\t\tcharacters: 0,\n\t};\n\tfor (const iterator of s1) {\n\t\tif (s2.includes(iterator)) {\n\t\t\tequealString.characters += 1;\n\t\t} else {\n\t\t\tequealString.bool = false;\n\t\t}\n\t}\n\n\treturn equealString.bool && equealString.characters === s1.length;\n};\n\n//!completed question\nconsole.log(isAnagrams('danger', 'garden'));", "likes": 0}}, {"topLevelComment": {"id": "UgyxXGVBT0-dpGQYFVh4AaABAg", "publishedAt": "2022-02-03T11:04:29Z", "author": "PRANTO DEV", "text": "Correction:  salesman and nameless aren't anagram.", "likes": 0}}, {"topLevelComment": {"id": "UgzNAW2DACr3yI02C2d4AaABAg", "publishedAt": "2022-01-29T04:24:15Z", "author": "kikeoenr", "text": "3:19 For the anagram you can use 1 hash table but on the 2nd loop when you ask if the character of the second word is not on the table , return false.\nIf it is on the table then rest 1 on that key.\nAt the end ask if any value on the hash is not zero , return False.\nAt last you can return True.", "likes": 13}}, {"topLevelComment": {"id": "UgxOvkBWrbkMecdz2gZ4AaABAg", "publishedAt": "2022-01-26T22:54:46Z", "author": "Alexandria Brown", "text": "Just a note on the 'valid anagram' problem -- if you're going to use python sorted() function to compare strings you'll need to lowercase them first. Otherwise 'danger' and 'gArden' won't be considered anagrams. Sorting for that problem was not the most efficient solution, but it's good to be aware of the gotchas!", "likes": 30}, "replies": [{"id": "UgxOvkBWrbkMecdz2gZ4AaABAg.9Xg-GBg0YJ-9dGzD8p4hJX", "publishedAt": "2022-07-09T20:05:07Z", "author": "\u65e2\u591c", "text": "I think not only Python, but for example Arrays.sort() in Java also needs to deal with the case-sensitive stuff.", "likes": 0}, {"id": "UgxOvkBWrbkMecdz2gZ4AaABAg.9Xg-GBg0YJ-9_uk_J5GCxX", "publishedAt": "2022-04-17T06:00:30Z", "author": "Md Mahmood Bin Habib", "text": "The solution provided was case sensitive in mind.", "likes": 2}, {"id": "UgxOvkBWrbkMecdz2gZ4AaABAg.9Xg-GBg0YJ-9ZQHpTNQ1vS", "publishedAt": "2022-03-11T04:12:43Z", "author": "SkillUp Gaming", "text": "@Luke Lam That's exactly the same problem. You clearly learned nothing.", "likes": 7}, {"id": "UgxOvkBWrbkMecdz2gZ4AaABAg.9Xg-GBg0YJ-9XmlLxzqSdM", "publishedAt": "2022-01-29T13:59:10Z", "author": "Luke Lam", "text": "That\u2019s not the same problem.", "likes": 2}]}, {"topLevelComment": {"id": "UgyD2tMbaOAi4lDjn4J4AaABAg", "publishedAt": "2022-01-25T19:53:39Z", "author": "Nitin Aggarwal", "text": "Problem Solution - 1 in Swift:\n\nfunc areAnagrams(s1: String, s2: String) -> Bool {\n    \n    if s1.count != s2.count { return false }\n    \n    var s1Frequency: [String: Int] = [:]\n    var s2Frequency: [String: Int] = [:]\n    \n    for char in s1 {\n        s1Frequency[\"\\(char)\", default: 0] += 1\n    }\n    \n    for char in s2 {\n        s2Frequency[\"\\(char)\", default: 0] += 1\n    }\n    \n    for key in s1Frequency.keys {\n        if s2Frequency.keys.contains(key) == false || s1Frequency[key] != s2Frequency[key] {\n            return false\n        }\n    }\n    \n    return true\n}", "likes": 0}}, {"topLevelComment": {"id": "UgyaiRzvt3cYuXSaU3V4AaABAg", "publishedAt": "2022-01-21T11:07:51Z", "author": "Han Solar", "text": "Difficult to understand.", "likes": 0}}, {"topLevelComment": {"id": "UgwFRzYFWrs9YpPZd3V4AaABAg", "publishedAt": "2022-01-18T22:07:15Z", "author": "Ratnadeep Bhattacharya", "text": "There is a faster method of solving for the Kth largest element. 1. We walk through the array and put elements into the max-heap only for i = 1 to k. 2. For i = k to N, where N = len(arr), we only add arr[i] to the max-heap if arr[i] > heap.peek(). We also have to pop one element to maintain the heap length to k. 3. Once we have completely walked through the array, we return the top element from the heap. Thus we construct a heap of only k elements and walk through the array once.", "likes": 20}, "replies": [{"id": "UgwFRzYFWrs9YpPZd3V4AaABAg.9XMJT7fe_3u9eIcAu8d_77", "publishedAt": "2022-08-04T07:53:43Z", "author": "adithya ravindra", "text": "in python what if you do\nlist.sort()\nreturn lis[-k]", "likes": 0}, {"id": "UgwFRzYFWrs9YpPZd3V4AaABAg.9XMJT7fe_3u9e9pjrZlbh_", "publishedAt": "2022-07-31T21:59:03Z", "author": "Soumyajit Ganguly", "text": "This would be O(n.log(k)) , there is an even faster O(n) solution that does not require any additional data structures - using quick select.", "likes": 0}]}, {"topLevelComment": {"id": "Ugy-p4jrVtOqzQdM44p4AaABAg", "publishedAt": "2022-01-18T11:59:56Z", "author": "Tushar Ghige", "text": "Solution For 1st Question in Python:\na = \"danger\"\nb = \"garden\"\nprint(sorted(a) == sorted(b))", "likes": 7}, "replies": [{"id": "Ugy-p4jrVtOqzQdM44p4AaABAg.9XLDxx35YTn9cbo5WZzNsb", "publishedAt": "2022-06-23T10:59:51Z", "author": "Tushar Ghige", "text": "@Gazeld It's just an alternate solution.", "likes": 0}, {"id": "Ugy-p4jrVtOqzQdM44p4AaABAg.9XLDxx35YTn9cbkxvFynil", "publishedAt": "2022-06-23T10:32:28Z", "author": "Gazeld", "text": "Why do you put this solution that is already given in the video?", "likes": 0}, {"id": "Ugy-p4jrVtOqzQdM44p4AaABAg.9XLDxx35YTn9XMZ9UD5ls7", "publishedAt": "2022-01-19T00:24:23Z", "author": "Marcelo", "text": "thats good but O(logN), but you can also do in O(N) with constant space by counting each character in each string and checking if the amount for each character is equal", "likes": 2}]}, {"topLevelComment": {"id": "Ugw1-5_Wwih6Rhz6Vih4AaABAg", "publishedAt": "2022-01-16T10:00:07Z", "author": "Jerry", "text": "the audio is terrible :(", "likes": 1}, "replies": [{"id": "Ugw1-5_Wwih6Rhz6Vih4AaABAg.9XFrehG_MwW9XGQ0bFa7J9", "publishedAt": "2022-01-16T15:09:05Z", "author": "Inside code", "text": "@Jerry Thanks a lot!", "likes": 0}, {"id": "Ugw1-5_Wwih6Rhz6Vih4AaABAg.9XFrehG_MwW9XGPCcMpIjw", "publishedAt": "2022-01-16T15:01:59Z", "author": "Jerry", "text": "@Inside code yes! it's much better!", "likes": 1}, {"id": "Ugw1-5_Wwih6Rhz6Vih4AaABAg.9XFrehG_MwW9XGNc7QlECI", "publishedAt": "2022-01-16T14:48:07Z", "author": "Inside code", "text": "@Jerry Yes", "likes": 0}, {"id": "Ugw1-5_Wwih6Rhz6Vih4AaABAg.9XFrehG_MwW9XGN-pPnHzk", "publishedAt": "2022-01-16T14:42:45Z", "author": "Jerry", "text": "@Inside code do you mean this video? https://youtu.be/8foCOARqH8A", "likes": 0}, {"id": "Ugw1-5_Wwih6Rhz6Vih4AaABAg.9XFrehG_MwW9XGIahRLTId", "publishedAt": "2022-01-16T14:04:14Z", "author": "Inside code", "text": "@Jerry Yes someone else told me, I reduced it in my new video, can you check it quickly and tell me if it's better?", "likes": 0}]}, {"topLevelComment": {"id": "UgxxMaqY8hdrvXt2xMF4AaABAg", "publishedAt": "2022-01-15T21:49:13Z", "author": "mehran nassiry", "text": "Hi, I am a beginner in Python but I think the second problem has a very simple solution only in 5 lines.:\ndef find_first_last(arr, tar):\r\n    l2 = []\r\n    for index, num in enumerate(l):\r\n        if num == tar:\r\n            l2.append(index)\r\n    return [l2[0], l2[-1]]\r\n\r\n\r\nl = [2, 4, 5, 5, 5, 5, 5, 7, 9, 9]\r\nprint(find_first_last(l, 5))", "likes": 3}, "replies": [{"id": "UgxxMaqY8hdrvXt2xMF4AaABAg.9XEZ0NgyYLV9bupTa6EDPg", "publishedAt": "2022-06-05T23:46:04Z", "author": "Daktari SunFire", "text": "Maybe this will work I guess\ndef first_and_last(arr,target):\n  mylist=[]\n  for i in range(0,len(arr)):\n    if arr[i] == target:\n      mylist.append(i)\n   else:\n     print([-1,-1])\n  print([mylist[0],mylist[-1]])", "likes": 0}, {"id": "UgxxMaqY8hdrvXt2xMF4AaABAg.9XEZ0NgyYLV9XgPpsl6Z-T", "publishedAt": "2022-01-27T02:46:58Z", "author": "Dimeji Mudele", "text": "You will need more space for this solution. Imagine a case where all your array elements are equal to the target. You will be storing O(n) indices in memory. \n\nHis own solution is O(1).", "likes": 1}, {"id": "UgxxMaqY8hdrvXt2xMF4AaABAg.9XEZ0NgyYLV9XGCgoYlyGp", "publishedAt": "2022-01-16T13:12:39Z", "author": "Nithin", "text": "He's only making sure to not have more iterations than necessary, in the first solution. Time complexity comes in to play when there's a huge amount of data to go through. For example, if we have an array of 1 million elements and our solution lies within the first 100, we'd have iterated 9,99,900 times unnecessarily.\nIn his optimized approach he makes use of binary search which has a logarithmic time complexity.", "likes": 1}]}, {"topLevelComment": {"id": "UgziPdKQxkfyMwps6jx4AaABAg", "publishedAt": "2022-01-15T09:14:53Z", "author": "Amal Dev", "text": "Thanks a lot for your work. And also side note, you sound a lot like gru which is cute.", "likes": 2}}, {"topLevelComment": {"id": "Ugz64jR1mxhy9LcneTZ4AaABAg", "publishedAt": "2022-01-15T06:18:05Z", "author": "c0mplicated", "text": "in the second problem, cant we create two loops, one starts from front of string to search the first target and second loops start from behind the string to search the last target?", "likes": 2}, "replies": [{"id": "Ugz64jR1mxhy9LcneTZ4AaABAg.9XCtSbIWFhL9YWp0K0xgr5", "publishedAt": "2022-02-16T20:35:28Z", "author": "Adam Pielach", "text": "@AMX0013 this +1", "likes": 0}, {"id": "Ugz64jR1mxhy9LcneTZ4AaABAg.9XCtSbIWFhL9XUACy6zUEG", "publishedAt": "2022-01-21T23:20:19Z", "author": "The Flabby Gentleman", "text": "if you want your test cases to time out, sure", "likes": 1}, {"id": "Ugz64jR1mxhy9LcneTZ4AaABAg.9XCtSbIWFhL9XGJ0TaoNyO", "publishedAt": "2022-01-16T14:07:54Z", "author": "AMX0013", "text": "you can get away with one loop here just by making the second iteration pointer to be lenght(array)-iterator. Nonetheless the timecomplexity would remain the same", "likes": 1}, {"id": "Ugz64jR1mxhy9LcneTZ4AaABAg.9XCtSbIWFhL9XEOTtSQY66", "publishedAt": "2022-01-15T20:17:07Z", "author": "Inside code", "text": "Yes it works but doesn't have the best time complexity", "likes": 0}]}, {"topLevelComment": {"id": "Ugza_PaJPAZiXn_EQuB4AaABAg", "publishedAt": "2022-01-15T00:50:03Z", "author": "Rick Sanchez", "text": "This would of been great. I have to ask though, did you gargle lidocaine? Was it cold where you recorded this and you couldnt feel your face? Maybe you were a little drunk? Makes the video unwatchable as far as im concerned. I can't listen to monotone mumble mouth talk about algos for 2 hours and still be conscious.", "likes": 1}, "replies": [{"id": "Ugza_PaJPAZiXn_EQuB4AaABAg.9XCIv3NGQoc9XEOY08htL9", "publishedAt": "2022-01-15T20:17:41Z", "author": "Inside code", "text": "I'll try to improve the recording part thanks", "likes": 0}]}, {"topLevelComment": {"id": "Ugw9yEitNozk5C-lYth4AaABAg", "publishedAt": "2022-01-14T03:15:04Z", "author": "J", "text": "Don't call an object a hash table lol boomer", "likes": 1}, "replies": [{"id": "Ugw9yEitNozk5C-lYth4AaABAg.9X9ziFK69qG9XEo7sRzZbB", "publishedAt": "2022-01-16T00:10:03Z", "author": "J", "text": "@Inside code You were referring to an object.", "likes": 0}, {"id": "Ugw9yEitNozk5C-lYth4AaABAg.9X9ziFK69qG9XEOZNn4TNZ", "publishedAt": "2022-01-15T20:17:52Z", "author": "Inside code", "text": "You know there is a difference right?", "likes": 0}]}, {"topLevelComment": {"id": "UgyXM0S5sClxi6jDxaF4AaABAg", "publishedAt": "2022-01-13T23:28:42Z", "author": "Neebu And So Can You", "text": "I wish the microphone was clearer... or rather lacked some bass maybe? I have a hard time hearing him speak over some kind of bubble of noise around his voice.", "likes": 2}, "replies": [{"id": "UgyXM0S5sClxi6jDxaF4AaABAg.9X9_oJlaKBq9XEPnis2pf6", "publishedAt": "2022-01-15T20:28:42Z", "author": "Neebu And So Can You", "text": "@Inside code Much better, thanks!\u00a0\n\nI think you may need a pop filter too. While wearing headphones there's a pop of static whenever there's a \"p\" or \"t\" in the word you're saying. Not 100% sure that's the issue, but it sounds like the mic is peaking for those letters specifically.\n\nEdit: Subbed btw. Thanks for your work!", "likes": 0}, {"id": "UgyXM0S5sClxi6jDxaF4AaABAg.9X9_oJlaKBq9XEOze9mNvc", "publishedAt": "2022-01-15T20:21:36Z", "author": "Inside code", "text": "Thanks for the advice! I lowered the bass in my new video, can you quickly check it and tell me if it's better?", "likes": 0}]}, {"topLevelComment": {"id": "UgyFE4ZGOt9YxqbLQBh4AaABAg", "publishedAt": "2022-01-13T13:51:35Z", "author": "Yakov Kemer", "text": "Thank you so much. As always - clear,  easy to understand, useful.", "likes": 1}, "replies": [{"id": "UgyFE4ZGOt9YxqbLQBh4AaABAg.9X8YlOIBOls9XEP-ckAkvw", "publishedAt": "2022-01-15T20:21:44Z", "author": "Inside code", "text": "You're welcome!", "likes": 0}]}, {"topLevelComment": {"id": "UgwZu_pTdf3I2izIHMB4AaABAg", "publishedAt": "2022-01-13T13:00:19Z", "author": "Teseract", "text": "Oh yeah, index.FirstorDefault or elementAt easy, dont need a big function and numbers", "likes": 0}, "replies": [{"id": "UgwZu_pTdf3I2izIHMB4AaABAg.9X8StwBQG_a9XEP40bBKT6", "publishedAt": "2022-01-15T20:22:19Z", "author": "Inside code", "text": "first or default may traverse the whole array am I right?", "likes": 0}]}, {"topLevelComment": {"id": "UgxN6GgtNWMerwJGxhZ4AaABAg", "publishedAt": "2022-01-12T22:11:54Z", "author": "Ayoub", "text": "for the anagram i used only one loop , i worked with java but idea is declaring an int counter = 0 \nand test if string n\u00b0 1 contains a character in string n\u00b02 with charAt[i] if true counter++\nand in the end test again if string n\u00b01 length is equal to the counter if true then the two words are anagram\nfor (int i=0;i<s1.length();i++){\n            if(s1.contains(s2.charAt(i)+\"\"))\n                counter++;\n        }\n        if (s1.length() == counter){\n            System.out.println(\"anagram.\");\n        }", "likes": 0}, "replies": [{"id": "UgxN6GgtNWMerwJGxhZ4AaABAg.9X6sDv09Z8Y9XEQKEwEjvU", "publishedAt": "2022-01-15T20:33:17Z", "author": "Inside code", "text": "@mephi5to exactly", "likes": 0}, {"id": "UgxN6GgtNWMerwJGxhZ4AaABAg.9X6sDv09Z8Y9X95hIA5NlO", "publishedAt": "2022-01-13T18:56:52Z", "author": "mephi5to", "text": "contains is not free. so you have 2 nested loops.", "likes": 0}, {"id": "UgxN6GgtNWMerwJGxhZ4AaABAg.9X6sDv09Z8Y9X7x_sTKTnT", "publishedAt": "2022-01-13T08:17:58Z", "author": "Abubakar Khawaja", "text": "its O(n^2) or O(nlogn), as \"contains method\" could be O n or O log n", "likes": 0}]}, {"topLevelComment": {"id": "UgwONwhAP3t_RZWzodh4AaABAg", "publishedAt": "2022-01-12T20:54:45Z", "author": "DM", "text": "The very fact this video exists illustrates how broken software development interviews really are.", "likes": 28}, "replies": [{"id": "UgwONwhAP3t_RZWzodh4AaABAg.9X6jOoE5Szu9XAc6QqvnZ7", "publishedAt": "2022-01-14T09:08:01Z", "author": "sofo boachie", "text": "I agree but still better than 30 hour unpaid homeworks", "likes": 8}]}, {"topLevelComment": {"id": "UgzIEjxSU0LU6Z0xXnl4AaABAg", "publishedAt": "2022-01-12T18:19:14Z", "author": "ME!", "text": "Making my life better \ud83d\udc4d\u2764\ufe0f", "likes": 1}}, {"topLevelComment": {"id": "Ugx2v_RwJHyEtblXhNF4AaABAg", "publishedAt": "2022-01-12T15:48:04Z", "author": "bruno silva", "text": "Well, i'm glad i dont live in the US cause i wouldn't be able to come up with 99% of these optimized solutions ;/", "likes": 29}, "replies": [{"id": "Ugx2v_RwJHyEtblXhNF4AaABAg.9X6BIfEa-Ya9j7EboTvhMX", "publishedAt": "2022-12-02T04:24:24Z", "author": "Matt mjlg", "text": "Don\u2019t feel bad this teacher doesn\u2019t know how to teach complex topic go to leet code \nThis stuff is easier than Algebra \nGo to neetcode he knows how to teach this", "likes": 1}, {"id": "Ugx2v_RwJHyEtblXhNF4AaABAg.9X6BIfEa-Ya9enV3M6kkT7", "publishedAt": "2022-08-16T16:58:28Z", "author": "Moritz Wagner", "text": "Bruh Im in Spain and we also do these interviews.", "likes": 3}, {"id": "Ugx2v_RwJHyEtblXhNF4AaABAg.9X6BIfEa-Ya9drnvYbEX4A", "publishedAt": "2022-07-24T12:37:36Z", "author": "Oualid Laib", "text": "Did you find a way bro to become good in problem solving ?\nIf it is help me bro or give me some tips .", "likes": 0}, {"id": "Ugx2v_RwJHyEtblXhNF4AaABAg.9X6BIfEa-Ya9XEQfnYf8fK", "publishedAt": "2022-01-15T20:36:21Z", "author": "Inside code", "text": "It comes with practice", "likes": 5}]}, {"topLevelComment": {"id": "UgzDzPB-6R3JscFzVYB4AaABAg", "publishedAt": "2022-01-12T14:06:58Z", "author": "Ajeer Aslam", "text": "Good video", "likes": 1}, "replies": [{"id": "UgzDzPB-6R3JscFzVYB4AaABAg.9X6-j75InT89XEQgNHyeJW", "publishedAt": "2022-01-15T20:36:26Z", "author": "Inside code", "text": "Thanks!", "likes": 0}]}, {"topLevelComment": {"id": "UgwZuSchhmYPBiP72Qh4AaABAg", "publishedAt": "2022-01-12T14:00:16Z", "author": "sahil9821", "text": "Can you please use Java next time? The code is more comprehensive and much more readable when looking at a HARD problem such as the minimum window substring. I believe Python is very concise but when trying to understand a new concept, can be a little less readable as compared to Java or even C++.", "likes": 3}, "replies": [{"id": "UgwZuSchhmYPBiP72Qh4AaABAg.9X5zy3Rf5K49XXFVOsJ8Vm", "publishedAt": "2022-01-23T04:04:15Z", "author": "Abolina Eyre", "text": "I don\u2019t know python but was surprised how similar it looks to swift", "likes": 0}, {"id": "UgwZuSchhmYPBiP72Qh4AaABAg.9X5zy3Rf5K49XGZ3qfzgR2", "publishedAt": "2022-01-16T16:28:10Z", "author": "Ralf", "text": "@sahil9821 yes! Was sure how to say it but is what bothers me most", "likes": 2}, {"id": "UgwZuSchhmYPBiP72Qh4AaABAg.9X5zy3Rf5K49XERieRJkCj", "publishedAt": "2022-01-15T20:45:29Z", "author": "sahil9821", "text": "@Inside code overall general way of writing python. Like simple example python swapping is simply a,b = b,a. But if someone isn\u2019t used to python, this is a very confusing statement. Then talking about hashmaps or heaps, visualizing the verbose code style is how you learn, however in python it\u2019s really concise, like dict = {} but in Java you\u2019d write something like HashMap<K,V> map = new HashMap<>(). It really shows you the syntax and gives a better hint about the usage. I hope you understand what I\u2019m trying to say", "likes": 3}, {"id": "UgwZuSchhmYPBiP72Qh4AaABAg.9X5zy3Rf5K49XERAcDJX57", "publishedAt": "2022-01-15T20:40:42Z", "author": "Inside code", "text": "What concept bothered you exactly in Python so that I know for next videos?", "likes": 0}, {"id": "UgwZuSchhmYPBiP72Qh4AaABAg.9X5zy3Rf5K49X6Cg-zJ1jc", "publishedAt": "2022-01-12T16:00:08Z", "author": "Ralf", "text": "Agreed. Please give the brackets, curly brackets, semicolons and overall more readable syntax (at least imo) back! \ud83d\ude03", "likes": 1}]}, {"topLevelComment": {"id": "UgwBaZMuBjhznpy8pPt4AaABAg", "publishedAt": "2022-01-12T11:47:25Z", "author": "Chris Allen", "text": "Easy JS solution for number 1\n\nfunction firstAndLastIndex (arr, target) {\n  return `${arr.indexOf(target)} ${arr.lastIndexOf(target)}`\n}\n\nI'm lost after that. Long ways to go I guess!", "likes": 2}, "replies": [{"id": "UgwBaZMuBjhznpy8pPt4AaABAg.9X5kl27-DKn9XERvFMdoSv", "publishedAt": "2022-01-15T20:47:12Z", "author": "Inside code", "text": "The solution works but it gives an O(n) time complexity, which is not the best for this problem", "likes": 1}]}, {"topLevelComment": {"id": "UgwtOpZuDb5FhObcQGx4AaABAg", "publishedAt": "2022-01-12T11:27:53Z", "author": "Khalid El-Gazzar", "text": "Great vid\u00e9o. Thank you", "likes": 1}, "replies": [{"id": "UgwtOpZuDb5FhObcQGx4AaABAg.9X5iX2xOZOt9XERwBW5dN-", "publishedAt": "2022-01-15T20:47:20Z", "author": "Inside code", "text": "You're welcome!", "likes": 0}]}, {"topLevelComment": {"id": "UgylOXUzEbqAa4s9NUx4AaABAg", "publishedAt": "2022-01-12T08:43:18Z", "author": "sahil9821", "text": "18:58 In the Kth largest\n\nInstead of putting all the elements into the heap, make a min heap (not max heap, for the Kth largest) and put a check inside the loop which is going over all the elements to be put into the loop. The check would limit the size of the PQ to 'K' elements, something like if(pq.size() > k) pq.poll(). Once we are through with the loop, we will have our kth largest element on top of the PQ, so simple return pq.peek();", "likes": 12}, "replies": [{"id": "UgylOXUzEbqAa4s9NUx4AaABAg.9X5Qg_vgcpm9XESCJDhzX_", "publishedAt": "2022-01-15T20:49:40Z", "author": "Inside code", "text": "I think it works yes", "likes": 1}]}, {"topLevelComment": {"id": "Ugx5kGzBWqEV2QH3JMl4AaABAg", "publishedAt": "2022-01-12T08:11:41Z", "author": "sahil9821", "text": "Rule for finding the middle element at 8:22\n\nThere is a chance for overflow when we are adding to massive numbers so instead of dividing directly by 2 we do either of the 2 following approaches:\n1. left + (right-left)/2\n2. left + right >>> 1", "likes": 37}, "replies": [{"id": "Ugx5kGzBWqEV2QH3JMl4AaABAg.9X5N3yma0Ci9cNDSDnUmBE", "publishedAt": "2022-06-17T09:42:18Z", "author": "Fazoodle", "text": "My professor taught it that way! Good point \ud83d\udc4d", "likes": 0}, {"id": "Ugx5kGzBWqEV2QH3JMl4AaABAg.9X5N3yma0Ci9Zg7h97sSON", "publishedAt": "2022-03-17T17:11:17Z", "author": "Vedran \u010ca\u010di\u0107", "text": "@sahil9821 Well, it depends on the concepts, of course. If the concept is that addition is associative, Python is almost perfect. If the concept is that numbers are sometimes put in boxes of fixed size, then obviously it isn't. :-)", "likes": 1}, {"id": "Ugx5kGzBWqEV2QH3JMl4AaABAg.9X5N3yma0Ci9ZffNWPW-M2", "publishedAt": "2022-03-17T12:55:03Z", "author": "sahil9821", "text": "@Vedran \u010ca\u010di\u0107 you\u2019re proving the point I made with another comment stating he shouldn\u2019t use python but instead use Java. People reading that line of code would assume it\u2019s the same for other languages and would end up committing the overflow error. I\u2019ll say it again python is not verbose, it\u2019s not good for explaining concepts.", "likes": 2}, {"id": "Ugx5kGzBWqEV2QH3JMl4AaABAg.9X5N3yma0Ci9Yjjq2VqCyt", "publishedAt": "2022-02-22T06:19:37Z", "author": "Vedran \u010ca\u010di\u0107", "text": "Python's numbers are true numbers, not limited-size boxes. There is no chance of overflow.", "likes": 3}, {"id": "Ugx5kGzBWqEV2QH3JMl4AaABAg.9X5N3yma0Ci9Y1WcWGDSTo", "publishedAt": "2022-02-04T16:49:36Z", "author": "anon", "text": "I think your 1. alternative is even more intuitive as you're getting the difference between the two, halving that and then adding it to the lower one (subtracting from the higher one would work as well)", "likes": 2}]}, {"topLevelComment": {"id": "UgziatNI5yBZ5tWiysN4AaABAg", "publishedAt": "2022-01-12T05:11:56Z", "author": "Anshika Yadav", "text": "this just sooo... good ,i just wanted this thanks so much", "likes": 1}, "replies": [{"id": "UgziatNI5yBZ5tWiysN4AaABAg.9X52VRDmveR9XEVIa1NVMT", "publishedAt": "2022-01-15T21:16:45Z", "author": "Inside code", "text": "you're welcome!", "likes": 0}]}, {"topLevelComment": {"id": "Ugx4dv8TSE3KWm0mvlx4AaABAg", "publishedAt": "2022-01-12T03:13:27Z", "author": "Thiago Soares", "text": "Good night! I live in Brazil I would like to say that your channel has content that others don't.", "likes": 1}}, {"topLevelComment": {"id": "UgyiFPKm7IIrQQXrCVh4AaABAg", "publishedAt": "2022-01-12T00:07:34Z", "author": "Rob Latour", "text": "the answer to 1 is way too complicated.   better answer imo:   if (a <> b) andalso (sort(a) = sort(b)) ... sort( sorts a string so each character in the string is placed in alphabetical order ).\nthe answer to 5 is again too complicated - but you have the idea. to improve rather than  use stacks just +1 to total for \"(\" and -1 to total for \"(\", the rest is more or less the same, if total ever goes below zero its invalid, total must = 0 in the end.", "likes": 1}, "replies": [{"id": "UgyiFPKm7IIrQQXrCVh4AaABAg.9X4VfBiu6xC9cbkiue6nnw", "publishedAt": "2022-06-23T10:30:25Z", "author": "Gazeld", "text": "@Rob Latour \"the best solution imo is always the simplest to understand assuming performance is not unduly impacted\" : not in a job interview. And it's the purpose of this video!!!", "likes": 0}, {"id": "UgyiFPKm7IIrQQXrCVh4AaABAg.9X4VfBiu6xC9cbkbE4HgfR", "publishedAt": "2022-06-23T10:29:22Z", "author": "Gazeld", "text": "@Rob Latour and you moving on makes your comment haklf wrong, making lose time for every person who reads it, like me. Shame for a programmer to not read the things entirely before reacting ;)", "likes": 0}, {"id": "UgyiFPKm7IIrQQXrCVh4AaABAg.9X4VfBiu6xC9XABuX9IGFv", "publishedAt": "2022-01-14T05:10:20Z", "author": "Preesuss", "text": "@Rob Latour It really is a balancing act. In most situations, I agree.. easy to understand is better, as your code is going to be read by others in a professional environment. There are cases though, where less easy to understand solutions are better, if they provide better performance. Amazon for example, has plenty of teams that deal with code that requires handling millions of requests per second.. at that level, performance is key.", "likes": 0}, {"id": "UgyiFPKm7IIrQQXrCVh4AaABAg.9X4VfBiu6xC9X7HZEPe_yt", "publishedAt": "2022-01-13T02:02:00Z", "author": "Rob Latour", "text": "@Mattness perhaps, but the best solution imo is always the simplest to understand assuming performance is not unduly impacted.", "likes": 0}, {"id": "UgyiFPKm7IIrQQXrCVh4AaABAg.9X4VfBiu6xC9X7HGdu55g3", "publishedAt": "2022-01-13T01:59:28Z", "author": "Rob Latour", "text": "@Inside code Sorry I clearly jumped the gun.  At 2:02 I heard 'the best structure for our problem is the hash tables' so I just moved on.  The same with 5 when talk was of pushing and popping.", "likes": 0}]}, {"topLevelComment": {"id": "Ugw_79_V-OOF5gXV4Ip4AaABAg", "publishedAt": "2022-01-11T23:16:01Z", "author": "Rajeev Patel", "text": "Sir please make more videos regards interviews \ud83d\udd25\ud83d\udd25 these videos help us for preparing for interview \ud83d\udc4d", "likes": 2}, "replies": [{"id": "Ugw_79_V-OOF5gXV4Ip4AaABAg.9X4Plflw0MB9cbktV7Zx92", "publishedAt": "2022-06-23T10:31:52Z", "author": "Gazeld", "text": "You mean videos for preparing interviews help you preparing interviews? Woohoo! Fantastic! :)))", "likes": 0}, {"id": "Ugw_79_V-OOF5gXV4Ip4AaABAg.9X4Plflw0MB9XEVQ6IcN8B", "publishedAt": "2022-01-15T21:17:46Z", "author": "Inside code", "text": "I have a playlist on coding problems on my channel: https://youtube.com/playlist?list=PL3edoBgC7ScW_CBHbMc0FtdXfzgpBOGIb", "likes": 0}]}, {"topLevelComment": {"id": "UgxdNLvZ_sBcxcISy1Z4AaABAg", "publishedAt": "2022-01-11T22:42:12Z", "author": "Ben Zuckier", "text": "3:10 Instead of making 2 maps and comparing (which is actually O(a) size where a is the size of the alphabet which even you mentioned could be huge) instead make the first map, then for the second string decrement the original map and if any value goes below 0 then return false (guaranteed they\u2019re the same size so this also guarantees completeness).", "likes": 19}, "replies": [{"id": "UgxdNLvZ_sBcxcISy1Z4AaABAg.9X4LtvwxJX49dVCvDXskya", "publishedAt": "2022-07-15T08:42:59Z", "author": "BruceNJeffAreMyFlies", "text": "@mephi5to But that only works if the character being checked isn't there at all. What if you are checking a second instance of a character that only exists once? That is a character that WAS there, but the words are not anagrams.", "likes": 0}, {"id": "UgxdNLvZ_sBcxcISy1Z4AaABAg.9X4LtvwxJX49YdDU-44Z9l", "publishedAt": "2022-02-19T17:32:40Z", "author": "Ben Zuckier", "text": "@mephi5to ya that's what I meant, I was showing that \"going below zero\" means we failed", "likes": 0}, {"id": "UgxdNLvZ_sBcxcISy1Z4AaABAg.9X4LtvwxJX49Y1SZH78dqY", "publishedAt": "2022-02-04T16:14:04Z", "author": "anon", "text": "@T-man remove any mappings that reach 0 and they are anagrams if the map is empty at the end", "likes": 0}, {"id": "UgxdNLvZ_sBcxcISy1Z4AaABAg.9X4LtvwxJX49X95X1OdBim", "publishedAt": "2022-01-13T18:55:19Z", "author": "mephi5to", "text": "@Ben Zuckier we do not decrement anything we quit. If second string has character that is not in the first map you exit because it cannot be anagram. there is no need to check for 0. You either quit when one goes below 0 (extra char) or it is not found. There could be no other way because strings should be checked for equal length. Once you get to end of the loop  - they are both anagram because you didn't return earlier.", "likes": 0}, {"id": "UgxdNLvZ_sBcxcISy1Z4AaABAg.9X4LtvwxJX49X613X6dXo-", "publishedAt": "2022-01-12T14:18:37Z", "author": "Ben Zuckier", "text": "@Abhi not necessary. And definitely do not iterate the entire map. See my reply to the comment.", "likes": 1}]}, {"topLevelComment": {"id": "Ugzy8itFfMh3zjREjfJ4AaABAg", "publishedAt": "2022-01-11T20:43:56Z", "author": "Patrick K. Barnes", "text": "$20,000 just in two weeks, Mrs Charlotte Junko Walsh  you are so amazing", "likes": 53}, "replies": [{"id": "Ugzy8itFfMh3zjREjfJ4AaABAg.9X48Mi0ws-j9XNkffDkntm", "publishedAt": "2022-01-19T11:33:00Z", "author": "Subramanian Chenniappan", "text": "How . I am a professional programmer . But I don't understand what you mean", "likes": 0}, {"id": "Ugzy8itFfMh3zjREjfJ4AaABAg.9X48Mi0ws-j9XJ4AxmsNae", "publishedAt": "2022-01-17T15:55:58Z", "author": "Xavier Jaison", "text": "\ud83e\udde2", "likes": 0}, {"id": "Ugzy8itFfMh3zjREjfJ4AaABAg.9X48Mi0ws-j9XIdwsLESqM", "publishedAt": "2022-01-17T11:57:59Z", "author": "Charles Asianya", "text": "Hahaha scammers", "likes": 12}, {"id": "Ugzy8itFfMh3zjREjfJ4AaABAg.9X48Mi0ws-j9X4Mgo5mwYM", "publishedAt": "2022-01-11T22:49:08Z", "author": "EDER", "text": "Nice movie lol", "likes": 0}, {"id": "Ugzy8itFfMh3zjREjfJ4AaABAg.9X48Mi0ws-j9X49ituCKiL", "publishedAt": "2022-01-11T20:55:50Z", "author": "Thomas Stanley", "text": "Count me in because I'm placing my trades with Expert\u00a0 Charlotte Junko Walsh ASAP.", "likes": 0}]}, {"topLevelComment": {"id": "Ugz5EXEd0ng6KJg3ZNZ4AaABAg", "publishedAt": "2022-01-11T20:32:08Z", "author": "Renato J\u00fanio Oliveira", "text": "On the \"k-th largest element\", isn't fastest to just sort the array and return array[k-1] ? \nI'm only familiar with js, so I may be wrong...", "likes": 1}, "replies": [{"id": "Ugz5EXEd0ng6KJg3ZNZ4AaABAg.9X470JiCEqq9XgQ9a86kaC", "publishedAt": "2022-01-27T02:49:48Z", "author": "Dimeji Mudele", "text": "It depends. Space complexity increases when you sort. In Python, Timsort has an O(n) space complexity. \n\nHeapifying with heapq is done in-place, so, constant memory.", "likes": 1}]}, {"topLevelComment": {"id": "UgyVOQe9qqxafUio45R4AaABAg", "publishedAt": "2022-01-11T19:44:20Z", "author": "Tajjamal Abbas", "text": ".\ud83d\udc95\ud83d\udc95 love ur content", "likes": 1}}, {"topLevelComment": {"id": "UgzzI1SMPVxsNnk196Z4AaABAg", "publishedAt": "2022-01-11T19:28:18Z", "author": "Ian Brooke", "text": "Your anagram solution is incorrect. As stated an anagram consists of the same characters in a different order but you have no check if the two strings are equal and the routine would wrongly say that \"danger\" is an anagram of \"danger\".", "likes": 0}, "replies": [{"id": "UgzzI1SMPVxsNnk196Z4AaABAg.9X4-hrKWoC69XEVZe3VRc8", "publishedAt": "2022-01-15T21:19:04Z", "author": "Inside code", "text": "True, I should have said in the problem \"In a possibly different order\", I wanted to say that order doesn't matter", "likes": 0}]}, {"topLevelComment": {"id": "Ugyb2JA3GN4SGD9Zind4AaABAg", "publishedAt": "2022-01-11T19:01:21Z", "author": "CT-7567", "text": "Once again, completely out of my range of knowledge", "likes": 8}, "replies": [{"id": "Ugyb2JA3GN4SGD9Zind4AaABAg.9X3xcPfg-5s9X4T_C5eedL", "publishedAt": "2022-01-11T23:49:16Z", "author": "badbeatslayer", "text": "I feel your pain, hard stuff", "likes": 2}]}, {"topLevelComment": {"id": "UgwUBixWGQJOdubatPN4AaABAg", "publishedAt": "2022-01-11T18:20:26Z", "author": "Kiran D", "text": "Tomorrow I have a interview wish me luck \ud83e\udd1e", "likes": 5}, "replies": [{"id": "UgwUBixWGQJOdubatPN4AaABAg.9X3swj8VfTh9X6faCe9dto", "publishedAt": "2022-01-12T20:21:29Z", "author": "Lucas Pinafi", "text": "tell us how it was.. ! :D", "likes": 2}]}, {"topLevelComment": {"id": "UgwR1DeGrwP6SNaGZGx4AaABAg", "publishedAt": "2022-01-11T18:02:24Z", "author": "Mahendra Nath", "text": "Thank you so much \ud83d\udc4d\ud83c\udffc\ud83c\udf89\u2b50\ud83d\ude4f\u2764\ufe0f", "likes": 1}, "replies": [{"id": "UgwR1DeGrwP6SNaGZGx4AaABAg.9X3qse3gIIK9XEVddLm_zj", "publishedAt": "2022-01-15T21:19:45Z", "author": "Inside code", "text": "You're welcome!", "likes": 0}]}, {"topLevelComment": {"id": "Ugw3gdMizBvyFgytPjd4AaABAg", "publishedAt": "2022-01-11T17:27:51Z", "author": "Tech", "text": "looks like the presenter has swallowed the microphone and talking, very hard to understand!", "likes": 1}, "replies": [{"id": "Ugw3gdMizBvyFgytPjd4AaABAg.9X3mvbl0FGK9XEVf3tTDgE", "publishedAt": "2022-01-15T21:19:57Z", "author": "Inside code", "text": "I'll try to improve the audio part thanks", "likes": 0}]}, {"topLevelComment": {"id": "UgxtHE7JQvEqX1f7rxl4AaABAg", "publishedAt": "2022-01-11T17:24:00Z", "author": "Saravana Kumar", "text": "Wow", "likes": 1}}, {"topLevelComment": {"id": "UgzcUmwFRkqvPMkvP4J4AaABAg", "publishedAt": "2022-01-11T17:17:47Z", "author": "prathmesh kakde", "text": "a=input()\nb=input()\ncount=0\nfor i in range(len(a)):\n\tif a[i] in b:\n\t\tcount+=1\nif count==len(a):\n\tprint(\"anagram\")\nelse:\n\tprint(\"not anagram\")\nThis also gives valid anagram or not", "likes": 0}, "replies": [{"id": "UgzcUmwFRkqvPMkvP4J4AaABAg.9X3llqtriIu9XEVnRDcgov", "publishedAt": "2022-01-15T21:21:05Z", "author": "Inside code", "text": "Hello, I don't think so, this one returns true s1 = \"aaaa\", s2 = \"abbb\" while it shouldn't", "likes": 0}, {"id": "UgzcUmwFRkqvPMkvP4J4AaABAg.9X3llqtriIu9X3ufzMpqQR", "publishedAt": "2022-01-11T18:35:37Z", "author": "Amal Antony", "text": "@prathmesh kakde yeah that works", "likes": 0}, {"id": "UgzcUmwFRkqvPMkvP4J4AaABAg.9X3llqtriIu9X3ssrZxua6", "publishedAt": "2022-01-11T18:19:54Z", "author": "Amal Antony", "text": "I have a doubt\nWouldn't this code result in saying a= \"aaaaa\" and b = \"a\" as anagrams ?", "likes": 0}]}, {"topLevelComment": {"id": "UgzyJap5PnTXwCB3Jkp4AaABAg", "publishedAt": "2022-01-11T17:13:47Z", "author": "sahil9821", "text": "ARE YOU KIDDING ME \n\nI HAVE AN INTERVIEW IN THREE DAYS AND YOU DROPPED THIS BOMB \n\nNUKE ME FREECODECAMPDADDY", "likes": 3}}, {"topLevelComment": {"id": "UgwkkEaXMYt5MJwZY3F4AaABAg", "publishedAt": "2022-01-11T17:10:01Z", "author": "Jungbae Eriel", "text": "I have one in 3 hours and you guys posted this just in time! haha", "likes": 1}}, {"topLevelComment": {"id": "UgyB4vxadbXf2ApIaiJ4AaABAg", "publishedAt": "2022-01-11T17:03:59Z", "author": "Az Y", "text": "Wich apps do we use to write python codes?", "likes": 0}, "replies": [{"id": "UgyB4vxadbXf2ApIaiJ4AaABAg.9X3kBqsXJdm9X3uEdvZe0U", "publishedAt": "2022-01-11T18:31:45Z", "author": "Mack Benham", "text": "that doesn't really matter, but just use visual studio code like everybody else", "likes": 0}]}, {"topLevelComment": {"id": "Ugw8cKPuKrd3Zvu_YMV4AaABAg", "publishedAt": "2022-01-11T16:56:51Z", "author": "Transcendental Academician", "text": "Thank you FCC!", "likes": 1}, "replies": [{"id": "Ugw8cKPuKrd3Zvu_YMV4AaABAg.9X3jNYZtKNI9XEVosxl5U4", "publishedAt": "2022-01-15T21:21:17Z", "author": "Inside code", "text": "You're welcome!", "likes": 0}]}, {"topLevelComment": {"id": "UgxX9ApmCI6N77YkgJR4AaABAg", "publishedAt": "2022-01-11T16:53:09Z", "author": "Briza Mel", "text": "Thank yoooou", "likes": 1}, "replies": [{"id": "UgxX9ApmCI6N77YkgJR4AaABAg.9X3ixVRKxw79XEVphJlB7v", "publishedAt": "2022-01-15T21:21:24Z", "author": "Inside code", "text": "You're welcome!", "likes": 0}]}, {"topLevelComment": {"id": "UgyBhcI4tKXldJ-gcAt4AaABAg", "publishedAt": "2022-01-11T16:51:43Z", "author": "YASIN MOHAMMADI", "text": "That's really useful thanks", "likes": 1}, "replies": [{"id": "UgyBhcI4tKXldJ-gcAt4AaABAg.9X3imwHidTk9XEVq7bo3T_", "publishedAt": "2022-01-15T21:21:27Z", "author": "Inside code", "text": "You're welcome!", "likes": 0}]}, {"topLevelComment": {"id": "UgxRoPuqdYmViZddQ9B4AaABAg", "publishedAt": "2022-01-11T16:49:52Z", "author": "SHIVAKUMAR JADIPALLI", "text": "One day we will definitely repay your\nChannel sir", "likes": 2}, "replies": [{"id": "UgxRoPuqdYmViZddQ9B4AaABAg.9X3i_OUJBzs9X3mJGjJpDo", "publishedAt": "2022-01-11T17:22:28Z", "author": "Swaroop Rajpurohit", "text": "Definitely. I'll donate them after I get employed", "likes": 1}]}, {"topLevelComment": {"id": "UgxVKtEkiQRcCb4N5rJ4AaABAg", "publishedAt": "2022-01-11T16:40:40Z", "author": "Darling", "text": "This is amazing I just started applying", "likes": 2}}, {"topLevelComment": {"id": "UgyleeKFcH2KMAslkzV4AaABAg", "publishedAt": "2022-01-11T16:37:15Z", "author": "Soner G\u00f6n\u00fcl", "text": "I'm not sure this applies on Python or not but for Binary Search, it would be better to calculate middle point as (left + (right - left) / 2) instead of (left + right) / 2 to prevent integer overflow.\n\nhttps://en.wikipedia.org/wiki/Binary_search_algorithm#Implementation_issues", "likes": 20}, "replies": [{"id": "UgyleeKFcH2KMAslkzV4AaABAg.9X3h80Z-7eM9XEW-CDq6lH", "publishedAt": "2022-01-15T21:22:50Z", "author": "Inside code", "text": "In binary search left and right represent indexes of elements, so unless your array has more than 2^63 - 1 elements (which is not really possible actually), I don't think it will be a problem", "likes": 2}, {"id": "UgyleeKFcH2KMAslkzV4AaABAg.9X3h80Z-7eM9XDs4gNerr4", "publishedAt": "2022-01-15T15:25:19Z", "author": "Vampire Robin", "text": "help please!\n\ni am new in programming and is the code below is okay for 2nd question?\r\ncode:\r\n\r\nimport numpy as np\r\n\r\ndef first_and_last_index(arr, target):\r\n    index_of_target = []\r\n    output_array = []\r\n    not_found = [-1, -1]\r\n\r\n    if target in arr:\r\n        for i in range(len(arr)):\r\n            if arr[i] == target:\r\n                index_of_target.append(i)\r\n                # print(f\"{i}\")\r\n        if np.min(index_of_target) == np.max(index_of_target):\r\n            print(f\"\\nOnly one index found for the target and it is {np.min(index_of_target)}\")\r\n        else:\r\n            output_array.append(np.min(index_of_target))\r\n            output_array.append(np.max(index_of_target))\r\n            print(f\"\\nThe main array is: {arr}\")\r\n            print(f\"\\nThe first and last index for {target} in array : {output_array}\\n\")\r\n    else:\r\n        print(not_found)\r\n\r\n\r\narr = [2, 4, 5, 5, 5, 5, 5, 7, 9, 9]\r\ntarget = int(input(\"Enter a value to search the first and last index : \"))\r\nfirst_and_last_index(arr, target)", "likes": 0}, {"id": "UgyleeKFcH2KMAslkzV4AaABAg.9X3h80Z-7eM9X46zLo-4PE", "publishedAt": "2022-01-11T20:31:52Z", "author": "Berke Kaan Cetinkaya", "text": "In python its not a concern since integers are not overflowing", "likes": 2}, {"id": "UgyleeKFcH2KMAslkzV4AaABAg.9X3h80Z-7eM9X3nzr0T_1n", "publishedAt": "2022-01-11T17:37:10Z", "author": "Michiel Karrenbelt", "text": "of course that does not apply to python. In python it's best to use ```left + right >> 1```", "likes": 0}]}, {"topLevelComment": {"id": "UgyyPMk0Bffg-6UBqMh4AaABAg", "publishedAt": "2022-01-11T16:27:57Z", "author": "Arjun Sankar", "text": "Post some product based companies like Amazon DSA with  problem solving q & A", "likes": 0}}, {"topLevelComment": {"id": "Ugz95XGcRXSZhsp9Sx94AaABAg", "publishedAt": "2022-01-11T16:21:20Z", "author": "Quran", "text": "https://youtu.be/BToeWwprQ_s", "likes": 0}}, {"topLevelComment": {"id": "UgyZsQ31JCLGS5Z2NXB4AaABAg", "publishedAt": "2022-01-11T16:20:08Z", "author": "Prashant Sakre", "text": "This is really great video. I am hopping similar content with different problems in the future also", "likes": 1}, "replies": [{"id": "UgyZsQ31JCLGS5Z2NXB4AaABAg.9X3fAaF8Tr09X4t_VHJKP5", "publishedAt": "2022-01-12T03:45:14Z", "author": "Prashant Sakre", "text": "@Inside code thank you so much \u270c\ufe0f", "likes": 1}, {"id": "UgyZsQ31JCLGS5Z2NXB4AaABAg.9X3fAaF8Tr09X3wAgaGWpD", "publishedAt": "2022-01-11T18:48:41Z", "author": "Inside code", "text": "Hey! I have a whole playlist on coding problems, you can check it: https://youtube.com/playlist?list=PL3edoBgC7ScW_CBHbMc0FtdXfzgpBOGIb", "likes": 1}]}, {"topLevelComment": {"id": "Ugy7Nws1BevAINPk6-V4AaABAg", "publishedAt": "2022-01-11T16:10:35Z", "author": "Ankit Raj", "text": "Which programming language is used in valid anagram here", "likes": 0}, "replies": [{"id": "Ugy7Nws1BevAINPk6-V4AaABAg.9X3e4iRRCSV9X3eoTDCHL6", "publishedAt": "2022-01-11T16:16:58Z", "author": "kubernetes", "text": "python", "likes": 1}]}, {"topLevelComment": {"id": "UgwW_giT7GWktdhe_PZ4AaABAg", "publishedAt": "2022-01-11T16:09:27Z", "author": "peace angel", "text": "Great videos, thank you xxxxxx \u2764\u2764\u2764\u2764\u2764", "likes": 1}, "replies": [{"id": "UgwW_giT7GWktdhe_PZ4AaABAg.9X3dxPVp1PN9XEW1CsiXo_", "publishedAt": "2022-01-15T21:23:07Z", "author": "Inside code", "text": "You're welcome!", "likes": 0}, {"id": "UgwW_giT7GWktdhe_PZ4AaABAg.9X3dxPVp1PN9X3f5GyH6O3", "publishedAt": "2022-01-11T16:19:24Z", "author": "waruni adithya", "text": "https://youtu.be/79gTz7cCUdk", "likes": 0}]}, {"topLevelComment": {"id": "UgwA86eUX7V0-8YXvxh4AaABAg", "publishedAt": "2022-01-11T16:07:36Z", "author": "D S", "text": "thank you \ud83d\udc93", "likes": 1}, "replies": [{"id": "UgwA86eUX7V0-8YXvxh4AaABAg.9X3djpxIgA09XEW1lrIlq4", "publishedAt": "2022-01-15T21:23:11Z", "author": "Inside code", "text": "You're welcome!", "likes": 1}, {"id": "UgwA86eUX7V0-8YXvxh4AaABAg.9X3djpxIgA09X3f67AYfTF", "publishedAt": "2022-01-11T16:19:31Z", "author": "waruni adithya", "text": "https://youtu.be/79gTz7cCUdk", "likes": 0}]}, {"topLevelComment": {"id": "UgwG87yntFsnRTaqh_p4AaABAg", "publishedAt": "2022-01-11T15:59:06Z", "author": "Sa Play", "text": "Great sir", "likes": 1}}, {"topLevelComment": {"id": "UgwVG-U6mAZSONzMHrZ4AaABAg", "publishedAt": "2022-01-11T15:58:57Z", "author": "Bbolakgu", "text": "This is Fxxking amazing", "likes": 1}}, {"topLevelComment": {"id": "UgylPzuoNtuqFt2nfx94AaABAg", "publishedAt": "2022-01-11T15:53:23Z", "author": "brian bouf", "text": "https://youtu.be/dS7H8LeNJdI", "likes": 0}}, {"topLevelComment": {"id": "Ugx6lC-syhn0VPoEMul4AaABAg", "publishedAt": "2022-01-11T15:53:12Z", "author": "superCummer", "text": "Just like everytime , High quality content for free . \u2764\ufe0f", "likes": 71}, "replies": [{"id": "Ugx6lC-syhn0VPoEMul4AaABAg.9X3c5NDkKiq9eYoAAVucRN", "publishedAt": "2022-08-10T14:46:19Z", "author": "Orange Snowman", "text": "@Carlos Cuartas You paid for the food which gave you the energy to walk so not free \ud83d\ude0f", "likes": 0}, {"id": "Ugx6lC-syhn0VPoEMul4AaABAg.9X3c5NDkKiq9cuCeSGKNaI", "publishedAt": "2022-06-30T14:29:33Z", "author": "Carlos Cuartas", "text": "@Saurav kumar go to a library then...", "likes": 0}, {"id": "Ugx6lC-syhn0VPoEMul4AaABAg.9X3c5NDkKiq9X6H23LJabG", "publishedAt": "2022-01-12T16:38:14Z", "author": "Saurav kumar", "text": "You paid for device and internet connection \n\nSo not free..", "likes": 0}, {"id": "Ugx6lC-syhn0VPoEMul4AaABAg.9X3c5NDkKiq9X3hINZwMVL", "publishedAt": "2022-01-11T16:38:40Z", "author": "Zikri Yurichev fathin", "text": "@waruni adithya terimakasi", "likes": 0}]}, {"topLevelComment": {"id": "Ugycyy4fRDQ2mTTRcN94AaABAg", "publishedAt": "2022-01-11T15:52:12Z", "author": "Jiganesh Patil", "text": "Make more of these videos\ud83d\udcaf\ud83d\udcaf", "likes": 4}}, {"topLevelComment": {"id": "UgwA-g2Tql9QDaQPgsN4AaABAg", "publishedAt": "2022-01-11T15:51:11Z", "author": "Ketan Bhailikar", "text": "Wow! Can't believe the timing \ud83d\ude2e", "likes": 1}}, {"topLevelComment": {"id": "UgzMkLmgmXmclfSR1id4AaABAg", "publishedAt": "2022-01-11T15:51:04Z", "author": "Praveen Kumar", "text": "\ud83d\udd25\ud83d\udd25\ud83d\udd25", "likes": 0}}, {"topLevelComment": {"id": "Ugy0b1vNY4Mt4JG7tTF4AaABAg", "publishedAt": "2022-01-11T15:51:03Z", "author": "I-Cant-Code-Yet", "text": "\ud83e\udd73\ud83e\udd73", "likes": 0}}, {"topLevelComment": {"id": "UgwSjfQMyBGvkoJWcet4AaABAg", "publishedAt": "2022-01-11T15:50:42Z", "author": "Hydroid Tech", "text": "Nice", "likes": 0}}, {"topLevelComment": {"id": "UgytRBD7mb0H201m5v14AaABAg", "publishedAt": "2022-01-11T15:50:37Z", "author": "Ebenezer Paul G", "text": "Hi", "likes": 1}, "replies": [{"id": "UgytRBD7mb0H201m5v14AaABAg.9X3bnT9Dog-9X3f9YrUnrs", "publishedAt": "2022-01-11T16:19:59Z", "author": "waruni adithya", "text": "https://youtu.be/79gTz7cCUdk", "likes": 0}, {"id": "UgytRBD7mb0H201m5v14AaABAg.9X3bnT9Dog-9X3bojm0qhj", "publishedAt": "2022-01-11T15:50:47Z", "author": "Ebenezer Paul G", "text": "First view", "likes": 1}]}, {"topLevelComment": {"id": "UgxURxhAEiH_2fcwajV4AaABAg", "publishedAt": "2022-01-11T15:50:32Z", "author": "Joy Saha", "text": "First \ud83d\ude03", "likes": 0}, "replies": [{"id": "UgxURxhAEiH_2fcwajV4AaABAg.9X3bmnW72iA9X3fAS3iSzv", "publishedAt": "2022-01-11T16:20:06Z", "author": "waruni adithya", "text": "https://youtu.be/79gTz7cCUdk", "likes": 0}]}, {"topLevelComment": {"id": "UgyVhlskGS9NlZwLgo54AaABAg", "publishedAt": "2022-01-11T15:50:31Z", "author": "lakshya saharan", "text": "First", "likes": 0}}]}