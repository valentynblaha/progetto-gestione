{"video": {"id": "H6hM_5ilhqw", "title": "Full Stack Web App Using Vue.js & Express.js: Part 3 - Login", "description": "Welcome to part 3 of a new series where I will create a full stack web application using Vue.js and Express.js\n\nGitHub repo: https://github.com/codyseibert/tab-tracker\n\nFollow Cody on Twitter: https://twitter.com/CodyLSeibert\n\nLearn to code for free and get a developer job: https://www.freecodecamp.com\n\nRead hundreds of articles on programming: https://medium.freecodecamp.com", "duration": "PT1H4M17S", "likes": "754", "views": "86536"}, "comments": [{"topLevelComment": {"author": "CrimsonSlayer7", "text": "9:52, 22:49, 35:09, 43:01, 47:46, 55:28, 1:02:05", "likes": 0}, "replies": [{"author": "CrimsonSlayer7", "text": "31:38 - clear database", "likes": 0}]}, {"topLevelComment": {"author": "Cindy Cindy", "text": "do npm install --save jsonwebtoken instead of jwt", "likes": 0}}, {"topLevelComment": {"author": "Olatunbosun Dare", "text": "Since bycrpt-nodejs is depreciated, I opted to us bcryptjs, When you generate a salt, you have to use genSalt", "likes": 0}}, {"topLevelComment": {"author": "DusanDuxStanic", "text": "Thank you for an impressive effort in this entire series of films. Real-time programming/execution with constructive and clear explanations and examples. Most educational sources are rewarding solely depending on how much you want/are willing to learn.\n\nThose who did not like the movie/series would simply continue to watch cute kittens, sell cars/insurance, or whatever they are really doing ...", "likes": 1}}, {"topLevelComment": {"author": "Chunhui Ma", "text": "32:22 login", "likes": 1}}, {"topLevelComment": {"author": "Maciek Celi\u0144ski", "text": "My function comparePasswords always compare password1: hello1234 and password2:  $2a$08$VhSymr8EXqy4YZaGz9.... and I of course always get false ... my question is, when password from login page should be hashed because I have analyzed the code and we actually compare password from req.body with a hased password from database I believe that it is being done here: bcrypt.compareAsync(password, this.password) and it might be a problem with double hashing (as someone mentioned) but none of proposed answers have helped", "likes": 0}, "replies": [{"author": "Dan James", "text": "@Maciek Celi\u0144ski Massive thankyou!!!", "likes": 1}, {"author": "Maciek Celi\u0144ski", "text": "ok i found the solution for my problems, first of all I've installed bcrypt (not bcrypt-nodejs - it has been deprecated) and I did not use those genSaltAsync functions while still using ASYNC/AWAIT...so I did this:\nasync function hashPassword(user) {\r\n  const SALT_FACTOR = 8;\r\n\r\n  if (!user.changed(\"password\")) {\r\n    return;\r\n  }\r\n\r\n  console.log(\"hashPassword was run\");\r\n\r\n  const hashedPassword = await bcrypt\r\n    .genSalt(SALT_FACTOR)\r\n    .then((salt) => bcrypt.hash(user.password, salt, null))\r\n    .then((hash) => user.setDataValue(\"password\", hash));\n\n  return hashedPassword\r\n}\r\n\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  const User = sequelize.define(\r\n    \"User\",\r\n    {\r\n      email: {\r\n        type: DataTypes.STRING,\r\n        unique: true,\r\n      },\r\n      password: DataTypes.STRING,\r\n    },\r\n    {\r\n      hooks: {\r\n        beforeSave: hashPassword,\r\n      },\r\n    }\r\n  );\r\n\r\n  User.prototype.comparePassword = function (password) {\r\n    return bcrypt.compareAsync(password, this.password);\r\n  };\r\n\r\n  return User;\r\n};", "likes": 5}]}, {"topLevelComment": {"author": "iheb dhouibi", "text": "at 35:15 when trying to test my token I get the following in postman (res.status(500).send error message )  : \n{\r\n    \"error\": \"An error has occured trying to login\"\r\n}\n\nif I remove the token: jwtSignUser(user) line it works again and i can login", "likes": 2}, "replies": [{"author": "iheb dhouibi", "text": "@Dunderkarl yes I did but I had to remove beforeSave and beforeUpdate hooks, not sure if they are causing the problem or not,", "likes": 0}, {"author": "Dunderkarl", "text": "@iheb dhouibi Thanks for updating with your solution! Did you manage to do the hashing and salting with bcrypt? The jwt token works fine for me but I get the same \"500 error trying to login\" when I add the bcrypt hashing and salting as in the video. Sat way too long trying to find what I did wrong and started wondering if some syntax or command with bcrypt may be outdated or changed.", "likes": 0}, {"author": "iheb dhouibi", "text": "found out what the problem was, you need to pass a json user object to jwt.sign() not user", "likes": 2}]}, {"topLevelComment": {"author": "JC Angeles", "text": "Anybody doing this in 2020 who is having problems with Vuetify, rollback your Vuetify version to the one used in this video.\nGo to your client/node_modules folder and delete the entire vuetify folder. \nThen navigate to your client folder and run `npm install vuetify@0.15.2 --save`\nAfter that, run `npm install css-mqpacker --save`\nDo an `npm install` to rebuild the packages\nAfter these steps, I got the app running similar to the one he has in the video.", "likes": 2}, "replies": [{"author": "Dan C", "text": "Thank you, Sir!", "likes": 0}, {"author": "A", "text": "^^^^^^^^^", "likes": 0}]}, {"topLevelComment": {"author": "Dominik Tabak", "text": "Potential error: When implementing the User model, be aware that you don't want to put the last two hooks! Because the user won't be able to login.", "likes": 2}, "replies": [{"author": "Boris Tostivint", "text": "Thanks bro.", "likes": 1}, {"author": "Bruna Da Silva", "text": "Thank you so much! I was struggling with it.", "likes": 1}]}, {"topLevelComment": {"author": "Cal", "text": "I was having issues registering where it kept saying the email was already registered even though it wasn't. I ended up using bcrypt instead of bcrypt-nodejs (though I doubt this is the problem - but bcrypt-nodejs is deprecated and they're completely interchangeable anyway). The main issue was in the hashPassword function and what ended up working was the following:\n\nasync function hashPassword(user) {\r\n    const SALT_FACTOR = 8;\r\n  \r\n    if (!user.changed('password')) {\r\n      return null;\r\n    }\r\n\r\n    const hash = await bcrypt.hash(user.password, SALT_FACTOR);\r\n    user.setDataValue('password', hash);\r\n\r\n    return null;\r\n}\n\nHopefully that can help someone else!", "likes": 4}, "replies": [{"author": "Jake Leogabrel Galindo", "text": "Thanks men! This helps me!", "likes": 0}, {"author": "Cal", "text": "You will also need to change:\n\nUser.prototype.comparePassword = function comparePassword(password) {\r\n        return bcrypt.compareAsync(password, this.password);\r\n    };\n\nto:\n\nUser.prototype.comparePassword = function comparePassword(password) {\r\n        return bcrypt.compare(password, this.password);\r\n    };", "likes": 3}]}, {"topLevelComment": {"author": "Umar Faruq", "text": "Someone can explain me, why component page-header can't work?", "likes": 0}}, {"topLevelComment": {"author": "Louis J.", "text": "Use 'bcryptjs' instead, works simmilarly but does not need to be promisified", "likes": 0}}, {"topLevelComment": {"author": "Louis J.", "text": "If vuetify is not workting properly try adding it with \"vue add vuetify\" in the client folder.", "likes": 1}}, {"topLevelComment": {"author": "Mathieu Le Cardinal", "text": "Bueautiful Work. Hope you continue this serie with another projekt. Love that Stack!!!!", "likes": 0}}, {"topLevelComment": {"author": "Flavien", "text": "00:00 Vuetify\n15:50 Vue-router\n22:58 Login\n      -32:33 JsonWebToken\n      -35:20 bcrypt\n      -47:55 Vuex / vuex-router-sync", "likes": 0}, "replies": [{"author": "iheb dhouibi", "text": "at 35:15 when trying to test my token I get the following in postman (res.status(500).send error message )  : \r\n{\r\n    \"error\": \"An error has occured trying to login\"\r\n}\r\n\r\nif I remove the token: jwtSignUser(user) line it works again and i can login", "likes": 0}]}, {"topLevelComment": {"author": "Juan Sm", "text": "09:30 \nv-toolbar is no longer supported in newer versions of vuetify. \nJust try to do the same with v-app-bar. \nOr at least that's what I did", "likes": 6}}, {"topLevelComment": {"author": "Robi Parvez", "text": "nohhhhh...ahhh \ud83e\udd23\ud83e\udd23", "likes": 0}}, {"topLevelComment": {"author": "Baruch 05", "text": "I'm doing this currently for work and I can't get any of the vuetify colors and some display elements to work. I did the npm install vuetify and my package.json dependencies shows \"vuetify\": \"^2.1.10\" Can anyone tell me what I'm not doing correctly?", "likes": 0}}, {"topLevelComment": {"author": "Ady mou", "text": "thumbs up for tutorial, in 2019 still useful !", "likes": 0}}, {"topLevelComment": {"author": "HandMeetsKeyboard", "text": "<router-link to=\"register\" tag=\"span\">Sign up</router-link>", "likes": 0}, "replies": [{"author": "flm5", "text": "nice", "likes": 0}]}, {"topLevelComment": {"author": "The Gorilla", "text": "hi . i had problem.\nmodal'password had hash, but my password pass to compare is not,\ni dont see where is my passsword hash", "likes": 0}}, {"topLevelComment": {"author": "Pedro Soares da Rosa", "text": "I'm trying to use JWT but it keep return some error, I can't identify, but if ai take JWT off, everything works, but when I try to use again, some internal error happens, someone has a clue?", "likes": 0}, "replies": [{"author": "Pedro Soares da Rosa", "text": "ok, forget about this, I found a \"authenticantion\" in my code. mb", "likes": 0}]}, {"topLevelComment": {"author": "Salvatore Balestrino", "text": "using BCRYPTJS code: https://github.com/Balestrino/ExpressVue/tree/v0.3", "likes": 0}}, {"topLevelComment": {"author": "claus4tw", "text": "where do you validate the set token?", "likes": 1}}, {"topLevelComment": {"author": "Ivo Runac", "text": "If you stuck with bcrypt, import bcryptjs instead, and change genSaltAsync to just genSalt (default async version). Same for other ..Async functions. Also leave only beforeSave hook, because otherwise it does hash multiple times and will fail login cause of it. (tnx greddee)", "likes": 1}, "replies": [{"author": "Sebeklis", "text": "Thanks a lot, you saved half of my day", "likes": 0}]}, {"topLevelComment": {"author": "Pawe\u0142 Krupicki", "text": "can someone hlp me ? i have this error: \"error\": \"This email account is already in use.\" dont know what to do", "likes": 0}, "replies": [{"author": "Ivo Runac", "text": "instead of \"This email account is already in use.\"  print out the actuall err", "likes": 0}, {"author": "Pawe\u0142 Krupicki", "text": "i cant", "likes": 0}, {"author": "Pawe\u0142 Krupicki", "text": "i can register and log in", "likes": 0}]}, {"topLevelComment": {"author": "Titus Corp", "text": "My fun with broken salting / hash:\n{\n    \"error\": \"This login information was incorrect.\"\n}\n\nis apparently from this:\n\n(node:15589) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): Error: Can't set headers after they are sent.\n(node:15589) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n\nAny ideas?\nTIA", "likes": 0}, "replies": [{"author": "Ivo Runac", "text": "Only leave beforeSave hook, otherwise it hashes it multiple times.", "likes": 0}]}, {"topLevelComment": {"author": "Kendall Adkins", "text": "I know this was a long time ago but for navigation use this...   \n<v-btn to=\"register\" flat dark>Sign Up</v-btn>", "likes": 0}}, {"topLevelComment": {"author": "Li Wenchi", "text": "the doucument of \"bcrypt-nodejs\" doesn't have the function named \"hashAsync\" and \"genSaltAsync\"\u3002 and just have \"hashSync\" and \"genSaltSync\", but if use these two function ,you will meet odd bug at User.js\u3002 i can't understand this document ....", "likes": 0}}, {"topLevelComment": {"author": "shashank shandilya", "text": "This is strange. I have this issue no one reported here. compareAsync is returning a promise rather than the boolean value. So I am using compareSync.\" bcrypt.compareSync(password, this.password)\" => returns true. but \"isPasswordValid\" is still false.", "likes": 1}}, {"topLevelComment": {"author": "Stephen Zukowski", "text": "Just noticed that 'bcrypt.nodejs' in an unmaintained project and hasn't been updated in 6 years.   I swapped it out with 'bcrypt', which was updated 2 months ago and only had to change one line of code so for.   I'm only through video 3, so I might have to change more, but all I changed was 'bcrypt.hashAsync(user.password, salt, null);' to 'bcrypt.hashSync(user.password, salt, null);' in User.js.   Just change Async to Sync on that one line and everything works.", "likes": 5}, "replies": [{"author": "bok J", "text": "@Li Wenchi cuz he used to bluebird Promise module.", "likes": 1}, {"author": "Li Wenchi", "text": "thank you, i also find the \"bcrypt-nodejs\" 's last update at 6 years ago, the bug that will hash twice beset me whole day, and the doucument of \"bcrypt-nodejs\" doesn't have the function named \"hashAsync\" and \"genSaltAsync\"", "likes": 0}, {"author": "Boris", "text": "thanks :)", "likes": 0}]}, {"topLevelComment": {"author": "DJ Samke", "text": "Hey Cody, why are we not using the .then() (the promise) in the login to call the dispatch method? Or was vuex built to work with such asynchronous code? Great tut btw... loving your work", "likes": 0}}, {"topLevelComment": {"author": "Rajendra Prasad", "text": "Hi, you can simply use router like this:\n<v-btn to='/login'>\nLog in\n</v-btn>\nI hope it helps...", "likes": 4}}, {"topLevelComment": {"author": "0GRANATE0", "text": "my comparePassword() function returns always false. Why?", "likes": 0}, "replies": [{"author": "\u0412\u043b\u0430\u0434 \u041a\u0443\u0440\u043b\u0443\u043a", "text": "\u200b@0GRANATE0 Thank. It saved me from madness", "likes": 0}, {"author": "Fluke Tech", "text": "Good Job  !!! .I have a same problem -_- you help me , Thank You \u2665", "likes": 0}, {"author": "0GRANATE0", "text": "Ok saw @greddee s comment .. solved by only have one hook: beforeSave", "likes": 1}]}, {"topLevelComment": {"author": "dejo095", "text": "Vue is so much easier to work with than Angular 6 :-) So far I'm loving it", "likes": 0}}, {"topLevelComment": {"author": "Justin Koehler", "text": "30:05 - my testing user also had a password of 123456 so put this in my AuthenticationController login method, clicked the login button to execute it and then removed it:\n\nUser.update(\n        { password: '12345678' },\n        { where: {\n          email: 'testing@gmail.com'\n        } }\n      )", "likes": 0}}, {"topLevelComment": {"author": "MadGamer", "text": "For those that have been having the \"email already exists\" problem and problems with hooks/comparing password is always false etc. Read the following:\n\nDelving down into the source problem is the passwords are indeed not equivalent. We would hash the password, HOWEVER it would not persist in your SQLite database. This causes comparePassword to compare a simple string like 'passwordlol' (which was saved in the database because the hooks aren't persisting the correct hash password) to '2vh$@/30d@#%$%^@..' which are not equal. \n\nTHE SOLUTION: Instead, hash the password in your AuthenticationController.js file before it is sent to the User model for creation. This way the Model saves the hashed password to the database and therefore it persists and comparisons become equal leading to everything working. If someone wants me to I will post the code I used just reply to this comment", "likes": 2}, "replies": [{"author": "Arnold", "text": "@MadGamer  -  Thank you so much. It works!", "likes": 0}, {"author": "Sukhchain Singh", "text": "thank you <3 will test this", "likes": 0}, {"author": "MadGamer", "text": "Sukhchain Singh\u00a0 Here you go buddy,\nhttps://gist.github.com/rGustave07/dddb72b8331b4b033ea54d5d5cf559b3", "likes": 2}, {"author": "Sukhchain Singh", "text": "it returns error where we check if user with that email is there or not: \n    if (!user) {\n        return res.status(403).send({\n          error: 'The login information was incorrect.'\n        })\n      }", "likes": 0}, {"author": "Sukhchain Singh", "text": "yes please help me for that, my password always shows incorrect! :(", "likes": 0}]}, {"topLevelComment": {"author": "MadGamer", "text": "So, it looks like vuetify has an API that abstracts vue-router functionality through the v-btn element. The following is a solution consistent with the styling of the browse button.                                       <v-btn :to=\"{name: 'register'}\" flat dark>\n          Sign-Up\n </v-btn>\n\nUseful read: https://stackoverflow.com/questions/46313514/difference-between-routing-inside-v-btn-and-using-router-link", "likes": 0}}, {"topLevelComment": {"author": "Mista T", "text": "How is this course free???", "likes": 4}, "replies": [{"author": "Rudy Rodriguez Lucha", "text": "That's what I'm saying the quality of this is amazing.-", "likes": 2}]}, {"topLevelComment": {"author": "Lihong Han", "text": "anyone know why sometimes the background color of the error is also red?", "likes": 0}, "replies": [{"author": "iheb dhouibi", "text": "use the following : <div class=\"error--text\">{{ error }}></div>", "likes": 0}]}, {"topLevelComment": {"author": "Lihong Han", "text": "why there is no autofilling problem in my case", "likes": 0}}, {"topLevelComment": {"author": "Alex Leibowitz", "text": "Looks like you might have forgotten to use <v-app></v-app> (in terms of dark not working)", "likes": 0}}, {"topLevelComment": {"author": "Nikola Jovanovic", "text": "Hi there. <router link to=\"register\"> worked fine for me. You could maybe try adding a slash <router link to=\"/register\"> without any wrapping around the <v-btn> and see how it works. I am using the current latest stable versions of Vue.js (^2.5.17) and Vuetify (^1.1.9) and vue-router's version is ^3.0.1 so maybe that's why it works for me. Great tutorial, love the calm voice and your \"nock\" habit. I think I got this habit too watching this series! :)", "likes": 0}}, {"topLevelComment": {"author": "george Iosifelis", "text": "congrats on the tutorial.  its really good.  I found a bug.  In the \"hooks\", I had to comment the \"beforeSave: hashPassword\", because the comparePasswords was ALWAYS giving false.  Both, the beforeCreate and beforeSave hooks run which created 2 hash values.   The beforeSave was saved in the db BUT the beforeCreate was used in the comparePassword which made the validation ALWAYS false.  Anyway,  i commented out the beforeSave and it works.  cheers.  \n\nOOPS, someone else had mentioned it also, i guess i should had read all the comments.", "likes": 13}, "replies": [{"author": "Riza Khan", "text": "Are you able to explain how you came to the conclusion that that particular hook was causing the issue?\n\nThanks,", "likes": 0}, {"author": "Amit Kumar Soni", "text": "thanks man \n\nHelped a lot", "likes": 0}, {"author": "Mauro Insacco", "text": "Thank you so much", "likes": 0}, {"author": "Elbani Othman", "text": "god bless you ;_;", "likes": 1}, {"author": "\u0421\u0435\u0440\u0433\u0435\u0439 \u041a\u043e\u043b\u043f\u0430\u043a\u043e\u0432", "text": "Thanks mate\nHad same issue.", "likes": 0}]}, {"topLevelComment": {"author": "Maximilian Berkmann", "text": "Instead of having that whole block with `const isPasswordValid = ...` while don't you just do this in the try block:\n```\nconst {email, password} = req.body\n      const user = await User.findOne({\n        email,\n        password\n      })\n      if (!user) {\n        throw 'incorrect' //this should go straight to the catch to keep the code DRY\n      }\n      res.send(user.toJSON())\n```\nThis way it will be more efficient (fewer computations and less complexity), easier to read, smaller in terms of file size and straight-forward?\n\nI also wonder why you initialise constants inside functions when they are going to be used several times especially when there's no risk putting it outside (while remaining in the component)?\n\nSide notes: A lot seems to have changed this tutorial was made so a good portion of the methods and packages used are deprecated.\nAnd the\n```if (token) {\n  state.isUserLoggedIn = true\n} else {\n  state.isUserLoggedIn = false\n}\n```\nCould reduced to `state.isUserLoggedIn = !!token` or `state.isUserLoggedIn = Boolean(token)` or the ternary equivalent.", "likes": 0}}, {"topLevelComment": {"author": "Incorporar!", "text": "If you have problems with the password after change the hooks, remember to change or create the methods (register to login) in client: Login.vue    and   AuthenticationService.js", "likes": 1}, "replies": [{"author": "Boris", "text": "Hi \ndo you have a code sample for Login.vue \nIn backend I can register but in frontend I got a bad password every time \n:/", "likes": 0}]}, {"topLevelComment": {"author": "szach gr", "text": "comparePassword always returns false. Who have the correct code ? :)", "likes": 0}, "replies": [{"author": "Umar Faruq", "text": "Thank you for your information. You help me", "likes": 0}, {"author": "szach gr", "text": "In hooks we should just keep only this hooks: {\n            beforeSave: hashPassword,\n        } and it will be works ! :)", "likes": 0}]}, {"topLevelComment": {"author": "Sandiso Toto - Slow Jam SA (Deep House)", "text": "OMG it's a bug!!!!! I need help please, I can't insert using `User.create(req.body)`. See: https://stackoverflow.com/questions/50824126/sequelize-create-typeerror-cannot-read-property-apply-of-undefined", "likes": 0}}, {"topLevelComment": {"author": "Rost M", "text": "cannot for the life of me get User.prototype.comparePassword to work...f this, switching to OAuth", "likes": 1}, "replies": [{"author": "Sandiso Toto - Slow Jam SA (Deep House)", "text": "We might be having the same issue. have you resolved your issues? I can't insert using `User.create(req.body)`. See: https://stackoverflow.com/questions/50824126/sequelize-create-typeerror-cannot-read-property-apply-of-undefined", "likes": 0}]}, {"topLevelComment": {"author": "Tony Branze", "text": "There is a bug in the password hashing, beforeCreate, beforeUpdate, and beforeSave hashes the pass twice. causing incorrect hash when attempting to log in. I use before create before update and this is working.", "likes": 2}, "replies": [{"author": "Sabbir Ahmed", "text": "I faced the same problem. Thank you!!!", "likes": 0}]}, {"topLevelComment": {"author": "Cristian Echeverria", "text": "By far this is the best Fullstack with Javascript + VueJs I had ever seen, it covers a lot of subjects from setup the server, Secure Auth with Json Web Tokens and much more, indeed because of the updates to VueJs and VuetifyJs I had made a few changes in order to keep track the videos.", "likes": 24}}, {"topLevelComment": {"author": "Maskful Twitch", "text": "Doing this on 5/31/2018 and the password doesn't even get hashed in the database on sign-up anymore. Along with all the other issues I'm seeing people having I think changes to sequelize, bcrypt may have broken this step. A quick re-visit to this issue if a solution is known would save a great many headaches.", "likes": 0}, "replies": [{"author": "Parth Patel", "text": "nvm. After replacing the hooks part with everything written here and hours of debugging, I figured out it was an issue with my jwt sign function. It works fine now!", "likes": 0}, {"author": "Parth Patel", "text": "Hi! I've been going through the same issue where I can register perfectly, but when I try to login I keep getting a 500 internal server error (from the catch block in authenticationController.js) even though I am using the exact same credentials. I got rid of bcrypt-nodejs and am only using the beforeSave hook with everything that you wrote, but I still keep getting the same error. I dont know what I'm doing wrong..", "likes": 0}, {"author": "Maskful Twitch", "text": "Here is how I have my code set up for your stack overflow question. You are trying to \"register\" a user there correct?\n\n\nasync register (req, res) {\n    try {\n      const user = await User.create(req.body)\n      const userJson = user.toJSON()\n      res.send({\n        user: userJson,\n        token: jwtSignUser(userJson)\n      })\n    } catch (err) {\n      res.status(400).send({\n        error: 'This email account is already in use.'\n      })\n    }\n  }", "likes": 0}, {"author": "Maskful Twitch", "text": "Hey Sandiso, in order to get this to work I am using bcryptjs instead of bcrypt-nodejs. Bcrypt-nodejs hasn't been updated in around 5 years according to their npm page. Also, like many have said some of the hooks aren't behaving as is understood from the video. I am only using the beforeSave hook and everything is working fine for my project.\n\nHere is a link to the bcryptjs npm page: https://www.npmjs.com/package/bcryptjs follow their instructions for using async hashing. You can keep Bluebird and just PromisfyAll the bcryptjs like we did in the tutorial. If you can't get it working with that change I can post some code as well.\n\nEdit: Here is how I have my hashPassword function set up:\n\nconst Promise = require('bluebird')\nconst bcrypt = Promise.promisifyAll(require('bcryptjs'))\n\nfunction hashPassword (user, options) {\n  if (!user.changed('password')) {\n    return\n  }\n\n  return bcrypt.hash(user.password, 8, null)\n    .then(hash => {\n      user.setDataValue('password', hash)\n  })\n}\n\nThen here is how I have my comparePassword function structured:\n\nUser.prototype.comparePassword = function (password) {\n    return bcrypt.compare(password, this.password)\n  }\n\nLemme know if it works for you or not.", "likes": 0}, {"author": "Sandiso Toto - Slow Jam SA (Deep House)", "text": "Please let me know if you've managed to solve this issue.", "likes": 0}]}, {"topLevelComment": {"author": "Tess Porter", "text": "I keep getting a message about new emails already existing in my database when trying to register. Any clues as to how i could fix this?", "likes": 4}, "replies": [{"author": "Arnold", "text": "I found the solution here:\nusethisonelol\r\nSukhchain Singh  Here you go buddy,\n\nhttps://gist.github.com/rGustave07/dddb72b8331b4b033ea54d5d5cf559b3", "likes": 1}, {"author": "Arnold", "text": "I am experiencing the same problem too.", "likes": 0}]}, {"topLevelComment": {"author": "Chris Donlon", "text": "I get an error \"Uncaught (in promise) TypeError: Cannot read property 'data' of undefined\" \nCan anyone help? I cant seem to find the answer\n\n\nimport AuthenticationService from '@/services/AuthenticationService'\nexport default {\n  data () {\n    return {\n      email: '',\n      password: '',\n      error: null\n    }\n  },\n  methods: {\n    async register () {\n      try {\n        await AuthenticationService.register({\n          email: this.email,\n          password: this.password,\n          error: this.error\n        })\n      } catch (error) {\n        this.error = error.response.data.error\n      }\n    }\n  }\n}", "likes": 0}}, {"topLevelComment": {"author": "Sebastien Tranchant", "text": "Very good series, thank you so much.\nAbout the toolbar, I guess the best solution is to use the \"tag\" directive to define the v-btn :\n<router-link tag=\"v-btn\" class=\"btn--flat\" to=\"signup\">Sign up</router-link>\nI just needed to add the class \"btn--flat\" for a better styling", "likes": 0}}, {"topLevelComment": {"author": "Michael Cortez", "text": "At 18:00, instead of <router-link> with vue-router, vuetify allows you to declare your route within <v-btn>. Such as, <v-btn to =\"register\">", "likes": 1}}, {"topLevelComment": {"author": "\u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0412\u043e\u0440\u043e\u0431\u044c\u0451\u0432", "text": "There is a cool extension :\nhttps://marketplace.visualstudio.com/items?itemName=sdras.vue-vscode-snippets\nNot to copy other component structure every time. Just type `vbase`, hit tab and here you are ready to go with blank tepmplate. The same with `vdata`, etc.", "likes": 1}}, {"topLevelComment": {"author": "Vitaly Schekin", "text": "Vuex.Store {strict: true} property is HIGHLY NOT recommended to using in production. Use it only for development! Check the vuex docs for more information.", "likes": 0}}, {"topLevelComment": {"author": "schondla", "text": "Thank you for the wonderful tutorial. I am not sure why is bcrypt.compareAsync always returning false for me?", "likes": 0}, "replies": [{"author": "Shenyu Li", "text": "@Emilio M.L perfect!", "likes": 0}, {"author": "Parth Patel", "text": "Hi! I've been going through the same issue where I can register perfectly, but when I try to login I get a 500 internal server error (from the catch block in authenticationController.js) even though I am using the exact same credentials. I got rid of bcrypt-nodejs and bluebird and am only using the beforeSave hook with everything that you wrote, but I still keep getting the same error. I dont know what I'm doing wrong..", "likes": 0}, {"author": "Emilio M.L", "text": "solution for bcrypt.compare always false:\n1 - npm install --save bcryptjs\n2 - remove bluebird and bcript-nodejs\n\nin User.js:\n\nasync function hashPassword (user, options) {\n  const SALT_FACTOR = 8\n\n  if (!user.changed('password')) {\n    return\n  }\n  const genSalt = await bcrypt.genSalt(SALT_FACTOR)\n  const hash = await bcrypt.hash(user.password, genSalt)\n  user.setDataValue('password', hash)\n}\n\n***********************\n\nUser.prototype.comparePassword = function (password) {\n    return bcrypt.compare(password, this.password)\n }\n\n\nIn AuthenticationController.js:\n\nconst isPasswordValid = await user.comparePassword(password)\n      if (!isPasswordValid) {\n        return res.status(403).send({\n          error: 'The login information was incorrect'\n        })\n      }\n\nhope it helps to continue this fantastic course!", "likes": 2}]}, {"topLevelComment": {"author": "moxistarcraft", "text": "Thank you, this is the best web dev tutorial series I ever got to see on youtube!", "likes": 0}}, {"topLevelComment": {"author": "maxnair", "text": "I found the order in which all hooks are called:\n\n(1)\n  beforeBulkCreate(instances, options, fn)\n  beforeBulkDestroy(options, fn)\n  beforeBulkUpdate(options, fn)\n(2)\n  beforeValidate(instance, options, fn)\n(-)\n  validate\n(3)\n  afterValidate(instance, options, fn)\n  - or -\n  validationFailed(instance, options, error, fn)\n(4)\n  beforeCreate(instance, options, fn)\n  beforeDestroy(instance, options, fn)\n  beforeUpdate(instance, options, fn)\n(-)\n  create\n  destroy\n  update\n(5)\n  afterCreate(instance, options, fn)\n  afterDestroy(instance, options, fn)\n  afterUpdate(instance, options, fn)\n(6)\n  afterBulkCreate(instances, options, fn)\n  afterBulkDestroy(options, fn)\n  afterBulkUpdate(options, fn)\n\nhttp://sequelize.readthedocs.io/en/v3/docs/hooks/", "likes": 1}}, {"topLevelComment": {"author": "Monika Kaltenyt\u0117", "text": "Is it common practice to put html, script and style all in component? e.g. in angular you had view, controller and style file, all were separate and here in component we put everything together? That's been confusing me for a while", "likes": 0}, "replies": [{"author": "Tendies", "text": "I think that's how things are done in Vue", "likes": 0}]}, {"topLevelComment": {"author": "Yujun Liu", "text": "Hi Guys, I'm taking this course right now(3/4/2018), and the solution from @greddee in 2 month ago doesn't work for me anymore, if I just left beforeSave:hashPassword, the password is not hashed and store in DB as text. My sequelize version is 4.35.2 and sqlite3 version is 3.1.13. My solution is basically removing beforeUpdate, and leave beforeCreate and beforeSave. It works perfectly for me now.", "likes": 1}, "replies": [{"author": "Le Segretain Maxime", "text": "I commented ouf beforeSave: hashPassword and it worked perfectly for me ! and i'm using similar versions to yours, did you tried that out ?", "likes": 0}]}, {"topLevelComment": {"author": "wasddd_", "text": "Are you aware of the fact that a user can login without a password? I think the issue lies here: \nconst user = await User.findOne({\n                where: {\n                    email: email\n                }\n            });\n\nIt seems to me that you're only checking for the user email in the database, is this correct?", "likes": 0}}, {"topLevelComment": {"author": "YesImHere", "text": "First off, fantastic tutorial!  Thank you so much.  For those just starting in section 2 and section 3 styling changes.  You need to put the default tags in.  Go back to the Vuetify web site and look at Quick Start.  Basically <router-view/> would be where Hello World is in the sample.\n\nThis was all fixed by Cody at 11:30 in section 3.  But if you're at the same point I am then this will drive you nuts!", "likes": 0}}, {"topLevelComment": {"author": "TechSquidTV", "text": "41:39 I am having the same issue as you but mine didn't go away. I delete and readded the DB just to be sure. any ideas? https://github.com/KyleTryon/Shoutify", "likes": 0}}, {"topLevelComment": {"author": "lanre ola", "text": "After inserting this code  res.send({\n      user: userJson,\n      token: jwtSignUser(userJson) to the register in the autenticationcontroller.js, the register has been giving me error saying the account is already in use. Help is needed.", "likes": 3}, "replies": [{"author": "maxnair", "text": "try this, \nsequelize.sync({\n    force: true,\n})\n but don't use 'force:true' in production, as it drops the table and its data.", "likes": 1}]}, {"topLevelComment": {"author": "Squagem", "text": "How does Bcrypt remember the salt value that was used when un-encrypting passwords?", "likes": 0}, "replies": [{"author": "Louis J.", "text": "It is stored in the hash string. From wikipedia: \"the hash string includes the cost parameter, a 128-bit salt [...], and 184 bits of the resulting hash value\".", "likes": 0}]}, {"topLevelComment": {"author": "J Pike", "text": "Wow I couldn't get the User.prototype.comparePassword() to work at all.  Always returned false.  Even if the password and hash looked fine in and out.  After a bunch of fruitless debugging I found that eliminating the beforeSave:HashPassword hook was causing the headache.  Not sure how but when I took that out everything worked.  If I just left that in and took the other hooks out it also worked so there is some bad double hashing or other issue going on.  Also somehow I completely missed where you put the function user.change() so that was another hiccup.  Just made a function to always return true for now.", "likes": 4}, "replies": [{"author": "BaxterGames", "text": "Umar Faruq glad to help mate!", "likes": 0}, {"author": "Umar Faruq", "text": "@BaxterGames you are awesome brother. Thank you for your explanation", "likes": 1}, {"author": "BaxterGames", "text": "that's not correct, it work until you update the user, that's the point, those hooks, means that before you create or update a document, it runs those hooks, so in case of a POST or a PUT/PATCH they get run, and hash the password. So for you work cause you don't update the user doc, but when you do it, it will fail.", "likes": 1}, {"author": "Xiaosong Fang", "text": "maybe beforeCreate and beforeUpdate hashing that plain password twice,remove beforeCreate everything turns normal", "likes": 0}, {"author": "BaxterGames", "text": "it should mate, check the whole code, maybe is something else.", "likes": 1}]}, {"topLevelComment": {"author": "Pavel Kunitsky", "text": "Hey, Cody. Vue Actions are for async functions, you don't have to use actions to commit unless you have async code", "likes": 0}, "replies": [{"author": "MadGamer", "text": "How would you initiate a store save without using actions? will .dispatch call the mutations instead of actions if there are no actions defined?", "likes": 0}]}, {"topLevelComment": {"author": "greddee", "text": "I might be the only one that couldn't log in even though the password was correct. In my case having all three hooks beforeCreate, beforeUpdate, beforeSave assigned to the hashPassword-function somehow did a double hash on my password. \n\nTo resolve this I only had the hook beforeSave: hashPassword.", "likes": 105}, "replies": [{"author": "goblin", "text": "i could kiss you right now", "likes": 0}, {"author": "Jeevan sira manjunath", "text": "OMG you are my savior ,because of u i completed this task. i think i am the one who is doing this tutorial in 2020.", "likes": 0}, {"author": "Criss Zahid", "text": "Thanks Dude .. u Rock ;)", "likes": 0}, {"author": "Peter Ulev", "text": "@Nicholas Damian  thanks man", "likes": 0}, {"author": "Albert Clemente", "text": "Thanks a lot man! I checked the entire video and the code for two times and was exactly the same. I saw the double hash, but I never thought it was at this point!!!", "likes": 0}]}, {"topLevelComment": {"author": "Hoikan Chan", "text": "Hi,thx so much for the tutorials.But I got in a trouble I can't solve it for a few days.\nbcrypt can't compare my correct password and it always return false when comparing the psw.\nI even cloned your project in github and run it ,but met the same situation.\nCan you tell me how to do with it?", "likes": 0}, "replies": [{"author": "J\u00f6rg M\u00fcller", "text": "I have the same issue. Tried to added some code to achieve the goal, but doesnt worked :( Thanks for the hints guys!", "likes": 0}, {"author": "ST", "text": "4.37.6 removing the hooks work fine, thankyou.", "likes": 0}, {"author": "Tyler Williams", "text": "This fixed it for me and many others (Remove the hooks for beforeupdate and beforecreate", "likes": 0}, {"author": "Waymoot", "text": "This solution works for the latest version (4.29.3) of sequelize. \nYou can also downgrade to the version Cody uses (4.8.0) and then you do not have to update the code.", "likes": 0}, {"author": "Rafa\u0142", "text": "Remove beforeCreate and beforeUpdate from hooks in User.js. There is bug where compared password is hashed two times", "likes": 7}]}, {"topLevelComment": {"author": "Ibrohim Hanafi", "text": "hello, \ncan anyone fix this error \"Error: Please install sqlite3 package manually\"\ni was updated or downgrade node with nvm but still error, i was reinstall depend package still errror, \nyesterday sqlite success run, but now error again.. :(", "likes": 1}, "replies": [{"author": "Zaid Saeed", "text": "delete node_modules from the server side and type npm install after in terminal from the server side that should fix it. I think installing the old version of jsonwebtoken ruins the node_modules folder.", "likes": 0}, {"author": "wasddd_", "text": "make sure you have all the installed packages inside of your node_modules folder. that fixed it for me because sequelize was missing.", "likes": 0}, {"author": "Jojo W", "text": "I had that error too, as i installed a new version of node. just type \"npm install --save sqlite3\" and it should work again. Make sure you have the current version of node and npm", "likes": 0}, {"author": "Ibrohim Hanafi", "text": "RTW590 ok, i will try it", "likes": 0}, {"author": "RTW590", "text": "I just did \"npm install --save jsonwebtoken sqlite3@3.1.8\" and I think I am back on track. Try that in the in the server directory in the command line", "likes": 1}]}, {"topLevelComment": {"author": "Nathan Alder", "text": "Why is it /#/login instead of just /login ? Is it possible to change that?", "likes": 0}, "replies": [{"author": "Maximilian Berkmann", "text": "Single Page Application.", "likes": 0}, {"author": "Danko Petrovic", "text": "yes, just put mode: history in router before you define all routes.\n\nLike this:\nconst router = new VueRouter({ \nmode: 'history', \nroutes: [...] })", "likes": 2}, {"author": "shinobu", "text": "it's a SPA and not a true route", "likes": 0}]}, {"topLevelComment": {"author": "Mayank Singh Fartiyal", "text": "how are we passing values to hashPassword Function in models/user.js", "likes": 1}}, {"topLevelComment": {"author": "Mayank Singh Fartiyal", "text": "from where are we passing value to DataType parameter in user.js model?", "likes": 0}}, {"topLevelComment": {"author": "rojimark", "text": "thank you so much! I decided to use Materialize CSS instead of Vuetify though. router-link works flawlessly too", "likes": 0}}, {"topLevelComment": {"author": "Koodauskanava", "text": "403 is not proper status code to send in this case, it should be 401. Please read the documentation.", "likes": 0}}, {"topLevelComment": {"author": "Pablo Vent", "text": "This excellent article: https://medium.freecodecamp.org/why-your-browsers-autocomplete-is-insecure-and-you-should-turn-it-off-ebc73d7bcefd\nshows why chrome's autocomplete can be dangerous; basically, a hacker can hide form input fields on a web page, which Chrome will then fill in with your personal information if you opt to use its autocomplete feature.", "likes": 1}}, {"topLevelComment": {"author": "Maxime ROMA", "text": "Thanks great job!", "likes": 0}}, {"topLevelComment": {"author": "Raptor 121", "text": "Hi thank you for the great tutorials I learned a lot from you so far.\nAny the docs say you must do it this way..\n<v-toolbar-items>\n          <v-btn \n          flat \n          dark\n          router\n          to=\"register\"\n          >Sign Up</v-btn>\n      </v-toolbar-items>", "likes": 37}, "replies": [{"author": "Dominic Lapitan", "text": "thank you!", "likes": 0}]}, {"topLevelComment": {"author": "Alex Titarenko", "text": "Amazing", "likes": 0}}, {"topLevelComment": {"author": "MEXdave1997", "text": "Hey all, som I'm back with another question. I get to the end, and when I look at the server response on my terminal, I get this error: \"Unhandled rejection Error: Not a valid BCrypt hash.\". Anyone else get this and was able to fix it?", "likes": 0}, "replies": [{"author": "MEXdave1997", "text": "im gonna run through the tutorial from the beginning again, because I was having some weird thing with autocompletion in VSCode as well...", "likes": 0}, {"author": "Marco Ant\u00f4nio", "text": "Maybe it's a typo.. I had that error too, was a error in the bcrypt part. Also, you need to force: true", "likes": 1}]}, {"topLevelComment": {"author": "locky_", "text": "Hello! I have a quick question. Every time I save my code, my DB gets wiped - like you would do with .sync({ force: true }). Is this a normal behavior?", "likes": 0}, "replies": [{"author": "locky_", "text": "ok. fiexed the issue. I had a typo in database config... ;)", "likes": 0}, {"author": "locky_", "text": "I had no arguments passed to sync. However, when added {force: false} the issue still occurs.", "likes": 0}]}, {"topLevelComment": {"author": "Priyanka Madiraju", "text": "Thanks for the elaborate tutorial. Here, both the login and register seem to have similar code and making a change at one place and forgetting the other might create problems. Is there any way to write a common component to which we can be reused for both Login and Register components.", "likes": 0}}, {"topLevelComment": {"author": "Priyanka Madiraju", "text": "I get the error \"secretOrPrivateKey must have a value\" while trying to login. Register works fine and hash is being generated correctly.  One question is, while inserting the user we are saving the hash in the database. But, while comparing in the comparePassword we pass the plain user given password to compare against the hashed password. How does this work?", "likes": 0}}, {"topLevelComment": {"author": "Non Chalant Don", "text": "Thanks so much for these tutorials. I haven't a lot of experience with password hashing, etc. So when the user logs in, the body of the post request is going to have the regular, un-hashed password. After querying for that user, by using the email address, we're checking if the password is valid by calling user.comparePassword, sending in the un-hashed password as an argument as far as I can tell. But the database presumably has the hashed password stored? Is that what the \"token\" is used for? To convert the hashed password back to its regular form so they can be compared? Hopefully I'm making sense. Just a little confusion I was hoping you could clear up. Otherwise, awesome tutorial!", "likes": 0}, "replies": [{"author": "Non Chalant Don", "text": "Very good. Thank you. I'll follow up and dig a little further into the topic on my own. You're doing an awesome job. Just starting part 4. Coming along nicely!!", "likes": 0}]}, {"topLevelComment": {"author": "Por Soon", "text": "I wonder if its gonna be easier if using passport to handle all the authentication stuffs?", "likes": 0}}, {"topLevelComment": {"author": "\u0160tefan Jarina", "text": "You can also use instead of \"dark\" just \"color--text\" class so e.g. the toolbar will be <v-toolbar flat dense class=\"cyan white--text\">  -- this allows for better fine tuning of text colors", "likes": 1}}, {"topLevelComment": {"author": "Pablo Vent", "text": "Hey Cody, just by entering <v-spacer></v-spacer> were you able to get that signup button all the way to the right?", "likes": 1}}, {"topLevelComment": {"author": "Raphael Akpan", "text": "As per the workaround for styling `vue-router` done on 18:00 - 19:15, you can simply use `router-link` and just add a class of `btn` to style it exactly like a button:\n\n`<router-link to=\"login\" class=\"btn cyan\">Log In</router-link>`", "likes": 8}, "replies": [{"author": "j vr", "text": "In that case -> v-on:click.native='function' instead of @click='function'", "likes": 0}, {"author": "Justinas R", "text": "or use a tag option:\n<router-link :to=\"{ name: 'register' }\" tag=\"v-btn\" class=\"btn btn--flat theme--dark\"> Sign Up </router-link>\n(p.s. the solution from https://stackoverflow.com/questions/45638239/enclosing-a-router-link-tag-in-a-button-in-vuejs)", "likes": 2}]}, {"topLevelComment": {"author": "Gil", "text": "Thank you so much with this more advanced tutorial. Often, I read the doc, make a small prototype and when facing a real project I have issues to link the dots... It looks like this to me : http://i.huffpost.com/gen/482429/HOW-TO-DRAW-A-HORSE.jpg\n\nAlso I was kind of scared watching the video because the password was recorded in plain text. And I was like \"Please, No ! Don't teach us that !!!\". And my son came into the room asking for something so I wasn't really listening but when I heard the keyword 'bcrypt', I was relieved...", "likes": 0}}, {"topLevelComment": {"author": "Foo Bar", "text": "Accessing the state directly is considered a bad practice, instead you should use getters :)", "likes": 0}, "replies": [{"author": "freeCodeCamp.org", "text": "is mapState() acceptable for this as well instead of getters?", "likes": 1}]}, {"topLevelComment": {"author": "Kraulain", "text": "I am really enjoying everyone of these. Thanks a million", "likes": 5}}, {"topLevelComment": {"author": "Roberto Garcia", "text": "thank you for this content", "likes": 0}, "replies": [{"author": "freeCodeCamp.org", "text": "sure thing!", "likes": 0}]}, {"topLevelComment": {"author": "Ayorinde Adesugba", "text": "Hi, great classes. You can use <v-btn flat to=\"register\"></v-btn>", "likes": 13}, "replies": [{"author": "Alberto Gait\u00e1n", "text": "Thanks for the tip! I did this and it applied the active style to the button. According to https://stackoverflow.com/a/47886970/3788069 you can suppress that by writing it as <v-btn flat dark to=\"register\" active-class>Signup</v-btn>", "likes": 0}, {"author": "Dominik Grie\u00dfer", "text": "Someone give that man - or women - a cookie. And a full jar at that. :D", "likes": 0}, {"author": "Ayorinde Adesugba", "text": "Sometimes we want <router-link> to render as another tag, e.g <li>. Then we can use tag prop to specify which tag to render to, and it will still listen to click events for navigation.\n\n\u00a0 <router-link to=\"/foo\" tag=\"li\">foo</router-link>\n\u00a0 <!-- renders as -->\n\u00a0 <li>foo</li>\n\nhttps://router.vuejs.org/en/api/router-link.html", "likes": 1}, {"author": "Ayorinde Adesugba", "text": "It is documented in the API section of https://vuetifyjs.com/components/buttons. I removed the erroneous 'router' in the code I sent :-)", "likes": 0}, {"author": "freeCodeCamp.org", "text": "any clue where is that defined in the docs?", "likes": 0}]}]}