{"video": {"id": "vPEJSJMg4jY", "title": "Recursion in software development", "description": "To understand recursion you must first understand recursion. This video will help you do just that! Learn how recursion works with flowcharts and code. The code is in Python but the concepts apply to any programming language.\n\nRecursive functions have a base case and recursive case. Watch out for infinite loops!\n\nThis video is part of a course called 'Algorithms in Motion' from Manning Publications. You can get it here: https://www.manning.com/livevideo/algorithms-in-motion?a_aid=algmotion&a_bid=9022d293\n\n\u00a0--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.com\n\nRead hundreds of articles on technology: https://medium.freecodecamp.com\n\nAnd subscribe for new programming videos every day: https://youtube.com/subscription_center?add_user=freecodecamp", "duration": "PT5M13S", "likes": "1570", "views": "85876"}, "comments": [{"topLevelComment": {"author": "Jelaleddin Nargulyew", "text": "good\u2764\u2764\u2764", "likes": 0}}, {"topLevelComment": {"author": "Chris Markel", "text": "This was extremely helpful for me and I really appreciate your approach! I was having difficulty relating this to the behavior of the call stack and you explain in a way that completely makes sense. Thank you!", "likes": 0}}, {"topLevelComment": {"author": "TKR Store", "text": "a face to the voice =D", "likes": 0}}, {"topLevelComment": {"author": "Robert Cross", "text": "great general description, but I'm still confused about the freecodecamp problem haha. I do really appreciate this though.", "likes": 2}}, {"topLevelComment": {"author": "Albert Dang", "text": "So no one's gonna talk about how he just ended the video like that?", "likes": 1}}, {"topLevelComment": {"author": "Kartik Chauhan", "text": "Thanks you so much", "likes": 0}}, {"topLevelComment": {"author": "Schmetter Ling", "text": "Recursion is what amateurs do before they discover that stacks are neither deep nor overflow safe. Then their first recursive ten-liner bombs and they become better programmers who will avoid recursion in the future because they will have learned that most machines and compilers are not really suitable for it.", "likes": 1}}, {"topLevelComment": {"author": "Fredrik Sinaga", "text": "So it is you who guide me thru the js course! nice to see you!", "likes": 0}}, {"topLevelComment": {"author": "J\u00f3n Hj\u00f6rtur Brj\u00e1nsson", "text": "Saw the thumbnail. Can't stop watching the video over and over.", "likes": 0}}, {"topLevelComment": {"author": "Gods Prodigee", "text": "FINALLY, I cant tell you how difficult it was for me to grasp this concept. People just stating factorial n was driving me nuts.", "likes": 0}}, {"topLevelComment": {"author": "Frostbyte333", "text": "im not even using this language but you explained it so well that i could input it into the language of code that im using", "likes": 2}}, {"topLevelComment": {"author": "TheTower", "text": "Bro i love your tutorial videos but your damn eyes man xD", "likes": 0}}, {"topLevelComment": {"author": "Mauri", "text": "Great, it is like a summary of the book Grokking Algorithms", "likes": 0}}, {"topLevelComment": {"author": "Getting1st", "text": "You guys explain things so easily, even a C grade holder CS student will end up improving if taught such way in the univ.", "likes": 2}}, {"topLevelComment": {"author": "X", "text": "Even after getting to the next task on the website, I still don't know what this even is or how it works. I feel like an idiot.", "likes": 2}, "replies": [{"author": "Gerald", "text": "same dude.", "likes": 1}]}, {"topLevelComment": {"author": "Daniya Haider", "text": "3:48 what's best case u did'nt tell", "likes": 0}}, {"topLevelComment": {"author": "Deepa S", "text": "This is the same example from the \u201c\nGrokking Algorithms: An Illustrated Guide for Programmers and Other Curious People\u201d book", "likes": 0}}, {"topLevelComment": {"author": "Halfjera", "text": "'pseudocode'\n- uses python", "likes": 0}, "replies": [{"author": "Schmetter Ling", "text": "Pseudocode was used in the past because most people didn't have access to an actual computer. To use pseudocode today is like living in grandpa's computer museum of unfulfilled computer ownership dreams. It's the 21st century. Let's use a real language that is available on most mainstream computing platforms.", "likes": 0}]}, {"topLevelComment": {"author": "Hoda Khosravi", "text": "Finally, understand it. really thanks.", "likes": 0}}, {"topLevelComment": {"author": "P T", "text": "What's in the box? What's in the fucking box?!", "likes": 0}}, {"topLevelComment": {"author": "betul", "text": "thx", "likes": 0}}, {"topLevelComment": {"author": "Doug Perez", "text": "I ALWAYS understand all of your content. Love your style of teaching.", "likes": 2}}, {"topLevelComment": {"author": "Manoj Jadhav", "text": "Thanks, buddy for such a simple explanation.", "likes": 0}}, {"topLevelComment": {"author": "max zaranik", "text": "\u0421\u043f\u0430\u0441\u0438\u0431\u043e, \u043d\u0430\u0447\u0438\u043d\u0430\u044e \u043f\u043e\u043d\u0438\u043c\u0430\u0442\u044c", "likes": 0}}, {"topLevelComment": {"author": "yatra anant", "text": "Thank you \ud83d\ude4f\ud83c\udffd \nNow I understood recursion\ngood example", "likes": 0}}, {"topLevelComment": {"author": "Aar\u00f3n Argotte L\u00f3pez", "text": "Great!", "likes": 0}}, {"topLevelComment": {"author": "ansh satwani", "text": "Steve Jobs returned from dead to teach recursion", "likes": 16}, "replies": [{"author": "Maxawe Some", "text": "Almost fooled me, but I know it's not zombie Steve Jobs, because he couldn't code.", "likes": 0}, {"author": "Milo\u0161 Leng", "text": ":DDDDDDDD I died", "likes": 0}]}, {"topLevelComment": {"author": "John Mix", "text": "Thank you freeCodeCamp!!!", "likes": 0}}, {"topLevelComment": {"author": "Aar\u00f3n Argotte L\u00f3pez", "text": "<3", "likes": 0}}, {"topLevelComment": {"author": "Temicka", "text": "Geez, I still dont get it. Help", "likes": 25}, "replies": [{"author": "09TYPER", "text": "The key is,dont look down.Instead,reproduce a one or two step ahead about how to solve the problem,generalize it and get the recurrent relation.If it requires multiple recursion steps,drawing the recursion tree might help.", "likes": 1}, {"author": "Anna", "text": "@Dorian Crutcher yes exactly", "likes": 0}, {"author": "Dorian Crutcher", "text": "\u200b@Anna  \nHmm the first return would get \n\nsum([2,3,4],1-1)+arr[1-1]\n\nwhich is \n\nsum([2,3,4],0)+2\n\nthe function gets called again \n\nso maybe I can plug in 0 for sum([2,3,4],0) and get \n\n0+2 and return that to the top level function. \n\nIs this what you're saying?", "likes": 0}, {"author": "Anna", "text": "@Dorian Crutcher I think I figured it out but let's see if I can make sense explaining it! As n=1 it goes through the function and it returns Sum( [2,3,4,] - (1-1) + arr[0] which equals Sum( [2,3,4])-0 + 2 . Then the second time n=0 and it returns the base case, so 0. In then end 0+2=2....  I hope I didn't make a worse mess in my brain..", "likes": 1}, {"author": "Dorian Crutcher", "text": "@Anna wow this is a great brain teaser. Looking at it immediately it should return 0 but instead it returns 0 + the values it calls from the array which is 0+2 in the case of n=1 \n\nn=2 would result in 5 \n\nIt looks like it adds the value to what ever variable it was called to. Instead of overwriting it. \n\nI'm going to sit with this a bit longer", "likes": 0}]}, {"topLevelComment": {"author": "Bruce Lee", "text": "3:20, I don't get it, the python engine records all lines except for 4 first? (Code on the right)", "likes": 1}, "replies": [{"author": "Ares Xena", "text": "I don't think it's meant to literally be Python, just pseudocode.", "likes": 4}]}, {"topLevelComment": {"author": "Thomas Just", "text": "This sr is a good example, thanks", "likes": 2}}, {"topLevelComment": {"author": "sci fi vampire", "text": "I totally don't get this. function sum(arr, n) {\n\nif ( n <= 0){\n  return arr[0];\n}\nelse {\n  return sum(arr, n -1) + arr[n];\n}\n\n}\nsum([1],0);     the answer being one? Since  we pass in 0 and zero is n, wouldn't this return immediately and not run the else statement?", "likes": 0}, "replies": [{"author": "Eduardo Morales", "text": "it does end on the if block without getting on the else block  (in the case of 'sum( [ 1 ] , 0 )'):\nsum( [ 1 ] ,0 ) -> n=0 then it gets inside the if statement and returns the array element at index [0] = (1).", "likes": 1}, {"author": "Cody Bullis", "text": "@Dani Zamorano on this same problem", "likes": 0}, {"author": "Dani Zamorano", "text": "I don\u00b4t get this problem either. I just understand the first part, where if n <= 0, it returns the first index value of the array. The rest, I got lost.", "likes": 4}]}, {"topLevelComment": {"author": "Aar\u00f3n Argotte L\u00f3pez", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "lucas lima", "text": "everyone at the comment section is so smart..", "likes": 0}}, {"topLevelComment": {"author": "Andr\u00e9 Toscano", "text": "It's not pseudocode, it's Python 2. And further you called it \"script\".", "likes": 0}, "replies": [{"author": "Thomas Just", "text": "Nope dude it is pseudocode, I use it all the time, so do a lot of folks in the office", "likes": 4}]}, {"topLevelComment": {"author": "Jesus", "text": "Also don`t call python realization as pseudo code..", "likes": 3}, "replies": [{"author": "Forest River", "text": "You really made a channel claiming to be Jesus", "likes": 4}]}, {"topLevelComment": {"author": "Suhas darsi", "text": "Are there any cases in which we should avoid using recursion ?", "likes": 3}, "replies": [{"author": "xUNrealGamingx", "text": "Take a main game loop. You could either call the loop at the end of each cycle or use `while True:`. Both will work, but recursion will quickly crash because the function call is never ended properly. Recursion is memory-heavy and takes more CPU time, so if performance is an issue, consider switching to a loop(especially with infinite/very long loops.).", "likes": 4}]}, {"topLevelComment": {"author": "RealToughCandy", "text": "What are your thoughts on recursion and its implementation being a basic concept for aspiring (not jr. at this point) devs? A few people I know have had interview questions at bootcamps wanting them to recursively search for something, etc.", "likes": 11}}, {"topLevelComment": {"author": "Atharva Pagare", "text": "If you want to learn recursion you must learn recursion.", "likes": 162}, "replies": [{"author": "Srinjoy Ghosh", "text": "oops, your algorithm is an infinite loop !", "likes": 0}, {"author": "Diogoepronto", "text": "function learnRecursion( mind ) {\n   if( mind == \"I've learned recursion!\" ) {\n      return \"Finally!\";\n   }\n   return learnRecursion( mind + newContent );\n}", "likes": 5}, {"author": "Eddy Kagia", "text": "\ud83e\udd23 \ud83e\udd23 \ud83e\udd23 \ud83e\udd23 \ud83e\udd23 \ud83e\udd23", "likes": 0}, {"author": "Chris L", "text": "@ouf cena I for one appreciate your yu-gi-oh reference :)", "likes": 2}, {"author": "Abhishek Sankpal", "text": "Noice boi", "likes": 0}]}]}