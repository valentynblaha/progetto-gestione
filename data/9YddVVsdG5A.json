{"video": {"id": "9YddVVsdG5A", "publishedAt": "2017-04-22T17:27:52Z", "title": "Linked List - Beau teaches JavaScript", "description": "A linked list is a common data structure where elements are stored in a node. Learn about linked lists and how to implement them in JavaScript.\n\n\ud83d\udcbb Code: https://codepen.io/beaucarnes/pen/ybOvBq?editors=0011\n\n\ud83d\udd17 Info: https://medium.freecodecamp.com/a-gentle-introduction-to-data-structures-how-linked-lists-work-5adc793897dd\n\n\ud83d\udc26 Beau Carnes on Twitter: https://twitter.com/carnesbeau\n\n\ud83d\udd17 Check out Beau's algorithms course from Manning Publications: https://www.manning.com/livevideo/algorithms-in-motion?a_aid=algmotion&a_bid=9022d293\n\n\u2b50JavaScript Playlists\u2b50\n\u25b6JavaScript Basics: https://www.youtube.com/playlist?list=PLWKjhJtqVAbk2qRZtWSzCIN38JC_NdhW5\n\u25b6Data Structures and Algorithms: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ\n\u25b6Design Patterns: https://www.youtube.com/playlist?list=PLWKjhJtqVAbnZtkAI3BqcYxKnfWn_C704\n\u25b6ES6: https://www.youtube.com/playlist?list=PLWKjhJtqVAbljtmmeS0c-CEl2LdE-eR_F\n\u25b6Clean Code: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh\n\n-\nWe're busy people who learn to code, then practice by building projects for nonprofits. Learn Full-stack JavaScript, build a portfolio, and get great references with our open source community.\n\nJoin our community at https://freecodecamp.com\nRead great tech articles at https://medium.freecodecamp.com", "duration": "PT11M57S", "likes": "1155", "views": "87042"}, "comments": [{"topLevelComment": {"id": "UgwDT8NCJU-IE6xncpt4AaABAg", "publishedAt": "2022-12-04T00:13:30Z", "author": "Islam", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"id": "Ugxy59R76J-8LY7Xa3V4AaABAg", "publishedAt": "2022-09-09T13:01:54Z", "author": "Luminary Sports", "text": "Why do we use while loop to traverse the linked list. Is there not another way we can do that?", "likes": 0}}, {"topLevelComment": {"id": "UgwzhIMLOIcB1dBPigF4AaABAg", "publishedAt": "2022-08-17T01:15:07Z", "author": "johann suaanabar", "text": "something weird in the add code\r\nwhen I insert it does not give me this list displayed\nit doesn't show this in console\nconsole.log(lista)\r\nlista.add('Kitten')\r\nconsole.log(lista)\r\n\r\n// { _length: 0, head: null }\r\n// { _length: 1, head: { value: 'Kitten', next: null } }\n\n\nfunction List() {\r\n  this._length = 0;\r\n  this.head = null;\r\n}\r\nfunction Node(value) {\r\n  this.value = value;\r\n  this.next = null;\r\n}\r\n\r\n\r\nList.prototype.add = function(value) {\r\n  var newNode = new Node(value)\r\n  if (!this.head) {\r\n    this.head = newNode\r\n    this._length++\r\n    return newNode;\r\n  } else {\r\n    var current = this.head\r\n    while (current.next) {\r\n    current = current.next\r\n  }\r\n  current.next = newNode\r\n  }\r\n  \r\n  this._length++\r\n  return newNode\r\n\r\n}\r\nvar lista = new List();\nusing this code if it shows the linked list what difference is there", "likes": 0}}, {"topLevelComment": {"id": "Ugxt-Ct0OazKkJnelMB4AaABAg", "publishedAt": "2022-07-14T19:33:26Z", "author": "Lynda", "text": "Thanks again for another helpful video.  This really helped to visualize the concept of how to manipulate the list!", "likes": 1}}, {"topLevelComment": {"id": "Ugxlvh9yr_XJ61pA9FN4AaABAg", "publishedAt": "2022-06-25T14:38:38Z", "author": "MAK Youtube", "text": "Dear Beau, you are doing great but speak slowly and code while you speak. Please.", "likes": 0}}, {"topLevelComment": {"id": "UgybgPZI-nqkAaHR7Fd4AaABAg", "publishedAt": "2022-06-08T14:57:27Z", "author": "Steakdriven Entertainment", "text": "Are the cats named breakfast and Markov?", "likes": 0}}, {"topLevelComment": {"id": "UgwmdaBVWvkcu0weGyN4AaABAg", "publishedAt": "2022-04-06T16:24:13Z", "author": "Grant Sanchez", "text": "This was very helpful thanks!", "likes": 0}}, {"topLevelComment": {"id": "Ugyg87To8lwYpWRjjQ14AaABAg", "publishedAt": "2022-01-22T06:04:03Z", "author": "Dmitri K", "text": "Wow, this guy is good in explaining things", "likes": 0}}, {"topLevelComment": {"id": "UgxNivBYtJ23tv43T5F4AaABAg", "publishedAt": "2021-12-07T18:32:07Z", "author": "Kracky Tech", "text": "great vid as always beau", "likes": 0}}, {"topLevelComment": {"id": "UgxafourFEAScwxnZuF4AaABAg", "publishedAt": "2021-11-12T14:20:42Z", "author": "IM on the rise", "text": "Thank you so much for posting this informative tutorial. It really makes a difference.", "likes": 0}}, {"topLevelComment": {"id": "UgwLPEhku9IAvHJeqxl4AaABAg", "publishedAt": "2021-10-27T19:48:56Z", "author": "patty518", "text": "I am curious if for removeAt, when the index is zero, we could do:\nif (index === 0) {\n   head = head.next;\n}", "likes": 0}}, {"topLevelComment": {"id": "Ugxs6xuBmPcmfIxHAed4AaABAg", "publishedAt": "2021-09-25T11:26:30Z", "author": "Ricardo Zarroca Alegre", "text": "I have a question. In the remove function, if we use as a parameter a non-existing element in the list, it will throw an error don't?? We should check not to exceed the length of the list in order to avoid that I think.", "likes": 1}}, {"topLevelComment": {"id": "Ugy7WJYTmQoIgTdBrAR4AaABAg", "publishedAt": "2021-08-26T06:58:13Z", "author": "Razerback", "text": "Seems like you're returning the last element for \"this.elementAt\" function when we are passing the index greater than its size. \nI guess this.elementAt function needs to be corrected with the below code:\n\nthis.elementAt = function (index) {\r\n    var currentNode = head;\r\n    var count = 0;\r\n    while (count < index) {\r\n      count++;\r\n      if (currentNode.next) {\r\n        currentNode = currentNode.next;\r\n      } else {\r\n        return \"Element not found\";\r\n      }\r\n    }\r\n    return currentNode.element;\r\n  };", "likes": 1}, "replies": [{"id": "Ugy7WJYTmQoIgTdBrAR4AaABAg.9RVKAHz46TZ9X1aU2ns1Dt", "publishedAt": "2022-01-10T21:00:37Z", "author": "James", "text": "I'm glad I'm not the only one who noticed. My solution is:\n\nthis.elementAt = function(index){\n  var currentNode = head;\n  var position= 0;\nwhile(currentNode !== null){\n  if (position=== index) {\n      return currentNode.element;\n  }\n  currentNode = currentNode.next;\n  position++;\n} //end of while loop\nreturn currentNode.element;\n}", "likes": 0}]}, {"topLevelComment": {"id": "Ugz0X-WSgyRf0R2sw_B4AaABAg", "publishedAt": "2021-08-11T04:21:57Z", "author": "ctcrnitv", "text": "It says linked list has efficient insertions and deletions but I don't really get why. Isn't insertion/deletion normally O(n), and only if we're specifically inserting / deleting the head node it's O(1)? I might just be confused, also thanks for the great video.", "likes": 0}, "replies": [{"id": "Ugz0X-WSgyRf0R2sw_B4AaABAg.9QtQMeb3H239czg3psfSOM", "publishedAt": "2022-07-02T17:31:30Z", "author": "Just Ave0n ~ Recruiter", "text": "because of the memory my g", "likes": 0}]}, {"topLevelComment": {"id": "UgyZOigXfgNCrFpxnlF4AaABAg", "publishedAt": "2021-08-10T15:09:16Z", "author": "Miz Akita", "text": "This is very good, thank you!", "likes": 0}}, {"topLevelComment": {"id": "UgyAC_oNMX0X4atsRHh4AaABAg", "publishedAt": "2021-06-23T17:53:48Z", "author": "Aar\u00f3n Argotte L\u00f3pez", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"id": "Ugx3mXftPxFpY3eht814AaABAg", "publishedAt": "2021-04-13T06:41:40Z", "author": "Ashutosh Rahi", "text": "Thanks for the video. Question: Why did you choose to implement the List as a function and not as a class?", "likes": 5}, "replies": [{"id": "Ugx3mXftPxFpY3eht814AaABAg.9M3fxtFQyRx9cYmRK0pSF5", "publishedAt": "2022-06-21T21:28:24Z", "author": "human on the internet", "text": "it\u2019s a constructor function", "likes": 0}, {"id": "Ugx3mXftPxFpY3eht814AaABAg.9M3fxtFQyRx9UtXK_6tcBp", "publishedAt": "2021-11-18T15:28:25Z", "author": "Angie Rod", "text": "It is a class.", "likes": 3}]}, {"topLevelComment": {"id": "UgwgXtj47ITs3gKQfB94AaABAg", "publishedAt": "2021-03-31T19:13:55Z", "author": "Larisa Bobrovnikova", "text": "Best tutorial on the world, thanks so so much.", "likes": 0}, "replies": [{"id": "UgwgXtj47ITs3gKQfB94AaABAg.9LZYiDD8uko9LuXaR8XU2e", "publishedAt": "2021-04-09T08:07:24Z", "author": "Larisa Bobrovnikova", "text": "I still hear your voice in my mind: 'current node dot next....' and etc. Watched this video ~5 times \ud83d\ude03", "likes": 0}]}, {"topLevelComment": {"id": "UgwKaLYciE24_O07mnt4AaABAg", "publishedAt": "2021-03-06T21:19:44Z", "author": "Reynier Pupo G\u00f3mez", "text": "It's weird an addAt function returns false in case index>length.", "likes": 0}}, {"topLevelComment": {"id": "Ugzb4SAhT4XLMofy0T54AaABAg", "publishedAt": "2021-02-25T23:35:14Z", "author": "Greybax", "text": "Your implementation looks interesting! Thank you for sharing it :) I've done the same one and shared it here https://alfilatov.com/posts/how-to-create-linked-list-in-javascript-with-es6-classes/", "likes": 0}}, {"topLevelComment": {"id": "Ugwd-arXS-_5zo0CFT94AaABAg", "publishedAt": "2020-12-31T07:55:03Z", "author": "Mathias Salome", "text": "my got! you saved my brain Beau, thanks heaps for the insightful explanations without which I would have had to evolve into an extraterrestrial to figure out", "likes": 1}}, {"topLevelComment": {"id": "UgyWDNHX7S2RjH0kRqp4AaABAg", "publishedAt": "2020-09-14T13:53:13Z", "author": "Abdulmalik Adegoke", "text": "can you have more than one element stored in a node of the linked list", "likes": 0}}, {"topLevelComment": {"id": "UgwgUSOsTrGNcLJBBSt4AaABAg", "publishedAt": "2020-07-18T03:45:42Z", "author": "shivakumar polishetty", "text": "How to display all elements in linked list....??", "likes": 0}}, {"topLevelComment": {"id": "UgzwXZPTCaayTc3bCqV4AaABAg", "publishedAt": "2020-07-11T18:29:40Z", "author": "Frank", "text": "How can this work when there are no pointers in javascript, is'nt  currentNode just a copy of head when declaring that variable?", "likes": 0}}, {"topLevelComment": {"id": "UgyXn5tFXPwPxzpQyNx4AaABAg", "publishedAt": "2020-05-03T02:07:02Z", "author": "Joe Avila", "text": "Thanks for the video. Easy to understand explanations.", "likes": 0}}, {"topLevelComment": {"id": "Ugw5uAxF3pT-kkOpIUJ4AaABAg", "publishedAt": "2020-03-29T12:14:11Z", "author": "\u0414\u0435\u043d\u0438\u0441 \u0420\u0435\u0448\u0435\u0442\u043d\u0438\u043a", "text": "thank you very much, really useful and easy for understanding", "likes": 1}}, {"topLevelComment": {"id": "Ugxz47rNvPpdy0pHuCl4AaABAg", "publishedAt": "2019-10-13T18:36:36Z", "author": "Gy\u00f6rgy M\u00e1rk", "text": "with visualization this was really helpful :) thank you!", "likes": 0}}, {"topLevelComment": {"id": "UgzIbvYsikduxSQ51Jd4AaABAg", "publishedAt": "2019-10-11T11:31:56Z", "author": "\u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0413\u0443\u0431\u0438\u043d", "text": "Thanks for your work. But how actually we save the next link to object. Is it reference or object?  For example if I have 5 elements in a list and want get first element, I get in google console whole bunch of nesting object from the start to end. If javascript don't have a truly reference type like a C++ or Java maybe we should keep our data in array. What do you think about it? I actually don't know the method that get size in memory of object so I can't imagine how to test list. Also I think if you give es2015 syntax it would be more eye catching.", "likes": 0}}, {"topLevelComment": {"id": "UgwK5cxOwiJ_0c_g5U54AaABAg", "publishedAt": "2019-10-07T11:08:43Z", "author": "It's Aaron", "text": "Its just like Relay race, the head is the first runner who will pass the relay stick or (this.next) or NULL stick to the second runner , mind it that the second , third runner.....will be called  (currentNode) the last runner is an exception which will be called the tail and it will be the last to hold the NULL stick , otherwise we want to add more runner .", "likes": 0}}, {"topLevelComment": {"id": "Ugx3wdHDPBmb1us8Z_Z4AaABAg", "publishedAt": "2019-09-19T13:11:49Z", "author": "Jack Oliver", "text": "Great video, Beau. \ud83d\udc4f", "likes": 0}}, {"topLevelComment": {"id": "UgwKBDgzxxjhUhvGDD54AaABAg", "publishedAt": "2019-09-16T09:39:49Z", "author": "Charles Muzhanye", "text": "Great tutorial, wanted to ask why we have to use \"new\" when creating a new node", "likes": 1}, "replies": [{"id": "UgwKBDgzxxjhUhvGDD54AaABAg.8zwQGeN1CYv9-3WrzyhY9p", "publishedAt": "2019-09-19T13:11:24Z", "author": "Jack Oliver", "text": "'Node' is used here as a 'constructor' style function;  the 'new' keyword tells the code to create a new 'constructor' style instance of the Node object (functions are first-class objects). By not using the 'new' keyword you would have a single instance of the Node object, which is not the behaviour we want here.\n\n\nVariables are only 'assignments' or 'references' to data - not the data (function, in this case) itself - you can create an object when you create a variable, but you are actually creating a new object and assigning it to that variable.\n\n\nBy using the 'new' keyword you are creating a new instance of the \"Node\" object, and assigning that instance to the variable 'node'. This means when 'adding' an item to the linked list,  each assignment of 'node' has its own instance of the 'Node' object (function).\n\nMy understanding is a little patchy, but I think that's correct. Please, correct me if I'm wrong. :)", "likes": 2}]}, {"topLevelComment": {"id": "UgwrA7SS-M-utX36GXN4AaABAg", "publishedAt": "2019-09-01T08:36:45Z", "author": "It's Aaron", "text": "Its so hard its hard to wrap my head around this.", "likes": 2}, "replies": [{"id": "UgwrA7SS-M-utX36GXN4AaABAg.8zKg7_1BWiE952ZZsGaZBB", "publishedAt": "2020-02-15T07:24:08Z", "author": "It's Aaron", "text": "ikr", "likes": 0}]}, {"topLevelComment": {"id": "Ugx0GKbLyTlQTbRZRdB4AaABAg", "publishedAt": "2019-08-31T07:08:46Z", "author": "Vivek Mahajan", "text": "I used the tail to get the last node.", "likes": 0}}, {"topLevelComment": {"id": "Ugy6q4xKKDZ3dUbxQ814AaABAg", "publishedAt": "2019-07-08T20:02:43Z", "author": "Alex", "text": "I was less confused the 2nd time watching. thanks for the info.", "likes": 4}}, {"topLevelComment": {"id": "UgzEmnGwDK_wcgAhKZB4AaABAg", "publishedAt": "2019-05-15T04:13:51Z", "author": "Leah Weile", "text": "Thank you so much this really helped me!", "likes": 0}}, {"topLevelComment": {"id": "UgyYGOaqnEPUOV9_oVp4AaABAg", "publishedAt": "2019-04-25T14:23:29Z", "author": "Peristilo peris", "text": "If you're still strugling after seeing this, take a look at this girl's video:\nhttps://www.youtube.com/watch?v=ChWWEncl76Y", "likes": 0}}, {"topLevelComment": {"id": "UgyPKR7zWmNY1GXUv9F4AaABAg", "publishedAt": "2019-04-04T05:55:42Z", "author": "J D", "text": "me likes the ways yous explains thangs", "likes": 1}}, {"topLevelComment": {"id": "Ugx3oRXYIm2UkiwuWsZ4AaABAg", "publishedAt": "2019-04-01T01:13:58Z", "author": "hipro_filecriminal", "text": "Hey this was awesome really helped me visualize it when you made the reference to the conga line", "likes": 0}}, {"topLevelComment": {"id": "Ugwsf_k4sBKvan1cfhF4AaABAg", "publishedAt": "2019-02-18T16:27:30Z", "author": "Jonathan", "text": "Beaus the man.", "likes": 0}}, {"topLevelComment": {"id": "UgzgOSJEaAfOR61Osst4AaABAg", "publishedAt": "2019-02-12T13:22:49Z", "author": "Phyo Lim", "text": "Javascript arrays aren't fixed size right? I tried googling and didn't find anything that supports it. Did he just misspoke?", "likes": 1}, "replies": [{"id": "UgzgOSJEaAfOR61Osst4AaABAg.8rFd4uqALVi8rFl1KDN25F", "publishedAt": "2019-02-12T14:32:14Z", "author": "freeCodeCamp.org", "text": "You are correct, JavaScript arrays are not a fixed size.", "likes": 2}]}, {"topLevelComment": {"id": "UgxuyFy2KVZAxSz0dt94AaABAg", "publishedAt": "2018-12-16T00:53:49Z", "author": "Dejan Rajkovic", "text": "Shouldn't we set currentNode.next = null in ```this.remove()```? Can garbage collector in JS remove node if it still has connection with next element in the list?", "likes": 0}}, {"topLevelComment": {"id": "UgzzHIOKbusMtlivP854AaABAg", "publishedAt": "2018-08-25T14:42:13Z", "author": "beqa sirbiladze", "text": "i don't feel like you need to check all element before add new one, what if you have last element object so when you add new element you just add lastPoint.next = node and then update lastPoint =  node like so:   \n\nthis.lastPoint.next = node\nthis.lastPoint = node;\n\nand for first time lastPoint = this.head", "likes": 0}}, {"topLevelComment": {"id": "UgyFt4C6rpM0imi7qOV4AaABAg", "publishedAt": "2018-08-17T01:16:51Z", "author": "endale", "text": "Thanks for making this video I really appreciate it! Just some feedback: You spoke really fast, I think it would've been better as a code along. All that code at the beginning can be pretty overwhelming", "likes": 25}, "replies": [{"id": "UgyFt4C6rpM0imi7qOV4AaABAg.8k1Qi9z6Rjs9UiyroOsWFF", "publishedAt": "2021-11-14T13:06:06Z", "author": "iiVitality", "text": "@Jensen Raylight from all the friends i\u2019ve talked about this, i\u2019m not a \u201crare case\u201d lmao. the majority of people hate slowing down videos", "likes": 0}, {"id": "UgyFt4C6rpM0imi7qOV4AaABAg.8k1Qi9z6Rjs9Uiqypz6-OW", "publishedAt": "2021-11-14T11:57:10Z", "author": "Jensen Raylight", "text": "@iiVitality it's not a terrible advice, i don't have any problem with it, and so does millions of people using youtube with slowed down speed.\n\nslow down the speed could help anyone, but not you, you are the exception, a rare case, because you don't like a weird sound", "likes": 2}, {"id": "UgyFt4C6rpM0imi7qOV4AaABAg.8k1Qi9z6Rjs9UikJd_-to3", "publishedAt": "2021-11-14T10:58:58Z", "author": "iiVitality", "text": "@Jensen Raylight Yeah, I am. I\u2019m just saying that turning down video speed is terrible advice", "likes": 0}, {"id": "UgyFt4C6rpM0imi7qOV4AaABAg.8k1Qi9z6Rjs9UiVqrTuDHZ", "publishedAt": "2021-11-14T08:43:50Z", "author": "Jensen Raylight", "text": "@iiVitality turn on the subtitle / cc, it will help you,\nOr open the transcript,\nThat way you can always read back instantly", "likes": 0}, {"id": "UgyFt4C6rpM0imi7qOV4AaABAg.8k1Qi9z6Rjs9UhVRHPWiD_", "publishedAt": "2021-11-13T23:20:58Z", "author": "iiVitality", "text": "@Jensen Raylight Adjusting video speed doesn't really help. It just makes whatever he says sound weird, and still difficult to actually follow, and when there are actual pauses in the video, they become excruciatingly long, so that doesn't really help at all", "likes": 0}]}, {"topLevelComment": {"id": "Ugx8G2AsBrOtAtsYW2B4AaABAg", "publishedAt": "2018-06-11T20:11:20Z", "author": "Nelson Ongiti", "text": "Hi do i have control over the amount of nodes i can create. your example in https://codepen.io/beaucarnes/pen/ybOvBq?editors=0011 seems to be an infinite loop", "likes": 0}, "replies": [{"id": "Ugx8G2AsBrOtAtsYW2B4AaABAg.8hMwHh7IqBZ9czgFD_KUKc", "publishedAt": "2022-07-02T17:33:03Z", "author": "Just Ave0n ~ Recruiter", "text": "4 years later lol but you could just add a variable called limit if you want to make it with a specific length limit lol", "likes": 0}, {"id": "Ugx8G2AsBrOtAtsYW2B4AaABAg.8hMwHh7IqBZ8hOl7t69wE7", "publishedAt": "2018-06-12T13:12:21Z", "author": "freeCodeCamp.org", "text": "There is no limit to the number of notes. You just add as many as you need. If your linked list is named `conga` like in the video, then every time you use the code `conga.add('Fish');` you add a node. (note that the word 'Fish' is just an example and any word can appear in the quotes).", "likes": 0}]}, {"topLevelComment": {"id": "UgyUKkEyczBNDckiOHB4AaABAg", "publishedAt": "2018-03-07T12:56:34Z", "author": "Jim O", "text": "where is \".next\" coming from? i.e. currentNode.next   ??", "likes": 0}, "replies": [{"id": "UgyUKkEyczBNDckiOHB4AaABAg.8dUyDRUFv_N8h5KrpIhFLF", "publishedAt": "2018-06-05T00:08:31Z", "author": "Nalee Riddell", "text": "it's baked in i think", "likes": 0}]}, {"topLevelComment": {"id": "Ugyg3PYeGLsU5Af60rd4AaABAg", "publishedAt": "2017-12-04T12:35:11Z", "author": "twice magagula", "text": "this guy is good but it makes it hard for me to understand fully if this thing is already coded ... can u like try and walk us through by coding it not just explaining ... but I loved it though just need demonstration on the actually coding from scratch", "likes": 2}, "replies": [{"id": "Ugyg3PYeGLsU5Af60rd4AaABAg.8_kSqNJFZqu8jiszpQp8bZ", "publishedAt": "2018-08-09T11:07:51Z", "author": "Justin D", "text": "you could take this apart yourself actually. Just implement it one step at a time and play around with it.", "likes": 0}, {"id": "Ugyg3PYeGLsU5Af60rd4AaABAg.8_kSqNJFZqu8a18mFoPQ7i", "publishedAt": "2017-12-11T09:26:10Z", "author": "Artur Doma\u0144ski", "text": "Try this:\nhttps://www.youtube.com/watch?v=MozZbtPyqt8&list=LLuNzfvSM9PBa9USJMQnZHyg&index=2", "likes": 0}]}, {"topLevelComment": {"id": "UgwBumLMHp19lWB5bk94AaABAg", "publishedAt": "2017-10-08T02:43:57Z", "author": "zoe bot", "text": "This dude is an amazing teacher.", "likes": 1}}, {"topLevelComment": {"id": "Ugy6sxtHgYUXFeWjSDV4AaABAg", "publishedAt": "2017-09-13T15:47:04Z", "author": "Adam White", "text": "This was completely helpful. Thanks so much!", "likes": 0}}, {"topLevelComment": {"id": "UgwkSExfh658WUQ1MM14AaABAg", "publishedAt": "2017-08-23T12:09:37Z", "author": "\u0412\u0435\u043d\u0438\u0430\u043c\u0438\u043d \u0422\u0440\u0435\u043f\u0430\u0447\u043a\u043e", "text": "Won't the remove method cause infinite loop if user call it with any number which is not in the list?", "likes": 2}, "replies": [{"id": "UgwkSExfh658WUQ1MM14AaABAg.8WbC21JGqsF8bMpI7WBXgL", "publishedAt": "2018-01-13T16:01:51Z", "author": "Ghenady Kuznetsov", "text": "Actually not. As soon as currentNode becomes null there be thrown an error.", "likes": 2}, {"id": "UgwkSExfh658WUQ1MM14AaABAg.8WbC21JGqsF8atlN1iC_xY", "publishedAt": "2018-01-01T23:50:21Z", "author": "Viktor Soroka", "text": "Nice spot. There should be additional check for the end of the list.", "likes": 0}]}, {"topLevelComment": {"id": "Ugg6MkK1no3fhXgCoAEC", "publishedAt": "2017-07-28T04:35:28Z", "author": "Vishal H", "text": "Why theire is previousNode.next = cuurentNode.next in remove function. Why not just, previousNode = cuurentNode.next;", "likes": 0}, "replies": [{"id": "Ugg6MkK1no3fhXgCoAEC.8VYRP0txB328atldds9A1v", "publishedAt": "2018-01-01T23:52:45Z", "author": "Viktor Soroka", "text": "previousNode is just a local variable, so assigning it a value would not result in desired effect.", "likes": 0}]}, {"topLevelComment": {"id": "UgjbdTQB91jHEXgCoAEC", "publishedAt": "2017-07-13T08:42:44Z", "author": "Sheila Subbiah", "text": "Thank you, I really like this. I like your codepen Linked List; I can go look at it, try to interpret what it does, and then come back and listen to your explanation. n.b. I realise your .add() method adds the new element to the end of the list, whereas you have a .addAt() method to insert a node at any other position of the list.", "likes": 0}}, {"topLevelComment": {"id": "UgiOjb42HKD8l3gCoAEC", "publishedAt": "2017-07-12T19:36:57Z", "author": "Attila Jakab", "text": "Thank you, good video!", "likes": 0}}, {"topLevelComment": {"id": "UgjJH-9p4cDX2ngCoAEC", "publishedAt": "2017-07-10T08:45:41Z", "author": "Manuchehr Mukhidinov", "text": "Are we setting the last link to null because null means lack of existence?  I mean is it the usage of null in JavaScript?", "likes": 0}, "replies": [{"id": "UgjJH-9p4cDX2ngCoAEC.8UpXit0fLGk8atluYflbmf", "publishedAt": "2018-01-01T23:55:04Z", "author": "Viktor Soroka", "text": "That is right. The value null represents the intentional absence of any object value (from MDN).", "likes": 0}]}, {"topLevelComment": {"id": "UghE7V0gYkKd43gCoAEC", "publishedAt": "2017-07-09T14:11:32Z", "author": "Istv\u00e1n F\u00fcl\u00f6p", "text": "The only problem I have is that you named the information/data from a node an element.", "likes": 0}}, {"topLevelComment": {"id": "UgiFkITNznXAvHgCoAEC", "publishedAt": "2017-07-07T21:52:32Z", "author": "Marco Berardini", "text": "Great Video! There are some edge cases where this implementation would fail. Example: this.remove() length should only be decremented if the element is found. length-- should either be moved to both the if and else clause, or use some kind of flag set to true if it succeeds.  Thanks", "likes": 2}, "replies": [{"id": "UgiFkITNznXAvHgCoAEC.8UjDOIVSNqK8Uk5SLhNugB", "publishedAt": "2017-07-08T06:02:25Z", "author": "Tim Lempicki", "text": "It will actually error out in the while loop because it will get to the end of the list and currentNode = currentNode.next will be equal to null so when it evaluates the next while loop you can't read the element property of currentNode because currentNode is now null.\n\nYou wouldn't need to remove the decrementation at all just add an if statement:\n\nif(!(currentNode = currentNode.next))\n               return \"Not Found\";\n\nBasically if currentNode.next is null it will return \"Not Found\" and not break. It may be better not to put the assignment on a separate line so the code isn't so hard to read and the next person to use it may not know if you meant to do assignment in the if. Also you are probably better off just seeing if it is null instead of relying on the not operator with null.\n\nTL;DR Long story short -- if the element isn't found currently the code breaks. Leave the decrement just change the code to have it return if currentNode.next is null so it doesn't try to grab the element property of null.", "likes": 1}]}, {"topLevelComment": {"id": "Ugh1T8HZwtwi6HgCoAEC", "publishedAt": "2017-06-06T07:45:18Z", "author": "Leilani", "text": "Oh. My. Gosh. This is an amazing tutorial.His voice reminds me of Adam Pally so I'm even more interested xD.", "likes": 0}}, {"topLevelComment": {"id": "UggHWcjlksCvmngCoAEC", "publishedAt": "2017-05-12T17:30:21Z", "author": "Tony Whomever", "text": "Beau, your videos are great! Very concise!\nYou're double clicking a lot when highlighting code; may I suggest you set a button on your mouse as a double click? I've been doing this for years and it has saved my fingers a lot of agony. Bonus: less clicking sounds. \nKeep up the good work, and thank you!", "likes": 0}}, {"topLevelComment": {"id": "Ugi-V3k9q_0Lc3gCoAEC", "publishedAt": "2017-04-24T03:03:02Z", "author": "atsepa", "text": "Awesome explication ! Thanks a lot for this. I feel remove() is going to fail when user sends a element that is not in the list. maybe add a validation?", "likes": 5}, "replies": [{"id": "Ugi-V3k9q_0Lc3gCoAEC.8RieIqleZmi8Uk30IIj96S", "publishedAt": "2017-07-08T05:41:07Z", "author": "Tim Lempicki", "text": "Leilani remove is actually looking for the element not the index.", "likes": 3}, {"id": "Ugi-V3k9q_0Lc3gCoAEC.8RieIqleZmi8TStUgV7i39", "publishedAt": "2017-06-06T07:51:25Z", "author": "Leilani", "text": "The param is the index not the element", "likes": 2}]}, {"topLevelComment": {"id": "UgjdSYzmQMjAq3gCoAEC", "publishedAt": "2017-04-23T06:25:11Z", "author": "juliobguedes", "text": "I'm at college(graduating in computer science) and already studied about the usage of linkedLists at JAVA, but this video simply amazes me! Really! Its a lot different to know just the usage(as I knew) and how it can be made. Nice job!", "likes": 1}}, {"topLevelComment": {"id": "Ugh7adUgZeGxh3gCoAEC", "publishedAt": "2017-04-22T18:17:54Z", "author": "bob2000and10", "text": "Beau is so damn good at this, and its all free. Hats offf to freeCodeCamp for their excellent service that has helped so many people.", "likes": 33}}]}