{"video": {"id": "43YenciicXk", "title": "Clean Code: Functions (Part 2) - Beau teaches JavaScript", "description": "Learn the best practices of how to create Clean Code in JS. This video tutorial is part 2 of how easy is to write Javascript functions that are readable, reusable, and refactorable. Special thanks to Ryan McDermott for a lot of the code in this video. \n\nThe full Clean Code playlist: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh\n\nCode: \n\ud83d\udd17 http://codepen.io/beaucarnes/pen/pRWXVw?editors=0012\nRyan McDermott\u2019s original article:\n\ud83d\udd17 https://github.com/ryanmcdermott/clean-code-javascript#functions\n\nBeau Carnes on Twitter: https://twitter.com/carnesbeau\n\n\u2b50JavaScript Playlists\u2b50\n\u25b6JavaScript Basics: https://www.youtube.com/playlist?list=PLWKjhJtqVAbk2qRZtWSzCIN38JC_NdhW5\n\u25b6ES6: https://www.youtube.com/playlist?list=PLWKjhJtqVAbljtmmeS0c-CEl2LdE-eR_F\n\u25b6Design Patterns: https://www.youtube.com/playlist?list=PLWKjhJtqVAbnZtkAI3BqcYxKnfWn_C704\n\u25b6Data Structures and Algorithms: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ\n\n-\nWe're busy people who learn to code, then practice by building projects for nonprofits. Learn Full-stack JavaScript, build a portfolio, and get great references with our open source community.\n\nJoin our community at https://freecodecamp.com\nFollow us on twitter: https://twitter.com/freecodecamp\nLike us on Facebook: https://www.facebook.com/freecodecamp\nFollow Quincy on Quora: https://www.quora.com/Quincy-Larson", "duration": "PT6M47S", "likes": "362", "views": "16233"}, "comments": [{"topLevelComment": {"author": "rafael rocha", "text": "Man.... im not going to use Inheritance. This makes the code reeeealy messy logically. But the videos are great!", "likes": 2}}, {"topLevelComment": {"author": "Ievgen Golskov", "text": "I think for 3:50 there is a shorter sollution: const totalOutput = programmerOutput.reduce((acc,  elem) => acc + elem.linesOfCode, 0)", "likes": 4}, "replies": [{"author": "Francisco Junior", "text": "Good solution.", "likes": 0}]}, {"topLevelComment": {"author": "MudShark", "text": "Just to be clear, when replacing conditional with polymorphism, a conditional might still be needed, just not inside the class. \nSomewhere, someone or something needs to decide which subclass should be instantiated", "likes": 7}}, {"topLevelComment": {"author": "john m", "text": "what is acc?", "likes": 0}, "replies": [{"author": "Francisco Junior", "text": "accumulator.", "likes": 1}]}, {"topLevelComment": {"author": "Brian Koo", "text": "aren't there cases where conditionals are just more convenient and gives you better performance?", "likes": 1}, "replies": [{"author": "MugiwaraNoAdi", "text": "@Iaros B. I have to admit my comment was a bit misleading \ud83d\ude09 clean code doesn\u2019t have impact on computing performance but on your team performance. Ergo it will have positive impact on your product. That\u2019s what I meant.", "likes": 0}, {"author": "Iaros B.", "text": "@MugiwaraNoAdi \ud83e\udd23", "likes": 0}, {"author": "MugiwaraNoAdi", "text": "Brian Koo - Yes, but the topic here is clean code and not performance. That kind of micro performance optimization won\u2019t have noticeable impact on the average web app. Readability always has.", "likes": 1}]}, {"topLevelComment": {"author": "Server Khalilov", "text": "For the first function example, you forgot to give it an argument, what could be confusing for someone.", "likes": 4}, "replies": [{"author": "Jordan Bush", "text": "Also, the original function wasn't causing a side effect. It did not mutate the original value. It didn't take in a value, but read from a global variable and returned a new array.", "likes": 1}, {"author": "Beau Carnes", "text": "Nice catch! I just added a note.", "likes": 1}]}]}