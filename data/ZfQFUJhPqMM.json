{"video": {"id": "ZfQFUJhPqMM", "publishedAt": "2019-04-18T15:04:25Z", "title": "Learn Regular Expressions (Regex) - Crash Course for Beginners", "description": "Regular expressions (or Regex) are patterns used to match character combinations in strings. In this crash course tutorial, you will learn how to use regular expressions in JavaScript. You will be able to apply the concepts to any programming language.\n\nThis course follows along with the free regular expressions curriculum at freeCodeCamp.org: https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/regular-expressions\n\nYou can also view this course on Scrimba.com: https://scrimba.com/g/gregularexpressions\n\n\u2b50\ufe0f Contents \u2b50\ufe0f\n\u2328\ufe0f (01:04) Using the Test Method\n\u2328\ufe0f (02:15) Match Literal Strings\n\u2328\ufe0f (02:57) Match a Literal String with Different Possibilities\n\u2328\ufe0f (03:46) Ignore Case While Matching\n\u2328\ufe0f (04:45) Extract Matches\n\u2328\ufe0f (05:32) Find More Than the First Match\n\u2328\ufe0f (07:16) Match Anything with Wildcard Period\n\u2328\ufe0f (08:54) Match Single Character with Multiple Possibilities\n\u2328\ufe0f (10:14) Match Letters of the Alphabet\n\u2328\ufe0f (10:04) Match Numbers and Letters of the Alphabet\n\u2328\ufe0f (12:15) Match Single Characters Not Specified\n\u2328\ufe0f (13:32) Match Characters that Occur One or More Times\n\u2328\ufe0f (14:19) Match Characters that Occur Zero or More Times\n\u2328\ufe0f (15:32) Find Characters with Lazy Matching\n\u2328\ufe0f (18:54) Find One or More Criminals in a Hunt\n\u2328\ufe0f (19:58) Match Beginning String Patterns\n\u2328\ufe0f (20:53) Match Ending String Patterns\n\u2328\ufe0f (21:40) Match All Letters and Numbers\n\u2328\ufe0f (22:48) Match Everything But Letters and Numbers\n\u2328\ufe0f (23:35) Match All Numbers\n\u2328\ufe0f (24:04) Match All Non-Numbers\n\u2328\ufe0f (24:40) Restrict Possible Usernames\n\u2328\ufe0f (27:29) Match Whitespace\n\u2328\ufe0f (27:56) Match Non-Whitespace Characters\n\u2328\ufe0f (28:25) Specify Upper and Lower Number of Matches\n\u2328\ufe0f (29:40) Specify Only the Lower Number of Matches\n\u2328\ufe0f (30:10) Specify Exact Number of Matches\n\u2328\ufe0f (30:47) Check for All or None\n\u2328\ufe0f (31:38) Positive and Negative Lookahead\n\u2328\ufe0f (35:09) Reuse Patterns Using Capture Groups\n\u2328\ufe0f (40:18) Use Capture Groups to Search and Replace\n\u2328\ufe0f (43:18) Remove Whitespace from Start and End\n\n\ud83c\udfa5 Course created by Beau Carnes. Follow Beau on Twitter: https://twitter.com/BeauCarnes\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://medium.freecodecamp.org\n\nAnd subscribe for new videos on technology: https://youtube.com/subscription_center?add_user=freecodecamp", "duration": "PT45M38S", "likes": "4958", "views": "163183"}, "comments": [{"topLevelComment": {"id": "UgyZ6LG4c-BetKiXBbx4AaABAg", "publishedAt": "2023-01-24T22:12:37Z", "author": "Emanuel Maza", "text": "En la parte de restricci\u00f3n de usuarios  24:40 solo me deja pasar el test utilizando la expresi\u00f3n  /^[A-Za-z]{2,}\\d*$ |^[A-Za-z]{1,}\\d{2,}$/ si alguien encontr\u00f3 otra soluci\u00f3n me la podr\u00eda escribir en comentarios. At Restrict Possible Usernames 24:40 I'm able to pass the test with the expression /^[A-Za-z]{2,}\\d*$ |^[A-Za-z]{1,}\\d{2,}$/ Plz if there's any other solution can you write it in the comments.", "likes": 0}}, {"topLevelComment": {"id": "Ugw0duciKdfSmCiuBtZ4AaABAg", "publishedAt": "2023-01-01T15:27:47Z", "author": "Mikias Zerihun", "text": "I think something went wrong on username validator regex. what do you think Mr Beau Carnes.", "likes": 2}, "replies": [{"id": "Ugw0duciKdfSmCiuBtZ4AaABAg.9kLfNu6ZdqG9lHc2m5mAKK", "publishedAt": "2023-01-24T22:13:07Z", "author": "Emanuel Maza", "text": "En la parte de restricci\u00f3n de usuarios  24:40 solo me deja pasar el test utilizando la expresi\u00f3n  /^[A-Za-z]{2,}\\d*$ |^[A-Za-z]{1,}\\d{2,}$/ si alguien encontr\u00f3 otra soluci\u00f3n me la podr\u00eda escribir en comentarios. At Restrict Possible Usernames 24:40 I'm able to pass the test with the expression /^[A-Za-z]{2,}\\d*$ |^[A-Za-z]{1,}\\d{2,}$/ Plz if there's any other solution can you write it in the comments.", "likes": 0}]}, {"topLevelComment": {"id": "UgyFVvNTXiLD-xW7ZHx4AaABAg", "publishedAt": "2022-11-08T00:44:12Z", "author": "Woeden", "text": "Great lecture, ty.", "likes": 0}}, {"topLevelComment": {"id": "UgzjLlMRuI5DFlsHOk94AaABAg", "publishedAt": "2022-10-23T00:46:15Z", "author": "\u9673\u6c89\u6c89", "text": "10:07  Why aeiou in bracket don\u2019t need comma \uff1f", "likes": 0}}, {"topLevelComment": {"id": "Ugw75OBliVTLvlUT5xB4AaABAg", "publishedAt": "2022-09-28T14:04:44Z", "author": "Believe Mataga", "text": "Would like to know the name of the font used in the editor.", "likes": 0}}, {"topLevelComment": {"id": "UgyQqevHbYShID3TzrB4AaABAg", "publishedAt": "2022-09-19T06:30:42Z", "author": "akashic seer", "text": "I only use regex ever couple of years and every damn time I have to stop and relearn every last thing. I wish memory crystals would get here already my brain sucks ass", "likes": 0}}, {"topLevelComment": {"id": "UgyM6_kZwjUGjmRf_9Z4AaABAg", "publishedAt": "2022-09-13T19:21:12Z", "author": "Kostiantyn Karzhanov", "text": "Beau, Thank you very much for this tutorial! It is great!", "likes": 1}}, {"topLevelComment": {"id": "UgyP5hQ00x9xcFRa4sZ4AaABAg", "publishedAt": "2022-08-26T07:50:27Z", "author": "Rishabh Negi", "text": "Thanks a lot Beau!", "likes": 0}}, {"topLevelComment": {"id": "Ugx8XEmtJk3fbAzE9gx4AaABAg", "publishedAt": "2022-08-16T19:50:24Z", "author": "Matheus Pereira", "text": "when we have this regexp information stored in variables , and from what I understand in the console they are in an array, can I use map() or filter() syntax?", "likes": 1}}, {"topLevelComment": {"id": "UgwROy_hGtOiUKZ9dyx4AaABAg", "publishedAt": "2022-08-11T16:42:29Z", "author": "Rolando Riley", "text": "Excelent course. .. thanks!", "likes": 1}}, {"topLevelComment": {"id": "Ugy5TMucrdUKTyQ-fkN4AaABAg", "publishedAt": "2022-07-31T12:27:11Z", "author": "\u041e\u043b\u044c\u0433\u0430", "text": "Very clear explanation. Tnanks", "likes": 0}}, {"topLevelComment": {"id": "Ugyk2mN6tiSsNEThmzV4AaABAg", "publishedAt": "2022-06-19T17:20:24Z", "author": "fastoch", "text": "@22:00 He confused slash with backslash, frequent mistake.", "likes": 1}}, {"topLevelComment": {"id": "UgzNDwQtnpjEKmAKEGB4AaABAg", "publishedAt": "2022-06-07T06:21:14Z", "author": "Dr. Morpho", "text": "Thank you!))", "likes": 0}}, {"topLevelComment": {"id": "UgwCoNFZHw0xv33ibhx4AaABAg", "publishedAt": "2022-05-07T11:36:08Z", "author": "yatin", "text": "First time i watched this video gave me headache lucky i watched few more times and practice while video was playing\nNothings hard you are just not familiar", "likes": 0}}, {"topLevelComment": {"id": "Ugx2zq-SnuuJ-EQJjn94AaABAg", "publishedAt": "2022-03-18T21:36:35Z", "author": "Katie Neko", "text": "how many times am I going to forget everything and come back to learn it again? Step by step is simple. putting it together is hard, and remembering what random letters do is simply not going to happen. Anyone got a way to memorize this or am I SOL?", "likes": 2}}, {"topLevelComment": {"id": "UgzqvZKu9g9tYvSilQB4AaABAg", "publishedAt": "2022-03-06T04:18:54Z", "author": "Muhammed Thansil", "text": "This is the one i needed, thanks mam it's helped a lot.", "likes": 0}}, {"topLevelComment": {"id": "Ugx8alkDk_Ox0Ot9ZRB4AaABAg", "publishedAt": "2021-12-14T22:45:30Z", "author": "TTB TV", "text": "At 43:22, why doesn't /^(\\s+)\\1$/.test('   Hello, World!  ') equal True? Can someone explain this to me pls?", "likes": 0}}, {"topLevelComment": {"id": "UgyMngCAaz9pgWBDedZ4AaABAg", "publishedAt": "2021-12-14T22:27:16Z", "author": "TTB TV", "text": "39:18 bruh what. Why would it match the space after the third  '42' when the last element is any digits?", "likes": 0}}, {"topLevelComment": {"id": "UgyBfrgAC5BYgwY5NYt4AaABAg", "publishedAt": "2021-12-04T02:58:42Z", "author": "Blentux", "text": "When I first got to do with Regex I hated it. Now that I begin to understand it, I'm kinda starting having fun lol", "likes": 0}}, {"topLevelComment": {"id": "UgwYPwEdUlY9BUunkKt4AaABAg", "publishedAt": "2021-12-03T11:40:25Z", "author": "Nashiuz Zaman", "text": "Good video, really, thanks!", "likes": 0}}, {"topLevelComment": {"id": "UgzVyKZ6n6jIo7A5h9R4AaABAg", "publishedAt": "2021-11-28T17:19:30Z", "author": "Gems of Pakistan", "text": "How to Find a regular expression that matches the last two columns of the file. ? PLEASE HELP", "likes": 0}}, {"topLevelComment": {"id": "Ugyuog11su5QM2n18ZJ4AaABAg", "publishedAt": "2021-11-28T17:19:18Z", "author": "Gems of Pakistan", "text": "How to Find a regular expression that matches the last two columns of the file. ?", "likes": 0}}, {"topLevelComment": {"id": "UgxPUzTIHLsbltJbAgx4AaABAg", "publishedAt": "2021-11-28T17:19:14Z", "author": "Gems of Pakistan", "text": "How to Find a regular expression that matches the last two columns of the file. ?", "likes": 0}}, {"topLevelComment": {"id": "UgyrRRTKq3vVJqsd8WR4AaABAg", "publishedAt": "2021-11-28T17:19:09Z", "author": "Gems of Pakistan", "text": "How to Find a regular expression that matches the last two columns of the file. ?", "likes": 0}}, {"topLevelComment": {"id": "UgyzzSRhrR-Ie_wxn7B4AaABAg", "publishedAt": "2021-11-28T17:19:00Z", "author": "Gems of Pakistan", "text": "How to Find a regular expression that matches the last two columns of the file. ?", "likes": 0}}, {"topLevelComment": {"id": "UgyuusyUOPJu_jkWaih4AaABAg", "publishedAt": "2021-11-24T22:44:39Z", "author": "Xilvermist Trollawney", "text": "33:50 I'm lost....", "likes": 0}}, {"topLevelComment": {"id": "UgxnI46t5pP5Ps68sZJ4AaABAg", "publishedAt": "2021-11-24T19:53:53Z", "author": "Charles Ludwig", "text": "Next, Adam Sandler should narrate functional programming", "likes": 0}}, {"topLevelComment": {"id": "UgxljSWSMZNm_oSR9UF4AaABAg", "publishedAt": "2021-11-24T05:53:06Z", "author": "mykalimba", "text": "The '\\' character is a backslash, not a slash. Also, the '*' is an asterisk (notice how it's spelled), not an \"asterick\".", "likes": 0}}, {"topLevelComment": {"id": "Ugwykv--nsPQyX2o5gd4AaABAg", "publishedAt": "2021-11-23T04:47:27Z", "author": "Jonathan", "text": "Step 1- learn regex\nStep 2- forget regex\nStep 3- realize you still need to know regex, frantically try combinations on regexr until you get what you need.", "likes": 2}, "replies": [{"id": "Ugwykv--nsPQyX2o5gd4AaABAg.9V4FxR9h6IB9V4gUCWB4BO", "publishedAt": "2021-11-23T08:48:00Z", "author": "Vineet Saini", "text": "lolol I know this is True because I ended up on this video too", "likes": 0}]}, {"topLevelComment": {"id": "UgzClXiva_tZ53yh7OF4AaABAg", "publishedAt": "2021-11-22T14:11:22Z", "author": "Swapnil Yadav", "text": "You guys are using Seinfeld vision from 30 Rock\ud83d\ude01", "likes": 1}}, {"topLevelComment": {"id": "UgzjM2eoG8CiQw0ghMh4AaABAg", "publishedAt": "2021-11-19T14:52:44Z", "author": "anders olesen", "text": "Great clear and concise teaching.  Great video . Thanks", "likes": 1}}, {"topLevelComment": {"id": "Ugyqcjg6ycNflAmh5j14AaABAg", "publishedAt": "2021-11-06T20:49:27Z", "author": "LHSgoatman", "text": "Thanks for the video, but I think you are mistaken or misspoke on the reuse pattern using capture group. You stated that if you replace the \\1 with the same capture pattern that it would be the same thing. I believe that is a mistake, for example use repeatstring. If you replaced the \\1 with (\\w+) then Yes it would match the string, but it would also match \u201cregex testing\u201d and I don\u2019t think that is what you are trying to do.", "likes": 0}}, {"topLevelComment": {"id": "UgzNiuDm5hqJCLxSjcF4AaABAg", "publishedAt": "2021-11-05T04:07:59Z", "author": "peter saunders", "text": "Be me, find a video, Beau is the narrator, leave understanding everything about rejects", "likes": 0}}, {"topLevelComment": {"id": "UgyEDCbz0tWh54Nfl_p4AaABAg", "publishedAt": "2021-10-06T08:18:24Z", "author": "John Bartmann", "text": "35:00 \"This is going to match for 5 or more characters\".  Noob question: doesn't the {5} mean it's going to match EXACTLY 5 characters?", "likes": 2}, "replies": [{"id": "UgyEDCbz0tWh54Nfl_p4AaABAg.9T91wSGwn3H9TLmudbkggl", "publishedAt": "2021-10-11T07:08:28Z", "author": "John Bartmann", "text": "@Z Thank you", "likes": 1}, {"id": "UgyEDCbz0tWh54Nfl_p4AaABAg.9T91wSGwn3H9TJieco4gZ5", "publishedAt": "2021-10-10T11:52:51Z", "author": "John Bartmann", "text": "@shukrullah shirzad thank you", "likes": 0}, {"id": "UgyEDCbz0tWh54Nfl_p4AaABAg.9T91wSGwn3H9TGhKpZcAES", "publishedAt": "2021-10-09T07:43:33Z", "author": "shukrullah shirzad", "text": "@John Bartmann it's because he is using it in a look ahead which means it will look through exactly \"five\" characters and is the code finds five character it will not care about the rest of the string.", "likes": 2}, {"id": "UgyEDCbz0tWh54Nfl_p4AaABAg.9T91wSGwn3H9TF2XDC8BPL", "publishedAt": "2021-10-08T16:19:00Z", "author": "Z", "text": "@John Bartmann  Yes, you are correct. He did make a mistake in the video.", "likes": 2}, {"id": "UgyEDCbz0tWh54Nfl_p4AaABAg.9T91wSGwn3H9TEBb3hKpeR", "publishedAt": "2021-10-08T08:19:04Z", "author": "John Bartmann", "text": "\u200b@Z He says \"this is going to match 5 or more characters\" but the code will match exactly 5. The code reads {5} but his voiceover suggests that the code reads {5,}. Is there a mistake or am I missing something?", "likes": 2}]}, {"topLevelComment": {"id": "UgwQ6p24JFSg83i_UgZ4AaABAg", "publishedAt": "2021-08-29T07:01:14Z", "author": "Felix Noel", "text": "This is certainly an informative video however it is not a beginner's video due to how fast paced it is and the assumption that some prerequisite knowledge is present. In this case JavaScript. Nonetheless it is a good tutorial for people who want to refresh their knowledge on this particular area.", "likes": 0}}, {"topLevelComment": {"id": "UgxScEPXhrm3tCm_cgZ4AaABAg", "publishedAt": "2021-08-25T02:34:02Z", "author": "Shashi Shekhar", "text": "Thank you Beau , much appreciated thing !", "likes": 0}}, {"topLevelComment": {"id": "UgzYqU28RW6VU6A-Z8p4AaABAg", "publishedAt": "2021-07-26T17:52:00Z", "author": "Casper de With", "text": "34:48 For anyone confused why he didn't put a comma after the 2 for \u201ctwo *or more*\u201d it\u2019s because it is in a lookahead: it only needs to see two digits and then it can stop looking because then we know there are at least two.", "likes": 14}}, {"topLevelComment": {"id": "UgwOmrlRwplglKR_RWV4AaABAg", "publishedAt": "2021-07-17T10:50:33Z", "author": "Abdo Mohamed", "text": "at Restrict Possible Usernames 24:40 \nif the string is three characters (one letter and two numbers ) it will get false \nso the expression should be /^[A-Za-z]{2,}\\d*$ |^[A-Za-z]{1,}\\d{2,}$/", "likes": 2}}, {"topLevelComment": {"id": "Ugynj14OD_vPhuxT2YV4AaABAg", "publishedAt": "2021-06-19T08:28:36Z", "author": "Gurunath Rao", "text": "Regex is the criminal !", "likes": 1}}, {"topLevelComment": {"id": "UgxPNu1FD9s_on8-VSB4AaABAg", "publishedAt": "2021-05-28T03:12:08Z", "author": "Stones", "text": "7:22", "likes": 0}}, {"topLevelComment": {"id": "UgxRUcP1IjWEr8IzjxJ4AaABAg", "publishedAt": "2021-05-04T23:36:37Z", "author": "J", "text": "I think at  36:40 there is mistake.\nHe says that replacing \\1 is just to avoid rewriting  (\\w+)\nHowever \n/(\\w+)\\s\\1/               tests TRUE for  \"regex regex\" but FALSE or \"regex somethingelse\"\n\n/(\\w+)\\s(\\w+)/         tests TRUE for  \"regex regex\" but TRUE for \"regex somethingelse\"", "likes": 1}}, {"topLevelComment": {"id": "UgzI88ikFEepvfpcR4B4AaABAg", "publishedAt": "2021-05-04T23:08:41Z", "author": "Ajeet Yadav", "text": "Thanks Beau;", "likes": 0}}, {"topLevelComment": {"id": "UgzK8_g76fC66zWY1-p4AaABAg", "publishedAt": "2021-05-03T13:05:27Z", "author": "Chunmaroo", "text": "\"    Hello World    \".replace(/^\\s+(.*)\\s$/,\"$1\")\nI failed the last challenge. lmao, I forgot to use the g flag", "likes": 0}}, {"topLevelComment": {"id": "UgxIQJrcZmi1eQ3ehDZ4AaABAg", "publishedAt": "2021-04-24T18:23:00Z", "author": "\u0421\u0435\u0440\u0433\u0435\u0439 \u041a\u0440\u0438\u0446\u0430", "text": "35:07 regex doesn't work in case of less than 5 chars console.log(/(?=\\w{5})(?=\\D*\\d{2})/.test(\"ast99\")) and returns true.", "likes": 0}}, {"topLevelComment": {"id": "Ugx8FM5S3jeRFFqtiPJ4AaABAg", "publishedAt": "2021-04-20T19:03:24Z", "author": "Ricardo Cambundo", "text": "This is a really good tutorial\nGot a deeper understanding of RegExp", "likes": 0}}, {"topLevelComment": {"id": "UgzHubcoLEjYD8pfLTl4AaABAg", "publishedAt": "2021-03-10T20:24:53Z", "author": "Anton Miroshnychenko", "text": "the solution at 34:58 is not correct and the original challenge throws an error if I use 5 instead of 6 when testing string '12345'. let me know if this is a misunderstanding \ud83d\ude42", "likes": 3}, "replies": [{"id": "UgzHubcoLEjYD8pfLTl4AaABAg.9Kib8cg43ri9VG28SF1Qc7", "publishedAt": "2021-11-27T18:37:38Z", "author": "Levis Raju", "text": "I think they improved the test cases now. Coz I got the same error", "likes": 1}]}, {"topLevelComment": {"id": "UgyUaBnuQ4QJlo9ZXDJ4AaABAg", "publishedAt": "2021-02-23T15:39:51Z", "author": "Holo", "text": "Last task you can do without replace\n/[^\\s].+[^\\s]/", "likes": 0}}, {"topLevelComment": {"id": "Ugygth8ZdEREUFGqs8F4AaABAg", "publishedAt": "2021-01-04T12:40:54Z", "author": "abdo emad", "text": "perfect !", "likes": 0}}, {"topLevelComment": {"id": "Ugx8rXh6qu389dAKFGR4AaABAg", "publishedAt": "2020-11-26T09:01:37Z", "author": "Shokhjakhon Rakhmatullaev", "text": "Thanks for the video i just finished it from freecodecamp and it was just great!!!", "likes": 1}}, {"topLevelComment": {"id": "UgzfIi3-SDyC9TYiJap4AaABAg", "publishedAt": "2020-11-24T14:24:31Z", "author": "Jibrayl Fayldao", "text": "quick question regarding the lookaheads example.\n\nlet pwRegex = /(?=\\w{5})(?=\\D*\\d{2})/;\n\nIn the above regex , Beau mentions using '\\D*'  in the second sub-pattern.\n\nim not understanding WHY thats being used !\n\nanyone know what the purpose of '\\D*' is and why its there ??", "likes": 0}, "replies": [{"id": "UgzfIi3-SDyC9TYiJap4AaABAg.9GS0dQOXGI29ImswgKgDup", "publishedAt": "2021-01-21T19:14:34Z", "author": "Octavus5", "text": "In short, without \\D*, this will work:\nlet sampleword = \"astronaut22242424\"\nBut this won't work:\nlet sampleword = \"astronaut222\"\nThe reason is that both w{5} and d{2} must be true at the same time. In the first case, when regex finds 2 decimals, there are also 5 alphanumeric characters from that point onward as well. So it's true.\nIn the 2nd case, when regex finds 2 decimals, there are only 3 alphanumeric characters from that point onwards. So the result must be false.\nHowever, if you add the \\D*, then regex will first see 'astronaut', then the 222. Together, that's also more than 5 alphanumeric characters.", "likes": 0}]}, {"topLevelComment": {"id": "Ugwg-PLIsiMGuflcPSZ4AaABAg", "publishedAt": "2020-11-21T07:17:32Z", "author": "Mukesh Kumar", "text": "Name\ud83d\ude4f\ud83d\ude4f\ud83d\ude4f\ud83d\ude4f\ud83d\ude4f", "likes": 0}}, {"topLevelComment": {"id": "Ugzz_tNm38BH1V7Qol14AaABAg", "publishedAt": "2020-10-17T21:02:58Z", "author": "Roel", "text": "27:00 I think you missed something about the case when the username is longer than 2 characters. You made it so it has to start with two letters.\nI think the right regex would be this :\n/^[A-Za-z]{2,}\\d*$|^[A-Za-z]\\d{2,}$/\n\nthis checks is the username starts with at least 2 or more letters and then it allows you to have 0 or more numbers at the end. OR also checks if it starts with only one letter but has to have 2 or more numbers for it to be allowed.", "likes": 10}, "replies": [{"id": "Ugzz_tNm38BH1V7Qol14AaABAg.9Evt1YxiiaT9jJQRzmCley", "publishedAt": "2022-12-06T21:58:40Z", "author": "julio arruda", "text": "@shukrullah shirzad d88 should pass but it wont", "likes": 0}, {"id": "Ugzz_tNm38BH1V7Qol14AaABAg.9Evt1YxiiaT9dblRensj9L", "publishedAt": "2022-07-18T07:08:04Z", "author": "Icaruz \u266a", "text": "WOOW YOU'RE HIRED!!!", "likes": 0}, {"id": "Ugzz_tNm38BH1V7Qol14AaABAg.9Evt1YxiiaT9cKUBRYlOfU", "publishedAt": "2022-06-16T08:10:50Z", "author": "chief_burkley", "text": "spec says numbers aren't allowed if the name is only 2 characters.", "likes": 0}, {"id": "Ugzz_tNm38BH1V7Qol14AaABAg.9Evt1YxiiaT9TGdUlwp9qh", "publishedAt": "2021-10-09T07:09:57Z", "author": "shukrullah shirzad", "text": "when you use {2,} it means at least two or more alphabets. so there is no problem with that", "likes": 0}, {"id": "Ugzz_tNm38BH1V7Qol14AaABAg.9Evt1YxiiaT9N9DOUIsXC2", "publishedAt": "2021-05-10T06:50:07Z", "author": "Aditi", "text": "thank you!!! yeah i was also thinking this and then i read your comment.", "likes": 0}]}, {"topLevelComment": {"id": "Ugxp7DjGA1gvOeJexqp4AaABAg", "publishedAt": "2020-10-12T13:58:52Z", "author": "German Duterte", "text": "Regular Expression is the most hardest part of all. It's easy to forget the rules and difficult to learn.", "likes": 9}}, {"topLevelComment": {"id": "Ugy4LKp7whXyyHdEtDd4AaABAg", "publishedAt": "2020-10-03T18:31:59Z", "author": "\u0645\u0627\u064a\u0627 \u0627\u0644\u0634\u0645\u0631\u064a", "text": "The Best Course in The World , Thank You From Syria Arab", "likes": 1}}, {"topLevelComment": {"id": "UgzkvEDcILMZVCTZmo94AaABAg", "publishedAt": "2020-09-02T07:27:01Z", "author": "Deepak Bhargav", "text": "THANK YOU BOSS", "likes": 0}}, {"topLevelComment": {"id": "Ugw_28iNBqsyxP6a_pd4AaABAg", "publishedAt": "2020-08-25T13:14:40Z", "author": "John Lewis", "text": "Excellent. Thanks!", "likes": 0}}, {"topLevelComment": {"id": "UgzA0c4PtVnlnXQfygh4AaABAg", "publishedAt": "2020-08-23T06:35:33Z", "author": "Danh Le", "text": "thank you for the explaination this is exactly what i am looking for", "likes": 1}}, {"topLevelComment": {"id": "UgzChhndfGXi09L8II54AaABAg", "publishedAt": "2020-06-06T15:58:02Z", "author": "Kevin Thomas", "text": "*FOR REFERENCE\r:----*\r\n\r\n\\f matches form-feed.\r\n\\r matches carriage return.\r\n\\n matches linefeed.\r\n\\t matches horizontal tab.\r\n\\v matches vertical tab.\r\n\\0 matches NUL character.\r\n[\\b] matches backspace.\r\n\\s matches whitespace (short for [\\f\\n\\r\\t\\v\\u00A0\\u2028\\u2029] ).\r\n\\S matches anything but a whitespace (short for [^\\f\\n\\r\\t\\v\\u00A0\\u2028\\u2029] ).\r\n\\w matches any alphanumerical character (word characters) including underscore (short for [a-zA-Z0-9_] ).\r\n\\W matches any non-word characters (short for [^a-zA-Z0-9_] ).\r\n\\d matches any digit (short for [0-9] ).\r\n\\D matches any non-digit (short for [^0-9] ).\r\n\\b matches a word boundary (the position between a word and a space).\r\n\\B matches a non-word boundary (short for [^\\b] ).\r\n\\cX matches a control character. E.g: \\cm matches control-M .\r\n\\xhh matches the character with two characters of hexadecimal code hh .\r\n\\uhhhh matches the Unicode character with four characters of hexadecimal code hhhh .", "likes": 35}}, {"topLevelComment": {"id": "UgzZ8j9csU9nzis9T-d4AaABAg", "publishedAt": "2020-06-06T15:35:54Z", "author": "Kevin Thomas", "text": "01:04 Using the Test Method\r\n02:15 Match Literal Strings\r\n02:57 Match a Literal String with Different Possibilities\r\n03:46 Ignore Case While Matching\r\n02:46 Extract Matches\r\n05:33 Find More Than the First Match\r\n07:16 Match Anything with Wildcard Period\r\n08:54 Match Single Character with Multiple Possibilities\r\n10:15 Match Letters of the Alphabet\r\n11:04 Match Numbers and Letters of the Alphabet\r\n12:15 Match Single Characters Not Specified\r\n13:33 Match Characters that Occur One or More Times\r\n14:19 Match Characters that Occur Zero or More Times\r\n15:32 Find Characters with Lazy Matching\r\n18:54 Find One or More Criminals in a Hunt\r\n19:58 Match Beginning String Patterns\r\n20:56 Match Ending String Patterns\r\n21:39 Match All Letters and Numbers\r\n22:47 Match Everything But Letters and Numbers\r\n23:35 Match All Numbers\r\n24:06 Match All Non-Numbers\r\n24:40 Restrict Possible Usernames\r\n27:28 Match White-space\r\n27:56 Match Non-White-space Characters\r\n28:26 Specify Upper and Lower Number of Matches\r\n29:40 Specify Only the Lower Number of Matches\r\n30:10 Specify Exact Number of Matches\r\n30:46 Check for All or None\r\n31:37 Positive and Negative Lookahead.....Check For Mixed Grouping of Characters\r\n35:09 Reuse Patterns Using Capture Group\r\n40:18 Use Capture Groups to Search and Replace\r\n43:17 Remove Whitespace from Start and End", "likes": 88}, "replies": [{"id": "UgzZ8j9csU9nzis9T-d4AaABAg.99Zpsea9pGJ9JosmZ4ygLC", "publishedAt": "2021-02-16T10:23:04Z", "author": "Hattori Hanzo", "text": "GOD", "likes": 1}, {"id": "UgzZ8j9csU9nzis9T-d4AaABAg.99Zpsea9pGJ9BkMei6tuJY", "publishedAt": "2020-07-30T20:05:31Z", "author": "Kevin Thomas", "text": "@Jairo Espinel .....\ud83d\ude05", "likes": 0}, {"id": "UgzZ8j9csU9nzis9T-d4AaABAg.99Zpsea9pGJ9BkMLN-kKmq", "publishedAt": "2020-07-30T20:02:45Z", "author": "Jairo Espinel", "text": "Oh, this made me so happy!!! Thanks a lot.", "likes": 4}]}, {"topLevelComment": {"id": "UgyRHwyFay8fItKHctp4AaABAg", "publishedAt": "2020-03-21T14:49:58Z", "author": "rj se", "text": "Awesome explained. Thanks sir", "likes": 0}}, {"topLevelComment": {"id": "UgybEdzq7CgDw9rAYc94AaABAg", "publishedAt": "2020-02-09T22:41:37Z", "author": "May Yuhan", "text": "* and + are so freaking hard to understand for me. Every time I think I understand something else appears which makes me totally question myself. Soooo annoying", "likes": 0}}, {"topLevelComment": {"id": "UgzoeNr0V4DLGOX9wVx4AaABAg", "publishedAt": "2020-01-26T21:28:05Z", "author": "Existenceisillusion", "text": "So RegEx is a portmanteau of 'rejular expressions'?", "likes": 1}}, {"topLevelComment": {"id": "UgwliIvM8_KPs5Xf3YV4AaABAg", "publishedAt": "2020-01-20T02:42:09Z", "author": "Spiridon K", "text": "Restrict Possible Usernames code says 'Your regex should match Z97' The correct is: let\u00a0userCheck\u00a0=\u00a0/^[a-z]([0-9]{2,}|[a-z]+\\d*)$/i;", "likes": 0}}, {"topLevelComment": {"id": "UgxOTo49Ix6ueULtxv94AaABAg", "publishedAt": "2020-01-15T11:22:53Z", "author": "Ali", "text": "And another super useful video. Thank You freeCodeCamp.", "likes": 0}}, {"topLevelComment": {"id": "UgznXhFaI5BhH98j4P14AaABAg", "publishedAt": "2019-12-25T01:19:54Z", "author": "Harwinder Thakur", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"id": "Ugy-8D1fc5AL9gxlMwd4AaABAg", "publishedAt": "2019-12-21T10:20:34Z", "author": "Rajesh Sahu", "text": "For the username pattern challenge, I think you have missed the last point that says If there are only two letters then there should not be any number ?", "likes": 8}, "replies": [{"id": "Ugy-8D1fc5AL9gxlMwd4AaABAg.92ngF3DZFlS9YF1O885-FY", "publishedAt": "2022-02-09T22:45:59Z", "author": "brandon2932", "text": "Yeah and his code doesn't pass the challenge. He did it correctly but left out an OR expression in case someone created something like a 3 character username  with 1 letter in the beginning instead of 2.\n\nRoel posted the correct answer", "likes": 1}, {"id": "Ugy-8D1fc5AL9gxlMwd4AaABAg.92ngF3DZFlS9Xs-8Jh_Hi6", "publishedAt": "2022-01-31T14:44:35Z", "author": "Ashutosh Lohogaonkar", "text": "@Roel Thanks man.. I was unable to pass one case of\"Z97\"", "likes": 1}, {"id": "Ugy-8D1fc5AL9gxlMwd4AaABAg.92ngF3DZFlS9EvsZiGX0HW", "publishedAt": "2020-10-17T20:58:53Z", "author": "Roel", "text": "@Ntintelo Mazibuko He made it so it has to start with 2 letters. But actually if the username is going to be longer than 2 characters needs to allow the 2nd one to be a number. I think the right regex would be  /^[A-Za-z]{2,}\\d*$|^[A-Za-z]\\d{2,}$/", "likes": 4}, {"id": "Ugy-8D1fc5AL9gxlMwd4AaABAg.92ngF3DZFlS9E5ATJwydgQ", "publishedAt": "2020-09-27T00:25:03Z", "author": "Shanker M", "text": "I was looking out for that as well.", "likes": 0}, {"id": "Ugy-8D1fc5AL9gxlMwd4AaABAg.92ngF3DZFlS9BMEx0SzjLO", "publishedAt": "2020-07-21T01:57:06Z", "author": "James Chiu", "text": "@Ntintelo Mazibuko it's actually not working, I put the code he used and it's not passing because the regex won't match \"Z97\" since he used the {2,0} it needs at least the first two  characters to be letters, it won't allow numbers.", "likes": 5}]}, {"topLevelComment": {"id": "UgydMAW70FFpqR_fArR4AaABAg", "publishedAt": "2019-12-16T22:42:19Z", "author": "Conax Liu", "text": "At 36:36, /(\\w+)\\s\\1/ is actually not the same to /(\\w+)\\s\\(\\w+)/\r\nWhen \\1 is used, it enforces the same set of characters, so \"regex regex\" will match but \"regex abcdefg\" won't match. (Second word must be the same as the first word.)\r\nHowever, if use /(\\w+)\\s\\(\\w+)/ then a string containing any two different words seperated by a space will also match.\nSo the purpose of using \\1 is not just to save space.", "likes": 10}, "replies": [{"id": "UgydMAW70FFpqR_fArR4AaABAg.92c89SIOOP39VxxiU41-qx", "publishedAt": "2021-12-15T05:16:06Z", "author": "Rakesh Mali", "text": "Exactly!", "likes": 0}]}, {"topLevelComment": {"id": "UgzxeeWyd16gxvx_wfh4AaABAg", "publishedAt": "2019-12-16T22:18:11Z", "author": "Conax Liu", "text": "When I come to Lookaheads at 31:38 it starts to get complicated and confusing.\r\nTake the positive lookahead example:\r\n\r\nlet quit = \"qu\";\r\nlet quRegex = /q(?=u)/;\r\nquit.match(quRegex);\r\n\r\nSo, quote from 32:29: \"It's first going to check for the 'q', and it's going to look ahead to make sure there is an 'u' LATER in the string.\"\r\n\r\nIf that statement is correct then I would expect the following also works:\r\n\r\nlet quit = \"quit fooling around\";\r\nlet quRegex = /q(?=fool)/;\r\nquit.match(quRegex);\r\n\r\nI expected it to work because I am taking \"later in the string\" as anything between the 'q' and the end of the string.\nSo if the string is \"quit fooling around\" then I expect /q(?=fool)/ will also match. However, this is not the case. The lookahead actually just check the pattern NEXT to the 'q'. So only these would match:\r\n/q(?=u)/;\r\n/q(?=uit)/;\r\n/q(?=[a-zA-z ]*fool)/;\n\r\nDoes that make sense or have I misunderstood something?", "likes": 2}, "replies": [{"id": "UgzxeeWyd16gxvx_wfh4AaABAg.92c5Oe0j3Al92moDdpY9E_", "publishedAt": "2019-12-21T02:11:02Z", "author": "Mario Cardenas", "text": "Yes that's right, in order to do what you want to do you would have to use  /q(?=.*fool)/", "likes": 0}]}, {"topLevelComment": {"id": "Ugxt8XNV4M77ZYwe4-R4AaABAg", "publishedAt": "2019-12-16T03:35:02Z", "author": "Conax Liu", "text": "All my life I felt like something was missing, until I found you.", "likes": 6}, "replies": [{"id": "Ugxt8XNV4M77ZYwe4-R4AaABAg.92a4rTIVb-l96HlrLe_7pa", "publishedAt": "2020-03-17T01:40:15Z", "author": "\u0812", "text": "Corona, Corona... Be my Corona...", "likes": 0}, {"id": "Ugxt8XNV4M77ZYwe4-R4AaABAg.92a4rTIVb-l94ralfHJaxu", "publishedAt": "2020-02-10T15:52:28Z", "author": "May Yuhan", "text": "<3 love u too", "likes": 1}]}, {"topLevelComment": {"id": "UgxfsLj56Cn0bdzVuJV4AaABAg", "publishedAt": "2019-12-10T17:09:24Z", "author": "1 1001", "text": "nice good", "likes": 0}}, {"topLevelComment": {"id": "UgxU4mhWFatTtdccxr94AaABAg", "publishedAt": "2019-12-05T10:02:42Z", "author": "Ya\u015fam", "text": "This video is soo great. gives everything concisely. sincerely thank you!", "likes": 2}}, {"topLevelComment": {"id": "UgxrdaViGqNbT9z7Uxx4AaABAg", "publishedAt": "2019-12-03T04:08:23Z", "author": "Gerardo Devora", "text": "anyone got a link for regex", "likes": 0}}, {"topLevelComment": {"id": "UgzxpBxVtIuzRPanw9V4AaABAg", "publishedAt": "2019-11-25T04:29:58Z", "author": "Vinicius Ra", "text": "Why not use comma instead of using let multiple times? \n\ninstead of :\n\n\nlet a = 0\nlet b = 1\nlet c = 2\nlet d = 3\n\n\nuse this:\n\n\nlet a = 0, b = 1, c = 2, d = 3;", "likes": 0}, "replies": [{"id": "UgzxpBxVtIuzRPanw9V4AaABAg.91k6SWwDBSC94Fwai-avYM", "publishedAt": "2020-01-26T15:32:50Z", "author": "But Muh Feels", "text": "It's not gonna fit in a single line. Think about mobile viewers", "likes": 1}]}, {"topLevelComment": {"id": "Ugy4-yWcpE3GGJP1L8l4AaABAg", "publishedAt": "2019-10-26T14:27:52Z", "author": "alex savov", "text": "First of all sorry my bad english...Wonderfull tutorial...just to mention...There's an error on 27:22 : about username restrictions...in the conditions it was mentioned that 2 letter usernames cannot have numbers after letters but actually it can...pls fix it", "likes": 1}, "replies": [{"id": "Ugy4-yWcpE3GGJP1L8l4AaABAg.90Yw1KNu9AF92cBwqpsj5W", "publishedAt": "2019-12-16T23:15:24Z", "author": "Conax Liu", "text": "I don't see the issue you described. What user name did you provide?", "likes": 0}]}, {"topLevelComment": {"id": "UgxBGd7z4AsFJZ0kHyt4AaABAg", "publishedAt": "2019-10-25T13:56:06Z", "author": "Hammad Ur rehman", "text": "Well explained best video one can get on regex.", "likes": 1}}, {"topLevelComment": {"id": "UgzvQrhrsmcMLrJk1H94AaABAg", "publishedAt": "2019-10-09T01:21:19Z", "author": "Steven Barnes", "text": "That was insanely helpful. Thank you so much Beau. I see 8 people don't have complete control over their mouse when clicking the like button.", "likes": 3}}, {"topLevelComment": {"id": "UgwQQ6hqRg8QlJv4Inp4AaABAg", "publishedAt": "2019-10-05T14:55:16Z", "author": "Oliver Wood", "text": "This has helped me to understand htaccess URL rewrites", "likes": 5}}, {"topLevelComment": {"id": "UgyvbOr2t1qKJmbYN194AaABAg", "publishedAt": "2019-09-28T18:40:22Z", "author": "KARAN", "text": "Thanks Beau !", "likes": 0}}, {"topLevelComment": {"id": "UgyVZvT345CS15dv6Mt4AaABAg", "publishedAt": "2019-09-27T10:54:20Z", "author": "It's Aaron", "text": "i suppose i cant master immediately since regex is so lengthy,  i hope to learn this on a need to learn basis.\nwhat i dont use i forget immediately. thanks BTW", "likes": 16}, "replies": [{"id": "UgyVZvT345CS15dv6Mt4AaABAg.9-NsY1AwPJT9-ae2lNRHum", "publishedAt": "2019-10-02T19:17:06Z", "author": "Alex Silva", "text": "exactly the same with me bro. I will just only try to learn the basics of it", "likes": 2}]}, {"topLevelComment": {"id": "UgxB9rq9BIuyzTmBuUd4AaABAg", "publishedAt": "2019-09-07T19:01:27Z", "author": "Pablo Nevares", "text": "I think there's an error in the video explaining capture groups. At 36:36 the author says that this:\n/(\\w+)\\s\\1/\nand this:\n/(\\w+)\\s(\\w+)/\n\n\nWould have been the same thing, just shorter due to using \\1 to refer to the previous capture group. These are not the same regex patterns. The first example will test whether the second string is a repeat of the first. The second example will allow two different strings to pass the test. Try both with \"regex regex\" and \"regex rerex\" to see the difference.", "likes": 2}, "replies": [{"id": "UgxB9rq9BIuyzTmBuUd4AaABAg.8zaFODnEEuN92cB4aZRju_", "publishedAt": "2019-12-16T23:07:52Z", "author": "Conax Liu", "text": "Ha, I just commented on that, and then started to read other people's comments...", "likes": 0}, {"id": "UgxB9rq9BIuyzTmBuUd4AaABAg.8zaFODnEEuN9-TJAp2Cdgt", "publishedAt": "2019-09-29T13:32:02Z", "author": "Ryan Conner", "text": "I noticed this too. Figured I'd see if there were any other comments before posting.", "likes": 1}]}, {"topLevelComment": {"id": "UgxBCqDANUHQEQ0bS794AaABAg", "publishedAt": "2019-09-07T17:57:16Z", "author": "Arthur Serafim", "text": "Just got busted in a code test, so here am I!", "likes": 1}}, {"topLevelComment": {"id": "UgyM8wgW5k8GFMOW0pN4AaABAg", "publishedAt": "2019-08-14T13:17:34Z", "author": "Mr Zack", "text": "million thanks for this awesome video!  it really taught me a lot.", "likes": 1}}, {"topLevelComment": {"id": "UgwiWI7dYtEQ1P37kwN4AaABAg", "publishedAt": "2019-07-23T13:00:05Z", "author": "ThugLife", "text": "Helpful as always Beau.", "likes": 0}}, {"topLevelComment": {"id": "Ugyd9NkoUQ2MHZQuWfh4AaABAg", "publishedAt": "2019-07-19T04:58:20Z", "author": "Brandon Moffitt", "text": "Didn't realize Jerry Seinfeld is getting into the RegEx game. Great course, thank you!!", "likes": 118}, "replies": [{"id": "Ugyd9NkoUQ2MHZQuWfh4AaABAg.8xZ-9OGNqiq9iLPys_y6N8", "publishedAt": "2022-11-12T20:01:38Z", "author": "Jay in Japan", "text": "@BlueTravesty Underrated reply lmao \ud83e\udd23", "likes": 0}, {"id": "Ugyd9NkoUQ2MHZQuWfh4AaABAg.8xZ-9OGNqiq9V8uZYSLHYl", "publishedAt": "2021-11-25T00:08:01Z", "author": "Ian Greer", "text": "Don\u2019t get me started on airline food!", "likes": 2}, {"id": "Ugyd9NkoUQ2MHZQuWfh4AaABAg.8xZ-9OGNqiq9V5_xn6nSe3", "publishedAt": "2021-11-23T17:10:15Z", "author": "BlueTravesty", "text": "\"What is the deal with regular expressions? Does this imply that there are irregular expressions? Maybe they just need more fiber in their diet.\"", "likes": 10}, {"id": "Ugyd9NkoUQ2MHZQuWfh4AaABAg.8xZ-9OGNqiq9V2zMS4rPK0", "publishedAt": "2021-11-22T16:54:29Z", "author": "Faraz A", "text": "Underrated comment", "likes": 0}, {"id": "Ugyd9NkoUQ2MHZQuWfh4AaABAg.8xZ-9OGNqiq9LQwLBFch43", "publishedAt": "2021-03-28T10:55:55Z", "author": "Oussama", "text": "Hahahahha", "likes": 0}]}, {"topLevelComment": {"id": "UgxQJCoQokP-BixSHAR4AaABAg", "publishedAt": "2019-06-12T16:28:31Z", "author": "Ankit Mehrotra", "text": "Beau ur name is sweet and so is ur way of explaining everything..Many thanks beau, ur awesome..\ud83d\ude01\ud83d\ude01\ud83d\udc4f\ud83d\udc4f\ud83c\udf7b\ud83c\udf7b", "likes": 0}, "replies": [{"id": "UgxQJCoQokP-BixSHAR4AaABAg.8w4xj5IaHfS90N4uDEwRMr", "publishedAt": "2019-10-22T00:03:15Z", "author": "Young lonny", "text": "Beau is beautiful in french (masculine, belle is feminine)", "likes": 0}]}, {"topLevelComment": {"id": "Ugyf7ntzdWogt9x-E2t4AaABAg", "publishedAt": "2019-06-07T07:19:35Z", "author": "Abdullah Furkan \u00d6zbek", "text": "I really consalidate my regex knowledge, thank you \ud83d\ude0a", "likes": 1}}, {"topLevelComment": {"id": "UgzCl4sN6jdZN4o-LU94AaABAg", "publishedAt": "2019-05-19T14:24:49Z", "author": "Tomas Rabazo", "text": "https://regexr.com/", "likes": 0}}, {"topLevelComment": {"id": "Ugxxd3I9nUaLScaQyz14AaABAg", "publishedAt": "2019-05-03T02:18:01Z", "author": "sourav suman", "text": "5:28 what will happen if their is multiple match in a single line? Will it return array of matching strings?", "likes": 0}, "replies": [{"id": "Ugxxd3I9nUaLScaQyz14AaABAg.8uSRap7dpYw92cBEUIjrpw", "publishedAt": "2019-12-16T23:09:13Z", "author": "Conax Liu", "text": "@Red PS Right.", "likes": 0}, {"id": "Ugxxd3I9nUaLScaQyz14AaABAg.8uSRap7dpYw8uTbwlsges-", "publishedAt": "2019-05-03T13:16:22Z", "author": "Red PS", "text": "i think just the first unless g is specified at the end of the regex..... right?", "likes": 0}]}, {"topLevelComment": {"id": "Ugwm2vV8Dg0_V_CO08N4AaABAg", "publishedAt": "2019-04-25T20:17:23Z", "author": "Ahmed Hamed", "text": "Man!! they've must read my mind!", "likes": 2}}, {"topLevelComment": {"id": "UgzLM9uSi_M3g1PJ-Fx4AaABAg", "publishedAt": "2019-04-24T16:13:56Z", "author": "Faronildo Melancia", "text": "I'm brasilian and i love your channel.Congratulations!!", "likes": 0}}, {"topLevelComment": {"id": "Ugy0WwgI8boiiJALO2N4AaABAg", "publishedAt": "2019-04-22T18:45:02Z", "author": "Tony Danza", "text": "I guess specifying number of matches inside a look ahead uses different syntax than specifying number of matches not inside a look ahead? outside a look ahead {5} means exactly 5 but inside it means at minimum I take it?", "likes": 0}}, {"topLevelComment": {"id": "UgwOwmsSfggbRXwtBXF4AaABAg", "publishedAt": "2019-04-22T14:00:08Z", "author": "Sumit Kumar", "text": "Thanks for Great tutorial.", "likes": 2}}, {"topLevelComment": {"id": "UgwT6FFYLdSCdq0coSd4AaABAg", "publishedAt": "2019-04-22T08:31:05Z", "author": "nkplus", "text": "Thanks Beau !! ---- Finally got !! which I was desperately waiting for ...", "likes": 2}}, {"topLevelComment": {"id": "UgyZvFIlr02ByiN-P354AaABAg", "publishedAt": "2019-04-21T10:28:27Z", "author": "Lurajer", "text": "Thank You \ud83e\udd29", "likes": 0}}, {"topLevelComment": {"id": "UgzNPhD_YG1ZP9JuaZh4AaABAg", "publishedAt": "2019-04-20T17:47:03Z", "author": "Davis", "text": "Hey, will I be able to use this in Java? I googled, it says lookbehind isn't supported in js, or something like that!", "likes": 0}}, {"topLevelComment": {"id": "UgzOc0XzWwPO9uH9lFR4AaABAg", "publishedAt": "2019-04-20T16:50:47Z", "author": "Rainforest", "text": "Very educational. Thanks a lot.", "likes": 0}}, {"topLevelComment": {"id": "Ugz8pYuVzg1BOxWfdTJ4AaABAg", "publishedAt": "2019-04-19T15:09:59Z", "author": "Christopher Krah", "text": "37:03 I don't think that /(\\w+)\\s\\1/ is the same as /(\\w+)\\s(\\w+)/\nThe former matches the exact same word again. So it would match \"apple apple\" but not \"apple kiwi\".\nWhereas the latter would match both \"apple apple\" and \"apple kiwi\".\nCorrect me if I'm wrong.", "likes": 2}, "replies": [{"id": "Ugz8pYuVzg1BOxWfdTJ4AaABAg.8tuloaTws788txeqNDB_Be", "publishedAt": "2019-04-20T18:06:47Z", "author": "Christopher Krah", "text": "@Davis Unfortunately, there is no standard for regular expressions. There are a lot of overlaps and the basics are the same, but a lot of details differ. Checkout https://www.regular-expressions.info - it has a lot of information on the different flavors of Regex.", "likes": 0}, {"id": "Ugz8pYuVzg1BOxWfdTJ4AaABAg.8tuloaTws788txccrZN6k3", "publishedAt": "2019-04-20T17:47:27Z", "author": "Davis", "text": "Is regex the same in Java?", "likes": 0}, {"id": "Ugz8pYuVzg1BOxWfdTJ4AaABAg.8tuloaTws788txB1r9lHI-", "publishedAt": "2019-04-20T13:37:36Z", "author": "Martin", "text": "I was thinking the exact same thing. I think you are correct.", "likes": 1}]}, {"topLevelComment": {"id": "Ugw49UXBTeY7b2eYgpB4AaABAg", "publishedAt": "2019-04-19T13:38:01Z", "author": "Prashant Suryawanshi", "text": "Can you tell me , which code editor  are you using?", "likes": 0}, "replies": [{"id": "Ugw49UXBTeY7b2eYgpB4AaABAg.8tubHycZKTG8yA4Pyf6ev6", "publishedAt": "2019-08-03T09:14:40Z", "author": "TheSavageSalmon", "text": "use vscode", "likes": 0}, {"id": "Ugw49UXBTeY7b2eYgpB4AaABAg.8tubHycZKTG8u1JtQ5y9cq", "publishedAt": "2019-04-22T13:31:09Z", "author": "freeCodeCamp.org", "text": "scrimba.com", "likes": 1}]}, {"topLevelComment": {"id": "UgyGPG5ZF3xMv9KKH154AaABAg", "publishedAt": "2019-04-19T07:09:38Z", "author": "Host Promo", "text": "If regex was easy, I wouldnt be watching this \ud83d\udd25 hard to remember how it works.", "likes": 27}}, {"topLevelComment": {"id": "UgwWvFOPD41ha-4MPPp4AaABAg", "publishedAt": "2019-04-19T02:35:45Z", "author": "SERIOUS THINKIG ULTIMATE RESULT", "text": "Sir tell me webmethod", "likes": 0}}, {"topLevelComment": {"id": "UgxzIWPtIAVyZ_33rh54AaABAg", "publishedAt": "2019-04-19T01:31:47Z", "author": "The Pup", "text": "Little known fact. The guy who invented regex also invented water boarding", "likes": 30}, "replies": [{"id": "UgxzIWPtIAVyZ_33rh54AaABAg.8ttJAshHWIY9Un_wnWFHCj", "publishedAt": "2021-11-16T08:04:32Z", "author": "Script Guru", "text": "On himself, to take his mind off regex.", "likes": 1}, {"id": "UgxzIWPtIAVyZ_33rh54AaABAg.8ttJAshHWIY9St8hYrwaXg", "publishedAt": "2021-09-29T18:50:26Z", "author": "anurag dhyani", "text": "good one", "likes": 0}, {"id": "UgxzIWPtIAVyZ_33rh54AaABAg.8ttJAshHWIY9Q8N4YC-7dl", "publishedAt": "2021-07-23T12:29:43Z", "author": "Steve Bico", "text": "Hahaha", "likes": 0}, {"id": "UgxzIWPtIAVyZ_33rh54AaABAg.8ttJAshHWIY9FDNoJzU9Zh", "publishedAt": "2020-10-25T01:26:58Z", "author": "I, Lemaire", "text": "@Noel Kirkland lol.  Ty for the explanation.  God help me not to be simple.", "likes": 1}, {"id": "UgxzIWPtIAVyZ_33rh54AaABAg.8ttJAshHWIY9CiAAN1i-Mk", "publishedAt": "2020-08-23T20:09:18Z", "author": "Noel Kirkland", "text": "Haha, one guy says \"source?\" haha. I think what OP was saying is that learning regex is like torture.", "likes": 4}]}, {"topLevelComment": {"id": "UgwkqYBEtIMu8HKOZnV4AaABAg", "publishedAt": "2019-04-18T21:48:29Z", "author": "TheSclare", "text": "Finally someone is talking about this topic", "likes": 1}, "replies": [{"id": "UgwkqYBEtIMu8HKOZnV4AaABAg.8tsucPLFRnf8ttOZpUQyUX", "publishedAt": "2019-04-19T02:18:52Z", "author": "Dinesh Bala", "text": "freeCodeCamp explanation is dope.. \ud83d\ude0a", "likes": 1}]}, {"topLevelComment": {"id": "UgxtSMJSk46pJAg4pFF4AaABAg", "publishedAt": "2019-04-18T20:50:53Z", "author": "lee boss", "text": "Why does I mean capitals and non capital?\n\nWhy does g mean flag all? And how do you know this?", "likes": 1}, "replies": [{"id": "UgxtSMJSk46pJAg4pFF4AaABAg.8tso1YlzoHT8tuelTnqFEV", "publishedAt": "2019-04-19T14:08:23Z", "author": "lee boss", "text": "freeCodeCamp.org thanks\ud83d\udc4d\ud83c\udffb", "likes": 0}, {"id": "UgxtSMJSk46pJAg4pFF4AaABAg.8tso1YlzoHT8tuXH6AHRTQ", "publishedAt": "2019-04-19T12:54:12Z", "author": "freeCodeCamp.org", "text": "\"g\" stands for global match, \"i\" stands for ignore case", "likes": 4}, {"id": "UgxtSMJSk46pJAg4pFF4AaABAg.8tso1YlzoHT8ttI4O9hrPK", "publishedAt": "2019-04-19T01:22:09Z", "author": "kzack", "text": "it's a standard thingy big boi, all programming languages has some kind of regular expression", "likes": 2}]}, {"topLevelComment": {"id": "UgwKgWw-jfy54Dq32tV4AaABAg", "publishedAt": "2019-04-18T19:57:22Z", "author": "Rajesh Prasadh", "text": "Sir do you have any course which can teach me about how to make dynamic    graph using JavaScript\nI want to make one project for my college.\nIn that I will compare 10 wealthiest people in the world between 1990 to  2019\nAlso we need to fetch data from another website for this project.\nPlease help and reply", "likes": 0}, "replies": [{"id": "UgwKgWw-jfy54Dq32tV4AaABAg.8tshubqIL0D8tuX4GeiGiK", "publishedAt": "2019-04-19T12:52:27Z", "author": "freeCodeCamp.org", "text": "Look into D3: https://www.youtube.com/watch?v=C4t6qfHZ6Tw", "likes": 1}]}, {"topLevelComment": {"id": "Ugxp6wFYihvH4x-0c1d4AaABAg", "publishedAt": "2019-04-18T19:33:20Z", "author": "Abhishek Kumar", "text": "Thank u for this awesome video", "likes": 3}}, {"topLevelComment": {"id": "Ugw1G2-D2qDjeZBFuFx4AaABAg", "publishedAt": "2019-04-18T19:26:27Z", "author": "Jenesh Napit", "text": "What a coincidence I just got to regex like 10 mins ago. DM me if anyone looking to work on projects together.", "likes": 2}, "replies": [{"id": "Ugw1G2-D2qDjeZBFuFx4AaABAg.8tseN5oqjan8ttGs33EqC4", "publishedAt": "2019-04-19T01:11:36Z", "author": "bafana Mhlamvu", "text": "\u200b@Jenesh Napit\u200bAlthough relearning JavaScript, that sums my current level of the language... I'm interested in doing these projects...", "likes": 2}, {"id": "Ugw1G2-D2qDjeZBFuFx4AaABAg.8tseN5oqjan8ttCo7U2hLk", "publishedAt": "2019-04-19T00:36:06Z", "author": "Jenesh Napit", "text": "@bafana Mhlamvu I'd say begginner started learning JS a month ago know the basics and stuff but following the FCC JS at the moment. Can do DOM manipulation and have made a simple todo list.", "likes": 0}, {"id": "Ugw1G2-D2qDjeZBFuFx4AaABAg.8tseN5oqjan8ttCBVoMicP", "publishedAt": "2019-04-19T00:30:42Z", "author": "bafana Mhlamvu", "text": "What level of coding knowledge are those projects catering for?", "likes": 0}]}, {"topLevelComment": {"id": "UgyJmaskhr-l2RzFw2p4AaABAg", "publishedAt": "2019-04-18T16:18:24Z", "author": "Rocky Balboa", "text": "Very detailed and we'll put together!", "likes": 2}}, {"topLevelComment": {"id": "UgxyenuVTi0vQn9bHsN4AaABAg", "publishedAt": "2019-04-18T16:05:55Z", "author": "Vertigo", "text": "Free Coke Amp", "likes": 5}}, {"topLevelComment": {"id": "UgwNP5Wmx_D2QB5GU8d4AaABAg", "publishedAt": "2019-04-18T15:35:39Z", "author": "Webnoob", "text": "Excellent tutorial. Thx.", "likes": 0}}, {"topLevelComment": {"id": "UgwEwc2wJ1s0TfK43_F4AaABAg", "publishedAt": "2019-04-18T15:25:05Z", "author": "Bruno", "text": "yeah!! i was waiting for this, thanyou very much", "likes": 1}}, {"topLevelComment": {"id": "UgwSGujv-omwdAIx-5V4AaABAg", "publishedAt": "2019-04-18T15:11:18Z", "author": "Dark CodeLab", "text": "Waiting for this!!!!!!", "likes": 0}}]}