{"video": {"id": "09_LlHjoEiY", "publishedAt": "2019-10-09T15:52:04Z", "title": "Algorithms Course - Graph Theory Tutorial from a Google Engineer", "description": "This full course provides a complete introduction to Graph Theory algorithms in computer science. Knowledge of how to create and design excellent algorithms is an essential skill required in becoming a great programmer.\n\nYou will learn how many important algorithms work. The algorithms are accompanied by working source code in Java to solidify your understanding.\n\n\ud83d\udcbb Code: https://github.com/williamfiset/algorithms\n\ud83d\udd17 Slides: https://github.com/williamfiset/Algorithms/tree/master/slides/graphtheory\n\n\ud83c\udfa5 Course created by William Fiset. Check out his YouTube channel: https://www.youtube.com/channel/UCD8yeTczadqdARzQUp29PJw\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Graph Theory Introduction\n\u2328\ufe0f (0:13:53) Problems in Graph Theory\n\u2328\ufe0f (0:23:15) Depth First Search Algorithm\n\u2328\ufe0f (0:33:18) Breadth First Search Algorithm\n\u2328\ufe0f (0:40:27) Breadth First Search grid shortest path\n\u2328\ufe0f (0:56:23) Topological Sort Algorithm\n\u2328\ufe0f (1:09:52) Shortest/Longest path on a Directed Acyclic Graph (DAG)\n\u2328\ufe0f (1:19:34) Dijkstra's Shortest Path Algorithm\n\u2328\ufe0f (1:43:17) Dijkstra's Shortest Path Algorithm | Source Code\n\u2328\ufe0f (1:50:47) Bellman Ford Algorithm\n\u2328\ufe0f (2:05:34) Floyd Warshall All Pairs Shortest Path Algorithm\n\u2328\ufe0f (2:20:54) Floyd Warshall All Pairs Shortest Path Algorithm | Source Code\n\u2328\ufe0f (2:29:19) Bridges and Articulation points Algorithm\n\u2328\ufe0f (2:49:01) Bridges and Articulation points source code\n\u2328\ufe0f (2:57:32) Tarjans Strongly Connected Components algorithm\n\u2328\ufe0f (3:13:56) Tarjans Strongly Connected Components algorithm source code\n\u2328\ufe0f (3:20:12) Travelling Salesman Problem | Dynamic Programming\n\u2328\ufe0f (3:39:59) Travelling Salesman Problem source code | Dynamic Programming\n\u2328\ufe0f (3:52:27) Existence of Eulerian Paths and Circuits\n\u2328\ufe0f (4:01:19) Eulerian Path Algorithm\n\u2328\ufe0f (4:15:47) Eulerian Path Algorithm | Source Code\n\u2328\ufe0f (4:23:00) Prim's Minimum Spanning Tree Algorithm\n\u2328\ufe0f (4:37:05) Eager Prim's Minimum Spanning Tree Algorithm\n\u2328\ufe0f (4:50:38) Eager Prim's Minimum Spanning Tree Algorithm | Source Code\n\u2328\ufe0f (4:58:30) Max Flow Ford Fulkerson | Network Flow\n\u2328\ufe0f (5:11:01) Max Flow Ford Fulkerson | Source Code\n\u2328\ufe0f (5:27:25) Unweighted Bipartite Matching | Network Flow\n\u2328\ufe0f (5:38:11) Mice and Owls problem | Network Flow\n\u2328\ufe0f (5:46:11) Elementary Math problem | Network Flow\n\u2328\ufe0f (5:56:19) Edmonds Karp Algorithm | Network Flow\n\u2328\ufe0f (6:05:18) Edmonds Karp Algorithm | Source Code\n\u2328\ufe0f (6:10:08) Capacity Scaling | Network Flow\n\u2328\ufe0f (6:19:34) Capacity Scaling | Network Flow | Source Code\n\u2328\ufe0f (6:25:04) Dinic's Algorithm | Network Flow\n\u2328\ufe0f (6:36:09) Dinic's Algorithm | Network Flow | Source Code\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://www.freecodecamp.org/news", "duration": "PT6H44M40S", "likes": "40268", "views": "1464544"}, "comments": [{"topLevelComment": {"id": "Ugyo5ys2ewMXf7eqoRR4AaABAg", "publishedAt": "2023-01-29T22:47:03Z", "author": "Olivia Cinnamon", "text": "is Graph Theory the same thing as Network Science?", "likes": 0}}, {"topLevelComment": {"id": "UgysKCAluNIiANnTvfl4AaABAg", "publishedAt": "2023-01-28T22:36:18Z", "author": "Mario Topez", "text": "Good", "likes": 0}}, {"topLevelComment": {"id": "Ugy8v-Jabm8JLnL0_ZJ4AaABAg", "publishedAt": "2023-01-25T21:51:34Z", "author": "Abida Shaheen", "text": "At 1:38:19 , if I'm not mistaken the value should have been 8 for node 3, not 7 as 5+3 = 8", "likes": 0}}, {"topLevelComment": {"id": "Ugx2LqtjAwjzFW6P59B4AaABAg", "publishedAt": "2023-01-03T19:13:50Z", "author": "Shreyansh Jain", "text": "At 5:21 \u201cA tree is an undirected graph with no cycles\u201d, it should be a *connected* undirected graph with no cycles.", "likes": 0}}, {"topLevelComment": {"id": "Ugx4uLnERWFlDLm3tyx4AaABAg", "publishedAt": "2022-12-26T18:12:29Z", "author": "Informationwith K.S", "text": "Data Structure Lab 15: Graph (Directed, Undirected, Weighted ) Implementation in C++ \r\nhttps://youtu.be/kKw1h1_VWlA", "likes": 0}}, {"topLevelComment": {"id": "UgyMEjwJCL8o7oMz-AF4AaABAg", "publishedAt": "2022-12-08T09:19:24Z", "author": "Mahmudul Islam", "text": "would you kindly tell me about the book where you have taken all the sudo codes??", "likes": 0}}, {"topLevelComment": {"id": "Ugycd26YOObw3IVHifR4AaABAg", "publishedAt": "2022-11-28T07:04:34Z", "author": "Azizbek IbnHamid", "text": "amazing course!", "likes": 0}}, {"topLevelComment": {"id": "UgyqQNwZsEgTrarE1Vx4AaABAg", "publishedAt": "2022-11-13T13:20:00Z", "author": "Adonis Nu\u00f1ez", "text": "At min 3:11:09 in the Trajan\u2019s Algorithm pseudo code, I guess that the line \u2018low[node] = ids[at]\u2019 is not necessary, because this action is already done in the line:\r\n\u2018if(onStack[to]): low[at] = min(low[at], low[to])\u2019 when DSF starts backtracking, I have commented this line in my code and is working as expected, am I wrong? If so, please tell me why.", "likes": 0}}, {"topLevelComment": {"id": "UgzPZZN6rYb9iBIMTdx4AaABAg", "publishedAt": "2022-10-30T11:12:08Z", "author": "iOS_CalculatorApp Calie", "text": "Thank you for sharing invaluable video.", "likes": 0}}, {"topLevelComment": {"id": "UgysQ-WKPAHsZ9b71Ol4AaABAg", "publishedAt": "2022-10-20T17:29:27Z", "author": "Maksym Shvernenko", "text": "I keep coming back to this for refreshers while preparing for my interviews. Such a wonderful resource.", "likes": 6}}, {"topLevelComment": {"id": "Ugw0c_dQIow2b1NEBAF4AaABAg", "publishedAt": "2022-10-18T06:28:04Z", "author": "Reo\u30ec\u30aa", "text": "this content is too great.", "likes": 0}}, {"topLevelComment": {"id": "UgzsZCsAY3HWkCM_UE94AaABAg", "publishedAt": "2022-10-12T02:31:27Z", "author": "Raj Kamal", "text": "While checking the articulation point (2:56:52). Shouldn't we check the condition for more then 1 outgoing edge for children as well. In current presentation we are only checking for start node of the cycle.", "likes": 0}}, {"topLevelComment": {"id": "UgxZZ8uOsvWSgG8sRsd4AaABAg", "publishedAt": "2022-10-10T13:29:09Z", "author": "endothermic exothermic", "text": "2:46:37 if node 0 has one more outgoing edge to node 2, it's still in a cycle yet it's not an articulation point. By the way to judge, it will be an art point tho, may i know what is the definition of \"outgoing edges\"? It seems to me that, a node will be an art point as it's trapped in a cycle and it's the entrance of the cycle such that it has connected node outside of the cycle.", "likes": 0}, "replies": [{"id": "UgxZZ8uOsvWSgG8sRsd4AaABAg.9h-jpN7ULeg9h-kW39OnSY", "publishedAt": "2022-10-10T13:35:07Z", "author": "endothermic exothermic", "text": "Thus at 2:57:00 the code with graph (0,1)(0,2)... It's, node 0 has two outgoing edges (pointing to 1 and 2) \nWhy it wouldn't be judged as an articulation point?", "likes": 0}]}, {"topLevelComment": {"id": "UgxV374T5SiHDZrvtMd4AaABAg", "publishedAt": "2022-10-10T12:41:12Z", "author": "endothermic exothermic", "text": "May i ask, 2:41:46 why this point the else part would be min(low[at], ids[to])  instead of low[to]  as well? Suppose we r able to reach that node, yet it has been visited, we can have a path to the nodes that that \"to\" node did go? In such case, if the node \" to\" have been a lower id node before ,shouldnt \"at\" node be able to reach it?", "likes": 0}}, {"topLevelComment": {"id": "UgzOxsG01VGhYSXUxwl4AaABAg", "publishedAt": "2022-09-30T11:12:50Z", "author": "rick", "text": "jesus.", "likes": 0}}, {"topLevelComment": {"id": "UgyNZjJPktIANs5VlzF4AaABAg", "publishedAt": "2022-09-15T05:03:18Z", "author": "Antisocial", "text": "Anyone else find this on they fyp?", "likes": 0}}, {"topLevelComment": {"id": "UgxC-j3qY5xDvieCQap4AaABAg", "publishedAt": "2022-08-03T14:16:33Z", "author": "nikhil singh", "text": "Which algorithm can be used to find independent islands? I watched this long back and not able to find it now.", "likes": 0}}, {"topLevelComment": {"id": "UgylF0B4GD1lLeCVmwx4AaABAg", "publishedAt": "2022-08-01T22:20:06Z", "author": "Glenn Zarmanov", "text": "Thanks so much", "likes": 0}}, {"topLevelComment": {"id": "UgyK4SI1nUsBnLasB294AaABAg", "publishedAt": "2022-07-30T05:02:54Z", "author": "Ketan Rathod", "text": "very good lecture ...", "likes": 0}}, {"topLevelComment": {"id": "UgyPLrq84NGPH-Nz0lB4AaABAg", "publishedAt": "2022-07-24T17:32:12Z", "author": "Shahzeb Ahmad", "text": "There is a limitation to BFS in finding the shortest path.Suppose if  2 different nodes have the same common node in the adjency list that in that case we will be updating the parent node of th prev array. Due to which It might be possible that we will never be able to trace that node:( can some one help me with that how to resolve this issue..meanwhile sending the adjency list of the graph that im imagining. \n0->[1, 5]\n1 -> [2]\n2 -> [3, 4]\n3 -> [ ]\n4 -> [3]\n5 -> [2]\nhere in the prev array i will be updating my 1 with 5 while exploring 5 neighbour bcoz 5 and 1 both have same parnent.I hope i am clear with my doubt...", "likes": 0}}, {"topLevelComment": {"id": "UgzbAw2sgV0N1tn7DcF4AaABAg", "publishedAt": "2022-07-12T05:24:10Z", "author": "Red panda", "text": "don't mind me... i am just writing timestamps i need to revise 41:11", "likes": 0}}, {"topLevelComment": {"id": "UgylZELtQ8sTEOFjs4B4AaABAg", "publishedAt": "2022-07-12T02:24:13Z", "author": "Jessica Chiang", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"id": "Ugwyn6INzmg4MwSd_hd4AaABAg", "publishedAt": "2022-06-12T21:50:28Z", "author": "jason qiu", "text": "9:22 ways to represent graphs", "likes": 1}}, {"topLevelComment": {"id": "UgzJb-HOA1_MXkFSOBh4AaABAg", "publishedAt": "2022-05-24T14:32:52Z", "author": "NBS Hasan", "text": "\u09ad\u09be\u0987 \u0986\u09b0\u09c7\u0995\u099f\u09c1 \u0986\u09b8\u09a4\u09c7 \u0995\u09a8, \u0995\u09be\u09a8 \u09ab\u09be\u0987\u099f\u09cd\u099f\u09be \u0997\u09c7\u09b2\u09cb \ud83d\ude2a", "likes": 0}}, {"topLevelComment": {"id": "UgzS_SWhNbo8PcLLcch4AaABAg", "publishedAt": "2022-05-20T10:03:11Z", "author": "entropy", "text": "I had a smile on my face as soon as I heard the familiar voice. Pleasantly surprised to find William here", "likes": 0}}, {"topLevelComment": {"id": "Ugylj9yuGEU9tv1vJmJ4AaABAg", "publishedAt": "2022-05-18T14:05:31Z", "author": "Shahrooz Leon", "text": "Why he is using ASMR mic? it really annoying hear you breath every single second in middle of learning!!", "likes": 0}}, {"topLevelComment": {"id": "UgziLbEAj5r9j_aq8RF4AaABAg", "publishedAt": "2022-05-03T17:28:32Z", "author": "\u015e\u00fck\u00fcr \u015e\u00fck\u00fcr", "text": "What exists to make this video more than 6h", "likes": 0}}, {"topLevelComment": {"id": "Ugwi9V-z4ipzb37HUmV4AaABAg", "publishedAt": "2022-05-03T06:04:59Z", "author": "Deottam Prasad", "text": "Travelling salesman problem pseudocode is not clear to understand Many things went top of my head like what the memo table storing in each cell how we are building the table from bottom up and many things.", "likes": 0}}, {"topLevelComment": {"id": "UgzJsAJ8CNxGIXgBrml4AaABAg", "publishedAt": "2022-04-30T15:22:32Z", "author": "Sebin Mathew", "text": "you are awesome. thanks for the service. when i reach my goal, i will definitely contribute. thanks so much.", "likes": 1}}, {"topLevelComment": {"id": "Ugz4nGjnc2pGi_w1NUN4AaABAg", "publishedAt": "2022-04-18T06:44:09Z", "author": "Eugene Pearsont", "text": "very nice", "likes": 0}}, {"topLevelComment": {"id": "UgxFO_WMtPXYZ6bneTt4AaABAg", "publishedAt": "2022-04-17T04:05:03Z", "author": "18 Tulugu Jayanth", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"id": "UgxlhMO7CXkE6PUnmzx4AaABAg", "publishedAt": "2022-04-07T13:16:36Z", "author": "DooberStein", "text": "What a nerd", "likes": 0}}, {"topLevelComment": {"id": "UgxkLtNi89eiX2xyqtl4AaABAg", "publishedAt": "2022-03-18T15:10:11Z", "author": "Shivam Gupta", "text": "1:38:39 why did the algorithm not stop early?? it had already reached the end node", "likes": 0}}, {"topLevelComment": {"id": "UgzYciChJMt2a3k94P14AaABAg", "publishedAt": "2022-03-16T15:42:12Z", "author": "Karl Miller", "text": "at 8:27 ... is the yellow a strongly-connected-component, or is that a mistake? Since one of the nodes doesn't connect to one of the others....", "likes": 0}}, {"topLevelComment": {"id": "Ugz3ERvIGV0CZRHFbpB4AaABAg", "publishedAt": "2022-03-11T20:05:09Z", "author": "James T", "text": "Great explanations!", "likes": 0}}, {"topLevelComment": {"id": "Ugy6RwYYabJu4WMpv8l4AaABAg", "publishedAt": "2022-03-07T20:24:58Z", "author": "KaWiz", "text": "great video, very easy to follow!\n\njust wanted to say, at 49:08 where having separate x,y,z queues is suggested in order to avoid using a coordinate wrapper like struct coord { int x,y,z } that has to be packed/unpacked - keeping everything in one queue will preserve memory locality (sequential accesses in the same area of memory, likely in the same cache read), while having to access 3 different queues every iteration will likely be a performance hit as they cause cache misses (which, even if they're contiguous, would be inevitable above a certain number of vertices), and quite possibly be worse than packing/unpacking a structure depending on how the compiler optimizes that\n\nas an alternative, if you want your queues to just be primitives without any packing, just push x,y,z sequentially onto the same queue, and dequeue them 3 at a time as well. it's not any more complex than managing 3 queues at once, avoids packing, and most importantly doesn't require both allocating and accessing multiple data structures. the choice of having 3 queues just to avoid using a wrapper is pretty baffling!", "likes": 18}, "replies": [{"id": "Ugy6RwYYabJu4WMpv8l4AaABAg.9ZHiuvPsh3B9iEbPn7maP4", "publishedAt": "2022-11-10T04:35:37Z", "author": "aman", "text": "pretty cool explanation. i like the dequeue 3 at a time idea.", "likes": 1}]}, {"topLevelComment": {"id": "Ugxt4NDU4R7Q0PbPn4d4AaABAg", "publishedAt": "2022-03-02T09:45:33Z", "author": "Drone Acharya", "text": "4:04 press 'F' to pay respect to person F", "likes": 1}}, {"topLevelComment": {"id": "UgxNfvWkTkedzcge7kt4AaABAg", "publishedAt": "2022-02-27T04:56:38Z", "author": "Rwitesh Bera", "text": "I am watching it 1.5x speed. It feels normal speed to me.", "likes": 0}}, {"topLevelComment": {"id": "Ugy09aM7w1avBGrmJcl4AaABAg", "publishedAt": "2022-02-11T09:07:38Z", "author": "The Game Changer", "text": "Yeah it sums it all.\nThat's it", "likes": 0}}, {"topLevelComment": {"id": "UgwBgE3Oa6zRaBtLGk94AaABAg", "publishedAt": "2022-01-23T15:07:01Z", "author": "Rekt Bish", "text": "worst explanation dude is like sleepy asf and not good examples or code", "likes": 1}}, {"topLevelComment": {"id": "UgyKIofe49i_qBQM25l4AaABAg", "publishedAt": "2022-01-19T05:16:29Z", "author": "Jonathan Zinck", "text": "I think that the algorithm for articulation points is incorrect. It doesn't seem to account for start nodes in cycles that don't have any other outgoing edges", "likes": 0}}, {"topLevelComment": {"id": "UgyVKYmiuE_9DR5rtXh4AaABAg", "publishedAt": "2022-01-17T07:25:14Z", "author": "suraj", "text": "voice is very low", "likes": 0}}, {"topLevelComment": {"id": "UgwvqBtLSTYsV5kf7ZF4AaABAg", "publishedAt": "2022-01-07T11:36:56Z", "author": "DarKnessEvil", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"id": "UgxIViGdO_w1GX4s3B94AaABAg", "publishedAt": "2022-01-04T15:54:57Z", "author": "KAINAAT MAKHANI", "text": "mera next week project hai sir, aur sir ne abhi just project google classroom pe upload kiya hai woh bhi itna late.", "likes": 0}}, {"topLevelComment": {"id": "UgwaET_-V81097N5wul4AaABAg", "publishedAt": "2022-01-04T15:53:51Z", "author": "KAINAAT MAKHANI", "text": "aoa sir, sir apne projects ki videos nahi banayi hai? agar banayi hai toh plzz youtube pe upload kijey na?", "likes": 0}}, {"topLevelComment": {"id": "Ugx2R15p-uQNnJHk_5p4AaABAg", "publishedAt": "2022-01-02T15:58:06Z", "author": "Jan Pokorn\u00fd", "text": "4:26:24 O(ElogE) = O(ElogV) so it isnt bettter runtime asymptoticaly", "likes": 0}}, {"topLevelComment": {"id": "Ugye1UuK0P0QG7ci-fd4AaABAg", "publishedAt": "2021-12-29T21:56:20Z", "author": "Earl Grey", "text": "33:18", "likes": 0}}, {"topLevelComment": {"id": "Ugxox0ctAaKaGTcd0S94AaABAg", "publishedAt": "2021-12-10T02:54:09Z", "author": "Andrew Kim", "text": "the first 4 chapters are definitely the most commonly encountered in interviews", "likes": 1}}, {"topLevelComment": {"id": "Ugy8v8iBI4-H_Dz17nh4AaABAg", "publishedAt": "2021-12-05T16:53:31Z", "author": "Rush Round", "text": "7:06 graph on the right has a cycle", "likes": 0}}, {"topLevelComment": {"id": "UgwpSuFzGPCcvsJ313J4AaABAg", "publishedAt": "2021-11-13T17:28:44Z", "author": "megajonathan96", "text": "I wish he would do complete examples. sample input and valid output so I can follow along.", "likes": 2}}, {"topLevelComment": {"id": "UgwEgzWyL_ATN-Zy7qx4AaABAg", "publishedAt": "2021-11-12T08:19:59Z", "author": "sree vishal", "text": "The content is good but the sound quality is very poor!!", "likes": 0}}, {"topLevelComment": {"id": "UgyL2MInD7ytrVNi97l4AaABAg", "publishedAt": "2021-11-09T13:17:04Z", "author": "Sahil Anower", "text": "This is Gold!", "likes": 0}}, {"topLevelComment": {"id": "UgyZDfSVUJ8hLRc76ZF4AaABAg", "publishedAt": "2021-11-04T03:50:57Z", "author": "Madhukiran Attivilli", "text": "@2:49:00 : Articulation points\nThis can be further improved\n\nafter dfs recursive call back :\nif ids[at] > low[to]\n{ low[at] = min(low[at], low[to]); }\nelse\n{ isArts[at] = true; }\n\nany node's low link value can not be greater than it's id value. So, if \"to\" node's low link value is >= node's id, it implies that node's low link value can not be reduced further", "likes": 0}}, {"topLevelComment": {"id": "UgybxjqD27TBy7PG_nJ4AaABAg", "publishedAt": "2021-11-01T20:45:09Z", "author": "dochime kashiariri", "text": "I somehow feel bad for that \"F\" person", "likes": 0}}, {"topLevelComment": {"id": "Ugw_J9kuasaESE1wzV14AaABAg", "publishedAt": "2021-10-19T19:06:28Z", "author": "Chimera Black", "text": "error in the code at 28 min.  'neighbours = graph[at]' would resolve to \"cannot resolve property of undefined\" as graph was never defined. It should read 'neighbours = g[at]'", "likes": 0}, "replies": [{"id": "Ugw_J9kuasaESE1wzV14AaABAg.9TgfRMowd1W9Twn0y_QaUG", "publishedAt": "2021-10-26T01:20:37Z", "author": "PokeMC", "text": "It would not resolve to anything since this is pseudocode.", "likes": 0}]}, {"topLevelComment": {"id": "Ugzyf4B4mo7tmV3941F4AaABAg", "publishedAt": "2021-10-19T00:02:23Z", "author": "Krish Shah", "text": "orz", "likes": 0}}, {"topLevelComment": {"id": "UgzMfNnErZ2YvlUfrUN4AaABAg", "publishedAt": "2021-10-15T04:10:32Z", "author": "JOE UNDERWOOD", "text": "11:04 it is not V^2 work to enumerate the edges of an adjacency matrix it takes V^4 work since the matrix takes up V^2 *space* and the enumeration takes V^2 *time*", "likes": 0}, "replies": [{"id": "UgzMfNnErZ2YvlUfrUN4AaABAg.9TVliskiEM79Twp0By2LMF", "publishedAt": "2021-10-26T01:37:59Z", "author": "PokeMC", "text": "Work refers to time complexity, which is O(V^2). Even if you wanted to count the space complexity for some reason, O(V^2) + O(V^2) = O(V^2).", "likes": 0}]}, {"topLevelComment": {"id": "UgyHTeRhM9OZ0nGmM1F4AaABAg", "publishedAt": "2021-10-14T20:46:19Z", "author": "nic manza", "text": "Facts: Awsome video and you've been watching this at x1.5 speed", "likes": 0}}, {"topLevelComment": {"id": "UgywDlL1mqL-fJG80uR4AaABAg", "publishedAt": "2021-10-10T08:50:33Z", "author": "Alon Tahan", "text": "William thank you so much, you are a fantastic teacher and I am happy I found your channel through this video.", "likes": 0}}, {"topLevelComment": {"id": "Ugwd8FP1jCAHwyzRx0B4AaABAg", "publishedAt": "2021-10-09T07:28:20Z", "author": "Raj Singh", "text": "15 mins of the video is actually 1 hour ....taking the total video time to 24 hours", "likes": 0}}, {"topLevelComment": {"id": "Ugws0XBqf2O_C_CEZx54AaABAg", "publishedAt": "2021-10-05T08:14:04Z", "author": "Aj P", "text": "1:15 i decided to click on this to see if it would help me relax", "likes": 0}}, {"topLevelComment": {"id": "UgxvlRVH4ESXBvz4wxZ4AaABAg", "publishedAt": "2021-10-04T22:39:44Z", "author": "Pedro Lopes", "text": "Love this man, really. Very good presentation of such a complex topic. Thanks for doing this William!", "likes": 1}}, {"topLevelComment": {"id": "UgxDkt7deP9eOhji-yt4AaABAg", "publishedAt": "2021-09-28T18:03:09Z", "author": "mistah mayne", "text": "timestamp for me - 8:18", "likes": 0}}, {"topLevelComment": {"id": "UgwPAymdlYpkBHkwEGx4AaABAg", "publishedAt": "2021-09-24T05:05:58Z", "author": "Ritik Chail", "text": "Everything covered from scratch. Loved learning from this lecture.", "likes": 2}}, {"topLevelComment": {"id": "Ugy7rTTsIvyXz6tT0WZ4AaABAg", "publishedAt": "2021-09-19T08:17:00Z", "author": "Silviu Ciobanu", "text": "Great stuff, thank you!", "likes": 0}}, {"topLevelComment": {"id": "Ugw5-rdC9LPPq09jAyt4AaABAg", "publishedAt": "2021-09-18T13:40:35Z", "author": "RAFI ZAMAN", "text": "what language is necessary for this course?", "likes": 0}}, {"topLevelComment": {"id": "UgwCYDQgbCkQ5N8Pw_l4AaABAg", "publishedAt": "2021-09-18T04:04:57Z", "author": "Depression_Plus plus", "text": "I was just here for Euler theorem and 7bridges of Koningsberg..\nNow watching all of this...never found someone explain this good...if had been...I would've been a good self learnt programmer a long time ago..\n\n\ud83e\udd72The hardest phase of a self taught programmer is finding someone who can explain well..", "likes": 1}}, {"topLevelComment": {"id": "Ugz41RxVSvxn52P3f8p4AaABAg", "publishedAt": "2021-09-14T16:58:50Z", "author": "Carlos Santamaria", "text": "what knowledge should i have, before watching this video?", "likes": 0}}, {"topLevelComment": {"id": "UgwNAo9Xif28tg8MQ3x4AaABAg", "publishedAt": "2021-09-13T17:19:06Z", "author": "7th CAV Trooper", "text": "wow, this is pretty much everything you need to know about graphs", "likes": 0}}, {"topLevelComment": {"id": "Ugw3EjoVUUDy09dA0g14AaABAg", "publishedAt": "2021-09-12T14:30:11Z", "author": "Scary Harry", "text": "Can someone help me give the direct link for the source code of everything discussed in this amazing video?\nIt will be really helpful. It won't take much time, but I can learn so much from that.", "likes": 0}}, {"topLevelComment": {"id": "Ugx1jESLrdKJSXi7DU54AaABAg", "publishedAt": "2021-09-10T07:45:57Z", "author": "Mario Lino Valencia", "text": "Can anyone recommend a book on graph theory with code/algorithms?", "likes": 0}}, {"topLevelComment": {"id": "Ugw_ZfaNCzHYfA-doNt4AaABAg", "publishedAt": "2021-09-05T06:23:46Z", "author": "Calvinn Ng", "text": "Amazing course. Thank you so much!!", "likes": 0}}, {"topLevelComment": {"id": "UgynJIMTfsseVAUTZjl4AaABAg", "publishedAt": "2021-09-03T02:41:52Z", "author": "Jing Cyril", "text": "The only downside of this video is the host lower his voice too much.", "likes": 0}}, {"topLevelComment": {"id": "Ugwt_Hhyc2YgMYLd1fh4AaABAg", "publishedAt": "2021-09-02T16:06:37Z", "author": "Ansh Gupta", "text": "Using low- link method is similar to using that disjoint set?", "likes": 0}}, {"topLevelComment": {"id": "Ugzq74moKW7iNTG5EN14AaABAg", "publishedAt": "2021-09-01T05:51:57Z", "author": "Kcode", "text": "\u2b50\ufe0f Course Contents \u2b50\ufe0f\r\n\u2328\ufe0f (0:00:00) Graph Theory Introduction\r\n\u2328\ufe0f (0:13:53) Problems in Graph Theory\r\n\u2328\ufe0f (0:23:15) Depth First Search Algorithm\r\n\u2328\ufe0f (0:33:18) Breadth First Search Algorithm\r\n\u2328\ufe0f (0:40:27) Breadth First Search grid shortest path\r\n\u2328\ufe0f (0:56:23) Topological Sort Algorithm\r\n\u2328\ufe0f (1:09:52) Shortest/Longest path on a Directed Acyclic Graph (DAG)\r\n\u2328\ufe0f (1:19:34) Dijkstra's Shortest Path Algorithm\r\n\u2328\ufe0f (1:43:17) Dijkstra's Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (1:50:47) Bellman Ford Algorithm\r\n\u2328\ufe0f (2:05:34) Floyd Warshall All Pairs Shortest Path Algorithm\r\n\u2328\ufe0f (2:20:54) Floyd Warshall All Pairs Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (2:29:19) Bridges and Articulation points Algorithm\r\n\u2328\ufe0f (2:49:01) Bridges and Articulation points source code\r\n\u2328\ufe0f (2:57:32) Tarjans Strongly Connected Components algorithm\r\n\u2328\ufe0f (3:13:56) Tarjans Strongly Connected Components algorithm source code\r\n\u2328\ufe0f (3:20:12) Travelling Salesman Problem | Dynamic Programming\r\n\u2328\ufe0f (3:39:59) Travelling Salesman Problem source code | Dynamic Programming\r\n\u2328\ufe0f (3:52:27) Existence of Eulerian Paths and Circuits\r\n\u2328\ufe0f (4:01:19) Eulerian Path Algorithm\r\n\u2328\ufe0f (4:15:47) Eulerian Path Algorithm | Source Code\r\n\u2328\ufe0f (4:23:00) Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:37:05) Eager Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:50:38) Eager Prim's Minimum Spanning Tree Algorithm | Source Code\r\n\u2328\ufe0f (4:58:30) Max Flow Ford Fulkerson | Network Flow\r\n\u2328\ufe0f (5:11:01) Max Flow Ford Fulkerson | Source Code\r\n\u2328\ufe0f (5:27:25) Unweighted Bipartite Matching | Network Flow\r\n\u2328\ufe0f (5:38:11) Mice and Owls problem | Network Flow\r\n\u2328\ufe0f (5:46:11) Elementary Math problem | Network Flow\r\n\u2328\ufe0f (5:56:19) Edmonds Karp Algorithm | Network Flow\r\n\u2328\ufe0f (6:05:18) Edmonds Karp Algorithm | Source Code\r\n\u2328\ufe0f (6:10:08) Capacity Scaling | Network Flow\r\n\u2328\ufe0f (6:19:34) Capacity Scaling | Network Flow | Source Code\r\n\u2328\ufe0f (6:25:04) Dinic's Algorithm | Network Flow\r\n\u2328\ufe0f (6:36:09) Dinic's Algorithm | Network Flow | Source Code", "likes": 2}}, {"topLevelComment": {"id": "UgxjYqiCtA7pw2nHr-d4AaABAg", "publishedAt": "2021-08-29T00:28:02Z", "author": "Matt Mazzola", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"id": "UgweWhjJB45smaOhSv94AaABAg", "publishedAt": "2021-08-26T15:37:02Z", "author": "Adeeb Akhtar", "text": "While implementing the solve() function for TSP problem, we are running an extra inner loop for each value of next to select the ending node represented by e. Won't this jump up the power of n, inside the overall time complexity, from 2 to 3?", "likes": 0}}, {"topLevelComment": {"id": "UgxHs6vmHhf3LErYG6h4AaABAg", "publishedAt": "2021-08-25T04:01:55Z", "author": "Matt Mazzola", "text": "Wow, what a resourceful and comprehensive video.  I actually came across it while searching for videos of Sugiyama Layout algorithm for Layered Graph Drawing. The video does cover a lot bot doesn't seem to include that topic. Does anyone know other good videos walking through this algorithm?", "likes": 0}}, {"topLevelComment": {"id": "Ugxrk1VkGsk6YR65dNt4AaABAg", "publishedAt": "2021-08-22T14:10:22Z", "author": "Rodion", "text": "At 39:30 the reconstructPath function of BFS algorithm is shown and explained. Is the \"at != null\" actually needed at every iteration? if \"s\" and \"e\" are connected, then \"prev[e]\" is not null and for any node between e and s, *no* \"prev[node]\" on the path back from e to s is null. If e belongs to a different cluster of nodes, that is disconnected from s, then \"prev[e]\" would be null. As i see it, only a one-time check\"if(prev[e] != null) return [];\" at the start of the function is needed. What am i missing here?", "likes": 0}}, {"topLevelComment": {"id": "UgwL-fRhKJkkc-pe6P94AaABAg", "publishedAt": "2021-08-22T09:57:36Z", "author": "akshay kumar", "text": "This is really phenomenal work. You guys are doing wonderful work. Thanks a lot\u2665\ufe0f", "likes": 1}}, {"topLevelComment": {"id": "UgzVA2tzLYs8hr8OEs54AaABAg", "publishedAt": "2021-08-19T20:03:06Z", "author": "Dabbo Pabblo", "text": "you gotta love it when extremely well-informed programmers take their time to teach you a bunch of super fascinating mathematics for hours for NO COST. Thastd how you know a passionate programmer from a money chaser", "likes": 18}, "replies": [{"id": "UgzVA2tzLYs8hr8OEs54AaABAg.9REhQmZ2nx-9TVwut34WPR", "publishedAt": "2021-10-15T05:48:17Z", "author": "Papusa", "text": "@Dabbo Pabblo \ud83d\udeac", "likes": 0}, {"id": "UgzVA2tzLYs8hr8OEs54AaABAg.9REhQmZ2nx-9TVwWiK3VKq", "publishedAt": "2021-10-15T05:44:51Z", "author": "Dabbo Pabblo", "text": "@Papusa wanna hit my juul", "likes": 0}, {"id": "UgzVA2tzLYs8hr8OEs54AaABAg.9REhQmZ2nx-9TVm8Dtjv6q", "publishedAt": "2021-10-15T04:14:08Z", "author": "JOE UNDERWOOD", "text": "advertisements are not free...", "likes": 0}, {"id": "UgzVA2tzLYs8hr8OEs54AaABAg.9REhQmZ2nx-9SPIX0sOBgj", "publishedAt": "2021-09-17T19:19:47Z", "author": "Papusa", "text": "Wha", "likes": 1}]}, {"topLevelComment": {"id": "Ugw11mYdxHsPLK7CwcF4AaABAg", "publishedAt": "2021-08-07T08:33:58Z", "author": "Thany Trann", "text": "I'm having an interview in  2 weeks.", "likes": 0}}, {"topLevelComment": {"id": "UgyrX6MI4k-qhawzgBx4AaABAg", "publishedAt": "2021-08-06T04:53:17Z", "author": "Jack Windensky", "text": "Why would you use Tarjans Algorithm to detect cycles, wouldn\u2019t that be overkill? 1:00:52 Aren\u2019t there way simpler algorithms to detect them?", "likes": 1}}, {"topLevelComment": {"id": "Ugyiwb5hnh6DWXX6pMt4AaABAg", "publishedAt": "2021-07-28T07:55:23Z", "author": "Golden Lin", "text": "1:35:56", "likes": 0}}, {"topLevelComment": {"id": "Ugx7Hs5nNkuuPfvAlmh4AaABAg", "publishedAt": "2021-07-28T05:52:13Z", "author": "Golden Lin", "text": "1:30:00", "likes": 0}}, {"topLevelComment": {"id": "Ugw0GoRdNJv8wZcLMJZ4AaABAg", "publishedAt": "2021-07-27T05:18:26Z", "author": "Golden Lin", "text": "1:20:32", "likes": 0}}, {"topLevelComment": {"id": "Ugy06H77bKPLYRYrRNt4AaABAg", "publishedAt": "2021-07-27T02:41:09Z", "author": "jknair", "text": "I think i will take 3 or 4 iterations of this video to fix my mind. Will come back and update once I am smart enough", "likes": 0}}, {"topLevelComment": {"id": "UgzrVc37KrMZMeV6awx4AaABAg", "publishedAt": "2021-07-25T16:58:23Z", "author": "NonTwinBrothers", "text": "6 hours of subtitles, that's pretty badass", "likes": 1}}, {"topLevelComment": {"id": "Ugw-3X5TCWcDsKG2p-F4AaABAg", "publishedAt": "2021-07-25T13:03:22Z", "author": "Golden Lin", "text": "49:35", "likes": 0}}, {"topLevelComment": {"id": "Ugx_lu7likwBPE_KaQx4AaABAg", "publishedAt": "2021-07-22T07:12:47Z", "author": "Golden Lin", "text": "6:59", "likes": 0}}, {"topLevelComment": {"id": "UgxYeg2BRTNrk33s2Lx4AaABAg", "publishedAt": "2021-07-19T18:15:59Z", "author": "Aditya Singh", "text": "I solved the Dungeon problem link in your video. I jumped to Kattis and solved the problem. 0.27 seconds with Java. With the 3D matrix. Now I wish I was a compatitive programmer. But I hardly care now. I wrote a simple to read solution. And got it running in the first attempt. Writing clear code in Competitive programming slowed me down initially. But then writing clean code is all about clear thinking. And in the long run, it has helped me make less mistakes, and actually be able to solve problems. I couldn't even solve a simple problem earlier. Thanks to my decision of learning and practicing writing clean OOP code I am able to solve problems today.", "likes": 1}}, {"topLevelComment": {"id": "Ugy4Q8Tco6mxACPKee94AaABAg", "publishedAt": "2021-07-18T12:17:04Z", "author": "vetofthenet", "text": "Shit's too hard after floyd warshall algorithm, lol.", "likes": 1}}, {"topLevelComment": {"id": "UgylesspqH76UlkU46N4AaABAg", "publishedAt": "2021-07-17T06:42:27Z", "author": "Huzaifa Muhammad SIddique", "text": "I didn't get that how every out-tree is a DAG but every DAG is an out-tree?", "likes": 2}}, {"topLevelComment": {"id": "UgwhXGFgI49WM_rmBH14AaABAg", "publishedAt": "2021-07-15T06:20:50Z", "author": "Pratyush Vatsa", "text": "Doubt:\nAt 2:07:50, assuming the distance from a node to itself to be equal to 0 may not be true if the graph contains a negative weight cycle and the source node is a part of that cycle.", "likes": 1}}, {"topLevelComment": {"id": "UgwutXaVjfuJsyjrqeV4AaABAg", "publishedAt": "2021-07-14T15:42:26Z", "author": "Patrick Hu", "text": "Bridges should increase the amount of DISCONNECTED nodes in a graph right?", "likes": 0}}, {"topLevelComment": {"id": "Ugy_-P1exP6ccqc9p-V4AaABAg", "publishedAt": "2021-07-13T18:41:20Z", "author": "Ankit Choudhary", "text": "His pseudo codes are so damn good!", "likes": 1}}, {"topLevelComment": {"id": "UgyHYfC-R2PQWxk0D4V4AaABAg", "publishedAt": "2021-07-13T02:14:35Z", "author": "Duman Zhusupov", "text": "It's so cool that programmers community is BLM, we all appreciate that you named Bellman Floyd, Floyd algorithm for real hero 2020-2021 George Floyd. PROGRAMMERS BLM!!!", "likes": 0}}, {"topLevelComment": {"id": "UgyYAZm3kAzEf9Cgy6t4AaABAg", "publishedAt": "2021-07-11T13:09:19Z", "author": "Ankit Choudhary", "text": "Can anyone share C++ implementation of codes in this tutorial?", "likes": 0}}, {"topLevelComment": {"id": "UgxfbGRK2GrjahSyNWl4AaABAg", "publishedAt": "2021-07-06T16:11:40Z", "author": "quadroninja", "text": "Wow, very intelligibly, thank you very much! I will code these algorithms in C", "likes": 0}}, {"topLevelComment": {"id": "Ugxbuo5ADie4Q4qifCJ4AaABAg", "publishedAt": "2021-06-25T14:12:23Z", "author": "Alex Bowman", "text": "I am person A in the first directed graph example", "likes": 0}}, {"topLevelComment": {"id": "Ugx0Ti_Qf70P1ZEZtXB4AaABAg", "publishedAt": "2021-06-23T23:33:04Z", "author": "Grand Priest Goku \u795e\u9053\u609f\u7a7a", "text": "will this video contain all the necessary techniques to solve leetcode hard graph problems?", "likes": 0}}, {"topLevelComment": {"id": "UgzBlJhd26TL5mxN9mN4AaABAg", "publishedAt": "2021-06-20T11:12:55Z", "author": "Satya", "text": "Does Bridges and articulation points algorithm works for only undirected graph?", "likes": 1}}, {"topLevelComment": {"id": "Ugy_KHXgYhFJ0OLJuDl4AaABAg", "publishedAt": "2021-06-17T08:06:46Z", "author": "Madhukiran Attivilli", "text": "Network Flow : Bipartite graph : Maximum Cardinality Matching : Mice - Holes example\n\nHi William,\r\n\r\nI've learned from you all algo variants. \r\n\r\nI noticed that there are 14 mice and max 12 mice can get a hole. But all algos^^^ help only 10 mice. Only hopcroft-karp is helping 11 mice (I learned online after understanding Dinic's from U, is a heuristic on top of Dinic's).\r\n\r\nI'm yet to learn Push Relabel. So, looks like, for bipartite max matching, Hopcroft-Karp is the most efficient.\r\n\r\nDo u agree?\r\n\r\n-- Madhukiran\r\n\r\nalgos^^^ :\r\n1. ford fulkerson w/ dfs\r\n2. edmonds karp w/ bfs\r\n3. capacity scaling w/ dfs\r\n4. capacity scaling w/ bfs\r\n5. dinic's w/ bfs+dfs", "likes": 0}}, {"topLevelComment": {"id": "Ugy21YoBkkVDUX919OR4AaABAg", "publishedAt": "2021-06-16T19:19:00Z", "author": "Andrew Persaud", "text": "I decided to ditch the vast world of algorithms and just focus on graphs. life is too busy to master them all. graphs seem like the most important to know and do funky things with", "likes": 0}, "replies": [{"id": "Ugy21YoBkkVDUX919OR4AaABAg.9OepVqHmQmr9OkN4MsrCCr", "publishedAt": "2021-06-18T22:57:17Z", "author": "silvi rae", "text": "even graphs you dont need to master them also don't master all data structures, focus on most famous ones and most used like ( hashMaps, Stacks, Queues, Sets, Linked Lists, Arrays) all of these are simple to implement and to learn , and finally, graphs (they are a bit complicated than others but not hard to grasp)", "likes": 0}]}, {"topLevelComment": {"id": "UgyirCMQz_K55xs4BO14AaABAg", "publishedAt": "2021-06-15T20:04:05Z", "author": "Peace Bro", "text": "Dinic was my professor at BGU, what an honor", "likes": 0}}, {"topLevelComment": {"id": "UgwAb5Pui0CdpmsMhNB4AaABAg", "publishedAt": "2021-06-12T06:15:22Z", "author": "Aditya Roshan Patro", "text": "\u2b50\ufe0f Course Contents \u2b50\ufe0f\r\n\u2328\ufe0f (0:00:00) Graph Theory Introduction\r\n\u2328\ufe0f (0:13:53) Problems in Graph Theory\r\n\u2328\ufe0f (0:23:15) Depth First Search Algorithm\r\n\u2328\ufe0f (0:33:18) Breadth First Search Algorithm\r\n\u2328\ufe0f (0:40:27) Breadth First Search grid shortest path\r\n\u2328\ufe0f (0:56:23) Topological Sort Algorithm\r\n\u2328\ufe0f (1:09:52) Shortest/Longest path on a Directed Acyclic Graph (DAG)\r\n\u2328\ufe0f (1:19:34) Dijkstra's Shortest Path Algorithm\r\n\u2328\ufe0f (1:43:17) Dijkstra's Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (1:50:47) Bellman Ford Algorithm\r\n\u2328\ufe0f (2:05:34) Floyd Warshall All Pairs Shortest Path Algorithm\r\n\u2328\ufe0f (2:20:54) Floyd Warshall All Pairs Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (2:29:19) Bridges and Articulation points Algorithm\r\n\u2328\ufe0f (2:49:01) Bridges and Articulation points source code\r\n\u2328\ufe0f (2:57:32) Tarjans Strongly Connected Components algorithm\r\n\u2328\ufe0f (3:13:56) Tarjans Strongly Connected Components algorithm source code\r\n\u2328\ufe0f (3:20:12) Travelling Salesman Problem | Dynamic Programming\r\n\u2328\ufe0f (3:39:59) Travelling Salesman Problem source code | Dynamic Programming\r\n\u2328\ufe0f (3:52:27) Existence of Eulerian Paths and Circuits\r\n\u2328\ufe0f (4:01:19) Eulerian Path Algorithm\r\n\u2328\ufe0f (4:15:47) Eulerian Path Algorithm | Source Code\r\n\u2328\ufe0f (4:23:00) Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:37:05) Eager Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:50:38) Eager Prim's Minimum Spanning Tree Algorithm | Source Code\r\n\u2328\ufe0f (4:58:30) Max Flow Ford Fulkerson | Network Flow\r\n\u2328\ufe0f (5:11:01) Max Flow Ford Fulkerson | Source Code\r\n\u2328\ufe0f (5:27:25) Unweighted Bipartite Matching | Network Flow\r\n\u2328\ufe0f (5:38:11) Mice and Owls problem | Network Flow\r\n\u2328\ufe0f (5:46:11) Elementary Math problem | Network Flow\r\n\u2328\ufe0f (5:56:19) Edmonds Karp Algorithm | Network Flow\r\n\u2328\ufe0f (6:05:18) Edmonds Karp Algorithm | Source Code\r\n\u2328\ufe0f (6:10:08) Capacity Scaling | Network Flow\r\n\u2328\ufe0f (6:19:34) Capacity Scaling | Network Flow | Source Code\r\n\u2328\ufe0f (6:25:04) Dinic's Algorithm | Network Flow\r\n\u2328\ufe0f (6:36:09) Dinic's Algorithm | Network Flow | Source Code", "likes": 0}}, {"topLevelComment": {"id": "Ugy14O3mL8gPSEYNJB14AaABAg", "publishedAt": "2021-06-11T21:54:19Z", "author": "oleksii tymoshenko", "text": "Pillow cube is a SH*T!!!!", "likes": 0}}, {"topLevelComment": {"id": "Ugw_pY2BumUTKbYkaMp4AaABAg", "publishedAt": "2021-06-05T05:35:12Z", "author": "NOETICAL", "text": "32:45", "likes": 0}}, {"topLevelComment": {"id": "UgzVAVR_plKkUrUaVfV4AaABAg", "publishedAt": "2021-06-05T04:57:04Z", "author": "Rishabh", "text": "4:04 I feel bad for F \ud83e\udd72", "likes": 1}}, {"topLevelComment": {"id": "Ugw9HFQrdDBoF86HjRB4AaABAg", "publishedAt": "2021-06-04T16:39:45Z", "author": "Saiyan Saga", "text": "I wanted to know how much this course and concepts are important for fresher with different background coming in as developer.", "likes": 0}}, {"topLevelComment": {"id": "UgyopUMPMrrga1mANeR4AaABAg", "publishedAt": "2021-06-03T21:55:09Z", "author": "Madhukiran Attivilli", "text": "Hi William,\n\nCould you please explain how you've arrived at these 2 time complexities?\n\n(1) max flow via Edmonds-Karp algo using BFS -- O(E^2.V)\n\n(2) max flow via Capacity Scaling algo using DFS -- O(E^2.logU)\n\nor cud u pls point at some doc where I can read?", "likes": 2}}, {"topLevelComment": {"id": "UgyiiZoh15z9MWNiBhF4AaABAg", "publishedAt": "2021-06-03T19:14:50Z", "author": "Bevanthe's Art Studio", "text": "@4:26 Isn't E log E and E log V same?\nBecause  E is of the order of V^2\n\n      E log E\n=>  E log V^2\n=>  2 E log V\n\nAnd in terms of big-oh notation it will be E log V", "likes": 0}}, {"topLevelComment": {"id": "UgxKFmvzrhUSNpn1W754AaABAg", "publishedAt": "2021-05-30T16:22:19Z", "author": "Chandradhar Rao", "text": "Resume @ : 27:41\nResume @ : 1:12:35\nResume @ : 1:33:00\nResume @ : 1:54:00\r\nToDo : 1:43:25 - Dijkstras implementation\r\nToDo : 2:2:00 - Bellmard-ford implementation\nToDo : 2:20:00 - Floyd Warshall emplementation", "likes": 0}}, {"topLevelComment": {"id": "UgxGu8ddVSNaEGbUkBF4AaABAg", "publishedAt": "2021-05-29T21:20:09Z", "author": "M G", "text": "Great course!\nPlayback at 2x for the win", "likes": 0}}, {"topLevelComment": {"id": "UgwnCPp_KPZOM-fHC6V4AaABAg", "publishedAt": "2021-05-20T14:19:42Z", "author": "Mitch Iarikov", "text": "Fantastic video! Thank you!", "likes": 0}}, {"topLevelComment": {"id": "Ugx6ZMeiPWvqHZK-JHR4AaABAg", "publishedAt": "2021-05-20T09:58:48Z", "author": "Umut", "text": "Maybe Python would be much better choice for this tutorial.", "likes": 0}}, {"topLevelComment": {"id": "UgzY7EmgxDmDpSMt_3F4AaABAg", "publishedAt": "2021-05-16T02:01:06Z", "author": "Prakash G", "text": "this guy is awesome..He covered almost all the concepts in Graph... really worth it...", "likes": 3}}, {"topLevelComment": {"id": "UgzT1VMMPQRUJKx8B8F4AaABAg", "publishedAt": "2021-05-09T15:57:19Z", "author": "Hussain Ravat", "text": "Sharing my python code \nWith few modifications can create a random dungion and solve\nIt makes the adjacency list also  by supplying number of rows and columns \nExcludes rock cells \nFinds start and end node on its own \n\n\nimport numpy as np\r\n\r\nrows=5\r\ncolumns=7\r\nnumber_of_nodes=rows*columns\r\n    \r\n\r\ndef create_dungeon():\r\n    '''\r\n    This method creates the dungeon\r\n    It returns a numpy array\r\n    \r\n    The below are the representations of the cell \r\n    \r\n    0-EMPTY CELL\r\n    1-START\r\n    2-END\r\n    3-ROCK\r\n    \r\n    Arguments : - \r\n    rows :- Number of rows \r\n    columns :- Number of columns \r\n    start node \r\n    end node \r\n    number of rocks \r\n    '''\r\n    \r\n    \r\n    dungeon_arr = np.zeros([rows,columns])\r\n    \r\n    dungeon_arr[0,0]=1\r\n    dungeon_arr[4,3]=2\r\n    dungeon_arr[4,0]=3\r\n    dungeon_arr[1,1]=3\r\n    dungeon_arr[2,1]=3\r\n    dungeon_arr[3,2]=3\r\n    dungeon_arr[4,2]=3\r\n    dungeon_arr[0,3]=3\r\n    dungeon_arr[3,3]=3\r\n    dungeon_arr[1,5]=3\r\n    dungeon_arr[4,5]=3\r\n    dungeon_arr[4,5]=3\r\n    \r\n    return dungeon_arr\r\n    \r\n    \r\ndungeon_arr=create_dungeon()    \r\n    \r\ndef get_adjacent_cells(curr_row,curr_col,dungeon_arr):\r\n    \r\n    '''\r\n    This function is used to get the \r\n    adjacent cells assuming we can cannot move diagonally\r\n    Arguments :- \r\n    Current Row \r\n    Current Column \r\n    Dungeon Array \r\n    '''\r\n    \r\n    dr = [-1,1,0,0]\r\n    dc = [0,0,1,-1]\r\n    adjacent_cells=[]\r\n\r\n    for i in range(4):\r\n        \r\n        rr=curr_row+dr[i]\r\n        cc=curr_col+dc[i]\r\n\r\n        if cc < 0 or rr < 0 or rr >= rows or cc >= columns or dungeon_arr[rr,cc]==3:\r\n            continue\r\n        else:  \r\n            adjacent_cells.append((rr,cc))\r\n            \r\n    return adjacent_cells        \r\n\r\ndef graph_to_adjacency_list(rows,columns,dungeon_arr):\r\n    '''\r\n    This function will convert the graph to an adjacency list \r\n    '''\r\n    \r\n    graph_dict={}\r\n    graph_rev_dict={}\r\n    cnt=0\r\n    adjacency_list={}\r\n    \r\n    for curr_row in range(rows):\r\n        for curr_col in range(columns):\r\n            graph_dict[(curr_row,curr_col)]=cnt\r\n            graph_rev_dict[cnt]=(curr_row,curr_col)\r\n            cnt += 1\r\n            \r\n            \r\n    for curr_row in range(rows):\r\n        for curr_col in range(columns):      \r\n            \r\n            adj_neb_idx =[]\r\n            adjacent_cells=get_adjacent_cells(curr_row,curr_col,dungeon_arr)\r\n            \r\n            for cell in adjacent_cells:\r\n                adj_neb_idx.append(graph_dict[cell])\r\n            adjacency_list[graph_dict[curr_row,curr_col]]=adj_neb_idx\r\n    \r\n    result=np.where(dungeon_arr == 1)\r\n    start_node=list(zip(result[0], result[1]))\r\n    start_node=graph_dict[start_node[0]]\r\n    \r\n    result=np.where(dungeon_arr == 2)\r\n    end_node=list(zip(result[0], result[1])) \r\n    end_node=graph_dict[end_node[0]]       \r\n            \r\n    return adjacency_list,start_node,end_node,graph_rev_dict      \r\n            \r\n    \r\nadjacency_list,start_node,end_node,graph_rev_dict=graph_to_adjacency_list(rows,columns,dungeon_arr)\r\n\r\n\r\n\r\ndef solve(start_node):\r\n    \r\n    global number_of_nodes\r\n    global adjacency_list\r\n    \r\n    graph_queue=[]\r\n    graph_queue.append(start_node)\r\n    \r\n    visited=[False for i in range(number_of_nodes+1)]\r\n    prev=[False for i in range(number_of_nodes+1)]\r\n    \r\n    visited[start_node]=True\r\n    \r\n    while len(graph_queue)!= 0:\r\n        curr_node=graph_queue.pop()\r\n        neighbours= adjacency_list[curr_node]\r\n        \r\n        for next_node in neighbours:\r\n            if not visited[next_node]:\r\n                graph_queue.append(next_node)\r\n                visited[next_node]=True\r\n                prev[next_node]=curr_node\r\n                \r\n    return prev            \r\n\r\ndef reconstrucpath(start_node,end_node,prev):\r\n    path=[]\r\n    node_at=end_node\r\n\r\n    while type(node_at) != bool:\r\n        path.append(node_at)\r\n        node_at=prev[node_at]\r\n        \r\n        \r\n    return [node for node in reversed(path)]\r\n\r\ndef bredth_first_search(start_node,end_node):\r\n    prev = solve(start_node)\r\n    path=reconstrucpath(start_node,end_node,prev)\r\n    return path\r\n\r\n\r\n\r\n\r\npath =  bredth_first_search(start_node,end_node)\r\nfor index in path:\r\n    print(graph_rev_dict[index])  \r\n\nOutput :- \n\n(0, 0)\r\n(0, 1)\r\n(0, 2)\r\n(1, 2)\r\n(1, 3)\r\n(1, 4)\r\n(2, 4)\r\n(3, 4)\r\n(4, 4)\r\n(4, 3)", "likes": 0}}, {"topLevelComment": {"id": "UgxOZ85_6K08bQ_m2054AaABAg", "publishedAt": "2021-05-08T11:52:47Z", "author": "Cristian Iorga", "text": "Every time i come back to your video I want to give you one more like!", "likes": 0}}, {"topLevelComment": {"id": "Ugwu4UFUryragTpcLsZ4AaABAg", "publishedAt": "2021-05-02T12:47:42Z", "author": "Fedor Sakhabutdinov", "text": "A good content is here, but what's the point in making almost 7hr video? It's better divide video on smaller parts and make a playlist with them, than clicking on a timestamp every time.", "likes": 0}}, {"topLevelComment": {"id": "UgzDEUvtiGLXOOScO_J4AaABAg", "publishedAt": "2021-04-30T15:25:45Z", "author": "khaled benzid", "text": "NO I DONT WANT TO BE A SOFTWAR ENGINEER AT GOOGLE. PLEASE LEAVE ME ALONE ALGO EXPERT. I JUST WANT A LEARN GRAPH THEORY", "likes": 3}}, {"topLevelComment": {"id": "UgyxB-YGmRJ3fHJVJBN4AaABAg", "publishedAt": "2021-04-24T15:22:27Z", "author": "Think Algorithm", "text": "Pls watch it at 1.5x will save your 3 hrs \nthank me later", "likes": 0}, "replies": [{"id": "UgyxB-YGmRJ3fHJVJBN4AaABAg.9MWwItenLDP9PT-Dat4-oL", "publishedAt": "2021-07-06T16:13:54Z", "author": "quadroninja", "text": "Unfortunately, I can't", "likes": 0}]}, {"topLevelComment": {"id": "Ugwoz0X1oGjOaHg-MZR4AaABAg", "publishedAt": "2021-04-19T13:30:33Z", "author": "Tan Chin Siang", "text": "what language are u using in this video? python and java?", "likes": 0}}, {"topLevelComment": {"id": "UgzZ2iYbUkHk3LZZCWh4AaABAg", "publishedAt": "2021-04-06T06:01:51Z", "author": "Madhukiran Attivilli", "text": "Bridges algo -- these also seem to be working? Why can't we do these and further simplify the algo?\n\n(1) if ! visited[to] == true\n{ low[at] = min( low[at], ==> low[to] <== ) }\n(i.e. same min stmt for 'to' being a visited or an unvisited node)\n\n(2) if ( ==> low[at] <== < low[to] )\nto determine if at->lo is a bridge\n\nPoint is low[] array is sufficient, and ids[] array seems to be redundant\n\nCOMMENTS?", "likes": 0}}, {"topLevelComment": {"id": "UgxkdHNPIVtRWHsuh_N4AaABAg", "publishedAt": "2021-04-02T06:39:33Z", "author": "Darth Vader", "text": "He is such a person <3", "likes": 0}}, {"topLevelComment": {"id": "UgxLrya0XlMSvhJDrlR4AaABAg", "publishedAt": "2021-03-28T08:02:25Z", "author": "Some guy", "text": "what is the difference between algorithms and graph theory? Is graph theory a subsection of algorithms?", "likes": 0}}, {"topLevelComment": {"id": "Ugz88UNK6xDUl-jRyuR4AaABAg", "publishedAt": "2021-03-27T14:07:05Z", "author": "Yousef Beiruty", "text": "Great content sir i just want to ask you like what type of questions could i get in big tech companies like Google or Facebook  interview about graphs because it's such a big topic ?", "likes": 1}}, {"topLevelComment": {"id": "UgzYBjsdAicZH2LMUPl4AaABAg", "publishedAt": "2021-03-27T04:35:20Z", "author": "Steve D'Sa", "text": "Thank you so much William, for your kind attention to details. I did not receive any teaching on Graph Theory in the 90s when I thought I had graduated. Your patience has made it possible for me to understand a topic that has tremendous value, I believe both for other advanced topics and implementing real-world solutions right away! Thank you, again William!", "likes": 18}}, {"topLevelComment": {"id": "UgySXGJ27P8da-eGPZh4AaABAg", "publishedAt": "2021-03-27T03:56:16Z", "author": "GR", "text": "40:38", "likes": 0}}, {"topLevelComment": {"id": "Ugy0bSAEL26BVB3PEvJ4AaABAg", "publishedAt": "2021-03-25T13:52:09Z", "author": "Hussain Ravat", "text": "yay just coded the first algo here is the ouput\n\n=============================at=============================\r\n0\r\n=============================path=============================\r\n 0\r\n=============================at=============================\r\n1\r\n=============================path=============================\r\n 0 1\r\n=============================at=============================\r\n8\r\n=============================path=============================\r\n 0 1 8\r\n=============================at=============================\r\n7\r\n=============================path=============================\r\n 0 1 8 7\r\n=============================at=============================\r\n10\r\n=============================path=============================\r\n 0 1 8 7 10\r\n=============================at=============================\r\n11\r\n=============================path=============================\r\n 0 1 8 7 10 11\r\n=============================at=============================\r\n3\r\n=============================path=============================\r\n 0 1 8 7 3\r\n=============================at=============================\r\n2\r\n=============================path=============================\r\n 0 1 8 7 3 2\r\n=============================at=============================\r\n4\r\n=============================path=============================\r\n 0 1 8 7 3 4\r\n=============================at=============================\r\n5\r\n=============================path=============================\r\n 0 1 8 7 3 5\r\n=============================at=============================\r\n6\r\n=============================path=============================\r\n 0 1 8 7 3 5 6\r\n=============================at=============================\r\n9\r\n=============================path=============================\r\n 0 9", "likes": 1}}, {"topLevelComment": {"id": "Ugwn92v0ML2uhkRoDQ94AaABAg", "publishedAt": "2021-03-23T15:13:06Z", "author": "Yuriy Grynevych", "text": "Thank you for good content! The only thing I want to note is that at 26:50 you have only \"visited[at] = true\" but you never set it to false, so it will never actually \"back track\". I believe there is missing \"visited[at] = false\" right at the end of the function, so we unmark the node when leaving the function.", "likes": 1}, "replies": [{"id": "Ugwn92v0ML2uhkRoDQ94AaABAg.9LEWnSy94CP9WhtKC2m9s2", "publishedAt": "2022-01-02T20:01:14Z", "author": "Manit Bhusal", "text": "visited = [false, ..., false] is where all the nodes are initialized to have \"false\"", "likes": 0}, {"id": "Ugwn92v0ML2uhkRoDQ94AaABAg.9LEWnSy94CP9VECBdiR38E", "publishedAt": "2021-11-27T01:26:59Z", "author": "Faisal Khan", "text": "I fail to see why that would be a problem.", "likes": 0}]}, {"topLevelComment": {"id": "Ugx2E1d5lhpV3D3VibN4AaABAg", "publishedAt": "2021-03-21T22:39:35Z", "author": "Linux Farhan", "text": "If the subtitles are available,it'll be great.. I request freecodecamp to add subtitle", "likes": 0}}, {"topLevelComment": {"id": "UgxFWK9Ylk94jVaoJ2N4AaABAg", "publishedAt": "2021-03-21T06:28:48Z", "author": "Srikar Ummineni", "text": "I want something related to bipartite, graph coloring concepts", "likes": 0}}, {"topLevelComment": {"id": "UgxEW3iX1FGZCUi7wYx4AaABAg", "publishedAt": "2021-03-21T06:22:32Z", "author": "anant saini", "text": "The most hardest part of Developer.", "likes": 1}}, {"topLevelComment": {"id": "UgzjBiRsxhPvuoR0EeN4AaABAg", "publishedAt": "2021-03-18T18:17:50Z", "author": "Rohit Gupta", "text": "I feel bad for person F", "likes": 0}}, {"topLevelComment": {"id": "UgwtEC8PsvW5napJTxt4AaABAg", "publishedAt": "2021-03-17T12:37:15Z", "author": "ObinAtor", "text": "1:43:30 Enterprise-Code be like", "likes": 1}}, {"topLevelComment": {"id": "UgyBcFKnZ5oavKGW6fB4AaABAg", "publishedAt": "2021-03-16T12:14:28Z", "author": "Shubham Vardaan", "text": "very crisp and clear video", "likes": 0}}, {"topLevelComment": {"id": "Ugz_zBfHRjSA2rL7bJR4AaABAg", "publishedAt": "2021-03-15T16:06:08Z", "author": "Neuron", "text": "Can anybody tell me is this in c++ I will watch this after 1 month tell me before this please", "likes": 0}, "replies": [{"id": "Ugz_zBfHRjSA2rL7bJR4AaABAg.9Kv0VnD_t4p9Ly6oGQiRrX", "publishedAt": "2021-04-10T17:30:19Z", "author": "Anjali Singh", "text": "Nope its java but the syntax is quite same as c++", "likes": 0}]}, {"topLevelComment": {"id": "UgwBst7Hr24yxlU7UvZ4AaABAg", "publishedAt": "2021-03-14T18:45:07Z", "author": "just expressing myself", "text": "How to use algoritem to clean my house\nSearching for the shortest path\nI love math", "likes": 0}}, {"topLevelComment": {"id": "Ugwcwei-nC3MvIHtHnJ4AaABAg", "publishedAt": "2021-03-14T15:50:58Z", "author": "Mike B", "text": "Whoooo boy, here we go....", "likes": 0}}, {"topLevelComment": {"id": "UgwPvxRtuohh9d-VjG54AaABAg", "publishedAt": "2021-03-08T02:06:46Z", "author": "King Hadu", "text": "The way the graphics are done with black backgrounds and colorful diagrams and colored texts makes this video incredibly engaging, fun and addicting to learn.", "likes": 7}}, {"topLevelComment": {"id": "UgwASZXefqKkngjBPTp4AaABAg", "publishedAt": "2021-02-22T04:42:23Z", "author": "Abhishek Gaurav", "text": "6:44:39", "likes": 1}}, {"topLevelComment": {"id": "Ugz36xzoEBsdohelomJ4AaABAg", "publishedAt": "2021-02-11T23:41:46Z", "author": "Obinna Ubah", "text": "Watch at 2x speed", "likes": 0}}, {"topLevelComment": {"id": "UgwoixUYbMazFjKmFNl4AaABAg", "publishedAt": "2021-02-11T04:04:26Z", "author": "Nihad Almahrooq", "text": "I want to apply this graph tech no my telcom sol and need best freelancer, interested nkmahrooq@gmail.com", "likes": 0}}, {"topLevelComment": {"id": "UgwReHapnffOB5xlBBx4AaABAg", "publishedAt": "2021-02-11T03:56:44Z", "author": "Nihad Almahrooq", "text": "Great effort putting this together. Thanks, graph data structure and its enumerations has excellent properties, while combines knowledge and computation for difficult solutions", "likes": 5}}, {"topLevelComment": {"id": "Ugygwj93Dd_2YvnR-y14AaABAg", "publishedAt": "2021-02-08T19:37:42Z", "author": "Tan Ho", "text": "I love William so much. Thank you so much, Sir!!!!", "likes": 1}}, {"topLevelComment": {"id": "Ugy39I3L1x7vcLTs5sx4AaABAg", "publishedAt": "2021-01-31T07:40:34Z", "author": "Rodolfo Vitangcol", "text": "Business Opportunity in Ruvol\r\n\r\nI have invented a Board Game [still unpublished and not yet out in the market] that I believe is guaranteed to be as challenging and exciting as CHESS.  I called it \u201cRUVOL.\u201d  \r\n\r\nIt is my hope that one day Ruvol may surpass chess as the \u201cNumber One Board Game in the World.\u201d \r\n\r\nThe weakness of chess is it always starts in fixed positions that the opening moves become \u201cmemorizable.\u201d  In fact, not a few have so mastered the moves that they can play against their opponents \u201cblindfolded.\u201d  It is for this very reason that the great Bobby Fischer introduced his so-called \u201cFischer Random Chess,\u201d where the starting position of the pieces is \u201crandomized\u201d to make the memorization of openings impracticable.  Fortunately, it is also for this reason that I invented Ruvol where \u201cevery game\u201d has been calculated to be a challenging one to play.\r\n\r\nHOW IS RUVOL PLAYED and HOW YOU CAN MONETIZE IT?\r\n\r\nI detailed everything in my YouTube video.  Here is the link:  https://www.youtube.com/watch?v=jcqth0m3-R0\r\n\r\nBIG MONEY POTENTIAL IN RUVOL!\r\n\r\nIt is worthwhile to note that the people who play chess will be the same people who will play Ruvol.  In my Google search, I learned there are around 800 million chess players in the world.  Even just a small percentage of these 800 million is good enough to earn big money from Ruvol either as an ONLINE GAME BUSINESS or as a PHYSICAL PRODUCT DISTRIBUTOR.\r\n\r\nYou may contact me at:  rodolfovitangcol@gmail.com.   \r\n\r\nThanks and God bless!\r\n \r\nRODOLFO MARTIN VITANGCOL\r\nThe Ruvol Inventor", "likes": 0}}, {"topLevelComment": {"id": "UgwRGah6VofFwzGIWBp4AaABAg", "publishedAt": "2021-01-29T20:16:39Z", "author": "Charles Joseph Escoto", "text": "So much ads", "likes": 0}}, {"topLevelComment": {"id": "UgxS1I23I9eqETZBAbx4AaABAg", "publishedAt": "2021-01-26T09:17:08Z", "author": "Nikolaos Tsagkarakis", "text": "Best freeCodeCamp video", "likes": 0}}, {"topLevelComment": {"id": "Ugw5frW4dLgHWO6opeV4AaABAg", "publishedAt": "2021-01-25T09:07:24Z", "author": "Nikola Radulaski", "text": "This is gold.", "likes": 0}}, {"topLevelComment": {"id": "Ugxr7jiYm5kOpcoDnG94AaABAg", "publishedAt": "2021-01-24T07:49:44Z", "author": "UMESH NAIK", "text": "Google employs unenthusiastic robots?", "likes": 0}}, {"topLevelComment": {"id": "Ugx7CmVXj0DfUC6CqmZ4AaABAg", "publishedAt": "2021-01-18T19:29:49Z", "author": "george hart", "text": "I am a fan of your work, I also try to explain complex ideas in beginner language on my channel, I would appreciate your support https://www.youtube.com/channel/UC6N4i972Z7F-ozmUWDakS1Q", "likes": 1}}, {"topLevelComment": {"id": "Ugw7jHROrcQJoAsvdK94AaABAg", "publishedAt": "2021-01-11T04:09:25Z", "author": "Aman Srivastava", "text": "Some of the best things in life are free.", "likes": 1}}, {"topLevelComment": {"id": "UgwzOjgQNS7R1xQ66154AaABAg", "publishedAt": "2021-01-09T07:45:06Z", "author": "chessdawg", "text": "Any prerequisites?", "likes": 0}}, {"topLevelComment": {"id": "UgyyoAv63lZeQysXXQV4AaABAg", "publishedAt": "2021-01-04T23:28:58Z", "author": "anil sharma", "text": "Graph theory is like a flower life \ud83d\udd49\ud83d\udd49\ud83d\udd49", "likes": 0}}, {"topLevelComment": {"id": "Ugx5ZWo_2Wd2dGze2zV4AaABAg", "publishedAt": "2021-01-04T23:27:50Z", "author": "anil sharma", "text": "Use this theory for next date of earthquake\ud83d\udd49\ud83d\udd49\ud83d\udd49\ud83d\udd49", "likes": 0}}, {"topLevelComment": {"id": "UgxMpHlpC1XaXHQDJml4AaABAg", "publishedAt": "2021-01-04T01:34:55Z", "author": "AJEDU \u0f3a 10M \u0f3b", "text": "RANK 1 ? OR 100/100 MARKS IN YOUR EXAM ? THEN SHARE THE VIDEO AND TAKE BENIFIT OF FREE EDUCATION.\n\n\nhttps://youtu.be/irBBM7lkL9M\n\n\n100% selection if study daily free class.\n\n\nhttps://youtu.be/0d5EPx0R5NE\n\nPlease don't forgot to like , share, comment and subscribe for more  videos on daily based suffering topics like this. \n\nhttps://youtu.be/htDbZwXPh8c\n\nhttps://youtu.be/pC-0_oCfMZI\n\nhttps://youtu.be/yiAcQU5n0IQ\n\n Laplace Equations\n\nI hope you will like it by considering my words in video \u2665\ufe0f", "likes": 0}}, {"topLevelComment": {"id": "Ugw_EiD8upU8rmrl_Dt4AaABAg", "publishedAt": "2020-12-30T16:57:43Z", "author": "Tnte", "text": "good to see my university taught me all the algorithms shown here", "likes": 1}}, {"topLevelComment": {"id": "Ugwp4FocEi7XbRDn5jJ4AaABAg", "publishedAt": "2020-12-30T03:23:34Z", "author": "Chris Choir", "text": "6 hours to explain a 1/2hr topic", "likes": 0}}, {"topLevelComment": {"id": "UgxWynlw7_AsmEybZnV4AaABAg", "publishedAt": "2020-12-28T15:11:23Z", "author": "Shawn Kelly", "text": "lol lol why would i need to subtract one if is infinity?", "likes": 0}}, {"topLevelComment": {"id": "UgykofTcdwU8G2QnXM54AaABAg", "publishedAt": "2020-12-27T11:35:13Z", "author": "Angel Rukhsi", "text": "Graph theory\nhttps://youtu.be/dFwCm9Qqs1s", "likes": 0}}, {"topLevelComment": {"id": "Ugxe1STJuwSQAcEtuyl4AaABAg", "publishedAt": "2020-12-26T11:23:25Z", "author": "Arnab Basu", "text": "In Dijkstra's SSSP Algorithm, isn't the visited list unnecessary? Since edges from current node to already visited nodes will always fail the dist[current] + edge.cost < dist[edge.to] test for non negative edge weights. \nThe current node is removed from the pq after all nodes already visited => dist[current] is >= dist of any node already visited, so dist[current] + (a number >= 0) cannot be less than the dist of any node already visited", "likes": 0}}, {"topLevelComment": {"id": "UgzWGT8Iz9sNATtbQMt4AaABAg", "publishedAt": "2020-12-22T11:50:22Z", "author": "Mark Bjerke", "text": "I really enjoyed this thanks.", "likes": 1}}, {"topLevelComment": {"id": "UgwDI6Xz5xrxXTojvXd4AaABAg", "publishedAt": "2020-12-20T18:22:47Z", "author": "Nikesh Raj", "text": "Hey folks, Just wanted to get feedback on such a huge video! Is it worth spending 6hours on this?", "likes": 0}}, {"topLevelComment": {"id": "UgwxiqMalruAdHC30iJ4AaABAg", "publishedAt": "2020-12-18T16:03:43Z", "author": "Boo", "text": "im new to programming... can this be applied to any programming language or exclusive to certain ones, if so which ones?", "likes": 0}}, {"topLevelComment": {"id": "UgwB2MEuVyJbmDAyaN14AaABAg", "publishedAt": "2020-12-17T17:50:40Z", "author": "Aleksandr Krasnobaev", "text": "ATTENTION PLEASE. There is a mistake in the pseudocode of Dijkstra's shortest path algorithm (1:29:26). There should not be the if statement (if vis[edge.to]: continue). The video is still amazing btw", "likes": 5}, "replies": [{"id": "UgwB2MEuVyJbmDAyaN14AaABAg.9HNbWVCYPHO9hCZoUUuIRY", "publishedAt": "2022-10-15T13:03:03Z", "author": "Tushar Vazirani", "text": "After watching another video, I realised that this line is present to make sure that the algorithm also works for undirected graphs, since undirected graphs will have incoming edges also be considered for outgoing edges!", "likes": 0}]}, {"topLevelComment": {"id": "UgxDPx1ZOfeveOZoQOV4AaABAg", "publishedAt": "2020-12-13T13:59:35Z", "author": "ardelean ion", "text": "This video help a few....and \"cut the wings\" of many..", "likes": 0}}, {"topLevelComment": {"id": "UgwoJHZz00sg-NlYVBV4AaABAg", "publishedAt": "2020-12-12T22:56:17Z", "author": "Aryan Rahman", "text": "28:10 graph[at] in line 10 should be g[at].", "likes": 7}}, {"topLevelComment": {"id": "UgzxZoIOpv20OiQKr0V4AaABAg", "publishedAt": "2020-12-07T18:03:06Z", "author": "Srinjoy Ghosh", "text": "ads in educational videos are very distracting", "likes": 0}}, {"topLevelComment": {"id": "Ugz97HbGdtJ50JHy5UN4AaABAg", "publishedAt": "2020-12-04T16:23:44Z", "author": "Felix Whise", "text": "Is there a reason why Graph Theory and Dynamic Programming are coded in Java?", "likes": 0}}, {"topLevelComment": {"id": "UgxRpbNFXHPOZNjWn6p4AaABAg", "publishedAt": "2020-12-03T23:50:37Z", "author": "BASING U MARMA", "text": "Please bring data structures and algorithms course in python \ud83d\ude4f\ud83d\ude4f", "likes": 0}}, {"topLevelComment": {"id": "UgxXq--6ZSUOuTXFfnd4AaABAg", "publishedAt": "2020-12-02T17:03:09Z", "author": "Sadia Subah", "text": "Someone explain me the 2nd figure in bipartite graph", "likes": 0}}, {"topLevelComment": {"id": "UgzZcT-d2Mr4wW-RKzR4AaABAg", "publishedAt": "2020-11-28T19:20:45Z", "author": "Slawomir Gontarek", "text": "Please set translate option in your all video. Please", "likes": 0}}, {"topLevelComment": {"id": "UgwRZU3f1MwuCoCC0KV4AaABAg", "publishedAt": "2020-11-27T19:18:30Z", "author": "Rahul Kumar Sinha", "text": "Just one word for this tutorial..Very very thankyou..", "likes": 0}}, {"topLevelComment": {"id": "Ugy710HqDNaK6eepy1t4AaABAg", "publishedAt": "2020-11-27T11:18:46Z", "author": "gilbert senyonjo", "text": "'... from a Google Engineer', no better clickbait. Awesome", "likes": 0}}, {"topLevelComment": {"id": "Ugxbcmz-dXy5mZS1V0Z4AaABAg", "publishedAt": "2020-11-26T04:53:09Z", "author": "Disha Gupta", "text": "His voice is soo good man", "likes": 1}}, {"topLevelComment": {"id": "Ugy9O0sIlb24sms3aPx4AaABAg", "publishedAt": "2020-11-24T08:36:57Z", "author": "Disha Gupta", "text": "Just completed 1:30 hr and can already solve many graph problems", "likes": 0}}, {"topLevelComment": {"id": "UgznsLAyWhs6qQuyl-F4AaABAg", "publishedAt": "2020-11-16T01:52:07Z", "author": "Omar", "text": "What is the difference between this Graph Theory course and an Algorithms and Data Structures course? Are they not interchangeable?", "likes": 0}}, {"topLevelComment": {"id": "UgzPF0mB5_Or9HQccMZ4AaABAg", "publishedAt": "2020-11-15T06:32:31Z", "author": "Hello World", "text": "This is gold !!! Very very good !!! Easy to understand !!! Should get more up vote !!!", "likes": 0}}, {"topLevelComment": {"id": "UgwEmkESCf2p-ZNnbTR4AaABAg", "publishedAt": "2020-11-12T15:54:20Z", "author": "binks toma", "text": "2:36:33 is it 0 rather than 2 for the id of the nodes on the right ? since now there\u2018s a path to node 0", "likes": 0}, "replies": [{"id": "UgwEmkESCf2p-ZNnbTR4AaABAg.9FyHNos0LE49Qy5e9sTffH", "publishedAt": "2021-08-12T23:57:11Z", "author": "Manoj", "text": "its 2 as this should have been done before the lowlink value of node 2 was changed to 0. In the example as he added it last to explain us, it looks like node 2 already found the path to 0.", "likes": 0}]}, {"topLevelComment": {"id": "UgzF1HvZT8jnLLJAUQ14AaABAg", "publishedAt": "2020-11-07T18:52:59Z", "author": "vic", "text": "Finally a tutorial in plain English", "likes": 2}}, {"topLevelComment": {"id": "UgyRoT1DsRMnzGwLGcd4AaABAg", "publishedAt": "2020-11-05T12:58:51Z", "author": "Computer Science Cafe", "text": "Great video, and well explained. Particular like the explanation of Dijkstra's Algorithm. 7 hours of algorithms video, good going !", "likes": 3}}, {"topLevelComment": {"id": "UgzfZR3A1TWrwHmNtH94AaABAg", "publishedAt": "2020-11-05T09:58:52Z", "author": "Yinjoe Ng", "text": "For the SSSP on DAG why it was D to G and then E not D to E to F.. as in topological order?", "likes": 0}}, {"topLevelComment": {"id": "UgxyjP9BAC1E3k9HdfF4AaABAg", "publishedAt": "2020-10-31T15:59:31Z", "author": "mrnobody", "text": "i guess that's how a google engineer sounds super excited", "likes": 1}}, {"topLevelComment": {"id": "UgzKAiVSIVbv24TLEK14AaABAg", "publishedAt": "2020-10-30T16:44:11Z", "author": "\u0938\u094d\u0935\u093e\u0924\u0940 \u0917\u0930\u0941\u0921\u093c", "text": "Course Contents \u2b50\ufe0f\r\n\u2328\ufe0f (0:00:00) Graph Theory Introduction\r\n\u2328\ufe0f (0:13:53) Problems in Graph Theory\r\n\u2328\ufe0f (0:23:15) Depth First Search Algorithm\r\n\u2328\ufe0f (0:33:18) Breadth First Search Algorithm\r\n\u2328\ufe0f (0:40:27) Breadth First Search grid shortest path\r\n\u2328\ufe0f (0:56:23) Topological Sort Algorithm\r\n\u2328\ufe0f (1:09:52) Shortest/Longest path on a Directed Acyclic Graph (DAG)\r\n\u2328\ufe0f (1:19:34) Dijkstra's Shortest Path Algorithm\r\n\u2328\ufe0f (1:43:17) Dijkstra's Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (1:50:47) Bellman Ford Algorithm\r\n\u2328\ufe0f (2:05:34) Floyd Warshall All Pairs Shortest Path Algorithm\r\n\u2328\ufe0f (2:20:54) Floyd Warshall All Pairs Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (2:29:19) Bridges and Articulation points Algorithm\r\n\u2328\ufe0f (2:49:01) Bridges and Articulation points source code\r\n\u2328\ufe0f (2:57:32) Tarjans Strongly Connected Components algorithm\r\n\u2328\ufe0f (3:13:56) Tarjans Strongly Connected Components algorithm source code\r\n\u2328\ufe0f (3:20:12) Travelling Salesman Problem | Dynamic Programming\r\n\u2328\ufe0f (3:39:59) Travelling Salesman Problem source code | Dynamic Programming\r\n\u2328\ufe0f (3:52:27) Existence of Eulerian Paths and Circuits\r\n\u2328\ufe0f (4:01:19) Eulerian Path Algorithm\r\n\u2328\ufe0f (4:15:47) Eulerian Path Algorithm | Source Code\r\n\u2328\ufe0f (4:23:00) Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:37:05) Eager Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:50:38) Eager Prim's Minimum Spanning Tree Algorithm | Source Code\r\n\u2328\ufe0f (4:58:30) Max Flow Ford Fulkerson | Network Flow\r\n\u2328\ufe0f (5:11:01) Max Flow Ford Fulkerson | Source Code\r\n\u2328\ufe0f (5:27:25) Unweighted Bipartite Matching | Network Flow\r\n\u2328\ufe0f (5:38:11) Mice and Owls problem | Network Flow\r\n\u2328\ufe0f (5:46:11) Elementary Math problem | Network Flow\r\n\u2328\ufe0f (5:56:19) Edmonds Karp Algorithm | Network Flow\r\n\u2328\ufe0f (6:05:18) Edmonds Karp Algorithm | Source Code\r\n\u2328\ufe0f (6:10:08) Capacity Scaling | Network Flow\r\n\u2328\ufe0f (6:19:34) Capacity Scaling | Network Flow | Source Code\r\n\u2328\ufe0f (6:25:04) Dinic's Algorithm | Network Flow\r\n\u2328\ufe0f (6:36:09) Dinic's Algorithm | Network Flow | Source Code", "likes": 1}}, {"topLevelComment": {"id": "Ugw8NXHzM9KKs6ecU1F4AaABAg", "publishedAt": "2020-10-28T05:52:46Z", "author": "Rio Rasyid", "text": "Kamu Jahat Pak Dosen... :(", "likes": 1}}, {"topLevelComment": {"id": "UgwZsfhl625pFO_6jWN4AaABAg", "publishedAt": "2020-10-25T20:24:07Z", "author": "insecuree", "text": "6:11:00 what is the point of delta value, if we would pick the highest possible capacity at every node shouldn't we get same result?", "likes": 0}}, {"topLevelComment": {"id": "Ugw6698-7-kQP26TDQ14AaABAg", "publishedAt": "2020-10-20T18:07:09Z", "author": "Sanjeet Singh", "text": "Indian 2020\ud83d\udc4d\ud83d\udc4d\ud83d\udc4d", "likes": 0}}, {"topLevelComment": {"id": "UgzOkSXML9JZ2KQaIe94AaABAg", "publishedAt": "2020-10-15T07:30:45Z", "author": "AMAN KUMAR CHOURASIYA", "text": "Can you tell me ways to minimize relaxations in the bellman ford algorithm?", "likes": 0}}, {"topLevelComment": {"id": "UgwNHtmzIELGIOGxard4AaABAg", "publishedAt": "2020-10-14T16:51:40Z", "author": "My Planet Is Pluto", "text": "Can you please turn on Closed Captions?", "likes": 0}}, {"topLevelComment": {"id": "UgzHS_wsfJOoA9Cwm_J4AaABAg", "publishedAt": "2020-10-13T19:14:02Z", "author": "Aksh Bansal", "text": "These pseudo-codes are amazing and easy to understand. Thanks a lot!", "likes": 1}}, {"topLevelComment": {"id": "Ugw0XfSvNm3tpZj6o8t4AaABAg", "publishedAt": "2020-10-06T15:52:02Z", "author": "Anupam Maurya", "text": "In Dijkstra's algo pseudo code(1:39:01), Shouldnot, vis[index] = true be after validating the dist[index] <minValue. As there can be a graph with a node A, which has higher indegree and outdegree. So we might miss out on vertices whose only route is via this node A.", "likes": 2}}, {"topLevelComment": {"id": "UgwEaf7NUrQlKCtqZIx4AaABAg", "publishedAt": "2020-10-06T09:57:40Z", "author": "Soham Datta", "text": "you have mistaken topological ordering for DFS.....thats sad", "likes": 0}}, {"topLevelComment": {"id": "UgxisLdIPI4Oo6Sjs154AaABAg", "publishedAt": "2020-10-03T11:08:18Z", "author": "hamza khiar", "text": "Way before I dive in lemme know this course is specifically on teaching algorithms or  graph theory or btw what is graph theory ?", "likes": 0}}, {"topLevelComment": {"id": "UgxGDhqKiDGhY2Sr6KJ4AaABAg", "publishedAt": "2020-10-02T19:58:45Z", "author": "woles ae", "text": "Thanks you very much,  great explanations..", "likes": 0}}, {"topLevelComment": {"id": "Ugx7YeawVZefKbC8I0B4AaABAg", "publishedAt": "2020-10-02T12:40:31Z", "author": "Pajeet Singh", "text": "When you realize you are person F", "likes": 4}}, {"topLevelComment": {"id": "UgzRqZT3bGJy-A2vE3F4AaABAg", "publishedAt": "2020-09-30T19:39:55Z", "author": "Hit", "text": "I am F", "likes": 0}}, {"topLevelComment": {"id": "UgzJddsfOj0CbOUlzmZ4AaABAg", "publishedAt": "2020-09-25T19:08:30Z", "author": "Raghav Kumar", "text": "2:16 Upper left corner is me. I am in this video and I don't like it ._.", "likes": 1}, "replies": [{"id": "UgzJddsfOj0CbOUlzmZ4AaABAg.9E21RsgOTqU9HntsY4e2Rz", "publishedAt": "2020-12-28T08:10:36Z", "author": "monkeyl10", "text": "LOL same", "likes": 0}]}, {"topLevelComment": {"id": "UgwHuSuzOtf6ou7fZZ14AaABAg", "publishedAt": "2020-09-25T09:59:12Z", "author": "foobars", "text": "What does big O of E mean? \"O(E)\" I know that \"n\" in \"O(n)\" refers to the input, so the algorithm's time scales with the input, but I have no idea what \"E\" is.", "likes": 0}, "replies": [{"id": "UgwHuSuzOtf6ou7fZZ14AaABAg.9E12_kLnBr29ECKtGgIyQK", "publishedAt": "2020-09-29T19:10:48Z", "author": "foobars", "text": "@Cirilo Meggiolaro Thank you :D", "likes": 0}, {"id": "UgwHuSuzOtf6ou7fZZ14AaABAg.9E12_kLnBr29E2xupXJWLx", "publishedAt": "2020-09-26T03:48:08Z", "author": "Cirilo Meggiolaro", "text": "Total number of edges.", "likes": 0}]}, {"topLevelComment": {"id": "Ugzq6mn7At8KUqJDfkV4AaABAg", "publishedAt": "2020-09-24T19:53:33Z", "author": "Kieran O'Sullivan", "text": "Does anyonw know what animation software is being used here? The animations for the searches are very good", "likes": 2}}, {"topLevelComment": {"id": "UgwqygMmMkTsw5vQUyl4AaABAg", "publishedAt": "2020-09-24T18:17:44Z", "author": "just_me", "text": "Why nobody is talking about his soothing voice?", "likes": 0}}, {"topLevelComment": {"id": "Ugzw5QYU8nvtcI3-k5N4AaABAg", "publishedAt": "2020-09-20T23:18:54Z", "author": "Peter Nguyen", "text": "20:01 I think it should be \"whose removal increases the number of disconnected components.\" Found the \"disconnected\" part on GeeksForGeeks and it makes sense.", "likes": 6}, "replies": [{"id": "Ugzw5QYU8nvtcI3-k5N4AaABAg.9Dqb7VA5-cM9EIFhNTOH1O", "publishedAt": "2020-10-02T02:20:55Z", "author": "Tognitos", "text": "I agree, I was stuck on it trying to justify it for a minute, then I thought about visiting the comment section", "likes": 0}]}, {"topLevelComment": {"id": "UgxFiwr0VjFCSovnJr54AaABAg", "publishedAt": "2020-09-17T16:03:41Z", "author": "plekkchand", "text": "At Google, even graphs must be diverse.", "likes": 0}}, {"topLevelComment": {"id": "UgzWcQE4BNzVx8dCO6l4AaABAg", "publishedAt": "2020-09-17T15:38:23Z", "author": "ultimate cheese whopper", "text": "I'm 13 and I feel like I shouldn't understand this but why am I understanding this course?", "likes": 2}}, {"topLevelComment": {"id": "UgxgGoPD_Idn2XxJxMR4AaABAg", "publishedAt": "2020-09-16T11:02:47Z", "author": "Waqar Shaikh", "text": "30:34 here why the Green colored component is labelled as component of 2 even though it doesn't have node 2 in it?\nPlease anyone correct me!", "likes": 0}, "replies": [{"id": "UgxgGoPD_Idn2XxJxMR4AaABAg.9DezhWtD-9_9DpP3u5Euj0", "publishedAt": "2020-09-20T12:05:34Z", "author": "Waqar Shaikh", "text": "@Advith Shetty Thanks for the explanation!\nAlso thanks for replying!", "likes": 0}, {"id": "UgxgGoPD_Idn2XxJxMR4AaABAg.9DezhWtD-9_9Dp351fhwpr", "publishedAt": "2020-09-20T08:53:29Z", "author": "Advith Shetty", "text": "I guess that he isn't really naming the groups based on the elements present in it, he is just naming them 0,1,2,3,4 since there are 4 groups.", "likes": 0}]}, {"topLevelComment": {"id": "Ugz8zvKHK_2XRl3OjmV4AaABAg", "publishedAt": "2020-09-16T04:48:13Z", "author": "GigaChad", "text": "Please do one in c++", "likes": 0}, "replies": [{"id": "Ugz8zvKHK_2XRl3OjmV4AaABAg.9DeJq9nqZwf9E0X6rvKcvT", "publishedAt": "2020-09-25T05:06:46Z", "author": "charlie3k", "text": "If you understand the concepts and know C++, you should be able to implement it yourself :)", "likes": 0}]}, {"topLevelComment": {"id": "UgyhLOb3mPqFY66Aig54AaABAg", "publishedAt": "2020-09-15T10:18:22Z", "author": "KetchArt", "text": "Does anybody know a good book for graph theory for beginners ( easy explained) ?", "likes": 0}}, {"topLevelComment": {"id": "UgwDoBL9EtdSpj2Sil54AaABAg", "publishedAt": "2020-09-14T01:30:05Z", "author": "J3GJ", "text": "How many people clicked because thumbnail stated 'no ads'", "likes": 0}}, {"topLevelComment": {"id": "Ugx_DbVAiCVAtBprGnB4AaABAg", "publishedAt": "2020-09-12T03:42:58Z", "author": "AstheaTV", "text": "Graph Theory, my favorite! Awesome, now I can refresh my knowledge, thank you for sharing this! :D", "likes": 0}}, {"topLevelComment": {"id": "UgyLTSKprKnUAFfTCMt4AaABAg", "publishedAt": "2020-09-10T10:56:43Z", "author": "Mejar yadav", "text": "Very bad lecture \ud83d\ude4c\ud83d\ude23\ud83d\ude25\ud83d\ude25\ud83d\ude25\ud83d\ude25", "likes": 0}}, {"topLevelComment": {"id": "UgwY--8L21Ih_6dMUCR4AaABAg", "publishedAt": "2020-09-09T19:21:49Z", "author": "Evan Zhao", "text": "change speed to 1.25x", "likes": 0}}, {"topLevelComment": {"id": "UgziFmoc3Qd3bHFkFWR4AaABAg", "publishedAt": "2020-09-09T06:28:19Z", "author": "Kaleab Asfaw", "text": "Great helpful video. Thanks\nOn DFS connectivity application, In the example you gave, the for loop start from node 0 and mark all elements it can then go to node 1 and when it reaches node 2, it will not visit 3, there is no path to visit 3, so next, it will visit 3 as a new component, making the total component 6. Is this correct?", "likes": 2}}, {"topLevelComment": {"id": "UgxyCt0CU_JAYguma0p4AaABAg", "publishedAt": "2020-09-08T10:51:35Z", "author": "Jasper Peijer", "text": "In the video it is stated for an Eulerian Path there can only be 2 vertexes with a different in and out but in the case I had to solve it does have 2 where there are more incoming edges than outgoing edges.\n\n0 -> 2\r\n1 -> 3\r\n2 -> 1\r\n3 -> 0,4\r\n6 -> 3,7\r\n7 -> 8\r\n8 -> 9\r\n9 -> 6\n\nGives the following in/out table:\n\nNumber - In - Out\n0 - 1 - 1\n1 - 1 - 1\n2 - 1 - 1\n3 - 2 - 1\n4 - 1 - 0\n6 - 1 - 2\n7 - 1 - 1\n8 - 1 - 1\n9 - 1 - 1\n\nCan someone explain me this? I've figured the Eulerian Path here is 6->7->8->9->6->3->0->2->1->3->4", "likes": 0}}, {"topLevelComment": {"id": "Ugz1FgoNw4x_3guPnXV4AaABAg", "publishedAt": "2020-09-07T16:35:19Z", "author": "Chetan Kankani", "text": "Please allow captions", "likes": 0}}, {"topLevelComment": {"id": "Ugxp10JgpMX7NoHniBN4AaABAg", "publishedAt": "2020-09-06T15:49:47Z", "author": "Vijay Babaria", "text": "Amazing content, would love to see it in the form of book to easier revisit some of the algorithms?.. thank you", "likes": 0}, "replies": [{"id": "Ugxp10JgpMX7NoHniBN4AaABAg.9DGkatcbscH9DZDeHSIsu5", "publishedAt": "2020-09-13T19:58:43Z", "author": "aviral bajpai", "text": "Visit his github repo, given in description", "likes": 1}]}, {"topLevelComment": {"id": "UgwsU0yp1szYzr4zQ6V4AaABAg", "publishedAt": "2020-09-06T04:41:00Z", "author": "Chetan Raikwar", "text": "Amazing !!! \nThat's what I wanted. All graph algorithms in one place.", "likes": 4}}, {"topLevelComment": {"id": "UgwSnSs_w_Cv3ySvwOd4AaABAg", "publishedAt": "2020-09-04T10:57:43Z", "author": "Musse Mulugeta Dejene", "text": "I'm asking if there is a software that ahelp of eye glass and hearing aids can see and lissen sound of Jesus and devils or a video camera software that both appeared", "likes": 1}}, {"topLevelComment": {"id": "UgwmZ_BWfJ8OtyGUqJJ4AaABAg", "publishedAt": "2020-09-02T19:44:18Z", "author": "Myrslokstok", "text": "When I studied this at university a graph was a polynomial (x^2+2x-3) or something. \nWhat is this kind of thing called?", "likes": 1}, "replies": [{"id": "UgwmZ_BWfJ8OtyGUqJJ4AaABAg.9D6sFzkWQX99DCQe2-ONlw", "publishedAt": "2020-09-04T23:29:45Z", "author": "George", "text": "This is a different use of the word. \nA graph is \n- a collection of things (nodes) that probably have a number of attributes (age, mileage, temperature), and \n- 'arrows' between them, which might also have attributes (cost, time), and might 'go' one way or both ways.\nNot all nodes need be connected. The set of nodes might form two or more disjoint 'separated components'.\n\nA node can have one or more arrows to itself.", "likes": 0}]}, {"topLevelComment": {"id": "Ugweq9Xo28JgiG9XnnR4AaABAg", "publishedAt": "2020-09-01T14:37:57Z", "author": "Potonicml", "text": "You shouldn't constrain a network, it should be predefined, like humans, our spatial awareness is defined when we grow up, a robots should not change so that it does not alter its own code by mistake... It should be predefined, the AI should represent two things, a basic brain that can access everything, and an impulse brain that allows it to feel and sense altering impulse brain weights known as learning... then over time you teach this impulse brain to learn based on interaction, so that it can naturally learn.", "likes": 2}}, {"topLevelComment": {"id": "Ugx_C0RD606LxbwILyp4AaABAg", "publishedAt": "2020-09-01T11:01:21Z", "author": "batman arkham city", "text": "Finest selfless work in history of computer science ever!\nthank you sir, you will be remembered for ages to come!", "likes": 10}, "replies": [{"id": "Ugx_C0RD606LxbwILyp4AaABAg.9D3MbtWEgdJ9Dd3js8O-c6", "publishedAt": "2020-09-15T17:08:18Z", "author": "Gauri Shankar Badola", "text": "Open Source community : Hold my Open Source Code.", "likes": 3}]}, {"topLevelComment": {"id": "Ugyr-vJXLGD2FHteEuB4AaABAg", "publishedAt": "2020-08-30T18:00:25Z", "author": "Varun Patkar", "text": "I came here as i was doing the Free Ticket problem on Codechef and one of the first type of data structure to store was an Adjacency List. And i did not know anything about it. The thing that its so intuitive is really good to know. Great Course by the way. Really interested in Graph Theory because i was trying to solve a question. Great way to learn i guess.", "likes": 4}}, {"topLevelComment": {"id": "Ugzt-_3AnBpo5n8s6YB4AaABAg", "publishedAt": "2020-08-29T17:06:03Z", "author": "DJR", "text": "This is great... although the video is hard to FF or go back in time... can someone show me a trick on that?", "likes": 3}, "replies": [{"id": "Ugzt-_3AnBpo5n8s6YB4AaABAg.9CxHyT_XsN29CxxAFulIrO", "publishedAt": "2020-08-29T23:14:48Z", "author": "MrMereum", "text": "just hit left arrow on ur keyboard", "likes": 2}]}, {"topLevelComment": {"id": "Ugzh3l72EtYaRMiSVkt4AaABAg", "publishedAt": "2020-08-29T16:39:02Z", "author": "rammya bandara", "text": "GREAT TEACHING, THANKS SIR,", "likes": 1}}, {"topLevelComment": {"id": "Ugz6hUHhijeksR_ecuN4AaABAg", "publishedAt": "2020-08-28T10:10:39Z", "author": "jay ho Eliot de cabrio", "text": "i dont under stood the part 1:29:27 if (vis[edge.to]) continue", "likes": 0}, "replies": [{"id": "Ugz6hUHhijeksR_ecuN4AaABAg.9Ctyd5H9a9w9Ctyjuo_s14", "publishedAt": "2020-08-28T10:11:35Z", "author": "jay ho Eliot de cabrio", "text": "pls explain if i revisted the edge with small distance then it will be skiped", "likes": 0}]}, {"topLevelComment": {"id": "UgxIO8LT_AElPmp-URN4AaABAg", "publishedAt": "2020-08-26T11:18:47Z", "author": "Gabriel Bartmanovicz", "text": "Can I write in Javascript instead of python?", "likes": 1}}, {"topLevelComment": {"id": "UgzK9GUI-wAanps40ZV4AaABAg", "publishedAt": "2020-08-24T22:24:13Z", "author": "strohtaler", "text": "5:10 how is \"simply an undirected graph with no cycles\" equivalent to \"a graph with N nodes and N-1 edges\"?! shouldn't  a tree be 'a CONNECTED undirected graph with no cycles'?", "likes": 2}, "replies": [{"id": "UgzK9GUI-wAanps40ZV4AaABAg.9CkzPNSLn8E9CrFMThOaFU", "publishedAt": "2020-08-27T08:47:48Z", "author": "Thomas Yorkshire IV", "text": "Oh, I see the problem now. I thought a graph was always connected.", "likes": 0}, {"id": "UgzK9GUI-wAanps40ZV4AaABAg.9CkzPNSLn8E9CrEtMC2GA8", "publishedAt": "2020-08-27T08:43:42Z", "author": "Thomas Yorkshire IV", "text": "@strohtaler That's not a graph, those are two graphs, actually, it's a forest (both of them are trees) or am I missing something here?", "likes": 0}, {"id": "UgzK9GUI-wAanps40ZV4AaABAg.9CkzPNSLn8E9CrEQLbvI3q", "publishedAt": "2020-08-27T08:39:36Z", "author": "strohtaler", "text": "@Thomas Yorkshire IV agreed, it sure is not about \"graphs\" vs. \"graph\". The problem is that \"A tree is an undirected graph with no cycles\" is not equivalent to \"it is a connected graph with N nodes and N-1 edges\". Example the graph \"A--B C\" (graph with 2 components, A connected to B, C not connected) is \"an undirected graph with no cycles\" but it is not connected and missing one edge to fulfill the second condition: \"a connected graph with N node and N-1 edges\".", "likes": 0}, {"id": "UgzK9GUI-wAanps40ZV4AaABAg.9CkzPNSLn8E9CrBQO3zkrg", "publishedAt": "2020-08-27T08:13:23Z", "author": "Thomas Yorkshire IV", "text": "I don't understand the problem with the definition. He said graph not graphs.", "likes": 0}, {"id": "UgzK9GUI-wAanps40ZV4AaABAg.9CkzPNSLn8E9CnQNccLYmH", "publishedAt": "2020-08-25T21:07:07Z", "author": "Antonio Cruciani", "text": "You're right, the first definition that he gives: \"A tree is an undirected graph with no cycles\" is not precise. He should have defined in the following way:\" A tree is an undirected graph with n vertices, no cycles and has\u00a0\u00a0n-1 edges\".", "likes": 0}]}, {"topLevelComment": {"id": "Ugw6yfBIJFYXL_QK-d14AaABAg", "publishedAt": "2020-08-23T12:56:52Z", "author": "Daniel Jackson", "text": "why your voice is the same as Brackeys? :v", "likes": 1}}, {"topLevelComment": {"id": "UgzzNd3MM0bvNd1q3Op4AaABAg", "publishedAt": "2020-08-23T00:19:05Z", "author": "Sai Kamireddy", "text": "12:18 edge weight lookup in adjan list is O(V) not o(E)  please correct this", "likes": 0}}, {"topLevelComment": {"id": "UgwPfB9LBSJslQvrttt4AaABAg", "publishedAt": "2020-08-21T11:12:21Z", "author": "nkunim sarkodee", "text": "Increase the speed 1.5X to save some time of your life :)", "likes": 4}, "replies": [{"id": "UgwPfB9LBSJslQvrttt4AaABAg.9Cc37rcO1Pr9PcDrm2jkus", "publishedAt": "2021-07-10T15:34:15Z", "author": "Nishant Banjade", "text": "Don't watch to finish\nWatch to understand \nTake weeks or even months , watch again and again understand clearly.\nSo you can get your concept more clear.", "likes": 1}, {"id": "UgwPfB9LBSJslQvrttt4AaABAg.9Cc37rcO1Pr9Kjf2vRgr_F", "publishedAt": "2021-03-11T06:18:18Z", "author": "Mashhood Alam", "text": "watching it at 2x then wasting my life reading comments XD", "likes": 0}]}, {"topLevelComment": {"id": "Ugx2o9CN8s2I14PSucB4AaABAg", "publishedAt": "2020-08-20T20:48:15Z", "author": "Dominique Fortin", "text": "You can make a dfs algorithm by replacing the queue in the bfs algorithm with a stack.", "likes": 0}, "replies": [{"id": "Ugx2o9CN8s2I14PSucB4AaABAg.9CaWEzRmxLZ9CrC6MaddaS", "publishedAt": "2020-08-27T08:19:24Z", "author": "Thomas Yorkshire IV", "text": "Nah, recursive dfs looks better.", "likes": 1}]}, {"topLevelComment": {"id": "UgyDswNaf_ZeOH-MQQB4AaABAg", "publishedAt": "2020-08-20T06:53:27Z", "author": "Huy Truong", "text": "Question: for Dijkstra shortest path algo, do you actually need a visited array? If a node is visited then we have already got the shortest path to that node and so that node would never be pushed into our priority queue again. Would having the visited array just consume unecessary space?", "likes": 0}, "replies": [{"id": "UgyDswNaf_ZeOH-MQQB4AaABAg.9C_0hkVnkCc9h_PqC-GO04", "publishedAt": "2022-10-24T19:17:40Z", "author": "Tushar Vazirani", "text": "I think the idea is to utilize the visited array to avoid checking the new distance/priority queue condition.", "likes": 0}]}, {"topLevelComment": {"id": "Ugw3Ufleb3GIQ0ikQcV4AaABAg", "publishedAt": "2020-08-19T06:41:55Z", "author": "ZenoDiac", "text": "18:40 Oh, I forgot, we're in 2020. Can't say \"man\" anymore \ud83d\ude02", "likes": 1}}, {"topLevelComment": {"id": "Ugz3n9SrnDfNVuPHHzB4AaABAg", "publishedAt": "2020-08-18T20:03:10Z", "author": "Arthur 002", "text": "moist critikal???? is that you?", "likes": 0}}, {"topLevelComment": {"id": "UgxHtF7HJxocQF6glox4AaABAg", "publishedAt": "2020-08-18T13:19:21Z", "author": "Ar4", "text": "4:04 so sad for F :(", "likes": 0}}, {"topLevelComment": {"id": "UgzUwBol4iiGibe_KUF4AaABAg", "publishedAt": "2020-08-18T10:14:14Z", "author": "Sandor Daniel Molnar", "text": "Ooh, seems like a long video, but if I can get a role watching this and hard work, I might as well give it a go.", "likes": 0}}, {"topLevelComment": {"id": "UgyOk9sKnqLU7JwXLSt4AaABAg", "publishedAt": "2020-08-16T08:54:56Z", "author": "Aayush Neupane", "text": "2:44:02 i think he is trying to say at least one but can be both", "likes": 0}}, {"topLevelComment": {"id": "UgzWjd9Ly6rvnfjlOYF4AaABAg", "publishedAt": "2020-08-15T17:37:00Z", "author": "Matt M", "text": "Thanks for putting the effort to make the lecture. Suggested improvement over lack of animation/graphical explanation while you are explaining the code. I'm spending too much energy trying to follow the code explanation being unfamiliar with java.", "likes": 0}}, {"topLevelComment": {"id": "UgzGbCh2CoCc4eyGVd54AaABAg", "publishedAt": "2020-08-13T20:08:20Z", "author": "Bandhana Sharma", "text": "I am dyeing to start the computer science.... And get off my high school", "likes": 1}}, {"topLevelComment": {"id": "UgxLeu7O5ffLRnhDGJd4AaABAg", "publishedAt": "2020-08-12T18:01:41Z", "author": "Deep Dhanuka", "text": "2:36:25 if you add an edge from 8 to 2 the low link value for 5,6,7,8 would become 0\n3:19:45 [Line 76]I don't think this step is needed as we have already done that on Line 68", "likes": 7}, "replies": [{"id": "UgxLeu7O5ffLRnhDGJd4AaABAg.9CGbp2QtEDF9hAioqGp51C", "publishedAt": "2022-10-14T19:51:59Z", "author": "Tushar Vazirani", "text": "Thanks! Was driving me crazy. Can't believe the video had such mistakes.", "likes": 0}, {"id": "UgxLeu7O5ffLRnhDGJd4AaABAg.9CGbp2QtEDF9Ppj-gyBojV", "publishedAt": "2021-07-15T21:25:13Z", "author": "Viet Dao", "text": "Yes, according to Strongly-connected-cycle; the whole nodes with id 0, 1, 2, 5, 6, 7, 8 should have low link 0.\n\nHowever, there is a way to use Tarjan algorithm to make the result appear that way.\n\nI will denote the pair as (id, low link).\n\nFirst (0; 0) then (1; 1); then (2; 2); then (3; 3); then (4; 4).\nBacktrack to (3; 3) do nothing; backtrack to (2; 2) do nothing, although id = low-links, but there is still more path to go at node id 2.\n\n(From (2; 2)) go to (5; 5); then (6; 6); then (7; 7); then (8; 8); then go to (5; 5).\n\nBacktrack to (8; 5); then continue to (2; 2); backtrack to (8; 2) backtrack (7; 2); backtrack (6; 2); backtrack (5; 2); backtrack (2; 2) (?, still do nothing, because at node 2, we still can go further)\n\n(from (2; 2)) to (0; 0); backtrack (2; 0); backtrack (1; 0); backtrack (0; 0) nowhere to go. Pop node 0; 1; 2 out of stack.\n\nI am pretty sure I am mising something here. Did I apply Tarjan\u2019s algorithm corectly?", "likes": 0}]}, {"topLevelComment": {"id": "UgzgA_HFqEHhnM4fhyN4AaABAg", "publishedAt": "2020-08-12T14:07:35Z", "author": "Trazyn", "text": "For the love of god please enable subtitles.", "likes": 0}}, {"topLevelComment": {"id": "UgzHOA3fKBjkHBgiv8t4AaABAg", "publishedAt": "2020-08-11T17:01:23Z", "author": "Zee Myendeki", "text": "Where can I find tutorials for 1. File I/o streams \n2. Pointers \nEtc ?", "likes": 0}, "replies": [{"id": "UgzHOA3fKBjkHBgiv8t4AaABAg.9CDw7Y5QWdE9CrCOIMhZDb", "publishedAt": "2020-08-27T08:21:50Z", "author": "Thomas Yorkshire IV", "text": "The internet", "likes": 0}]}, {"topLevelComment": {"id": "UgxO5B8A__SCCsCk09B4AaABAg", "publishedAt": "2020-08-10T18:34:48Z", "author": "Vaibhav Tiwari", "text": "Correction: Removing bridges increases the number of disconnected components. at 20:12", "likes": 0}, "replies": [{"id": "UgxO5B8A__SCCsCk09B4AaABAg.9CBX0tzZM2i9CBXHUYrczx", "publishedAt": "2020-08-10T18:37:04Z", "author": "Vaibhav Tiwari", "text": "And thus also the connected components. I guess. Confusing.", "likes": 0}]}, {"topLevelComment": {"id": "UgwMCbbRz1d3o9s2v4p4AaABAg", "publishedAt": "2020-08-08T05:03:40Z", "author": "Karthik mishra", "text": "I like it how it is similar to python cuz I needed the code as well", "likes": 1}}, {"topLevelComment": {"id": "UgzskgAmoqm3s7AatnB4AaABAg", "publishedAt": "2020-08-02T22:13:29Z", "author": "opendebate", "text": "You should've learned this on Grade 11 !", "likes": 1}}, {"topLevelComment": {"id": "UgxWKGP4LnhsYmU2qUx4AaABAg", "publishedAt": "2020-07-30T16:33:29Z", "author": "Mister Momo", "text": "One itty-bitty problem: I don't know java...", "likes": 6}, "replies": [{"id": "UgxWKGP4LnhsYmU2qUx4AaABAg.9BjzOdeI4Zy9JdRMnjQj7N", "publishedAt": "2021-02-11T23:43:06Z", "author": "Obinna Ubah", "text": "There's no actual code in the video. It's all pseudocode", "likes": 0}]}, {"topLevelComment": {"id": "UgxBL7ajv9vGdhqrMgd4AaABAg", "publishedAt": "2020-07-29T17:01:11Z", "author": "Nitish Devadiga", "text": "4:04 F for F", "likes": 1}, "replies": [{"id": "UgxBL7ajv9vGdhqrMgd4AaABAg.9BhSlfMs-6V9ByJLMKvZJK", "publishedAt": "2020-08-05T06:05:54Z", "author": "Anuj Yadav", "text": "Bruh!! I thought the same way... F XD", "likes": 0}]}, {"topLevelComment": {"id": "UgwvNPxmmS99_p6b3Kl4AaABAg", "publishedAt": "2020-07-29T13:50:16Z", "author": "Sourav Kedia", "text": "Good work and good explanation, really made simple", "likes": 0}}, {"topLevelComment": {"id": "UgyH34Gi1vMoIYBwPzF4AaABAg", "publishedAt": "2020-07-28T20:22:01Z", "author": "Vikas Gola", "text": "Sound is very low\ud83d\ude05.", "likes": 0}}, {"topLevelComment": {"id": "Ugwpe_rqf6ABrbNcz894AaABAg", "publishedAt": "2020-07-26T06:46:37Z", "author": "Chatrughan Prasad", "text": "Stat of art explanation! Thanks for the knowledge sharing.", "likes": 1}}, {"topLevelComment": {"id": "Ugz49qzSVnfVKgTmhj94AaABAg", "publishedAt": "2020-07-24T17:58:12Z", "author": "Anuran Dutta", "text": "My search history be like: \n3 min memes - 5 min funny videos - 6 HOURS+ GRAPH THEORY", "likes": 347}, "replies": [{"id": "Ugz49qzSVnfVKgTmhj94AaABAg.9BVgJwkYEij9QDfgujMbmr", "publishedAt": "2021-07-25T13:57:19Z", "author": "Sanjay Vasnani", "text": "Way to goo!!", "likes": 0}, {"id": "Ugz49qzSVnfVKgTmhj94AaABAg.9BVgJwkYEij9M-877xBYMz", "publishedAt": "2021-04-11T12:20:15Z", "author": "Praagya Dhungel", "text": "@\u0412\u043b\u0430\u0434\u0438\u0441\u043b\u0430\u0432 \u041f\u0438\u043b\u0438\u043f\u0435\u043d\u043a\u043e link ?", "likes": 0}, {"id": "Ugz49qzSVnfVKgTmhj94AaABAg.9BVgJwkYEij9Lol2i5M8N_", "publishedAt": "2021-04-07T02:18:17Z", "author": "Rayyan khan", "text": "gunny how u spend more time watching innumerable meme and funny videos but only 3 or 5 min watching a freecodecamp video lol", "likes": 0}, {"id": "Ugz49qzSVnfVKgTmhj94AaABAg.9BVgJwkYEij9DOId1uepRX", "publishedAt": "2020-09-09T14:10:36Z", "author": "Anuran Dutta", "text": "@timothy that's the right way!", "likes": 1}, {"id": "Ugz49qzSVnfVKgTmhj94AaABAg.9BVgJwkYEij9DNrT9w6kCp", "publishedAt": "2020-09-09T10:04:27Z", "author": "timothy", "text": "mine's the other way around", "likes": 8}]}, {"topLevelComment": {"id": "UgxvTmhw319YbQxI2uJ4AaABAg", "publishedAt": "2020-07-24T11:59:59Z", "author": "Samradhi Goyal", "text": "voice too low", "likes": 0}}, {"topLevelComment": {"id": "UgwZoIQntlmKhTtxFaR4AaABAg", "publishedAt": "2020-07-21T19:38:10Z", "author": "Het Fadia", "text": "i love your pusedo code really awesome", "likes": 1}}, {"topLevelComment": {"id": "Ugz_mA0kE5oNZMcb7IB4AaABAg", "publishedAt": "2020-07-14T14:05:48Z", "author": "Games4us", "text": "huge like for \"no ads\" !", "likes": 3}}, {"topLevelComment": {"id": "UgxcQlPuZXd6S5gzNdN4AaABAg", "publishedAt": "2020-07-14T00:07:14Z", "author": "Timothy Gao", "text": "This is too edgy for me", "likes": 1}}, {"topLevelComment": {"id": "UgzrYtx5EBjM5QIByqZ4AaABAg", "publishedAt": "2020-07-13T21:54:23Z", "author": "Shubham Shinde", "text": "I can't tell you how happy I am just finding this video becoz lately I was learning a course but the only this missing was graph on mycodeschool YouTube thnx man for making these", "likes": 5}}, {"topLevelComment": {"id": "UgxsU-bT8vdKm0c5ND54AaABAg", "publishedAt": "2020-07-13T17:40:32Z", "author": "dranzerashi", "text": "Hi, In the TopSort SSSP java code Why do we set i =0  in the loop(line 81), everythin till dist[start] will be = null in the beginning right so shouln't we be starting directly at i = start anyway. What  am I missing here?", "likes": 0}, "replies": [{"id": "UgxsU-bT8vdKm0c5ND54AaABAg.9B3KYq8u2ja9B3L3bpw7_i", "publishedAt": "2020-07-13T17:45:00Z", "author": "dranzerashi", "text": "oh my bad. topsort returns indices in array so they are not in same order as dist[].", "likes": 0}]}, {"topLevelComment": {"id": "UgxbPLDIdkBhRwK1_a14AaABAg", "publishedAt": "2020-07-11T18:12:24Z", "author": "syed habeeb uddin", "text": "i can't thank enough for freecodecamp .....\nplz make a video on DynamicPogramming !\nWHO ELSE NEEDS THIS  plz\"like\".....", "likes": 10}}, {"topLevelComment": {"id": "UgzxuIrK1hzvQLJWhkV4AaABAg", "publishedAt": "2020-07-10T14:29:00Z", "author": "Pentium Ou", "text": "\u6eda\u8fdb\u6536\u85cf\u5939\u5403\u7070\u5427\u54c8\u54c8\u54c8", "likes": 0}}, {"topLevelComment": {"id": "UgxBdsLxO2ds178LmaR4AaABAg", "publishedAt": "2020-07-06T23:46:51Z", "author": "Garrett Smith", "text": "when you introduce a new concept with \"requires 0(V2) space\" and \"Edge weight lookup is 0(1)\". What do you even use it for? We can get to that math stuff later\u2026 First, what do you use it for? (I need to pass an interview, so that's why I'm watching pointless videos.)", "likes": 0}, "replies": [{"id": "UgxBdsLxO2ds178LmaR4AaABAg.9AmxugTbMoo9CrC_5LVxs7", "publishedAt": "2020-08-27T08:23:27Z", "author": "Thomas Yorkshire IV", "text": "You're not going to pass that interview if you think complexity analysis is pointless.", "likes": 0}]}, {"topLevelComment": {"id": "UgzQpN-5MZW7bbuhwmJ4AaABAg", "publishedAt": "2020-07-01T06:10:55Z", "author": "Sarveswara Reddy Boreddy", "text": "Good tutorial", "likes": 0}}, {"topLevelComment": {"id": "UgxCMTmgAPPWqC5u4ZZ4AaABAg", "publishedAt": "2020-06-28T19:58:00Z", "author": "Treyi", "text": "pleaseee make a series on bit manipulation!!!!", "likes": 0}}, {"topLevelComment": {"id": "UgwjrePrxJQfoAUfh_B4AaABAg", "publishedAt": "2020-06-25T15:06:12Z", "author": "Kevin Herro", "text": "THANK YOU SIR", "likes": 1}}, {"topLevelComment": {"id": "UgzVLLUyVJlU7f0J_wl4AaABAg", "publishedAt": "2020-06-23T15:43:26Z", "author": "Klemens", "text": "This is a truly enlighting video. I have been trying to learn more about graph theory because I failed miserably at HackerRank challenges involving it. Finally, I have found an all in one resource. Thank you sir!", "likes": 1}, "replies": [{"id": "UgzVLLUyVJlU7f0J_wl4AaABAg.9AFcFg_DMXn9IV88vZFE-y", "publishedAt": "2021-01-14T12:30:37Z", "author": "Bil Msr", "text": "can you solve them now ??\nur the men coming from future for mee", "likes": 0}]}, {"topLevelComment": {"id": "UgzVodE-u6mU8gyc0pd4AaABAg", "publishedAt": "2020-06-23T07:40:53Z", "author": "Yagna M", "text": "add subtitles pls.", "likes": 0}}, {"topLevelComment": {"id": "UgyhkO2jidFwF3BbXpx4AaABAg", "publishedAt": "2020-06-21T21:24:43Z", "author": "Rao Venu", "text": "Awesome course.  There is some extra work being done in the BFS at 39:12.  Imagine A has neighbours B,C,D.  And B has neighbours C,D.  Now C and D will get added to the queue twice.  So we end up iterating over all their neighbours twice.  here it is not incorrect but just some extra work.  However if we were using BFS for counting for e.g., to count the number of nodes in the graph then it would return the wrong result.", "likes": 0}, "replies": [{"id": "UgyhkO2jidFwF3BbXpx4AaABAg.9AB4ieZldbR9ZHgniBkHkT", "publishedAt": "2022-03-07T20:06:30Z", "author": "KaWiz", "text": "i know this is old comment but just wanted to say this is incorrect, the visited[] boolean list keeps track of visited nodes; when A enqueues B,C,D they are marked by visited[next] = true, then when B is adding neighbors C,D they will both fail the if !visited[next] check right under the loop and will not be added to the queue", "likes": 0}]}, {"topLevelComment": {"id": "UgxLhfdDpZQYajLaNFl4AaABAg", "publishedAt": "2020-06-14T12:17:59Z", "author": "Devang Srivastava", "text": "He is my sleep pill", "likes": 0}}, {"topLevelComment": {"id": "Ugz39t10gW6EsNrd_aZ4AaABAg", "publishedAt": "2020-06-13T14:09:55Z", "author": "Ryanne Graff", "text": "Any chance this video is broken down into a playlist or something, somewhere?", "likes": 0}, "replies": [{"id": "Ugz39t10gW6EsNrd_aZ4AaABAg.99qhb3jAonn99rXGwdMWA5", "publishedAt": "2020-06-13T21:50:09Z", "author": "Ryanne Graff", "text": "@sisters Awesome! Thank you \ud83d\ude01", "likes": 0}]}, {"topLevelComment": {"id": "UgxxDo9w-MGiWMHv7H54AaABAg", "publishedAt": "2020-06-10T09:22:36Z", "author": "Ritik Arts", "text": "where are subtitles....please add subtitles", "likes": 0}}, {"topLevelComment": {"id": "UgxeHYkRt183K8jwCe54AaABAg", "publishedAt": "2020-06-09T14:55:31Z", "author": "That Guy", "text": "love ye", "likes": 0}}, {"topLevelComment": {"id": "Ugxkle0J5jplVzqB4it4AaABAg", "publishedAt": "2020-06-09T02:34:35Z", "author": "ILEGAL EAGLE IGLESIS", "text": "\u041a\u043e\u043d\u0444\u043e\u0440\u043a\u0438", "likes": 0}}, {"topLevelComment": {"id": "UgzwrZAZS7pBGIlU35B4AaABAg", "publishedAt": "2020-06-06T16:46:06Z", "author": "I_dont_like Vodka", "text": "the preview looked really cool so I decided to learn the skill", "likes": 0}}, {"topLevelComment": {"id": "UgwmcMiQXQtNj57rwLF4AaABAg", "publishedAt": "2020-06-03T04:07:08Z", "author": "fun zone club", "text": "please make like it on tree data structure in python", "likes": 0}}, {"topLevelComment": {"id": "Ugxh1kacuxqbzzsZ_vB4AaABAg", "publishedAt": "2020-06-02T19:06:01Z", "author": "Arnav Deshpande", "text": "The best and the most practical explanation ever", "likes": 1}}, {"topLevelComment": {"id": "UgwB0893bEhEkSfEVs94AaABAg", "publishedAt": "2020-05-31T01:54:11Z", "author": "Alberto Valsania", "text": "Is Disktra Algoritm O(n2)?", "likes": 0}, "replies": [{"id": "UgwB0893bEhEkSfEVs94AaABAg.99Iv3xbSmKv9ASx28I3fzk", "publishedAt": "2020-06-28T19:55:12Z", "author": "Treyi", "text": "1)dijkstra's  O((V+E)logV) ; \n2)BellmanFord  O(VE) ;\n3)Floyd-Warshall O(V3);\n4)BFS O(V+E)", "likes": 0}]}, {"topLevelComment": {"id": "UgxrL4d8kfM0eF6texV4AaABAg", "publishedAt": "2020-05-26T06:07:52Z", "author": "Zereko", "text": "From description:\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\r\n\u2328\ufe0f (0:00:00) Graph Theory Introduction\r\n\u2328\ufe0f (0:13:53) Problems in Graph Theory\r\n\u2328\ufe0f (0:23:15) Depth First Search Algorithm\r\n\u2328\ufe0f (0:33:18) Breadth First Search Algorithm\r\n\u2328\ufe0f (0:40:27) Breadth First Search grid shortest path\r\n\u2328\ufe0f (0:56:23) Topological Sort Algorithm\r\n\u2328\ufe0f (1:09:52) Shortest/Longest path on a Directed Acyclic Graph (DAG)\r\n\u2328\ufe0f (1:19:34) Dijkstra's Shortest Path Algorithm\r\n\u2328\ufe0f (1:43:17) Dijkstra's Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (1:50:47) Bellman Ford Algorithm\r\n\u2328\ufe0f (2:05:34) Floyd Warshall All Pairs Shortest Path Algorithm\r\n\u2328\ufe0f (2:20:54) Floyd Warshall All Pairs Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (2:29:19) Bridges and Articulation points Algorithm\r\n\u2328\ufe0f (2:49:01) Bridges and Articulation points source code\r\n\u2328\ufe0f (2:57:32) Tarjans Strongly Connected Components algorithm\r\n\u2328\ufe0f (3:13:56) Tarjans Strongly Connected Components algorithm source code\r\n\u2328\ufe0f (3:20:12) Travelling Salesman Problem | Dynamic Programming\r\n\u2328\ufe0f (3:39:59) Travelling Salesman Problem source code | Dynamic Programming\r\n\u2328\ufe0f (3:52:27) Existence of Eulerian Paths and Circuits\r\n\u2328\ufe0f (4:01:19) Eulerian Path Algorithm\r\n\u2328\ufe0f (4:15:47) Eulerian Path Algorithm | Source Code\r\n\u2328\ufe0f (4:23:00) Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:37:05) Eager Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:50:38) Eager Prim's Minimum Spanning Tree Algorithm | Source Code\r\n\u2328\ufe0f (4:58:30) Max Flow Ford Fulkerson | Network Flow\r\n\u2328\ufe0f (5:11:01) Max Flow Ford Fulkerson | Source Code\r\n\u2328\ufe0f (5:27:25) Unweighted Bipartite Matching | Network Flow\r\n\u2328\ufe0f (5:38:11) Mice and Owls problem | Network Flow\r\n\u2328\ufe0f (5:46:11) Elementary Math problem | Network Flow\r\n\u2328\ufe0f (5:56:19) Edmonds Karp Algorithm | Network Flow\r\n\u2328\ufe0f (6:05:18) Edmonds Karp Algorithm | Source Code\r\n\u2328\ufe0f (6:10:08) Capacity Scaling | Network Flow\r\n\u2328\ufe0f (6:19:34) Capacity Scaling | Network Flow | Source Code\r\n\u2328\ufe0f (6:25:04) Dinic's Algorithm | Network Flow\r\n\u2328\ufe0f (6:36:09) Dinic's Algorithm | Network Flow | Source Code", "likes": 23}, "replies": [{"id": "UgxrL4d8kfM0eF6texV4AaABAg.996V7e0bsuh99ulG5r3LhB", "publishedAt": "2020-06-15T03:58:50Z", "author": "Fun Planet", "text": "OMG thanks for writing the first line", "likes": 1}]}, {"topLevelComment": {"id": "UgzyB4TvTTAQ82jgjvl4AaABAg", "publishedAt": "2020-05-24T17:38:42Z", "author": "Divyansh Dimri", "text": "please make a video on Dynamic programming \ud83d\ude4f\ud83d\ude4f", "likes": 0}}, {"topLevelComment": {"id": "UgzTHQ85HfmsSzVXTmR4AaABAg", "publishedAt": "2020-05-19T04:50:34Z", "author": "Story Time Audiobooks", "text": "Ok Grandpa...", "likes": 1}}, {"topLevelComment": {"id": "Ugylx1b-SRp6cNXOVA94AaABAg", "publishedAt": "2020-05-14T16:47:33Z", "author": "kebman", "text": "Data struchsdf *GULP* data structure. :D Yeap, those things are a mouthful for sure.", "likes": 0}}, {"topLevelComment": {"id": "Ugz_nTUSljitLwxeX_R4AaABAg", "publishedAt": "2020-05-14T16:44:36Z", "author": "kebman", "text": "I broke graph theory: Stable matching problem. Boom! But after using some horrible joins in a small set of school children, it did spit out an answer. Best of all, my pupils told me that the matching was GREAT and wondered how in the hell I could insure the best match for everyone in a room. I told them: Esss QUEEEEE Elllllll. But then I learned about graphs, and cried.", "likes": 0}}, {"topLevelComment": {"id": "UgxEt_qZv3J_VVzNtt54AaABAg", "publishedAt": "2020-05-13T09:18:38Z", "author": "S and L", "text": "Very interesting. it helps me a lot to understand the graph algorithm. And now let's do some coding.", "likes": 0}}, {"topLevelComment": {"id": "Ugx2y0XUf1xWErpX7ld4AaABAg", "publishedAt": "2020-05-13T04:18:53Z", "author": "ADEF BS CHANNEL", "text": "How are you frieand", "likes": 0}}, {"topLevelComment": {"id": "UgybYE4lXmQxc7XDtkd4AaABAg", "publishedAt": "2020-05-12T19:55:07Z", "author": "Moataz Emad", "text": "Please i do not understand how you convert i node to 32 bit integer in tsm i think it should the visited node for examble 1 be 0001 not 0011", "likes": 0}}, {"topLevelComment": {"id": "UgwPv6G3CCjnsjrwmEV4AaABAg", "publishedAt": "2020-05-07T20:02:13Z", "author": "It's Aaron", "text": "I learnt link list, bst, avl, but these video makes me feel small again", "likes": 13}, "replies": [{"id": "UgwPv6G3CCjnsjrwmEV4AaABAg.98N3VyBzZXv9MBgb-DqeKY", "publishedAt": "2021-04-16T09:21:11Z", "author": "Banguard", "text": "watch this series list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx then this video will make much more sense.", "likes": 0}, {"id": "UgwPv6G3CCjnsjrwmEV4AaABAg.98N3VyBzZXv9IV7iZpKHM7", "publishedAt": "2021-01-14T12:26:53Z", "author": "Bil Msr", "text": "@kasyap dharanikota sometimes you just keep watching and asking yourself how i'm going to keep all that in mind", "likes": 0}, {"id": "UgwPv6G3CCjnsjrwmEV4AaABAg.98N3VyBzZXv9IUKTh0bhEg", "publishedAt": "2021-01-14T04:59:04Z", "author": "kasyap dharanikota", "text": "me tooo ............", "likes": 0}]}, {"topLevelComment": {"id": "UgzgTpIee9ulpaHhwsp4AaABAg", "publishedAt": "2020-05-04T18:47:38Z", "author": "Mustafa Mir", "text": "any ib maths ai hl student?", "likes": 0}}, {"topLevelComment": {"id": "UgzGwuT70WAdz2_t8jh4AaABAg", "publishedAt": "2020-05-04T09:32:44Z", "author": "Ori Mos", "text": "Can you drop the software name you used for making the graph? \nI want to practice and it is always such a mess to draw the graphs on paper lmao", "likes": 0}}, {"topLevelComment": {"id": "UgxSj8PM13gNv4gbOZ94AaABAg", "publishedAt": "2020-05-02T09:48:37Z", "author": "Hassan", "text": "Almost done going through this video. I've been doing javascript implementations of everything taught in this video and it's really leveling up my coding skills & understanding of graph theory. Love this content!", "likes": 34}, "replies": [{"id": "UgxSj8PM13gNv4gbOZ94AaABAg.9895JQXOurR9XNjS7jNO1a", "publishedAt": "2022-01-19T11:22:17Z", "author": "!??!", "text": "@Rahul Jayachandran thanks for the reply but I already learned Java \ud83d\ude02", "likes": 3}, {"id": "UgxSj8PM13gNv4gbOZ94AaABAg.9895JQXOurR9XMNy4DNMxf", "publishedAt": "2022-01-18T22:46:34Z", "author": "Rahul Jayachandran", "text": "@!??! I can't help with the repo, but if you know js, it should be pretty simple to intuit the js implementations from the Java code, as Java is less abstract than js", "likes": 0}, {"id": "UgxSj8PM13gNv4gbOZ94AaABAg.9895JQXOurR9S1NBIj4839", "publishedAt": "2021-09-08T12:18:45Z", "author": "!??!", "text": "Please Hassan I'm begging you lol drop the repo. I wanna do this course but I know zilch in Java", "likes": 0}, {"id": "UgxSj8PM13gNv4gbOZ94AaABAg.9895JQXOurR9RNfJ0sptdM", "publishedAt": "2021-08-23T07:37:43Z", "author": "!??!", "text": "@Hassan where's the repo???", "likes": 1}, {"id": "UgxSj8PM13gNv4gbOZ94AaABAg.9895JQXOurR9OMaXPM-gK9", "publishedAt": "2021-06-09T08:02:34Z", "author": "Life Engineer", "text": "@Vinay Nair lol", "likes": 0}]}, {"topLevelComment": {"id": "Ugz1p8TzeLNrETn22-R4AaABAg", "publishedAt": "2020-04-30T06:27:35Z", "author": "Rahul Mistry", "text": "Awesome!! Please make a series on Dynamic Programming & Greedy Algorithms!!!", "likes": 2}}, {"topLevelComment": {"id": "Ugz6lEEI3wZk6p5OPL14AaABAg", "publishedAt": "2020-04-27T16:45:55Z", "author": "Shankha Shubhra Mukherjee", "text": "Has anyone actually watched the complete video from start to end....", "likes": 2}, "replies": [{"id": "Ugz6lEEI3wZk6p5OPL14AaABAg.97xy5WeOmSw9CrBiv5WzvS", "publishedAt": "2020-08-27T08:16:03Z", "author": "Thomas Yorkshire IV", "text": "Not this video exactly, but I watched the complete series in his channel over the course of time", "likes": 0}]}, {"topLevelComment": {"id": "UgysgpztuggtS3cxjWR4AaABAg", "publishedAt": "2020-04-26T22:49:22Z", "author": "Joao Castro Pinto", "text": "man eu dou aulas", "likes": 0}}, {"topLevelComment": {"id": "UgxsLAMtlaTBEZIH1-V4AaABAg", "publishedAt": "2020-04-24T20:08:50Z", "author": "Pankaj Kumar[Engineer] ", "text": "good sir.", "likes": 0}}, {"topLevelComment": {"id": "Ugx7eWcr_RLkMybjV0t4AaABAg", "publishedAt": "2020-04-14T11:18:43Z", "author": "BABU RAYHAN SHAIK", "text": "at 20:59 , why D-->H-->G why it cant be D-->G-->H cause DHG is 3 but DGH is 2...", "likes": 0}}, {"topLevelComment": {"id": "UgzXUCc32rKZMtcZ6F14AaABAg", "publishedAt": "2020-04-13T19:13:18Z", "author": "Keshav Mainali", "text": "I got the link of your git but dont know how to compile it. Please help me... Currently using MacOS", "likes": 0}}, {"topLevelComment": {"id": "UgzCIlKwtoHsl-b19yN4AaABAg", "publishedAt": "2020-04-12T08:18:51Z", "author": "Debbahi Saad", "text": "An absolute must watch would be this very same course using C++ OOP implementation.", "likes": 1}, "replies": [{"id": "UgzCIlKwtoHsl-b19yN4AaABAg.97LR8WAK9Y29CrC0zoQZWS", "publishedAt": "2020-08-27T08:18:40Z", "author": "Thomas Yorkshire IV", "text": "You can do it yourself.", "likes": 0}]}, {"topLevelComment": {"id": "Ugw5Q6dj2BmeR5KuvwF4AaABAg", "publishedAt": "2020-04-11T03:17:29Z", "author": "Ahmed Grwan", "text": "13:30 actually I would argue that edge list the most ubiquitous representation of a graph, since it's how anyone would normally model a many-to-many relation in a relational database", "likes": 35}, "replies": [{"id": "Ugw5Q6dj2BmeR5KuvwF4AaABAg.97IJrMouAmJ9SWKWOGs95L", "publishedAt": "2021-09-20T12:51:52Z", "author": "nihal bhandary", "text": "@foobars Exactly lmao, this is how anti-intellectualism takes roots.", "likes": 0}, {"id": "Ugw5Q6dj2BmeR5KuvwF4AaABAg.97IJrMouAmJ9Oy5T2q2fb-", "publishedAt": "2021-06-24T06:52:44Z", "author": "William Hubenschmidt", "text": "no point in responding to someone who goes on a youtube thread covering a CS topic and proclaims they are \"too stupid to be here\".  The truth is, if this is how you spend your time, you probably are.", "likes": 1}, {"id": "Ugw5Q6dj2BmeR5KuvwF4AaABAg.97IJrMouAmJ9FHVKREbgyL", "publishedAt": "2020-10-26T15:49:37Z", "author": "Lucas", "text": "@Yt1mg It totally adds something. It's always good to connect knowledges.", "likes": 3}, {"id": "Ugw5Q6dj2BmeR5KuvwF4AaABAg.97IJrMouAmJ9EB4195klhS", "publishedAt": "2020-09-29T07:24:13Z", "author": "Dashmeet Singh", "text": "@foobars Thats internet", "likes": 2}, {"id": "Ugw5Q6dj2BmeR5KuvwF4AaABAg.97IJrMouAmJ9E143DfXVUj", "publishedAt": "2020-09-25T10:12:06Z", "author": "foobars", "text": "Oh geez what's wrong with you two? What he said is completely valid and may even help people make the connection between an edge list and a concept they are already familiar with.\n\nThen he dismissed his comment to make you feel better Travis! Then you and Yt1mg decide to trash him for trying to encourage you! @Travis Schpeltinger \u200b @Yt1mg", "likes": 14}]}, {"topLevelComment": {"id": "Ugy4txK4euiS9gfCgXR4AaABAg", "publishedAt": "2020-04-06T09:02:10Z", "author": "Prakhar", "text": "He is a gem and also an ICPC world Finalist.", "likes": 4}, "replies": [{"id": "Ugy4txK4euiS9gfCgXR4AaABAg.9763KTVpFYV9LI3wh5t2Fk", "publishedAt": "2021-03-25T00:17:55Z", "author": "manicsurfing", "text": "Insane clown posse champion?", "likes": 0}]}, {"topLevelComment": {"id": "Ugz0IWleEJIh6CV4UUd4AaABAg", "publishedAt": "2020-04-04T16:27:45Z", "author": "Douglas Hurd", "text": "Wow! There is smoke coming out of my ears!\nVERY well explained. Thank you!", "likes": 11}, "replies": [{"id": "Ugz0IWleEJIh6CV4UUd4AaABAg.971hjM2T6h59LEyXYymShX", "publishedAt": "2021-03-23T19:24:12Z", "author": "Douglas Hurd", "text": "@Himanshu Raj Yes, my brain was overheating but I feel much better now.", "likes": 0}, {"id": "Ugz0IWleEJIh6CV4UUd4AaABAg.971hjM2T6h59LDpcSUB_xU", "publishedAt": "2021-03-23T08:47:07Z", "author": "Himanshu Raj", "text": "Are you alright?", "likes": 1}]}, {"topLevelComment": {"id": "UgxpniGHK1-Ns6LY-EJ4AaABAg", "publishedAt": "2020-04-04T08:46:00Z", "author": "Uphar Rastogi", "text": "thanks for the video. i cudn't find the slides of BFS DFS", "likes": 0}}, {"topLevelComment": {"id": "Ugyq9d3ms0iX7TE33Gh4AaABAg", "publishedAt": "2020-03-26T09:04:33Z", "author": "Raajas Sode", "text": "Another Con for Adjecency Matrix is that adding nodes becomes very cumbersome, as you have to create a resized matrix and fill all elements.", "likes": 1}}, {"topLevelComment": {"id": "UgzgPq8Tc5KgM0alaL54AaABAg", "publishedAt": "2020-03-25T12:17:22Z", "author": "Paul Hartley", "text": "In the explanation of breadth first search, it is probably easier to understand the algorithm if written without recursion. This can be implemented easily with two lists and is in fact the way it was demonstrated manually before presenting the pseudo code. Understanding of the way the algorithm works can also be shown by displaying the two lists at any point in the search. \n\n\n\nI don't know which is more efficient when applied to large graphs, but avoiding recursion also avoids building up the return stack. Different programming languages might perform better for different methods.\n\n\nGiven the amount of theory covered in the video there isn't enough time to provide a worked example - which I always find extremely helpful in first understanding algorithms and how they work in different situations.", "likes": 0}}, {"topLevelComment": {"id": "Ugz5DXu-e9hxckN7NxZ4AaABAg", "publishedAt": "2020-03-25T07:45:09Z", "author": "ronykroy", "text": "Could you please add subtitles...", "likes": 1}}, {"topLevelComment": {"id": "Ugx2PVic0gC0AzJRrNx4AaABAg", "publishedAt": "2020-03-22T03:11:57Z", "author": "Aditya", "text": "U r great..!", "likes": 1}}, {"topLevelComment": {"id": "Ugx7xgd6IZswGDarRK54AaABAg", "publishedAt": "2020-03-18T11:38:11Z", "author": "Ajay Kumar", "text": "Thanks a lot for the Course.", "likes": 0}}, {"topLevelComment": {"id": "Ugy-BsDi_y7-dvGybf54AaABAg", "publishedAt": "2020-03-15T19:47:45Z", "author": "J R", "text": "Where is A*", "likes": 0}}, {"topLevelComment": {"id": "UgzxaeAqNDFAVO5voUd4AaABAg", "publishedAt": "2020-03-13T01:22:28Z", "author": "Merve Mall\u0131", "text": "I was going to make a timestamp map for the topics but realised you already did it. Great video and it has no ads??? You are great. Thank you", "likes": 6}, "replies": [{"id": "UgzxaeAqNDFAVO5voUd4AaABAg.967RdY29bE796Vup93dJTW", "publishedAt": "2020-03-22T13:27:58Z", "author": "Merve Mall\u0131", "text": "@Punte Dai video description SHOW MORE", "likes": 0}, {"id": "UgzxaeAqNDFAVO5voUd4AaABAg.967RdY29bE796V3QRxgnEP", "publishedAt": "2020-03-22T05:32:36Z", "author": "Punte Dai", "text": "Wait where is this timestamps map?", "likes": 0}]}, {"topLevelComment": {"id": "UgyoAm0MUAOsOeDWcMV4AaABAg", "publishedAt": "2020-03-07T19:14:52Z", "author": "krammer liu", "text": "Shouldn't the time complexity in Travelling Salesman Problem be O(N^3 * 2^N)? I see three for loops iterating from 0 to N in the core logic of this dp algorithm", "likes": 1}}, {"topLevelComment": {"id": "UgxYzr4W3kJ7Lk2TQ7N4AaABAg", "publishedAt": "2020-03-05T04:08:57Z", "author": "Saif Ul Islam", "text": "heartReact++;", "likes": 0}}, {"topLevelComment": {"id": "UgzuEqzeFLl7lb6QwEZ4AaABAg", "publishedAt": "2020-03-05T02:18:02Z", "author": "\u0633\u0648\u062f\u0627\u0646 \u062a\u0648\u0643", "text": "That's amazing ! thank you.", "likes": 1}}, {"topLevelComment": {"id": "UgxEAfn12Vpjvh30DP54AaABAg", "publishedAt": "2020-03-02T14:51:31Z", "author": "MGtv", "text": "3:43:27", "likes": 1}}, {"topLevelComment": {"id": "UgwMJVu-5E9hSFL2wkN4AaABAg", "publishedAt": "2020-02-28T13:21:56Z", "author": "Tuotuo YU", "text": "24:16 Mark", "likes": 1}}, {"topLevelComment": {"id": "UgyRGctWG4autX9hwFd4AaABAg", "publishedAt": "2020-02-28T00:37:19Z", "author": "David Lindes", "text": "No idea if you'd ever plan to update this, but in case so, a small suggestion for improvement:\nThe information on (or at least the basic definition of) \"connected components\" (28:20) would have been useful to have prior to using that term in your description of bridges/cut edges (19:37) and articulation points/cut vertices (20:14).  (I was taking connected components to mean vertices which had edges connecting them, and thus the definition didn't seem to make any sense to me.)", "likes": 4}, "replies": [{"id": "UgyRGctWG4autX9hwFd4AaABAg.95ZJLZlmBfZ9k1-asgHqzO", "publishedAt": "2022-12-24T14:49:09Z", "author": "dev stuff", "text": "I was wondering the same thing", "likes": 1}]}, {"topLevelComment": {"id": "Ugygp-XnA7N6ettrQhd4AaABAg", "publishedAt": "2020-02-19T13:34:57Z", "author": "Manish Shukla", "text": "Thanks you man", "likes": 1}}, {"topLevelComment": {"id": "UgwDM86BV0YFWszgcjV4AaABAg", "publishedAt": "2020-02-17T21:11:55Z", "author": "SasankV", "text": "This video is a gold mine", "likes": 0}}, {"topLevelComment": {"id": "UgztsyvU0w2LGz7rwql4AaABAg", "publishedAt": "2020-02-17T17:50:54Z", "author": "Ab Muzzy", "text": "This is some very perverted way to introduce newly invented jargon while attempting to avoid simple geometry.", "likes": 0}}, {"topLevelComment": {"id": "UgzUG7JqV1xvwev_7Zx4AaABAg", "publishedAt": "2020-02-16T18:37:32Z", "author": "Rajesh Pat", "text": "fwef '14:41'", "likes": 1}}, {"topLevelComment": {"id": "Ugw7uW6qAsb4r624QJh4AaABAg", "publishedAt": "2020-02-16T04:40:20Z", "author": "Gero Romano", "text": "4:03   You get what you f***ing deserve!", "likes": 0}}, {"topLevelComment": {"id": "UgwvqS9Jv8faG_exW4J4AaABAg", "publishedAt": "2020-02-11T04:28:46Z", "author": "056_Bankim Rabha", "text": "thank U  for Providing this algorithms course- hope u will make more.~", "likes": 0}}, {"topLevelComment": {"id": "UgyPVZM3nX0cQqrv6fp4AaABAg", "publishedAt": "2020-02-09T22:16:22Z", "author": "dev narula", "text": "from a google engineer\n*Credibility 100*", "likes": 0}}, {"topLevelComment": {"id": "UgyEA5YvxdYp8Wr0R4N4AaABAg", "publishedAt": "2020-02-01T14:14:13Z", "author": "Raghav", "text": "Wow, so many algos that I haven't even heard of. By any chance does anyone has a Python source code repo of all these algos. Thanks!!", "likes": 11}}, {"topLevelComment": {"id": "UgxIl7dTsbmGZMczpLJ4AaABAg", "publishedAt": "2020-01-30T14:10:13Z", "author": "Youssef El-Shabasy", "text": "amazing course", "likes": 0}}, {"topLevelComment": {"id": "UgzITRhUqSVlRU4ePf94AaABAg", "publishedAt": "2020-01-28T09:36:26Z", "author": "Davide Pasini", "text": "This video is gold! Thanks", "likes": 1}}, {"topLevelComment": {"id": "UgzVGjgtxtAEc7YQ1Mh4AaABAg", "publishedAt": "2020-01-21T03:09:02Z", "author": "Pasang Sherpa", "text": "@1:47:47 That line of code is redundant(as in no purpose), since the minValue from d-ary priority queue will never be greater than dist[nodeId]. This is because there are no duplicate keys in the d-ary priority queue. The line of code at the time stamp is only applicable for Lazy Dijkstra where you want to skip, if the Value from the priority queue is greater than the dis[nodeId] due to duplicate keys.", "likes": 1}, "replies": [{"id": "UgzVGjgtxtAEc7YQ1Mh4AaABAg.941jVc2buFq9CrCfDe6QjC", "publishedAt": "2020-08-27T08:24:17Z", "author": "Thomas Yorkshire IV", "text": "Who cares", "likes": 0}]}, {"topLevelComment": {"id": "UgxhfRRh7IqjQdfykmJ4AaABAg", "publishedAt": "2020-01-20T11:37:07Z", "author": "Abhishek Mazumdar", "text": "Do one on GameTheory..between this was a great content. Thankyou.", "likes": 3}}, {"topLevelComment": {"id": "UgzRTGDBGB0GzMqd3Lt4AaABAg", "publishedAt": "2020-01-17T23:23:10Z", "author": "Artificial Intelligence", "text": "0:23:15 this button is a simple algorithm designed by a non google engineer to save you 23 minutes.", "likes": 10}, "replies": [{"id": "UgzRTGDBGB0GzMqd3Lt4AaABAg.93ubGhKrxgl94M3-UIDPeK", "publishedAt": "2020-01-29T00:32:57Z", "author": "no name", "text": "But you willmiss a lot of valuable info \ud83d\ude09 if you  press non Google engineer created button", "likes": 3}]}, {"topLevelComment": {"id": "Ugx03CTNt2iVkf_cJK14AaABAg", "publishedAt": "2020-01-17T14:03:11Z", "author": "Bhaskar", "text": "Thank you so much for such a detailed and easy explanation.", "likes": 3}}, {"topLevelComment": {"id": "UgyXPKTpGgJcXiKB_OF4AaABAg", "publishedAt": "2020-01-14T19:16:26Z", "author": "Ashivani Singh", "text": "sir please come vedio for dynamic programming", "likes": 0}}, {"topLevelComment": {"id": "UgwCTET8g06KLR4higt4AaABAg", "publishedAt": "2020-01-14T01:56:24Z", "author": "magburner", "text": "Hmmm.... I think in algorithms?? When I am bored and thinking, and I have a pen in my hand, I often draw graph diagrams, with so many points and then draw lines from each point to the next, just like the examples in this video. I did not realise that what I was doodling was graph theory though... lol", "likes": 1}}, {"topLevelComment": {"id": "UgyGvY44n_zj5sKaP3l4AaABAg", "publishedAt": "2020-01-12T18:15:44Z", "author": "Lokesh Koliparthi", "text": "Please make video on dynamic programming", "likes": 1}}, {"topLevelComment": {"id": "UgxkBhyv1o6BN-U4CSh4AaABAg", "publishedAt": "2020-01-06T17:27:43Z", "author": "Mohammed jawahri", "text": "I love how the \"pseudocode\" is just straight up python lmao", "likes": 833}, "replies": [{"id": "UgxkBhyv1o6BN-U4CSh4AaABAg.93SdqccgnWf9V0k8ahbWsV", "publishedAt": "2021-11-21T20:03:02Z", "author": "Miguel Escalante Milke", "text": "I got distracted and when I looked at the code I thought it was python. And I was like \u201cwhy is this code so strange?? I need to practice more\u201d", "likes": 0}, {"id": "UgxkBhyv1o6BN-U4CSh4AaABAg.93SdqccgnWf9Sd89q0k9AO", "publishedAt": "2021-09-23T13:37:51Z", "author": "Sai Kumar", "text": "@Klemens Hi Tomas. Which programming language is best for DS&A. I always stuck in that. \nPlz once reply.", "likes": 0}, {"id": "UgxkBhyv1o6BN-U4CSh4AaABAg.93SdqccgnWf9NuR996MHsy", "publishedAt": "2021-05-29T00:13:54Z", "author": "Mohammed jawahri", "text": "@M G touch\u00e9", "likes": 1}, {"id": "UgxkBhyv1o6BN-U4CSh4AaABAg.93SdqccgnWf9NuLPtJGT8t", "publishedAt": "2021-05-28T23:23:46Z", "author": "M G", "text": "Leave it to a bunch of basement dwellers to go full pedantic on a passing joke.", "likes": 3}, {"id": "UgxkBhyv1o6BN-U4CSh4AaABAg.93SdqccgnWf9JBTt4zWqr2", "publishedAt": "2021-01-31T17:47:09Z", "author": "xerxius", "text": "looks more like javascript", "likes": 1}]}, {"topLevelComment": {"id": "UgyGk6siPmoNv2V3eXp4AaABAg", "publishedAt": "2020-01-06T00:10:41Z", "author": "ender", "text": "Does anyone know of a algorithm to solve constrained shortest path problems?", "likes": 0}}, {"topLevelComment": {"id": "UgwSS7AyPMEPJkk9-814AaABAg", "publishedAt": "2020-01-05T05:09:23Z", "author": "rohit sunil", "text": "At 20:27 shouldn't it be \"cut vertex is any node in the graph whose removal will *decrease* the number of components ??", "likes": 0}, "replies": [{"id": "UgwSS7AyPMEPJkk9-814AaABAg.93OkZ0TEYTB93SVorPr6zP", "publishedAt": "2020-01-06T16:08:50Z", "author": "Aryan Reddy", "text": "No Articulation point generally is a node which connects two components together, so technically if you remove that node then you should have more components", "likes": 0}]}, {"topLevelComment": {"id": "UgzdXwQ_bJHPeDYeAvh4AaABAg", "publishedAt": "2020-01-01T16:29:50Z", "author": "Svenja Aunes", "text": "traveling salesPERSON :D", "likes": 2}}, {"topLevelComment": {"id": "UgxyJi_5kd7DmZIka394AaABAg", "publishedAt": "2019-12-31T21:42:18Z", "author": "Tristan Hurley", "text": "this is good. thank you.", "likes": 0}}, {"topLevelComment": {"id": "UgyaDm-xOOPcen5679B4AaABAg", "publishedAt": "2019-12-30T23:40:11Z", "author": "Yuhan Zhang", "text": "Great. I skipped the easy parts, all the coding explanation, and the played the video at 1.5 speed to go through. Graph Theory is the math class that I regretted having missed during college. Thanks for making this tutorial.", "likes": 2}}, {"topLevelComment": {"id": "Ugwy7SBfiDsxRnKAO854AaABAg", "publishedAt": "2019-12-30T06:41:27Z", "author": "Wei Yao", "text": "I like the the parts you provides real word applications on each algorithm/graph. It helps a lot when solve problem described as a real problem.", "likes": 6}}, {"topLevelComment": {"id": "UgwLaxSh6LbL2qeR9Qd4AaABAg", "publishedAt": "2019-12-29T23:17:31Z", "author": "Tigartim Darwen", "text": "Buo natale the total engenring in Google", "likes": 0}}, {"topLevelComment": {"id": "UgwQ_6fm3b86yXw0enV4AaABAg", "publishedAt": "2019-12-29T05:34:01Z", "author": "Lina Palacios", "text": "Pls dont misunderstand me ... but such a nice thing to find good stuff in non indian english...( non english native here) or does he? \ud83d\ude48", "likes": 24}, "replies": [{"id": "UgwQ_6fm3b86yXw0enV4AaABAg.936loNMI0tk9B81kOxXH2x", "publishedAt": "2020-07-15T13:32:25Z", "author": "Shubhaprasad padhy", "text": "@Milind Bebarta I think Indian accent in general would have a better distinction of pronounciation due to their native language having more sounds which would be the case with other countries too especially ones that is close to dead languages  , but overall I agree that it would be easier to understand the accent you are familiar with.", "likes": 0}, {"id": "UgwQ_6fm3b86yXw0enV4AaABAg.936loNMI0tk99sHtc8gCtc", "publishedAt": "2020-06-14T04:55:00Z", "author": "Pritish Mishra", "text": "@sisters all the phonetics combined are the sounds u make in \"english\" language. Hindi or sanskrit or devanagri script utilizes all the sounds u can produce with ur mouth. Japaneese is a highly inefficient language.", "likes": 0}, {"id": "UgwQ_6fm3b86yXw0enV4AaABAg.936loNMI0tk99s1qfJdxxz", "publishedAt": "2020-06-14T02:34:47Z", "author": "Pritish Mishra", "text": "@sisters english has 2000 sounds? How?", "likes": 0}, {"id": "UgwQ_6fm3b86yXw0enV4AaABAg.936loNMI0tk99Cn1z9wGDB", "publishedAt": "2020-05-28T16:48:33Z", "author": "Milind Bebarta", "text": "@Pritish Mishra I never said that all accents have the same level of difficulty when it comes to understanding. I said it's easier for you to understand your native accent than other accents.  Also, someone saying their country's accent is easier to understand for them vs saying their country is the best are two very different things. The first is something that is always true and the second is just an biased opinion. My whole point here is, just because someone has a easier time grasping their own native accent than other accents can't assume that it's the same for everyone else. Clearly, people have a hard time with the Indian accent(By OP's comment and many other comments on many other videos)", "likes": 5}, {"id": "UgwQ_6fm3b86yXw0enV4AaABAg.936loNMI0tk99CjClaSHR3", "publishedAt": "2020-05-28T16:15:05Z", "author": "Pritish Mishra", "text": "@Milind Bebarta certain accents are easier to understand irrespective of what language you speak and indian accent falls into one of them. Who told you indian accent is my native accent? You may feel dumb saying your country's accent is easier to understand the same way you may feel saying that your country is the best in the world but I don't feel the way you do.", "likes": 0}]}, {"topLevelComment": {"id": "UgzuEW8nbUAiALLwwjN4AaABAg", "publishedAt": "2019-12-28T21:21:14Z", "author": "daytripperarrabal", "text": "idk why I typed graph theory but here I am", "likes": 1}}, {"topLevelComment": {"id": "Ugy_0iNuEbo9WvqUCQV4AaABAg", "publishedAt": "2019-12-28T17:45:05Z", "author": "Tigartim Darwen", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"id": "Ugw2qL07HGKeF1O25L14AaABAg", "publishedAt": "2019-12-27T17:27:29Z", "author": "angry pop eye .", "text": "What software do i need to work this vid out.?", "likes": 2}, "replies": [{"id": "Ugw2qL07HGKeF1O25L14AaABAg.932tsD3QWUF9CrCKI3L19T", "publishedAt": "2020-08-27T08:21:18Z", "author": "Thomas Yorkshire IV", "text": "A notepad and a terminal.", "likes": 0}]}, {"topLevelComment": {"id": "Ugz-KMCoEurGnPJXYdx4AaABAg", "publishedAt": "2019-12-26T20:25:44Z", "author": "Mlf Conv", "text": "learnijg fir 79c", "likes": 0}}, {"topLevelComment": {"id": "UgzXhubl0HTpkwF9gIJ4AaABAg", "publishedAt": "2019-12-25T18:32:07Z", "author": "nimish bansal", "text": "For detecting negative cycle do we have to iterate each edge V times(E*V)  or each edge one time(E*1) after running complete Bellman ford(i.e itself (V-1 * E))", "likes": 0}, "replies": [{"id": "UgzXhubl0HTpkwF9gIJ4AaABAg.92yrfq2lEbc933BT2FTFQF", "publishedAt": "2019-12-27T20:09:56Z", "author": "nimish bansal", "text": "Oh ok ,  thank you got it.\ud83d\udc4d", "likes": 0}, {"id": "UgzXhubl0HTpkwF9gIJ4AaABAg.92yrfq2lEbc933Aejap203", "publishedAt": "2019-12-27T20:02:56Z", "author": "Mohd Haris", "text": "\u200b@nimish bansal \nSorry I was wrong. He is right in the video. \nI got confused. My bad.\nBy itarting just once over all edges after bellman ford, we can only find *if* there exists a negative weight cycle or not.\nTo find all the vertices whose distance is going to be -inifinity, we will have to do |V|-1 iterations again.", "likes": 1}, {"id": "UgzXhubl0HTpkwF9gIJ4AaABAg.92yrfq2lEbc932q70Knim-", "publishedAt": "2019-12-27T16:54:41Z", "author": "nimish bansal", "text": "but acc to video why v-1 times?after BF", "likes": 0}, {"id": "UgzXhubl0HTpkwF9gIJ4AaABAg.92yrfq2lEbc932p4C_PZHN", "publishedAt": "2019-12-27T16:45:34Z", "author": "Mohd Haris", "text": "Just one more time.\nAfter running the bellman ford, you iterate over all the edges and just see which edges are still able to relax a vertex. If a vertex can still be relaxed then this means that this vertex is reachable from the source while travelling through a negative weight cycle.", "likes": 0}]}, {"topLevelComment": {"id": "UgxSbv96UIf8Uba7JzB4AaABAg", "publishedAt": "2019-12-25T17:03:38Z", "author": "Nanda Gopal Naskar", "text": "Dynamic programming please.Thank you for your efforts....", "likes": 11}}, {"topLevelComment": {"id": "Ugw_5i_pB9RGWBXyoo94AaABAg", "publishedAt": "2019-12-24T20:03:37Z", "author": "Jonathan Holden", "text": "Yaroslav Shitov just proved that the Hedetniemi's conjecture is untrue.", "likes": 9}, "replies": [{"id": "Ugw_5i_pB9RGWBXyoo94AaABAg.92wSM9JVzTL92zCPDw4E8q", "publishedAt": "2019-12-25T21:41:57Z", "author": "John Alley", "text": "Think I just saw a video claiming that this conjecture has been recently disproven.", "likes": 0}, {"id": "Ugw_5i_pB9RGWBXyoo94AaABAg.92wSM9JVzTL92yFXTdKRxw", "publishedAt": "2019-12-25T12:50:03Z", "author": "I Akhil", "text": "Isn't Numberphile amazing?", "likes": 1}]}, {"topLevelComment": {"id": "UgwDBVRVipFH6t3GHkl4AaABAg", "publishedAt": "2019-12-21T19:54:47Z", "author": "Larsoti", "text": "Happy for the video content, happy for Java being used!", "likes": 0}}, {"topLevelComment": {"id": "UgxbInSzhRvAiLsjmsx4AaABAg", "publishedAt": "2019-12-20T22:55:16Z", "author": "Daniel K", "text": "This is awesome, if you could please make a video about dynamic programming please\ud83d\ude4f", "likes": 3}}, {"topLevelComment": {"id": "UgxVmwH-pghdLtuJssV4AaABAg", "publishedAt": "2019-12-20T04:26:51Z", "author": "MagicK", "text": "sound scary af", "likes": 1}}, {"topLevelComment": {"id": "Ugx1CQoAEhPKv7ZT5Jh4AaABAg", "publishedAt": "2019-12-15T06:38:37Z", "author": "rusty dust", "text": "Is channel is not really comparable to a paid course,this tutorial is garbage compared to paid course, the teachers like Mosh,Tim are the best tutors I've ever come across", "likes": 1}}, {"topLevelComment": {"id": "UgwxloeTCi5FxZniXr94AaABAg", "publishedAt": "2019-12-12T14:40:40Z", "author": "Jose Paternina", "text": "I'm so person F 04:03", "likes": 6}, "replies": [{"id": "UgwxloeTCi5FxZniXr94AaABAg.92RyrJ71VAB9BOBcqIfO-e", "publishedAt": "2020-07-21T20:06:37Z", "author": "Fun Planet", "text": "F", "likes": 0}, {"id": "UgwxloeTCi5FxZniXr94AaABAg.92RyrJ71VAB99S4-MElt2t", "publishedAt": "2020-06-03T15:14:06Z", "author": "Akshay AS", "text": "Haha", "likes": 0}]}, {"topLevelComment": {"id": "UgwJdM2V50uig5gtVQh4AaABAg", "publishedAt": "2019-12-10T22:35:07Z", "author": "Luis Centeno", "text": "I'm a little disappointed at how long it took me to realize this isn't Java HAHA", "likes": 0}}, {"topLevelComment": {"id": "UgyA5eatEWb3R-EkdYp4AaABAg", "publishedAt": "2019-12-09T16:11:02Z", "author": "KotaAvengers", "text": "OMG! Glad to see your here William, I owe my career as a developer to you from your python lectures.", "likes": 460}, "replies": [{"id": "UgyA5eatEWb3R-EkdYp4AaABAg.92KPoVpdtcV9d4N09l7y5M", "publishedAt": "2022-07-04T22:31:41Z", "author": "Srimanikanta Arjun", "text": "Where are his python lectures? Any available links?", "likes": 0}, {"id": "UgyA5eatEWb3R-EkdYp4AaABAg.92KPoVpdtcV9c10T0Y2RP6", "publishedAt": "2022-06-08T18:45:31Z", "author": "Victor Von Doom", "text": "@proxima_centauri nice name", "likes": 0}, {"id": "UgyA5eatEWb3R-EkdYp4AaABAg.92KPoVpdtcV9c10OFXx83Q", "publishedAt": "2022-06-08T18:44:52Z", "author": "Victor Von Doom", "text": "am crying becoz theres so much to learn.\n\ud83d\ude2d", "likes": 0}, {"id": "UgyA5eatEWb3R-EkdYp4AaABAg.92KPoVpdtcV9Ror7OQltd1", "publishedAt": "2021-09-03T06:19:43Z", "author": "Vikas Garg", "text": "Which language William has used in this video for Graph?", "likes": 1}, {"id": "UgyA5eatEWb3R-EkdYp4AaABAg.92KPoVpdtcV9RFQeBwicj9", "publishedAt": "2021-08-20T02:47:01Z", "author": "Deangelo Kasen", "text": "InstaBlaster.", "likes": 1}]}, {"topLevelComment": {"id": "Ugxc-FES4HoNLPY7KtN4AaABAg", "publishedAt": "2019-12-06T23:18:26Z", "author": "birds flying", "text": "Bored", "likes": 0}}, {"topLevelComment": {"id": "UgxI_gMqAoS4K8Ox78x4AaABAg", "publishedAt": "2019-12-04T21:26:42Z", "author": "Al M", "text": "I need to watch this and implement them in my single player Combat clone.", "likes": 2}}, {"topLevelComment": {"id": "Ugz7Iga0TqWCXfpH-T94AaABAg", "publishedAt": "2019-12-03T10:52:49Z", "author": "xl", "text": "Nothing that you can't learn from reading Berge's  Graphs.", "likes": 0}}, {"topLevelComment": {"id": "UgwHgeBdDLcGp4DJ63x4AaABAg", "publishedAt": "2019-11-30T14:29:48Z", "author": "F Society", "text": "Please, give a caption/subtitle english auto generated", "likes": 3}}, {"topLevelComment": {"id": "UgwoJgptJwCif5werqR4AaABAg", "publishedAt": "2019-11-30T04:33:19Z", "author": "issael ynuma", "text": "DAle like si te sientes m\u00e1s inteligente por dar Click a este video.", "likes": 0}}, {"topLevelComment": {"id": "UgwKSmNJNI4njDmTMN54AaABAg", "publishedAt": "2019-11-25T23:40:21Z", "author": "Hello-Again", "text": "Near 18:36, you said \"travelling salesperson problem\". Did the Google overlords prevent you from saying traveling salesMAN because of  wahmen?", "likes": 3}}, {"topLevelComment": {"id": "UgzMgJBdN9fstSSB43J4AaABAg", "publishedAt": "2019-11-25T19:59:38Z", "author": "Datta Prabhu M", "text": "02:36:13: why cant we compare the low-link values of two connected graphs? if those values are different then its a bridge otherwise not", "likes": 1}}, {"topLevelComment": {"id": "UgyBnExkMkz8oMsLczh4AaABAg", "publishedAt": "2019-11-21T20:54:56Z", "author": "Potato Cat", "text": "Are you really a google engineer?  Because when I grow up, I want to be one too!  I am in 6th grade Right now, and in math my teacher says I should go to an 8th grade math room to really get a challenge. (When the teacher is finished explaining, I am done with everything )", "likes": 1}, "replies": [{"id": "UgyBnExkMkz8oMsLczh4AaABAg.91b_-39dWrq91q5CfvQNAM", "publishedAt": "2019-11-27T12:14:31Z", "author": "Potato Cat", "text": "Ok thank you!", "likes": 0}, {"id": "UgyBnExkMkz8oMsLczh4AaABAg.91b_-39dWrq91q3yhz5mVC", "publishedAt": "2019-11-27T12:03:44Z", "author": "AMIR NURIEV", "text": "you math skills aren't really thaat handy in programming, i suggest you to try cp(competitive programming)", "likes": 0}]}, {"topLevelComment": {"id": "Ugzm8KG7qudzq-x9piR4AaABAg", "publishedAt": "2019-11-19T06:00:42Z", "author": "afaf web", "text": "i need english subtitle. my listening is'nt good enough.", "likes": 0}, "replies": [{"id": "Ugzm8KG7qudzq-x9piR4AaABAg.91Vp3jMz0Ww95i1Itgshhf", "publishedAt": "2020-03-02T19:12:04Z", "author": "MGtv", "text": "Bro then it would be tough for you to follow this video,Try some native speaker t tutorials and use this for referencing what you want to learn", "likes": 0}]}, {"topLevelComment": {"id": "UgwXdEUoFiokuUHYJFV4AaABAg", "publishedAt": "2019-11-17T00:32:26Z", "author": "techkyguy", "text": "thanks for making this video. You made algorithms very easy to learn. I wish you could add Kruskal's minimum spanning tree to the list. Thanks", "likes": 6}}, {"topLevelComment": {"id": "Ugy4frQh9r_x2H47-qF4AaABAg", "publishedAt": "2019-11-10T13:29:18Z", "author": "Vignesh Baskaran", "text": "Can anyone please explain that currency example he said in the negative cycle problem?", "likes": 0}}, {"topLevelComment": {"id": "UgwaY7G-UBKO3qjR_J54AaABAg", "publishedAt": "2019-11-09T07:30:17Z", "author": "Sebastien Ollquist", "text": "1.25 speed is absolutely perfect !", "likes": 2}}, {"topLevelComment": {"id": "Ugy6BSkB6mkILFxGzVZ4AaABAg", "publishedAt": "2019-11-07T19:37:17Z", "author": "Bargains", "text": "That covers all the algorithms I was taught in my undergrad and much more", "likes": 39}, "replies": [{"id": "Ugy6BSkB6mkILFxGzVZ4AaABAg.912Nz9sYGVW9CrBcjZ71X8", "publishedAt": "2020-08-27T08:15:13Z", "author": "Thomas Yorkshire IV", "text": "@J R I'd say that algorithm doesn't belong here.", "likes": 0}, {"id": "Ugy6BSkB6mkILFxGzVZ4AaABAg.912Nz9sYGVW96EZm_Xss7v", "publishedAt": "2020-03-15T19:48:17Z", "author": "J R", "text": "No A* though", "likes": 5}, {"id": "Ugy6BSkB6mkILFxGzVZ4AaABAg.912Nz9sYGVW963RvLlKUlX", "publishedAt": "2020-03-11T12:07:56Z", "author": "Ronnie Lutaro", "text": "Really?", "likes": 2}]}, {"topLevelComment": {"id": "UgyX6WownJBhpsyhe814AaABAg", "publishedAt": "2019-11-07T15:49:52Z", "author": "\u4f55\u78ca", "text": "O!M!G! almost 7 hours algrithms course, I can sleep until next week!", "likes": 40}, "replies": [{"id": "UgyX6WownJBhpsyhe814AaABAg.911yxWAu9Kx99t4dFDJqZ6", "publishedAt": "2020-06-14T12:18:25Z", "author": "Devang Srivastava", "text": "Ikr", "likes": 1}, {"id": "UgyX6WownJBhpsyhe814AaABAg.911yxWAu9Kx983ZhqWXUBV", "publishedAt": "2020-04-30T06:18:47Z", "author": "bhavana chaganti", "text": "\ud83e\udd23", "likes": 0}]}, {"topLevelComment": {"id": "Ugz5HQ7szV2nb6NeWg54AaABAg", "publishedAt": "2019-11-06T08:11:06Z", "author": "Febratama Agni", "text": "Subtitle please", "likes": 0}}, {"topLevelComment": {"id": "UgwnXGRJwnB6-0kHUol4AaABAg", "publishedAt": "2019-11-05T19:47:33Z", "author": "Juan Camilo Q1", "text": "Awesome videos as always", "likes": 0}}, {"topLevelComment": {"id": "UgyWcuMv4-qjiFe-pPJ4AaABAg", "publishedAt": "2019-11-03T14:56:26Z", "author": "Yang Li", "text": "you are my god", "likes": 1}}, {"topLevelComment": {"id": "UgwmMIZ61jsf9neWtWp4AaABAg", "publishedAt": "2019-10-31T21:48:22Z", "author": "Shawn Mofid", "text": "Wow, I am so glad I found this content. Thank you so much. Re: Eulerian paths and circuits, I guess the rule that all nodes have to be connected does not apply to the directed graphs? The last example you shared had a node just by itself, but you said that it has a path b/c the other component had in - out = 1 and out - in = i and the rest had the same number of in and out edges.", "likes": 4}, "replies": [{"id": "UgwmMIZ61jsf9neWtWp4AaABAg.90laQ4SJje69CGfsFGNi7I", "publishedAt": "2020-08-12T18:37:04Z", "author": "Riantix", "text": "Nodes that have no edges do not have to be connected. However, all nodes with at least one edge must be connected to each other.", "likes": 1}]}, {"topLevelComment": {"id": "UgwZ5WUcD-LDGb-cm_t4AaABAg", "publishedAt": "2019-10-30T18:37:04Z", "author": "morad morgan", "text": "how could the tree be undirected ?\nif i go from the root of the tree i can't go back to it again", "likes": 2}, "replies": [{"id": "UgwZ5WUcD-LDGb-cm_t4AaABAg.90ifj2P2YJB91sQBK8E5fz", "publishedAt": "2019-11-28T09:56:18Z", "author": "Kumara Kantirava", "text": "A tree also has pointers to PARENT node.", "likes": 0}]}, {"topLevelComment": {"id": "UgwFlz6sdAmUY2x810R4AaABAg", "publishedAt": "2019-10-27T18:14:02Z", "author": "Predrag-Peter Ilich", "text": "Is there any phenomenon given by the graph-theory formalism that cannot already be represented by other means and formalism; i.e. is graph theory a qualitatively new means or just an effective way of organizing binary relations? (Methinks, I know of one \"thing\", in the area of acyclic spectra of cyclic graphs but am not sure; awaiting responses.) Thank you.", "likes": 0}}, {"topLevelComment": {"id": "Ugxu7gXTx75EmorXn7V4AaABAg", "publishedAt": "2019-10-25T03:17:41Z", "author": "Pritha Majumder", "text": "Please enable subtitle...", "likes": 2}}, {"topLevelComment": {"id": "UgxOlx61B_zIXU5YzkV4AaABAg", "publishedAt": "2019-10-24T05:21:44Z", "author": "sensory overload", "text": "Holy hell", "likes": 0}}, {"topLevelComment": {"id": "UgzqqXFbdrO-L98-Tb54AaABAg", "publishedAt": "2019-10-23T16:17:19Z", "author": "Souravendra Krishna Deb", "text": "YES PLEASE.", "likes": 0}}, {"topLevelComment": {"id": "UgyVAxPpK_ykOKWAMe94AaABAg", "publishedAt": "2019-10-23T13:26:45Z", "author": "Fuad Nasrudin", "text": "could you please add subtitles..\nthanks :D", "likes": 3}}, {"topLevelComment": {"id": "UgyjVQZijR-8D3GGCUx4AaABAg", "publishedAt": "2019-10-22T21:37:18Z", "author": "Ahmed Badal", "text": "is this recommonded for new people who doesnt know anything from programming", "likes": 0}, "replies": [{"id": "UgyjVQZijR-8D3GGCUx4AaABAg.90PP-BzOGud90_d7FIjTI9", "publishedAt": "2019-10-27T06:21:07Z", "author": "Ahmed Badal", "text": "@Learnold okey", "likes": 0}, {"id": "UgyjVQZijR-8D3GGCUx4AaABAg.90PP-BzOGud90Tkedh6vXy", "publishedAt": "2019-10-24T14:12:18Z", "author": "Learnold", "text": "not really, having knowledge of basic data structures and algorithms is highly recommended before going into graph theory", "likes": 0}]}, {"topLevelComment": {"id": "Ugx9wszTV2s_h-6rEot4AaABAg", "publishedAt": "2019-10-22T15:32:42Z", "author": "Aspen Hollyer", "text": "Great work, thank you so much for this video! But I'm confused at (20:24) because node 3 is called an articulation point. When I googled component, the definition was a subgraph with at least 2 connected nodes. But removing node 3 would leave only node 4 by itself, which wouldn't qualify as a component by that definition. So is node 3 really an articulation point? Am I missing something? Thanks!!", "likes": 2}, "replies": [{"id": "Ugx9wszTV2s_h-6rEot4AaABAg.90OkGl__G4H912Rc7qEqUY", "publishedAt": "2019-11-07T20:09:06Z", "author": "Bargains", "text": "Wikipedia : connected component, of an undirected graph is a subgraph in which any two vertices are connected to each other by paths, and which is connected to no additional vertices in the supergraph. ... A vertex with no incident edges is itself a component", "likes": 0}]}, {"topLevelComment": {"id": "Ugy9G8QQnncmSWOXwih4AaABAg", "publishedAt": "2019-10-21T13:30:53Z", "author": "Prashant Bhargava", "text": "Truly Invaluable!", "likes": 0}, "replies": [{"id": "Ugy9G8QQnncmSWOXwih4AaABAg.90LxXaRxQw692XKxNGD8W5", "publishedAt": "2019-12-14T16:38:41Z", "author": "Yash Pandey", "text": "can you explain why?", "likes": 1}]}, {"topLevelComment": {"id": "UgwjIYNjOFW0fKrchtZ4AaABAg", "publishedAt": "2019-10-20T06:36:01Z", "author": "Aryan Sapra", "text": "You guys are the best....", "likes": 1}}, {"topLevelComment": {"id": "Ugx4vXqamSY6NmL4oMJ4AaABAg", "publishedAt": "2019-10-19T23:16:16Z", "author": "Beast Master64", "text": "This channel is simply amazing", "likes": 3}}, {"topLevelComment": {"id": "Ugyjc8P77Hw1h2iDyOZ4AaABAg", "publishedAt": "2019-10-19T13:36:15Z", "author": "GitLit", "text": "\u2328\ufe0f (0:00:00) Graph Theory Introduction\r\n\u2328\ufe0f (0:13:53) Problems in Graph Theory\r\n\u2328\ufe0f (0:23:15) Depth First Search Algorithm\r\n\u2328\ufe0f (0:33:18) Breadth First Search Algorithm\r\n\u2328\ufe0f (0:40:27) Breadth First Search grid shortest path\r\n\u2328\ufe0f (0:56:23) Topological Sort Algorithm\r\n\u2328\ufe0f (1:09:52) Shortest/Longest path on a Directed Acyclic Graph (DAG)\r\n\u2328\ufe0f (1:19:34) Dijkstra's Shortest Path Algorithm\r\n\u2328\ufe0f (1:43:17) Dijkstra's Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (1:50:47) Bellman Ford Algorithm\r\n\u2328\ufe0f (2:05:34) Floyd Warshall All Pairs Shortest Path Algorithm\r\n\u2328\ufe0f (2:20:54) Floyd Warshall All Pairs Shortest Path Algorithm | Source Code\r\n\u2328\ufe0f (2:29:19) Bridges and Articulation points Algorithm\r\n\u2328\ufe0f (2:49:01) Bridges and Articulation points source code\r\n\u2328\ufe0f (2:57:32) Tarjans Strongly Connected Components algorithm\r\n\u2328\ufe0f (3:13:56) Tarjans Strongly Connected Components algorithm source code\r\n\u2328\ufe0f (3:20:12) Travelling Salesman Problem | Dynamic Programming\r\n\u2328\ufe0f (3:39:59) Travelling Salesman Problem source code | Dynamic Programming\r\n\u2328\ufe0f (3:52:27) Existence of Eulerian Paths and Circuits\r\n\u2328\ufe0f (4:01:19) Eulerian Path Algorithm\r\n\u2328\ufe0f (4:15:47) Eulerian Path Algorithm | Source Code\r\n\u2328\ufe0f (4:23:00) Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:37:05) Eager Prim's Minimum Spanning Tree Algorithm\r\n\u2328\ufe0f (4:50:38) Eager Prim's Minimum Spanning Tree Algorithm | Source Code\r\n\u2328\ufe0f (4:58:30) Max Flow Ford Fulkerson | Network Flow\r\n\u2328\ufe0f (5:11:01) Max Flow Ford Fulkerson | Source Code\r\n\u2328\ufe0f (5:27:25) Unweighted Bipartite Matching | Network Flow\r\n\u2328\ufe0f (5:38:11) Mice and Owls problem | Network Flow\r\n\u2328\ufe0f (5:46:11) Elementary Math problem | Network Flow\r\n\u2328\ufe0f (5:56:19) Edmonds Karp Algorithm | Network Flow\r\n\u2328\ufe0f (6:05:18) Edmonds Karp Algorithm | Source Code\r\n\u2328\ufe0f (6:10:08) Capacity Scaling | Network Flow\r\n\u2328\ufe0f (6:19:34) Capacity Scaling | Network Flow | Source Code\r\n\u2328\ufe0f (6:25:04) Dinic's Algorithm | Network Flow\r\n\u2328\ufe0f (6:36:09) Dinic's Algorithm | Network Flow | Source Code", "likes": 10}}, {"topLevelComment": {"id": "UgzrbeUqBx372WkXW7x4AaABAg", "publishedAt": "2019-10-19T11:41:21Z", "author": "Vipul Sharma", "text": "He says a tree is a \"undirected graph\". Later he says a rooted tree is a tree but rooted tree has got \"directed edges\". Isn't that contradictory?", "likes": 0}, "replies": [{"id": "UgzrbeUqBx372WkXW7x4AaABAg.90GbPg38nKp92EOSTLi814", "publishedAt": "2019-12-07T08:03:42Z", "author": "john chau", "text": "@Prashant Bhargava excellent. that is correct", "likes": 0}, {"id": "UgzrbeUqBx372WkXW7x4AaABAg.90GbPg38nKp90Ly4-UTIJi", "publishedAt": "2019-10-21T13:35:34Z", "author": "Prashant Bhargava", "text": "If your tree has nodes, which has pointers to only it's child nodes, then it's a directed acyclic graph. However, if every node of the tree also has pointer to its parent node, then it becomes an undirected graph.\n\n\nSo, it's basically just a matter of how you define your tree.", "likes": 1}]}, {"topLevelComment": {"id": "UgxH1_oCFPxRlpg62KR4AaABAg", "publishedAt": "2019-10-16T17:23:29Z", "author": "Pial", "text": "Please Make a Dynamic Programming Series", "likes": 252}, "replies": [{"id": "UgxH1_oCFPxRlpg62KR4AaABAg.909VAp_HNLm9H9DBQfgeeE", "publishedAt": "2020-12-12T03:39:58Z", "author": "SRISOWRIRAJAN K S", "text": "dynamic programming", "likes": 0}, {"id": "UgxH1_oCFPxRlpg62KR4AaABAg.909VAp_HNLm9H9D8wbFqBi", "publishedAt": "2020-12-12T03:39:38Z", "author": "SRISOWRIRAJAN K S", "text": "https://www.youtube.com/watch?v=oBt53YbR9Kk&t=349s", "likes": 3}, {"id": "UgxH1_oCFPxRlpg62KR4AaABAg.909VAp_HNLm9GiKSNbcZmB", "publishedAt": "2020-12-01T07:44:43Z", "author": "Shaily Patel", "text": "@hubertjk200 what do u mean by still interested??", "likes": 1}, {"id": "UgxH1_oCFPxRlpg62KR4AaABAg.909VAp_HNLm9GgUdFJCAw0", "publishedAt": "2020-11-30T14:35:14Z", "author": "Caesar Haddad", "text": "@hubertjk200 where is it ?", "likes": 0}, {"id": "UgxH1_oCFPxRlpg62KR4AaABAg.909VAp_HNLm9EEedi4H0k8", "publishedAt": "2020-09-30T16:50:39Z", "author": "hubertjk200", "text": "If you are still interested, he made one on his channel.", "likes": 10}]}, {"topLevelComment": {"id": "UgweYP9UrKLTEOwUutx4AaABAg", "publishedAt": "2019-10-16T17:14:07Z", "author": "Thanapong Angkha", "text": "My university lecturer just started teaching this topic today, then I found\nthis video from FreeCodeCamp, just, wow what a coincidence.", "likes": 2}, "replies": [{"id": "UgweYP9UrKLTEOwUutx4AaABAg.909U6KyefHR90nAb5e0Y1g", "publishedAt": "2019-11-01T12:32:33Z", "author": "Nitesh Bagla", "text": "True", "likes": 0}, {"id": "UgweYP9UrKLTEOwUutx4AaABAg.909U6KyefHR90OIqHRXYfP", "publishedAt": "2019-10-22T11:24:17Z", "author": "Aditya Joshi", "text": "What if I tell you this is not a coincidence?", "likes": 1}]}, {"topLevelComment": {"id": "Ugyi_uVNC3BbT6ISxot4AaABAg", "publishedAt": "2019-10-16T07:08:32Z", "author": "Tigran Vilasyan", "text": "subtitles pls", "likes": 0}}, {"topLevelComment": {"id": "UgyzX4awwNu8TceqYqB4AaABAg", "publishedAt": "2019-10-15T01:28:16Z", "author": "Mathin3D", "text": "FAIL", "likes": 0}}, {"topLevelComment": {"id": "UgzBmdC0mrMXmNBEPCx4AaABAg", "publishedAt": "2019-10-14T16:36:55Z", "author": "Naresh Kumar", "text": "Thank Youtube for a recommendation . I was wandering to learn graph in java or algorithms. Now I have found a treasure. Thanks!", "likes": 3}}, {"topLevelComment": {"id": "UgynDJqAD1LkCr6SD694AaABAg", "publishedAt": "2019-10-14T14:43:44Z", "author": "Luminescence", "text": "How can I apply this in python?", "likes": 0}, "replies": [{"id": "UgynDJqAD1LkCr6SD694AaABAg.9043J54dSJF907xXn7ykTp", "publishedAt": "2019-10-16T03:01:32Z", "author": "Daniel Bissell", "text": "Luminescence \nNetworkx", "likes": 0}]}, {"topLevelComment": {"id": "Ugz_JFhPY6JpawjSaqt4AaABAg", "publishedAt": "2019-10-14T01:15:13Z", "author": "bob ross", "text": "Dont evem know what this is but im leaving a like for no ads.", "likes": 26}, "replies": [{"id": "Ugz_JFhPY6JpawjSaqt4AaABAg.902bmKvS6Zm9LFncuBVIG4", "publishedAt": "2021-03-24T03:08:11Z", "author": "Kate Moon", "text": "I'm getting ads.", "likes": 0}, {"id": "Ugz_JFhPY6JpawjSaqt4AaABAg.902bmKvS6Zm9542kTnOIYQ", "publishedAt": "2020-02-15T21:15:50Z", "author": "Gabriel Zitterspiller", "text": "This is a happy accident.", "likes": 0}, {"id": "Ugz_JFhPY6JpawjSaqt4AaABAg.902bmKvS6Zm919N6t8nqZ2", "publishedAt": "2019-11-10T12:44:25Z", "author": "siva", "text": "haha", "likes": 2}]}, {"topLevelComment": {"id": "Ugzjv6ASCl8HgQ9b-T94AaABAg", "publishedAt": "2019-10-13T21:50:09Z", "author": "Arthur", "text": "listening at 1.5x speed is very comfortable", "likes": 8}, "replies": [{"id": "Ugzjv6ASCl8HgQ9b-T94AaABAg.902FJQRNHNw9ClvCsAVDXf", "publishedAt": "2020-08-25T07:06:47Z", "author": "strohtaler", "text": "1.25x feels very natural, despite not being a native English speaker myself  (video speed reduced to increase length??)", "likes": 0}]}, {"topLevelComment": {"id": "UgzgrnVhC61PyKx1LYB4AaABAg", "publishedAt": "2019-10-13T19:32:17Z", "author": "Vamsi Krishna", "text": "Can anyone help me understand how we are reconstructing path in bfs traversal ?@ 40th minute", "likes": 0}, "replies": [{"id": "UgzgrnVhC61PyKx1LYB4AaABAg.902-XfDHtxm90AcNvy7Pd6", "publishedAt": "2019-10-17T03:54:24Z", "author": "Rahul Madhavan", "text": "you can reconstruct single source path for an unweighted graph. store the predecessor (prev) along with the distance for every node. then from any destination node walk along the predecessors until you reach source", "likes": 0}]}, {"topLevelComment": {"id": "UgxV1FwFAECLi2tcAa14AaABAg", "publishedAt": "2019-10-13T19:01:49Z", "author": "Deepak Pandey", "text": "Can i get this algorithm code in Python", "likes": 0}}, {"topLevelComment": {"id": "UgwEUGC1iVZpo_R4CXt4AaABAg", "publishedAt": "2019-10-13T01:40:30Z", "author": "Rob Bradley", "text": "I like to pretend I'm a smart dude, but there's no way I can absorb a ~7 hour YouTube video on graphs.", "likes": 4}, "replies": [{"id": "UgwEUGC1iVZpo_R4CXt4AaABAg.9004sd0a6xe9CrBpO2A0eU", "publishedAt": "2020-08-27T08:16:56Z", "author": "Thomas Yorkshire IV", "text": "Watch a part every day and solve problems, I guarantee a single part will give you several days to play with problems.", "likes": 0}, {"id": "UgwEUGC1iVZpo_R4CXt4AaABAg.9004sd0a6xe90EEeotf6s6", "publishedAt": "2019-10-18T13:35:22Z", "author": "Tableto Destroyer", "text": "Watch it in divided parts", "likes": 0}]}, {"topLevelComment": {"id": "UgxMP9P8kaeRbs658NZ4AaABAg", "publishedAt": "2019-10-12T10:00:23Z", "author": "Ritwek Khosla", "text": "Thanks, really helpful work  !!!", "likes": 0}}, {"topLevelComment": {"id": "UgyQA4KVGp4A8pyfDkx4AaABAg", "publishedAt": "2019-10-12T09:01:21Z", "author": "BHASKAR JHA", "text": "Next time Dynamic programming please", "likes": 2}}, {"topLevelComment": {"id": "UgwR9p0XQt6o8NGezUR4AaABAg", "publishedAt": "2019-10-11T16:18:59Z", "author": "C\u01b0\u1eddng Hut", "text": "OMG, thank to Youtube for recommending this video to me while I'm studying it for 3 days. You guys really save my life.", "likes": 59}}, {"topLevelComment": {"id": "UgwgpDw3SaM-muVG4Pl4AaABAg", "publishedAt": "2019-10-11T08:59:14Z", "author": "LilactheRuevet", "text": "*watches a video on loop for 10 hours*\nme @ something good\nnah", "likes": 0}}, {"topLevelComment": {"id": "UgzqK5x5CCIjmwpbab54AaABAg", "publishedAt": "2019-10-11T02:00:23Z", "author": "Kunal Joshi", "text": "Got my DS Exam in few days which extensively covers Graphs. I needed this. Thanks.", "likes": 14}}, {"topLevelComment": {"id": "UgyVujITGeEV4CMQBBZ4AaABAg", "publishedAt": "2019-10-10T22:34:20Z", "author": "George Drooj", "text": "Very helpful\nDP next time please \ud83e\udd70", "likes": 3}}, {"topLevelComment": {"id": "UgwaCU-FDcsW8R31hIh4AaABAg", "publishedAt": "2019-10-10T15:59:10Z", "author": "Iliyan Iliev", "text": "This is crazy good and somewhat demanding video to comprehend\n for the viewers. Thank you so much!", "likes": 31}}, {"topLevelComment": {"id": "UgwRZrgh2NLUsOmxHT94AaABAg", "publishedAt": "2019-10-10T15:52:48Z", "author": "R_u_p _D", "text": "\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Graph Theory Introduction\n\u2328\ufe0f (0:13:53) Problems in Graph Theory\n\u2328\ufe0f (0:23:15) Depth First Search Algorithm\n\u2328\ufe0f (0:33:18) Breadth First Search Algorithm\n\u2328\ufe0f (0:40:27) Breadth First Search grid shortest path\n\u2328\ufe0f (0:56:23) Topological Sort Algorithm\n\u2328\ufe0f (1:09:52) Shortest/Longest path on a Directed Acyclic Graph (DAG)\n\u2328\ufe0f (1:19:34) Dijkstra's Shortest Path Algorithm\n\u2328\ufe0f (1:43:17) Dijkstra's Shortest Path Algorithm | Source Code\n\u2328\ufe0f (1:50:47) Bellman Ford Algorithm\n\u2328\ufe0f (2:05:34) Floyd Warshall All Pairs Shortest Path Algorithm\n\u2328\ufe0f (2:20:54) Floyd Warshall All Pairs Shortest Path Algorithm | Source Code\n\u2328\ufe0f (2:29:19) Bridges and Articulation points Algorithm\n\u2328\ufe0f (2:49:01) Bridges and Articulation points source code\n\u2328\ufe0f (2:57:32) Tarjans Strongly Connected Components algorithm\n\u2328\ufe0f (3:13:56) Tarjans Strongly Connected Components algorithm source code\n\u2328\ufe0f (3:20:12) Travelling Salesman Problem | Dynamic Programming\n\u2328\ufe0f (3:39:59) Travelling Salesman Problem source code | Dynamic Programming\n\u2328\ufe0f (3:52:27) Existence of Eulerian Paths and Circuits\n\u2328\ufe0f (4:01:19) Eulerian Path Algorithm\n\u2328\ufe0f (4:15:47) Eulerian Path Algorithm | Source Code\n\u2328\ufe0f (4:23:00) Prim's Minimum Spanning Tree Algorithm\n\u2328\ufe0f (4:37:05) Eager Prim's Minimum Spanning Tree Algorithm\n\u2328\ufe0f (4:50:38) Eager Prim's Minimum Spanning Tree Algorithm | Source Code\n\u2328\ufe0f (4:58:30) Max Flow Ford Fulkerson | Network Flow\n\u2328\ufe0f (5:11:01) Max Flow Ford Fulkerson | Source Code\n\u2328\ufe0f (5:27:25) Unweighted Bipartite Matching | Network Flow\n\u2328\ufe0f (5:38:11) Mice and Owls problem | Network Flow\n\u2328\ufe0f (5:46:11) Elementary Math problem | Network Flow\n\u2328\ufe0f (5:56:19) Edmonds Karp Algorithm | Network Flow\n\u2328\ufe0f (6:05:18) Edmonds Karp Algorithm | Source Code\n\u2328\ufe0f (6:10:08) Capacity Scaling | Network Flow\n\u2328\ufe0f (6:19:34) Capacity Scaling | Network Flow | Source Code\n\u2328\ufe0f (6:25:04) Dinic's Algorithm | Network Flow\n\u2328\ufe0f (6:36:09) Dinic's Algorithm | Network Flow | Source Code", "likes": 921}, "replies": [{"id": "UgwRZrgh2NLUsOmxHT94AaABAg.9-ut1RGRm299cbvZ3AvaVM", "publishedAt": "2022-06-23T12:05:04Z", "author": "v k", "text": "Fucking legend. Thank you!", "likes": 0}, {"id": "UgwRZrgh2NLUsOmxHT94AaABAg.9-ut1RGRm299Sf-5qnY72G", "publishedAt": "2021-09-24T06:57:09Z", "author": "bin du", "text": "nice!!!what a kind man!!!\ud83d\ude0d", "likes": 0}, {"id": "UgwRZrgh2NLUsOmxHT94AaABAg.9-ut1RGRm299LUmdv2L6FK", "publishedAt": "2021-03-29T22:48:12Z", "author": "Malabika Sen", "text": "Thanks!", "likes": 0}, {"id": "UgwRZrgh2NLUsOmxHT94AaABAg.9-ut1RGRm299FRttQzDt6y", "publishedAt": "2020-10-30T16:45:24Z", "author": "\u0938\u094d\u0935\u093e\u0924\u0940 \u0917\u0930\u0941\u0921\u093c", "text": "he just copy pasted whats so special", "likes": 2}, {"id": "UgwRZrgh2NLUsOmxHT94AaABAg.9-ut1RGRm299DWQHWaRXAB", "publishedAt": "2020-09-12T17:51:21Z", "author": "Sy C", "text": "Love this!", "likes": 0}]}, {"topLevelComment": {"id": "Ugy0TiHuqOhBQpieaep4AaABAg", "publishedAt": "2019-10-10T10:59:49Z", "author": "Amit Chaudhary", "text": "1 million likes ...", "likes": 2}}, {"topLevelComment": {"id": "UgxE8ScYeZko-0G61N54AaABAg", "publishedAt": "2019-10-10T09:33:40Z", "author": "MR. H.", "text": "I love you!!!!!", "likes": 1}}, {"topLevelComment": {"id": "UgzO9497T3_kafvMuVx4AaABAg", "publishedAt": "2019-10-10T06:15:15Z", "author": "EslaM RefaT", "text": "Pleaseeeee add english subtitle", "likes": 2}}, {"topLevelComment": {"id": "Ugw9EElX3sek1Sbf24V4AaABAg", "publishedAt": "2019-10-10T03:53:34Z", "author": "Hamad Hamad", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"id": "UgwbKETgai6NCmvXCC14AaABAg", "publishedAt": "2019-10-10T00:35:39Z", "author": "praveen", "text": "one of the most selfless work !!", "likes": 51}}, {"topLevelComment": {"id": "UgxBKaaeuxL3DwAyJGN4AaABAg", "publishedAt": "2019-10-09T23:11:58Z", "author": "Adriano Araujo", "text": "could have caption... I'm brazilian, and would help a lot.", "likes": 0}}, {"topLevelComment": {"id": "UgzdSX5ouIHp0Zfx2j14AaABAg", "publishedAt": "2019-10-09T22:15:13Z", "author": "Tony Philip", "text": "Please boost levels..  \ud83d\udd0a\ud83d\udc42\ud83c\udffb", "likes": 0}}, {"topLevelComment": {"id": "UgzK-DDbv5m051mmTfl4AaABAg", "publishedAt": "2019-10-09T22:06:29Z", "author": "Skull Greymon", "text": "This tutorial is 1 year old just so you know", "likes": 0}, "replies": [{"id": "UgzK-DDbv5m051mmTfl4AaABAg.9-sz-Wqm7k_9043Rma8biR", "publishedAt": "2019-10-14T14:44:55Z", "author": "Luminescence", "text": "But it say oct 9 2019..", "likes": 0}, {"id": "UgzK-DDbv5m051mmTfl4AaABAg.9-sz-Wqm7k_9-wJW6rGHNi", "publishedAt": "2019-10-11T05:12:09Z", "author": "Jos\u00edas Alvarado", "text": "That's the beauty of data structures and algorithms. That does not matter.", "likes": 2}]}, {"topLevelComment": {"id": "UgwDSVhgVamOlYWJF6N4AaABAg", "publishedAt": "2019-10-09T19:15:18Z", "author": "theroyakash", "text": "What is this IDE?", "likes": 0}}, {"topLevelComment": {"id": "UgymMivgcfl2gsWDoxl4AaABAg", "publishedAt": "2019-10-09T18:32:09Z", "author": "Riley Shea", "text": "Set the playback speed to 125%", "likes": 3}, "replies": [{"id": "UgymMivgcfl2gsWDoxl4AaABAg.9-saTgMpWuj9-wFBXOTWcp", "publishedAt": "2019-10-11T04:34:24Z", "author": "skity95", "text": "200% *", "likes": 1}, {"id": "UgymMivgcfl2gsWDoxl4AaABAg.9-saTgMpWuj9-vTnJ7hFbY", "publishedAt": "2019-10-10T21:22:47Z", "author": "D P", "text": "Highly recommend this^", "likes": 0}]}, {"topLevelComment": {"id": "Ugz5y2LeBXZhvHeY6FZ4AaABAg", "publishedAt": "2019-10-09T18:03:27Z", "author": "The AI Guy", "text": "I feel smarter just by clicking on this video", "likes": 2464}, "replies": [{"id": "Ugz5y2LeBXZhvHeY6FZ4AaABAg.9-sYBVw_zPE9h1Q60T_QCh", "publishedAt": "2022-10-11T05:06:33Z", "author": "John", "text": "Your iq just improved by reading the title", "likes": 0}, {"id": "Ugz5y2LeBXZhvHeY6FZ4AaABAg.9-sYBVw_zPE9W8kGWtubDy", "publishedAt": "2021-12-19T19:09:26Z", "author": "You Thought", "text": "I understood less than half of this video but am indeed 10x smarter now", "likes": 0}, {"id": "Ugz5y2LeBXZhvHeY6FZ4AaABAg.9-sYBVw_zPE9TaIbAyDeWh", "publishedAt": "2021-10-17T07:42:47Z", "author": "hasan abbas", "text": "(:", "likes": 1}, {"id": "Ugz5y2LeBXZhvHeY6FZ4AaABAg.9-sYBVw_zPE9TaIa7Mcq0u", "publishedAt": "2021-10-17T07:42:38Z", "author": "hasan abbas", "text": "i too", "likes": 1}, {"id": "Ugz5y2LeBXZhvHeY6FZ4AaABAg.9-sYBVw_zPE9S0Ugrybky5", "publishedAt": "2021-09-08T04:05:07Z", "author": "Vikas Garg", "text": "@Antonio thanks", "likes": 0}]}, {"topLevelComment": {"id": "UgwACGebyPi_YruKQAB4AaABAg", "publishedAt": "2019-10-09T17:09:54Z", "author": "Shashank Kumar", "text": "Wow! Just wow", "likes": 1}}, {"topLevelComment": {"id": "UgwufsMbjk7L_9mE2gF4AaABAg", "publishedAt": "2019-10-09T16:38:47Z", "author": "Red Hood", "text": "Really appreciate this type of content. Very useful. Thanks", "likes": 11}}, {"topLevelComment": {"id": "Ugynbh6DDwrZJLsndPx4AaABAg", "publishedAt": "2019-10-09T16:38:40Z", "author": "vikas", "text": "God nooooo... Again in Java, man I wish it could be in cpp", "likes": 3}, "replies": [{"id": "Ugynbh6DDwrZJLsndPx4AaABAg.9-sOUWlJ5lq9-scp3ZKsLS", "publishedAt": "2019-10-09T18:52:41Z", "author": "vikas", "text": "@RC2225 yes I understand that. Still it would be relatively more comfortable for me, during coding part, if it would have been in cpp.", "likes": 2}, {"id": "Ugynbh6DDwrZJLsndPx4AaABAg.9-sOUWlJ5lq9-sb-oImxjY", "publishedAt": "2019-10-09T18:36:48Z", "author": "RC2225", "text": "What is the problem? The underlaying math is the same.", "likes": 1}]}, {"topLevelComment": {"id": "Ugxi9DbmQ2gGZDTCFwh4AaABAg", "publishedAt": "2019-10-09T16:20:20Z", "author": "Deepak Singh Verma", "text": "Really really thank u,you guys are providing free education for us.Thank u", "likes": 3}}, {"topLevelComment": {"id": "UgwdVRe_O7uHAhhOrLp4AaABAg", "publishedAt": "2019-10-09T16:14:09Z", "author": "Pastor Fred", "text": "Who else liked the video before watching or even commenting?", "likes": 341}, "replies": [{"id": "UgwdVRe_O7uHAhhOrLp4AaABAg.9-sLg-Yd2de9ByJ1QTZ6GO", "publishedAt": "2020-08-05T06:03:10Z", "author": "Anuj Yadav", "text": "@Prakash Chandra Mourya \ud83d\ude02", "likes": 0}, {"id": "UgwdVRe_O7uHAhhOrLp4AaABAg.9-sLg-Yd2de9ARlRT96Oi6", "publishedAt": "2020-06-28T08:54:34Z", "author": "Bereket Molla", "text": "I just saw the course content in the description, and I liked it right away.", "likes": 1}, {"id": "UgwdVRe_O7uHAhhOrLp4AaABAg.9-sLg-Yd2de936YYqlRBdJ", "publishedAt": "2019-12-29T03:29:26Z", "author": "Yan Air", "text": "How did you know it was good course?", "likes": 0}, {"id": "UgwdVRe_O7uHAhhOrLp4AaABAg.9-sLg-Yd2de90b0hckmFkn", "publishedAt": "2019-10-27T19:15:11Z", "author": "Vivekananthan Dhanasekaran", "text": "Nice idea", "likes": 1}, {"id": "UgwdVRe_O7uHAhhOrLp4AaABAg.9-sLg-Yd2de90GZLaQSD3v", "publishedAt": "2019-10-19T11:14:35Z", "author": "Pastor Fred", "text": "@Declan Brennan I do not suppose so bro.", "likes": 1}]}, {"topLevelComment": {"id": "UgwlK4fSLthe_NgOmfV4AaABAg", "publishedAt": "2019-10-09T16:10:29Z", "author": "shanmukha varma", "text": "Can you make video on dynamic. Programming", "likes": 3}, "replies": [{"id": "UgwlK4fSLthe_NgOmfV4AaABAg.9-sLG738yBY9-sNDvliC-9", "publishedAt": "2019-10-09T16:27:40Z", "author": "shanmukha varma", "text": "Hello William fiest", "likes": 0}, {"id": "UgwlK4fSLthe_NgOmfV4AaABAg.9-sLG738yBY9-sNB9FiKxc", "publishedAt": "2019-10-09T16:27:17Z", "author": "shanmukha varma", "text": "Tq", "likes": 0}, {"id": "UgwlK4fSLthe_NgOmfV4AaABAg.9-sLG738yBY9-sMQ8BUKNw", "publishedAt": "2019-10-09T16:20:35Z", "author": "freeCodeCamp.org", "text": "Until we have a dedicated video to dynamic programming, you can learn some about it in this video starting at 3:20:12.", "likes": 4}]}, {"topLevelComment": {"id": "UgwFQZ4EnNQYNBbFwK54AaABAg", "publishedAt": "2019-10-09T16:04:07Z", "author": "JAVAAID - Coding Interview Preparation", "text": "Nice one...", "likes": 1}}, {"topLevelComment": {"id": "UgzMKDS94qTsSCLvrit4AaABAg", "publishedAt": "2019-10-09T16:02:15Z", "author": "akhil aggarwal", "text": "pls provide this course with c++ also.", "likes": 5}}, {"topLevelComment": {"id": "UgwhVEYoLfyVArusfkd4AaABAg", "publishedAt": "2019-10-09T15:56:00Z", "author": "Thirumalai vasan", "text": "FreeCodeCamp please Marry me \u2764\ufe0f\ud83d\udc90\ud83c\udf89\ud83c\udf8a I love you so much", "likes": 18}, "replies": [{"id": "UgwhVEYoLfyVArusfkd4AaABAg.9-sJb0v4dVw9-sL7RLuR1v", "publishedAt": "2019-10-09T16:09:18Z", "author": "Shahriar Shourov", "text": "hahahaha :D", "likes": 1}]}, {"topLevelComment": {"id": "Ugx6pg_qTe4owMBLVed4AaABAg", "publishedAt": "2019-10-09T15:55:15Z", "author": "Yadnesh Khode", "text": "Thank you sir for helping us who don't have any resources love from India \u2764\ufe0f\u2764\ufe0f\u2764\ufe0f", "likes": 6}}, {"topLevelComment": {"id": "UgwtIokdyDrNDgTzUj94AaABAg", "publishedAt": "2019-10-09T15:54:43Z", "author": "Programming with Peter", "text": "I got interested on this when I saw a presentation which explained briefly why graphs are fast to find data. Now this is here, great, going to watch it all.", "likes": 51}, "replies": [{"id": "UgwtIokdyDrNDgTzUj94AaABAg.9-sJSdDL7RC9E11xoI-V3x", "publishedAt": "2020-09-25T09:53:45Z", "author": "foobars", "text": "What presentation do you mean?", "likes": 1}]}, {"topLevelComment": {"id": "Ugz9R2y6m2A16UyYHhF4AaABAg", "publishedAt": "2019-10-09T15:54:39Z", "author": "Ross the Music and Guitar Teacher", "text": "Yes!!!!!!", "likes": 0}}, {"topLevelComment": {"id": "UgwMvZ8mNvCrPF_OExR4AaABAg", "publishedAt": "2019-10-09T15:54:30Z", "author": "none of ur concern", "text": "No views.. still 45likes... Dats code academy my fraands \ud83d\ude0d", "likes": 5}, "replies": [{"id": "UgwMvZ8mNvCrPF_OExR4AaABAg.9-sJQyZv3pJ9-sLz0_lRvi", "publishedAt": "2019-10-09T16:16:45Z", "author": "Prakash Chandra Mourya", "text": "Yeee", "likes": 0}]}, {"topLevelComment": {"id": "Ugw41mP_HfJ8hpIUEaF4AaABAg", "publishedAt": "2019-10-09T15:54:27Z", "author": "Jakaria Ridoy", "text": "No Views.. But Still 6 Likes.. I love that.. and i love freeCodeCamp videos and their effort for teaching us great things in a great way .. Best of Luck", "likes": 3}}, {"topLevelComment": {"id": "Ugxq9_lCu2ABohrPyrt4AaABAg", "publishedAt": "2019-10-09T15:54:25Z", "author": "Chandra", "text": "thanks for the video", "likes": 1}}, {"topLevelComment": {"id": "UgzB6HEe1UvbzK-B6q54AaABAg", "publishedAt": "2019-10-09T15:53:18Z", "author": "adazo", "text": "1st viewer", "likes": 1}}]}