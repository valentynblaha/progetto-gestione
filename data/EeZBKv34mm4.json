{"video": {"id": "EeZBKv34mm4", "title": "Copying Arrays (deep and shallow) - Beau teaches JavaScript", "description": "Shallow copy arrays using slice and the spread operator. Deep copy arrays using JSON.stringify.\n\n\ud83d\udd17 Code: http://codepen.io/beaucarnes/pen/OWePwd?editors=0012\n\n\ud83d\udc26 Beau Carnes on Twitter: https://twitter.com/carnesbeau\n\n\u2b50JavaScript Playlists\u2b50\n\u25b6JavaScript Basics: https://www.youtube.com/playlist?list=PLWKjhJtqVAbk2qRZtWSzCIN38JC_NdhW5\n\u25b6Data Structures and Algorithms: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ\n\u25b6Design Patterns: https://www.youtube.com/playlist?list=PLWKjhJtqVAbnZtkAI3BqcYxKnfWn_C704\n\u25b6ES6: https://www.youtube.com/playlist?list=PLWKjhJtqVAbljtmmeS0c-CEl2LdE-eR_F\n\u25b6Clean Code: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh\n\n-\nWe're busy people who learn to code, then practice by building projects for nonprofits. Learn Full-stack JavaScript, build a portfolio, and get great references with our open source community.\n\nJoin our community at https://freecodecamp.com\nRead great tech articles at https://medium.freecodecamp.com", "duration": "PT5M56S", "likes": "890", "views": "39852"}, "comments": [{"topLevelComment": {"id": "UgzVe4Tq95xgdruWKvt4AaABAg", "publishedAt": "2022-09-28T11:18:05Z", "author": "Keifer", "text": "I don't know why I found it funny that the solution was simply to turn it into JSON and back into Javascript. The creativity of some people \ud83d\udc4c", "likes": 0}}, {"topLevelComment": {"id": "UgwihyF6WrpXYi_CARp4AaABAg", "publishedAt": "2022-08-11T20:08:44Z", "author": "Joseph Cafarelli", "text": "You\u2019re awesome. Thank you so much. I was having such an issue with a nested array. I couldn\u2019t understand why it keep muting the original array. Thank you again and keep up the great work.", "likes": 3}}, {"topLevelComment": {"id": "UgxdBhH-W8Xi_3xjH3V4AaABAg", "publishedAt": "2022-07-11T12:04:38Z", "author": "Earl Cornet", "text": "That will not always work so as you want, if you have a property that points to a function or your working with Date object then you can't use JSON.Parse.......\nBetter use the spread operator.", "likes": 0}}, {"topLevelComment": {"id": "UgxnkYq7WnFKVieBOdZ4AaABAg", "publishedAt": "2022-07-09T23:45:16Z", "author": "js_programmer84", "text": "his teaching is super confusing ...", "likes": 0}}, {"topLevelComment": {"id": "UgwbnG03wqTVwNN1uoh4AaABAg", "publishedAt": "2022-06-22T13:42:26Z", "author": "learnwithOm", "text": "how to copy this one\nvar arr=[\n   1, 3, [5, 6, [7, [6, 5], 4], 3], [4]\n];\n\n\nhere deep copy or shallow copy will not work i think?", "likes": 0}}, {"topLevelComment": {"id": "Ugw4iMGxWiXEH2aihRt4AaABAg", "publishedAt": "2022-05-19T15:58:15Z", "author": "Nikyta Nazarov", "text": "It feels like very bad language design. Why don't all javascript objects have a copy method for this", "likes": 1}}, {"topLevelComment": {"id": "Ugx0fD3TWtAjdSPjzy54AaABAg", "publishedAt": "2022-03-19T21:57:52Z", "author": "Kyle Tower", "text": "Thank you so much!", "likes": 0}}, {"topLevelComment": {"id": "Ugz0pw3lppVwYg96lH14AaABAg", "publishedAt": "2022-03-10T18:03:51Z", "author": "Reehana Qadari", "text": "When copying array of json data into new array using speard operator it's muting original data. Speard operator fails over here. I used to resolve this issue by using lodash \ud83d\udcaa\ud83d\udcaa", "likes": 0}}, {"topLevelComment": {"id": "Ugy99q_y3nQo-0Ey0pF4AaABAg", "publishedAt": "2021-08-03T14:25:47Z", "author": "Ameer Dhiaa", "text": "deep copy can simply done like\n const copyArray  = [...originalArray];", "likes": 0}}, {"topLevelComment": {"id": "Ugx0Z5zKn4qGYiA1Jft4AaABAg", "publishedAt": "2021-02-02T06:15:11Z", "author": "Human Evolution", "text": "Brilliant", "likes": 0}}, {"topLevelComment": {"id": "UgwCIjHJ9cF9VBa9ZSp4AaABAg", "publishedAt": "2021-01-22T05:13:00Z", "author": "PAM  -  Abhivyakti", "text": "That was really helpful, was stuck with this \nThanx \u2764\ufe0f", "likes": 0}}, {"topLevelComment": {"id": "Ugzl_azVRcWPHQ_iL594AaABAg", "publishedAt": "2020-09-30T10:13:55Z", "author": "Kushal Atreya", "text": "Thank you for the content.", "likes": 0}}, {"topLevelComment": {"id": "UgzG-RTHCskaNj0Zq5N4AaABAg", "publishedAt": "2020-08-23T10:49:14Z", "author": "Suman Dutta", "text": "you just saved my life i was keep facing the issue for last couple of days...", "likes": 0}}, {"topLevelComment": {"id": "UgxszFDYmJtEQkxl_SR4AaABAg", "publishedAt": "2020-08-17T13:44:56Z", "author": "Hi", "text": "Beau this is the best explanation of shallow and deep copy I have seen, thanks alot!!", "likes": 1}}, {"topLevelComment": {"id": "UgyI0MntHpHwz6LkAc94AaABAg", "publishedAt": "2020-07-30T08:58:14Z", "author": "Sunil Kumar Pandab", "text": "Very helpful video with detailed explanation", "likes": 0}}, {"topLevelComment": {"id": "UgwL7MO2d9bMXmkSwAd4AaABAg", "publishedAt": "2020-05-11T09:01:38Z", "author": "Grahfx", "text": "damn... finally found where is my bug thanks to this video... the way this thing work is completely absurd !", "likes": 0}}, {"topLevelComment": {"id": "Ugx9oXNSdsD9-Pv_CSB4AaABAg", "publishedAt": "2019-12-08T19:23:54Z", "author": "Youssef El-Shabasy", "text": "thank you", "likes": 0}}, {"topLevelComment": {"id": "UgzoNNw3pUhxpxIud954AaABAg", "publishedAt": "2019-10-04T12:33:41Z", "author": "Steven Barnes", "text": "5:47 you're a poet and you didn't know it.", "likes": 0}}, {"topLevelComment": {"id": "Ugwuh0x7oqx7MeefYlN4AaABAg", "publishedAt": "2019-09-27T23:01:22Z", "author": "E R", "text": "Huge thank you for that JSON tips", "likes": 0}}, {"topLevelComment": {"id": "Ugxrj5qgREETete8eB94AaABAg", "publishedAt": "2019-09-21T09:56:39Z", "author": "Anurag Bhagsain", "text": "Unfortunately, it removes any functional property of the object. \nExample: \nconst names = [\n{            value: \"name\", \r\n             getName : function(){ return this.value }}\n];\r\nconst names2 = JSON.parse(JSON.stringify(names));\r\nnames2[0].value = \"modified\";\r\nnames[0].getName()\r\nnames2[0].getName(); // this line will throw the error getName() isn't  a function.", "likes": 9}, "replies": [{"id": "Ugxrj5qgREETete8eB94AaABAg.9-8KAJR3bLy9_AQVnHqdyV", "publishedAt": "2022-03-29T20:52:04Z", "author": "Vishal Gaware", "text": "use the spread operator for copy \nex: let names2 = [...names];\nnames2[0] = {...names2[0], value: 'modified'};\nthis would work", "likes": 0}]}, {"topLevelComment": {"id": "Ugxvv-ogqiwaPX1p7MV4AaABAg", "publishedAt": "2019-09-12T15:16:40Z", "author": "Vinycius Oliveira", "text": "Dude... I'm already loving you so much. I spent an hour racking my brains with this at work and now it's finally settled.", "likes": 1}}, {"topLevelComment": {"id": "Ugwp-P4I12fNrWTnCq54AaABAg", "publishedAt": "2019-09-03T15:19:45Z", "author": "Kattenelvis", "text": "THANK YOU", "likes": 0}}, {"topLevelComment": {"id": "Ugy_7adjmtVem3dlMSN4AaABAg", "publishedAt": "2019-05-06T02:57:14Z", "author": "Logix Indie", "text": "Is using JSON better in performance than manually copying each item for a deep copy?", "likes": 0}}, {"topLevelComment": {"id": "UgxuHNb7JDgbSaEGzIV4AaABAg", "publishedAt": "2018-11-26T03:39:05Z", "author": "Robert Kramer", "text": "I used this array to test:\nlet deepArray = [true, undefined, false, null, [\u2018freeCodeCamp\u2019]];\n\nJSON changed the undefined to null during the copy.  But isn't best practice to define empty data as null rather than undefined?  And you probably would be testing if the data was undefined before pushing it on to your array anyways. (Or at least you should be.)", "likes": 0}}, {"topLevelComment": {"id": "UgzXzAaHUrprbZRRQGh4AaABAg", "publishedAt": "2018-11-03T18:59:31Z", "author": "Ali N.jaff", "text": "how to copy 2  arrays in to 1 array  i have an exam thanks for help", "likes": 0}}, {"topLevelComment": {"id": "Ugy_H1JKeR2zB1LBE5t4AaABAg", "publishedAt": "2018-09-24T11:38:08Z", "author": "Carl Nathan Mier", "text": "genius!", "likes": 0}}, {"topLevelComment": {"id": "Ugy6WfRb7F05AsX86CR4AaABAg", "publishedAt": "2018-09-13T05:06:46Z", "author": "Gabriel Vasile", "text": "this is also an alternative: Array.from(original)  But it's not supported by IE", "likes": 0}}, {"topLevelComment": {"id": "UgwOUjf9thoRupmXKXR4AaABAg", "publishedAt": "2018-09-13T04:02:44Z", "author": "Gabriel Vasile", "text": "you don't need a 0 in original.slice(0) since 0 is the default", "likes": 0}}, {"topLevelComment": {"id": "Ugxy6qOwUIXwvBsigN94AaABAg", "publishedAt": "2018-09-06T01:44:07Z", "author": "Meleeman", "text": "what about using map()? i actually have an instance where i'm working with a nodelist of objects in the Dom.", "likes": 0}, "replies": [{"id": "Ugxy6qOwUIXwvBsigN94AaABAg.8kpyjKgg-BP8o5jHE2Cjar", "publishedAt": "2018-11-26T03:30:20Z", "author": "Robert Kramer", "text": "@ese lse map() creates the same problem with copying the pointer rather than the actual nested array. \nlet deepArray = [['freeCodeCamp']];\r\nlet deepCopy = deepArray.map(x => x); \r\ndeepCopy[0].push('is great');\r\nconsole.log(deepArray,deepCopy);\nresult > [ [ 'freeCodeCamp', 'is great' ] ] [ [ 'freeCodeCamp', 'is great' ] ]", "likes": 1}]}, {"topLevelComment": {"id": "Ugy6NLOOOhjCLT5m6LN4AaABAg", "publishedAt": "2018-09-02T12:37:45Z", "author": "With Love Shimin", "text": "DEEP COPY is  incredible idea man !", "likes": 0}}, {"topLevelComment": {"id": "UgwnDJti_i7KFsWZFrF4AaABAg", "publishedAt": "2018-07-30T15:32:01Z", "author": "Anna Maria", "text": "Excellent job.  I particularly appreciated the part about pointers and arrays & objects within arrays.", "likes": 0}}, {"topLevelComment": {"id": "UgwK_H7xvNwx6ChG59F4AaABAg", "publishedAt": "2018-01-31T17:08:27Z", "author": "Yaniv Salman", "text": "// arr = [1,2,3]\n// arr2 = arr.map(x=>x)\n// console.log(arr2);  \n\n// arr = [1,2,3]\n// let arr2 = JSON.parse(JSON.stringify(arr))\n// console.log(arr2)\n\n// arr = [1,2,3]\n// arr2= arr.slice(0);\n// console.log(arr2)\n\n// arr = [1,2,3]\n// arr2= []\n// for(let i = 0; i<arr.length; i++){\n//    arr2.push(arr[i])\n// }\n// console.log(arr2)\n\n//  let arr = [1,2,3];\n// let arr2 = Object.assign([], arr)\n//  console.log(arr2);\n\n//  let arr = [1,2,3];\n//  let arr2  =[...arr];\n//  console.log(arr2);\n\n// let arr = [1,2,3]\n// let arr = [].concat(arr2);\n//  console.log(arr2);\n\n// let arr = [1, 2, 3];\n// let arr2 = arr.length === 1 ? [arr2[0]] : Array.apply(this, arr2);\n// console.log(arr)\n\n// let = [1,2,3]\n// let arr2 = Array.from(arr);\n// console.log(arr2)", "likes": 0}}, {"topLevelComment": {"id": "UgxrXq7SupgLH4GPVBd4AaABAg", "publishedAt": "2018-01-12T19:47:44Z", "author": "Kothuri rao gopi", "text": "Super and very simple way.  Thanks", "likes": 1}}, {"topLevelComment": {"id": "UgwakRvO9FmXCybdst94AaABAg", "publishedAt": "2017-09-05T17:37:22Z", "author": "No Longer In Use", "text": "I really like how you keep the video length short and relative to the topic at hand.", "likes": 11}, "replies": [{"id": "UgwakRvO9FmXCybdst94AaABAg.8X8FsxiqKrV9H7dUJnKrlK", "publishedAt": "2020-12-11T13:00:00Z", "author": "Bob Jenkins", "text": "Yup, no extra jokes or introductory filler talk. Yet he manages to also get the best of both worlds by maintaining a friendly and accessible speaking pattern so it still seems fun.", "likes": 0}]}, {"topLevelComment": {"id": "Ugh5R-d6r1vX8ngCoAEC", "publishedAt": "2017-04-19T21:16:28Z", "author": "Betti F\u00fcl\u00f6p", "text": "var deepCopy = deepArray;\nCan you explain me, please, why doesn't work this one?", "likes": 0}, "replies": [{"id": "Ugh5R-d6r1vX8ngCoAEC.8RYjT2p48KG8aTRbsDGIfX", "publishedAt": "2017-12-22T09:09:31Z", "author": "caesar bala", "text": "But even shallowCopy = deepCopy.slice(0) is also reference to same memory right ? that's why its changes made in deepcopy is reflected on shallowcopy too if i am not wrong ? Kindly correct me if so", "likes": 0}, {"id": "Ugh5R-d6r1vX8ngCoAEC.8RYjT2p48KG8XLezneWKvw", "publishedAt": "2017-09-10T22:35:37Z", "author": "Adrian Beria", "text": "Because you would just create another pointer to the same object.", "likes": 0}, {"id": "Ugh5R-d6r1vX8ngCoAEC.8RYjT2p48KG8RYolpDr_Lc", "publishedAt": "2017-04-19T22:02:51Z", "author": "Cheeseburger", "text": "Because you can't copy objects like that. When you declare an array/object like this \"var arr_1 = [1,2,3]\", arr_1 now points to a place in memory where the array is stored. So when you make  arr_2 = arr_1 you basically named the same place in memory with two distinct names.", "likes": 3}]}, {"topLevelComment": {"id": "UgxKEqUkRdJA7Mnk-vV4AaABAg", "publishedAt": "2017-03-29T12:47:41Z", "author": "FlashErickson", "text": "Beau is legit the fastest code typer in history.", "likes": 25}, "replies": [{"id": "UgxKEqUkRdJA7Mnk-vV4AaABAg.8QgkYHtXW4t9GwklxRLEFL", "publishedAt": "2020-12-06T22:12:49Z", "author": "Manuel Casares", "text": "@Ciana it certainly is", "likes": 0}, {"id": "UgxKEqUkRdJA7Mnk-vV4AaABAg.8QgkYHtXW4t8tp2TKFGjjG", "publishedAt": "2019-04-17T09:48:47Z", "author": "Ciana", "text": "I think it's fast forwarded haha.", "likes": 4}]}, {"topLevelComment": {"id": "UgzLWasL-T7G4MFR7LV4AaABAg", "publishedAt": "2017-03-29T07:25:22Z", "author": "Hue", "text": "Hi, should I learn from FCC if I'm interested in becoming an Android developer?", "likes": 0}, "replies": [{"id": "UgzLWasL-T7G4MFR7LV4AaABAg.8QgAeUScWjM8ZnkMMTBWqW", "publishedAt": "2017-11-10T22:43:17Z", "author": "ManuAlvarado22", "text": "Not precisely since it doesn't directly teach Android development, but! It will teach you programming and web development, so you will learn fundamentals and beyond, so learning Android development should be easier then :)", "likes": 1}]}, {"topLevelComment": {"id": "UgwC257-DX8lVhqHxxR4AaABAg", "publishedAt": "2017-03-28T21:01:24Z", "author": "/", "text": "your explanations really need some work. there has been a lack of clarity in at least half of your videos that i've watched so far", "likes": 3}, "replies": [{"id": "UgwC257-DX8lVhqHxxR4AaABAg.8Qf3FRuXdUU8l_OBoPVMrs", "publishedAt": "2018-09-24T11:39:38Z", "author": "Carl Nathan Mier", "text": "i no englis speaker, but i understood wel", "likes": 0}, {"id": "UgwC257-DX8lVhqHxxR4AaABAg.8Qf3FRuXdUU8Ra8XbY4sY_", "publishedAt": "2017-04-20T19:42:46Z", "author": "/", "text": "next time i encounter the same feeling i'll be more specific.", "likes": 0}, {"id": "UgwC257-DX8lVhqHxxR4AaABAg.8Qf3FRuXdUU8R_UmXfHrnp", "publishedAt": "2017-04-20T13:37:56Z", "author": "Ed Milinski", "text": "rubbish, both explanations and attitude are excellent. \nbest javascript videos I've seen. good reminder, refresher for anyone -)", "likes": 6}, {"id": "UgwC257-DX8lVhqHxxR4AaABAg.8Qf3FRuXdUU8QfO2HWGiS4", "publishedAt": "2017-03-29T00:03:06Z", "author": "Beau Carnes", "text": "What exactly is unclear? I would definitely appreciate more specific criticism so I know what to work on. Thanks!", "likes": 4}]}, {"topLevelComment": {"id": "Ugwgv5rmMxH4XQOOTtB4AaABAg", "publishedAt": "2017-03-28T20:55:07Z", "author": "/", "text": "is that codepen you're using", "likes": 0}, "replies": [{"id": "Ugwgv5rmMxH4XQOOTtB4AaABAg.8Qf2XSLLjTS8QfO3yzU7Aj", "publishedAt": "2017-03-29T00:03:20Z", "author": "Beau Carnes", "text": "Yup!", "likes": 1}]}, {"topLevelComment": {"id": "UgzfIN2CnhXkKGeKEnZ4AaABAg", "publishedAt": "2017-03-28T19:05:07Z", "author": "Jo\u00e3o Fernandes", "text": "In terms of performance, worth doing this conversions instead of a recursive deep copy function?", "likes": 1}, "replies": [{"id": "UgzfIN2CnhXkKGeKEnZ4AaABAg.8QeqwnGV7tg8QfOL2lEh2y", "publishedAt": "2017-03-29T00:05:40Z", "author": "Beau Carnes", "text": "The way shown in the video is the fastest way according to this: http://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript/5344074#5344074", "likes": 1}]}]}