{"video": {"id": "YS4e4q9oBaU", "title": "Learn Go Programming - Golang Tutorial for Beginners", "description": "Learn the Go programming language (Golang) in this step-by-step tutorial course for beginners. Go is an open source programming language designed at Google that makes it easy to build simple, reliable, and efficient software.\n\n\ud83c\udfa5 Course from Michael Van Sickle. Check out his courses on Pluralsight about Go, JavaScript, and more: https://www.pluralsight.com/authors/mike-vansickle\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Introduction \n\u2328\ufe0f (0:16:57) Setting Up a Development Environment\n\u2328\ufe0f (0:35:48) Variables\n\u2328\ufe0f (0:57:05) Primitives\n\u2328\ufe0f (1:26:29) Constants\n\u2328\ufe0f (1:47:53) Arrays and Slices\n\u2328\ufe0f (2:17:20) Maps and Structs\n\u2328\ufe0f (2:48:00) If and Switch Statements\n\u2328\ufe0f (3:21:17) Looping\n\u2328\ufe0f (3:41:34) Defer, Panic, and Recover\n\u2328\ufe0f (4:03:57) Pointers\n\u2328\ufe0f (4:21:30) Functions\n\u2328\ufe0f (4:57:59) Interfaces\n\u2328\ufe0f (5:33:57) Goroutines\n\u2328\ufe0f (6:05:10) Channels\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://www.freecodecamp.org/news", "duration": "PT6H39M58S", "likes": "39265", "views": "2066959"}, "comments": [{"topLevelComment": {"author": "Jack Haldson", "text": "08:51\nPeople, not peoples) ", "likes": 0}}, {"topLevelComment": {"author": "Rafael Avila Mart\u00ednez", "text": "This was a fantastic tutorial. Thank you very much! \ud83d\ude47", "likes": 0}}, {"topLevelComment": {"author": "Alisha Hocane", "text": "import (\r\n\t\"fmt\"\r\n\t\"math\"\r\n)\r\n\r\nfunc main() {\r\n\tmyNum := 0.123\r\n\tif math.Abs(myNum/math.Pow(math.Sqrt(myNum), 2)-1) < 0.001 {\r\n\t\tfmt.Println(\"These are the same\")\r\n\t} else {\r\n\t\tfmt.Println(\"These are not the same\")\r\n\t}\r\n}", "likes": 0}}, {"topLevelComment": {"author": "Alisha Hocane", "text": "import (\r\n\t\"fmt\"\r\n\t\"reflect\"\r\n)\r\n\r\ntype Animal struct {\r\n\tName string `required max: \"100\"`\r\n\tOrigin string\r\n}\r\n\r\nfunc main() {\r\n\tt := reflect.TypeOf(Animal{})\r\n\tfield, _ := t.FieldByName(\"Name\")\r\n\tfmt.Println(field.Tag)\r\n}", "likes": 0}}, {"topLevelComment": {"author": "Herr Holm", "text": "This guy sure likes talking. takes a long time before you actually learn go. lots of introduction. I think ill find something else.", "likes": 0}}, {"topLevelComment": {"author": "E U", "text": "Thank you", "likes": 0}}, {"topLevelComment": {"author": "Qu Wang", "text": "Hey this is an amazing video, thank you for sharing this.\nJust a head up, around 1:06:30\na := 10 1010\nb := 3  0011\nfmt.Println(a &^ b)\na &^ b is 1000 NOT 0100.\nhere is the logic: \na & ^b  = a & (^b) = 1010 & 1100  = 1000", "likes": 3}}, {"topLevelComment": {"author": "Alan Langford", "text": "go get didn't work", "likes": 0}, "replies": [{"author": "Alan Langford", "text": "found solution", "likes": 0}]}, {"topLevelComment": {"author": "Alisha Hocane", "text": "const (\r\n\t_  = iota\r\n\tKB = 1 << (10 * iota)\r\n\tMB\r\n\tGB\r\n\tTB\r\n\tPB\r\n\tEB\r\n\tZB\r\n\tYB\r\n)\r\n\r\nfunc main() {\r\n\tfileSize := 4000000000.\r\n\tfmt.Printf(\"%.2fGB\", fileSize/GB)\r\n}", "likes": 0}}, {"topLevelComment": {"author": "Bhagya Lakshmi", "text": "Go lring and libraries", "likes": 0}}, {"topLevelComment": {"author": "Bhagya Lakshmi", "text": "\ud83e\udd70\ud83e\udd29\ud83d\udc4c nice development and go lring", "likes": 0}}, {"topLevelComment": {"author": "k4qdex", "text": "1:41:29\ni cant believe this idiot says 2 to the hundredth.. he has no fucking idea what he talks about", "likes": 0}}, {"topLevelComment": {"author": "ABHIMANYU JENA", "text": "Thank you", "likes": 0}}, {"topLevelComment": {"author": "amie's Adventure vLoG", "text": "Aa", "likes": 0}}, {"topLevelComment": {"author": "celia", "text": "Interfaces are hard to understand ;-;", "likes": 0}}, {"topLevelComment": {"author": "R5123", "text": "Just finished the course! Thank you very much, this was particularly helpful coming from a background in C++.", "likes": 0}}, {"topLevelComment": {"author": "G Z", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "Kipkemei Adam", "text": "Thank you so much for a great deep dive ,  to the deepest end in a easy and elegant way.", "likes": 0}}, {"topLevelComment": {"author": "TON 618", "text": "Rust forever", "likes": 0}}, {"topLevelComment": {"author": "Minh Ta Duc", "text": "Gosh this dude's your voice is top notch!", "likes": 0}}, {"topLevelComment": {"author": "Jean Moirano", "text": "Some people are really meant to teach others,  thank you for all this shared knowledge!", "likes": 0}}, {"topLevelComment": {"author": "hello_world_zz", "text": "5:56:25 very interesting point!", "likes": 0}}, {"topLevelComment": {"author": "Jorge Silva", "text": "Really good, thank you for the extensive tutorial !", "likes": 0}}, {"topLevelComment": {"author": "Emlyn Clay", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"author": "Peng Gong", "text": "Great tutorial, I have just finished this video, and keep moving on to the projects video. Keep going guys!", "likes": 0}}, {"topLevelComment": {"author": "Mudassar Raza", "text": "bookmark 4:58:00", "likes": 0}}, {"topLevelComment": {"author": "I Ri", "text": "Ok, this is much better than some of paid udemy courses", "likes": 0}}, {"topLevelComment": {"author": "Aliaksandr Satsunkevich", "text": "extremely useful tutorial thanks a lot", "likes": 0}}, {"topLevelComment": {"author": "david wybourn", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"author": "Paul Peters", "text": "bookmark: 1:47:50", "likes": 0}}, {"topLevelComment": {"author": "Nelwin", "text": "\u2665\ufe0f", "likes": 0}}, {"topLevelComment": {"author": "Zezo Ahmed", "text": "I love the video but there\u2019s an error on which had me lost for a second and just wanted to point it on (on min 2:58:02)\nThe OR statement technically doesn\u2019t fail because of the function (rather it short circuits as well)", "likes": 0}}, {"topLevelComment": {"author": "susant palai", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "HAIBAI Dzokwom Andre", "text": "the language i fell in love with. I", "likes": 0}}, {"topLevelComment": {"author": "Vitra", "text": "\u2764\ufe0f\u2764\ufe0f\u2764\ufe0f\ud83d\ude00", "likes": 0}}, {"topLevelComment": {"author": "Hri7566", "text": "installing chrome on ubuntu is a sin", "likes": 0}}, {"topLevelComment": {"author": "Muhammad Ichsanul Amal", "text": "thank you", "likes": 0}}, {"topLevelComment": {"author": "Harsha L", "text": "Cant Respect you guys enough for the Quality Work that you are doing. Seriously the level of effort being put into these videos is amazing and I feel its a crime to not support you guys by how much ever we can. Hence my small donation", "likes": 1}}, {"topLevelComment": {"author": "Harsha L", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Arthur Gabryel", "text": "Thank you, guy! Your tutorial is amazing and makes me learn a lot.", "likes": 0}}, {"topLevelComment": {"author": "Lies 4 Lyf", "text": "Is the setup tailored to Mac only? Or can windows user's follow along.", "likes": 0}}, {"topLevelComment": {"author": "anfang", "text": "First of all: Nice content and thank you for your effort.\nWithin ~ 7 h of content it is pretty common to slip occasionally.\n\nI got hung up on that:\nhttps://youtu.be/YS4e4q9oBaU?t=6092\n\nBit shifting by << 10 * iota gives you for \niota=1 -> 2^10 byte = 1024 byte - > KB\niota = 2 -> 2^20 byte = 1048576 byte - > MB\n\n\nYou were referring to 2^10, 2^100, 2^1000, which would be ... a lot.", "likes": 0}}, {"topLevelComment": {"author": "Anfaas Qureshi", "text": "Found it good but is not structured properly , functions are there too late  else great all in one package to learn go basics", "likes": 0}}, {"topLevelComment": {"author": "Lies 4 Lyf", "text": "1:07:02 I think I'm missing something just as I thought I got it. So with the binary it goes 8, 4, 2, 1 right.\nFor the &^ one one why did it output 8 when the answer was 4? 0100 is 4 right?", "likes": 1}}, {"topLevelComment": {"author": "Lies 4 Lyf", "text": "Im an absolute novice to code. And have started with learning GO. 47 mins in and this is an amazing course so far.\n\nHowever I'm struggling to understand the upper case and lower case variable. I don't understand what he means by upper case variable will be globally available.", "likes": 0}}, {"topLevelComment": {"author": "Zombies Byte", "text": "In my opinion `addressHTTPOrHTTPS` is not readable where as `addressHttpOrHttps` is completely readable.", "likes": 0}}, {"topLevelComment": {"author": "kartik chauhan", "text": "1:31:38 nice!", "likes": 0}}, {"topLevelComment": {"author": "Abdulaziz Ergashev", "text": "Thank yuo so much! It was astonishing lesson! \ud83d\ude0d", "likes": 0}}, {"topLevelComment": {"author": "FarhatZaman", "text": "It reminds me of PL/SQL like Syntex.", "likes": 0}}, {"topLevelComment": {"author": "Izhar Ahmed", "text": "which vs code extension you used for go.", "likes": 0}, "replies": [{"author": "Robert Mindo", "text": "go", "likes": 0}]}, {"topLevelComment": {"author": "Rudy Verblac", "text": "I had a question about 50:00, on line 9 and 13.\nYou changed the printf Type from (%T) to (%T\\n)\nHow come the (\\n) is added to (%T) in that situation?", "likes": 0}}, {"topLevelComment": {"author": "Samuel S. Watson", "text": "Small correction: UTF-8 is the variable-length encoding and UTF-32 is the fixed-length one.", "likes": 0}}, {"topLevelComment": {"author": "Long Vu", "text": "Thanks, I finished this course in one week.", "likes": 0}}, {"topLevelComment": {"author": "Nxone", "text": "golang is such an amazing language", "likes": 0}}, {"topLevelComment": {"author": "Kringe", "text": "great video", "likes": 0}}, {"topLevelComment": {"author": "Mar", "text": "It does not take 7 hours to learn this, unless you\u2019re a complete beginner. Fire up a project yourself and start learning that way. There\u2019s a similar video called Learn Go in 12 Minutes with nearly the exact same list of topics", "likes": 0}}, {"topLevelComment": {"author": "Uknow 1hunna", "text": "Recommendation", "likes": 0}}, {"topLevelComment": {"author": "Uknow 1hunna", "text": "Any books recommended", "likes": 0}}, {"topLevelComment": {"author": "David JMOF", "text": "Great", "likes": 0}}, {"topLevelComment": {"author": "Stephen dela Cruz", "text": "Mike... You are #Legend\ud83d\udc51\u2728\ud83d\udc4dTHANK YOU for literally guiding me to other side of the shore... where new coders are born!\ud83d\ude0c", "likes": 0}}, {"topLevelComment": {"author": "Chinmay Purav", "text": "The doctor who reference resonated with me, though I have seen the revived series.", "likes": 0}}, {"topLevelComment": {"author": "Ryan Nemeth", "text": "Is this really all there is to Golang? It took my ~6 months before I had a good grasp on C#. I feel like I know Go and it only took ~6 hours!! crazy", "likes": 0}}, {"topLevelComment": {"author": "Abdurrahman Osman", "text": "The tutorial explanation is so good but unfortunatly there are a lot of things are deprecated and out of date in this tutorial.", "likes": 0}}, {"topLevelComment": {"author": "Ivan Zinovyev", "text": "Hey! Thank you for this amazing tutorial \ud83d\ude4c\nI'm currently on this point https://youtu.be/YS4e4q9oBaU?t=7900 and I was wondering if we can do it this way to keep the slice `a` immutable (even without looping operator):\n```\n\tvar b []int\n\tb = append(b, a[:2]...)\n\tb = append(b, a[3:]...)\n```", "likes": 0}}, {"topLevelComment": {"author": "Ram Gopal", "text": "1:41:30 Can someone please explain how bit shifting of iota value works? I understood for KB the value of iota would be 1 and so it 1 * 2 power 10. But for MB isn't the iota value supposed to be 2. So wouldn't it equals 1 * 2 power 20 ? I did not get how the instructor mentioned it would be 1 * 2 power 100", "likes": 0}}, {"topLevelComment": {"author": "Christopher Salisbury", "text": "What about Ken Thompson's involvement with C?  Didn't he work on that language too?", "likes": 0}}, {"topLevelComment": {"author": "Andrey S", "text": "2009 ?????? Log message says that", "likes": 0}}, {"topLevelComment": {"author": "Kar Brar", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "SharmaJiKaLadka", "text": "33:03 If anyone faced some error like \"System cannot find the file specified\" just use \\ rather than / for pathing, this might be a windows thing. I too faced this error, I'm using windows.", "likes": 0}}, {"topLevelComment": {"author": "Mohammad Sharif", "text": "How did he got rid of the last two vars at 43:15?", "likes": 0}}, {"topLevelComment": {"author": "Flight Mine", "text": "4:35:19 you say it promotes it to the heap -- from my testing this doesn't seem to be right; if you look at the addresses it appears to promote the variable to the stack-frame of the caller, which maybe makes much more sense for it to do anyway.", "likes": 0}}, {"topLevelComment": {"author": "Nick Eyemaker", "text": "There is a problem around 6:34:25, \nin logger function in case <-doneCh: should be return statement instead of break, break does nothing there, you still have infinite for loop", "likes": 1}}, {"topLevelComment": {"author": "Belhadjer Samir", "text": "I really appreciate your well explained tutorial. Well done.", "likes": 0}}, {"topLevelComment": {"author": "Thalib Muhammad", "text": "i watched carefully the whole 6:36:57, i made it!!!!!", "likes": 0}}, {"topLevelComment": {"author": "myPalabok", "text": "can we not use \"fmt.printf\" and instead use \"printf\" ?\n\nlike in C++, one can do std::cout or just cout.", "likes": 1}, "replies": [{"author": "Zoro98", "text": "you can just use Print() now", "likes": 0}]}, {"topLevelComment": {"author": "Nando", "text": "I finished this course, and its exceptional, therefore I did a little research and noticed Mike has tons of small courses in Pluralsight, do they add much value to this tutorial, any repeats? Anyone who has done them, please comment ! Thank you and thanks to Mike !", "likes": 2}}, {"topLevelComment": {"author": "S H A K I L", "text": "48:20", "likes": 0}}, {"topLevelComment": {"author": "Bradley Burgess | organist & pianist", "text": "2:12:26\n\nCouldn't you achieve this without a loop via:\n```\na := []int{1, 2, 3, 4, 5}\nb := append([]int{}, a...)\nb = append(b[:2], a[3:]...)\n```", "likes": 0}}, {"topLevelComment": {"author": "Bradley Burgess | organist & pianist", "text": "Excellent video! 1:45:05 absolutely blew my mind. So clever.", "likes": 0}}, {"topLevelComment": {"author": "P l", "text": "a := 10 // 1010\n\tb := 3 // 0011\nwhy fmt.Println(a &^ b) return 8? \nisn't it supposed to be 4? since it's 0100?", "likes": 1}}, {"topLevelComment": {"author": "Matthew Bartholomew", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "g g", "text": "15:20 lmao \"feempt\" never heard anyone say that, always f.m.t. sure glad you say the abbreviation as well", "likes": 0}}, {"topLevelComment": {"author": "Alexander Schwaighofer", "text": "2:12:38 There is no need to loop over the underlying array of a on your own.\nJust use built-in go tools:\n\na := []int{1, 2, 3, 4, 5}\n// Make a temporary slice so that the underlying memory of\n// slice a will not be tampered with\ntmpSlice := make([]int, len(a), cap(a))\n// Now copy all contents from a to tmpSlice\ncopy(tmpSlice, a)\n// Work with tmpSlice instead of a\nb := tmpSlice[1:len(a)-1]\nc := append(tmpSlice[:2], tmpSlice[3:]...)\n\nOther than that, I want to say thank you for this amazing tutorial and introduction to the Go Programming Language! \nIt is unbelieveable that you provide great content like this for free!", "likes": 0}}, {"topLevelComment": {"author": "Arthex", "text": "I just used *sudo apt install golang* and it let me avoid all the trouble/efforts.", "likes": 1}}, {"topLevelComment": {"author": "Zeeshan Riyas", "text": "but c++ is low level language", "likes": 0}}, {"topLevelComment": {"author": "Laya", "text": "func FetchJoke(url string) (joke ChuckNorrisJoke, err error) {\r\n    // your code here\r\n    res, err := http.Get(url)\r\n    if err != nil {\r\n        fmt.Println(\"Cannot connect to server\", err)\r\n        return joke, err\r\n    }\r\n    body, err := ioutil.ReadAll(res.Body)\r\n    if err != nil {\r\n        fmt.Println(\"Cannot catch content\", err)\r\n        return joke, err\r\n    }\r\n    res.Body.Close()\r\n    var resp ChuckNorrisResponse\r\n    err := json.Unmarshal(body, &resp)\r\n    if err != nil {\r\n        return joke, err\r\n    }\r\n    joke := resp.Value\r\n    return joke,err\r\n}\r\n\r\nfun,err := FetchJoke(url)\r\nif err != nil {\r\n    fmt.Println(err)\r\n} else {\r\n    fmt.Println(fun.Joke) \r\n}", "likes": 0}}, {"topLevelComment": {"author": "Laya", "text": "if len(list1) != len(list2) {\r\n        err = fmt.Errorf(\"Error: Slices have different length!\")\r\n        return\r\n    } else if len(ops) == 0 {\r\n        err = fmt.Errorf(\"Error: the slice of operations is empty!\")\r\n        return\r\n    }\r\n    for x := 0; x < len(list1); x++ {\r\n        var number float64\r\n        var numbers []float64\r\n        for y := 0; y < len(ops); y++ {\r\n            opers := ops[y]\r\n            number := opers(list1[x],list2[x])\r\n            numbers = append(numbers, number)\r\n//             fmt.Println(numbers)\r\n        }\r\n        result = append(result, numbers)\r\n    }\r\n    return\r\n}", "likes": 0}}, {"topLevelComment": {"author": "Andrew Wilkes", "text": "Very good explanation of the difference between Arrays and Slices, I didn't get that when I first studied Go.", "likes": 0}}, {"topLevelComment": {"author": "Aqil Kaz", "text": "Ok faham,terima kasih.", "likes": 0}}, {"topLevelComment": {"author": "Bello Oluwasegun", "text": "Thanks for this tutorial, i am kinda new...can this be used for the present version of go?", "likes": 0}}, {"topLevelComment": {"author": "Shawn", "text": "Generally a really great and informative video. In the last 'select' example code, you can actually remove the time.Sleep call. Since you already put a message to the doneCh.", "likes": 0}}, {"topLevelComment": {"author": "NotSoEasy", "text": "https://youtu.be/hBQpXzhYBHA", "likes": 0}}, {"topLevelComment": {"author": "NotSoEasy", "text": "https://youtu.be/9qbtSRvIOqs", "likes": 0}}, {"topLevelComment": {"author": "NotSoEasy", "text": "https://youtu.be/9qbtSRvIOqs", "likes": 0}}, {"topLevelComment": {"author": "-", "text": "So what I heard is true, Go does make concurrency one of its main focuses.\nBut there are some problems:\nFirstly, async and await constructs in my experience, tend to be better than pure concurrency in a lot of cases. It is much safer to make the concurrency explicit by use of async-await rather than leave it to the scheduler.\nFurthermore, go does not seem to distinguish between threads and processes. In Python, there is the threading module and the multiprocessing module. This distinction tends to be very useful.\nThe scheduler is doing too much in my opinion. The programmer should be allowed to have more control over concurrency.", "likes": 0}}, {"topLevelComment": {"author": "Jaap van der Velde", "text": "I really appreciate your well-crafted examples, that allow you to explain several concepts organically off of a single and simple example. Well done.", "likes": 10}}, {"topLevelComment": {"author": "Suehiro Taihoku", "text": "the AND NOT part 1:06:49 is wrong", "likes": 0}}, {"topLevelComment": {"author": "beannie", "text": "Out of all numbers you picked two that add to 69. Well played", "likes": 0}}, {"topLevelComment": {"author": "Asutosh Ghanto", "text": "if you would have told a little more detail about windows it would be helpful", "likes": 0}}, {"topLevelComment": {"author": "Abhilash Kulkarni", "text": "Thanks for an amazing video! Clearly explained all the concepts and deeper nuances!", "likes": 38}}, {"topLevelComment": {"author": "Ishaan Rajpal", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"author": "Hi Everybody", "text": "I can't follow this because I'm diabetic and my eyes just can't see with white or yellow backgrounds.  It's far too painful.  Anyone know of any golang tutorials that stick with black or dark backgrounds?", "likes": 0}, "replies": [{"author": "AHMED AGHADI", "text": "Can't you use some software or method by which you can flip a particular color or change the color to other one on the screen or download the video and do it yourself by any video editing software if possible.", "likes": 0}]}, {"topLevelComment": {"author": "Stepan Rogonov", "text": "The most cleanest video course I've ever seen! Much thanks!", "likes": 0}}, {"topLevelComment": {"author": "Rodrigo Vazquez", "text": "Thanks for the high-quality content!  A very well-designed introduction to Golang congrats to the instructor. I will continue with the Eleven GO projects tutorial, thanks FreeCodeCamp!", "likes": 0}}, {"topLevelComment": {"author": "Sachiiinnnn", "text": "Managed to complete the course, in 5 days\nit is packed with full of information but at times you will find it that it is not for a complete beginner, and do not get overwhelmed by it, just keep trying or note the basic of those tough topics, you will understand things with time,\nFew examples could have been much simplified, but hats off to the instructor, and thanks for the amazing course.", "likes": 2}, "replies": [{"author": "Sachiiinnnn", "text": "02:42:21", "likes": 0}]}, {"topLevelComment": {"author": "Rekha Kaushik", "text": "Nice video", "likes": 0}}, {"topLevelComment": {"author": "muhammed midlaj", "text": "Superb tutorials thank you", "likes": 0}}, {"topLevelComment": {"author": "Kay\u0131p Ruh", "text": "5:10:30 sir don't you have any easier method to explain this, for the sake of god", "likes": 0}}, {"topLevelComment": {"author": "Moobert", "text": "Thanks", "likes": 2}}, {"topLevelComment": {"author": "R C", "text": "18:15 - MAC OS X: just do \"brew install go\" for latest version :)", "likes": 0}}, {"topLevelComment": {"author": "disney 2", "text": "The hell. How is this for absolute beginner", "likes": 0}}, {"topLevelComment": {"author": "Mr. Random", "text": "Jesus, so much knowledge. And articulated so well.", "likes": 1}}, {"topLevelComment": {"author": "Austen Who", "text": "The size value to make(map[T]T, size) is used to provide a hint to which hashing algorithm is used to make the map. Just like slices are resized when overflowing the underlying array, maps are resized when exceeding the range of the hashing algorithm. This is expensive because all keys have to be rehashed with the new algorithm. Specifying the size you expect at initialization can avoid an expensive copy operation.", "likes": 0}}, {"topLevelComment": {"author": "Chris Joslin", "text": "You are mispronouncing \"Pertwee\". It is \"Pert'wee\" not \"Per'twee\".\nOh, and good course.", "likes": 0}}, {"topLevelComment": {"author": "Bruh", "text": "2:08:46 python calls it a \"splat\" operator", "likes": 0}}, {"topLevelComment": {"author": "Pedro Reis", "text": "Best tutorial so far, thank you!", "likes": 0}}, {"topLevelComment": {"author": "Nuclear Noodles Man", "text": "1:31:50 Nice!", "likes": 0}}, {"topLevelComment": {"author": "ZhongShuai Qin", "text": "I'm graceful to watch such a wonderful go beginning class,it's really helpful and tidy. Love from China", "likes": 0}}, {"topLevelComment": {"author": "Giulio Ganzerli", "text": "1:18:23 UTF-32 is fixed length enconding. So every symbol in UTF-32 can and will be 32 bits long. The others, like UTF-8 and UTF-16 are variable length and will use more bits only if necessary.", "likes": 1}, "replies": [{"author": "billuh", "text": "Ya I noticed the incorrect explanation on that too.", "likes": 0}]}, {"topLevelComment": {"author": "Yash Kalia", "text": "4:33:00 in the function parameters how is it that the compiler can differentiate between a parameter before the variadic parameter (...int) but not one after the parameter. Should'nt it also be unable to differentiate between any int parameters placed before the variadic parameters and the variadic parameters after it? So isn't the issue that if the 2 data types are different then it can differentiate for sure regardless of if the other parameter is before or after a variadic parameter? And if it is the same then it cannot be sure if the other parameter is part of variadic parameter or not regardless of position?", "likes": 0}}, {"topLevelComment": {"author": "Mirza Mustafa", "text": "Trust me this can be improved.", "likes": 0}}, {"topLevelComment": {"author": "ricky xiang", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "Don Smith", "text": "Thanks, this was a great introduction to the language.", "likes": 0}}, {"topLevelComment": {"author": "Takoyaki-sama", "text": "How\u2019s unsigned different from signed integer? I tried looking it up on the internet but couldn\u2019t find a concrete answer.", "likes": 0}}, {"topLevelComment": {"author": "Jeremy Ansel", "text": "The setup in this video is outdated and it was a nightmare for me to get started. The coding content is great though, so thanks a lot! I noticed that at 2:58:03 there's a mistake with the logic: returnTrue() returns true, so the result of the logical or is true, not false as you say.", "likes": 0}}, {"topLevelComment": {"author": "Jiwook Kim", "text": "Iota freaked me out", "likes": 1}, "replies": [{"author": "Caio Fascina", "text": "Me too, especially with bit shifting.", "likes": 0}]}, {"topLevelComment": {"author": "Daming Lu", "text": "2:06:14 now cap and len are both 1 (go 1.18)", "likes": 0}}, {"topLevelComment": {"author": "uchiha itachi", "text": "1:17:01", "likes": 0}}, {"topLevelComment": {"author": "John Doe", "text": "The instructor sounds like Bill Gates", "likes": 0}}, {"topLevelComment": {"author": "Shmeleff", "text": "GREAT TUTORIAL", "likes": 0}}, {"topLevelComment": {"author": "Joe Hsiao", "text": "What do you mean \"consume an interface\"?", "likes": 0}}, {"topLevelComment": {"author": "Phi Coding", "text": "1:31:50 Nice", "likes": 0}}, {"topLevelComment": {"author": "Phi Coding", "text": "Golang is pretty poggers.", "likes": 1}}, {"topLevelComment": {"author": "DreamPop", "text": "I have 2 files, i cant execute the 2 cuz isn't a main package\n\nHow i can execute another go file", "likes": 0}}, {"topLevelComment": {"author": "Brent Fowler", "text": "I love that you show how to install go even though you can more easily teach people with the playground. Every other tutorial and book I've read starts out with the playground and that's where I'm out. I'm not looking for what's expedient, I'm looking to learn what is correct and whole. I get the convenience of it, and I can respect an instructor who is using it in their videos / books. But show how to install go first for those who aren't just in a rush. Otherwise I dropped the book or left the tutorial because it makes me question what else they are doing in the code that is simply expedient while not technically the best.", "likes": 0}}, {"topLevelComment": {"author": "tejas Mahakalkar", "text": "is there any github repo link of example?", "likes": 1}}, {"topLevelComment": {"author": "Emilio Bf", "text": "Thanks so much for this amazing tutorial \ud83d\udc4d\nWe can also declare the identity matrix like this (1:55:43):\nidentityMatrix := [3][3]int{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}", "likes": 0}}, {"topLevelComment": {"author": "Domo", "text": "what is \"Interchangeability\" mean? Anyone ?", "likes": 0}}, {"topLevelComment": {"author": "Sleeping", "text": "thx", "likes": 0}}, {"topLevelComment": {"author": "\u05e0\u05d9\u05e6\u05df \u05de\u05d2\u05d3\u05dc", "text": "1:31:40 nice", "likes": 0}}, {"topLevelComment": {"author": "BinarySimple", "text": "var i int8 = 127\r\n\tvar j int8 = 127\r\n        fmt.Printf(\"%v %T\\n\", i+j, i+j)\n\n        -2 int8", "likes": 0}, "replies": [{"author": "AHMED AGHADI", "text": "It's overflow bro", "likes": 0}]}, {"topLevelComment": {"author": "pyaocy", "text": "5:06:30 checkpoint #4", "likes": 0}}, {"topLevelComment": {"author": "pyaocy", "text": "3:32:55 check point #3", "likes": 0}}, {"topLevelComment": {"author": "pyaocy", "text": "checkpoint #2 3:03:03", "likes": 0}}, {"topLevelComment": {"author": "Jim Shtepa", "text": "at 2:57:58 returnTrue function evaluates to true. why are you saying that none of the expressions evaluate to true?", "likes": 0}}, {"topLevelComment": {"author": "Mohamed Abd ELsalam", "text": "What Go needs is function parameter default values and struct member default values.", "likes": 0}}, {"topLevelComment": {"author": "pyaocy", "text": "1:31:58 check point so i can continue later", "likes": 0}}, {"topLevelComment": {"author": "Jim Shtepa", "text": "at 1:41:30 you explain that MB will be equal to 1 multiplied 2 to the 100th power. Why is it not 2 to the 20th power instead? iota is 2 at that point and when you multiply 10 by 2 the result is 20 not 100. Am I missing something?", "likes": 0}, "replies": [{"author": "AHMED AGHADI", "text": "It's his mistake. Anyone else also had pointed this out.\nAnyways, one can also verify by doing it.", "likes": 0}]}, {"topLevelComment": {"author": "Stephen Chitsulo", "text": "I am new to golang and I have a problem. I was trying to go build on my first website but I keep finding this error 'Fileserver not declared by http'. I have tried with the little knowledge i have to solve it but I have failed. Any help please", "likes": 0}}, {"topLevelComment": {"author": "Tyler Kin", "text": "Awesome tutorial. Keep up the good work! This really helped me :)", "likes": 0}}, {"topLevelComment": {"author": "Lou", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "shid.account", "text": "best", "likes": 0}}, {"topLevelComment": {"author": "Jay Jay", "text": "I slept on Go for so many years. I stuck with C. Now I wish I'd have learned Go a long time ago. I've lost so much time using C.", "likes": 1}}, {"topLevelComment": {"author": "Basel Bader Eddin", "text": "i was wondering... how do we do the part where we set up a development environment in windows?", "likes": 0}, "replies": [{"author": "Basel Bader Eddin", "text": "and it did not work might i add", "likes": 0}, {"author": "Basel Bader Eddin", "text": "can i just use WSL? because that is what i did", "likes": 0}]}, {"topLevelComment": {"author": "Joseph Eka", "text": "Please I can't install my Go apk, any help.?", "likes": 0}}, {"topLevelComment": {"author": "Oz Yavin", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "PBKB", "text": "Just finished the course. Simply awesome. I now have a big project with all the code from this to use as my notes for when I forget something in Go. Thank you for the education! Will start now by building a journaling app for myself in Go :D", "likes": 3}, "replies": [{"author": "0xRedPill", "text": "I am starting this course today mate", "likes": 0}]}, {"topLevelComment": {"author": "Amit Dixit", "text": "a = append(a, 1) fmt.Printf(\"Length %v \\n\", len(a))\r\n\tfmt.Printf(\"Capacity %v\\n\", cap(a)) always gave mw same length and capacity", "likes": 0}}, {"topLevelComment": {"author": "Adrian Nuske", "text": "+/- 9 million billions. You're welcome", "likes": 0}}, {"topLevelComment": {"author": "anonymous", "text": "Hai saya dari Indonesia\nSaya sangat menyukai video anda, tapi saya terkendala dengan subtitle, semoga kedepannya di tambahkan subtitle bahasa Indonesia\ud83d\udc4d\nTerima kasih atas ilmunya\ud83d\ude4f", "likes": 0}}, {"topLevelComment": {"author": "Aneesh Bhave", "text": "go syntax is so unnecessary. it tries not to be verbose but it just ends up being stupid", "likes": 0}}, {"topLevelComment": {"author": "iskoibuan", "text": "Is this still good for 2022?", "likes": 0}}, {"topLevelComment": {"author": "Hanyang Lee", "text": "1:07:04  8 is 0b1000 not 0b0100. a &^ b is probably a & (a ^ b)", "likes": 0}, "replies": [{"author": "AHMED AGHADI", "text": "Its \"a & ~b\" that is \"a And Not b\"", "likes": 0}]}, {"topLevelComment": {"author": "GN Vageesh", "text": "This course got my for GoLang.\nHow about an updated course? Would be helpful", "likes": 0}}, {"topLevelComment": {"author": "Sanjeev Kumar Sahani", "text": "today start learning go(07/03/2022)", "likes": 0}}, {"topLevelComment": {"author": "Kirubel Adamu", "text": "Now I am a Go master", "likes": 0}}, {"topLevelComment": {"author": "Toni", "text": "\u2b50 Course Contents \u2b50\n\u2328 (0:00:00) Introduction \n\u2328 (0:16:57) Setting Up a Development Environment\n\u2328 (0:35:48) Variables\n\u2328 (0:57:05) Primitives\n\u2328 (1:26:29) Constants\n\u2328 (1:47:53) Arrays and Slices\n\u2328 (2:17:20) Maps and Structs\n\u2328 (2:48:00) If and Switch Statements\n\u2328 (3:21:17) Looping\n\u2328 (3:41:34) Defer, Panic, and Recover\n\u2328 (4:03:57) Pointers\n\u2328 (4:21:30) Functions\n\u2328 (4:57:59) Interfaces\n\u2328 (5:33:57) Goroutines\n\u2328 (6:05:10) Channels", "likes": 1}}, {"topLevelComment": {"author": "Rahul Veer Singh", "text": "how is 0100 equivalent to 8?  01:07:05", "likes": 0}}, {"topLevelComment": {"author": "PBKB", "text": "The Slice part at 2:06:36 - the 2nd one gets capacity 1 with me. Guess it might be because they changed the logic in the Go version I am using (1.17.7)", "likes": 1}}, {"topLevelComment": {"author": "Edwin Chen", "text": "What an awesome tutorial! Thanks a lot for putting this together!", "likes": 0}}, {"topLevelComment": {"author": "Cutler Whitely", "text": "Amazing content, absolutely incredible. Also, your voice kind of sounds a lot like Sheldon from Big Bang Theory.", "likes": 0}}, {"topLevelComment": {"author": "meowmeow70", "text": "wow great job. thankyou", "likes": 0}}, {"topLevelComment": {"author": "FlightSG Gaming", "text": "So if I'm in Windows 10 do I need to do anything in the second segment of the video besides run the install file and install Visual?", "likes": 0}}, {"topLevelComment": {"author": "adem kriouane", "text": "I passed two days looking for a solution for an error occurred due to some setup issue and i find it here , thanx you saved my day", "likes": 0}}, {"topLevelComment": {"author": "Alejandro Tarafa Guzm\u00e1n", "text": "6 hour in 2x worth it! thanks for sharing...be well.", "likes": 0}}, {"topLevelComment": {"author": "Het Grote PSV", "text": "Thank u for this course. you're amazing! it will help a lot of IT students towards their studies!", "likes": 0}}, {"topLevelComment": {"author": "Ankit Khandelwal", "text": "Great Job!! Amazing video and must watch for an Go Beginner!! :)", "likes": 0}}, {"topLevelComment": {"author": "Renoistic", "text": "Thanks for explaining why Golang was made. So many introductions skip that part.", "likes": 0}}, {"topLevelComment": {"author": "Igor Micovic", "text": "Just one thing, at 1:08:18 2^3 / 2^3 is not 2^0, mathematically speaking this is what happens:\n\n(2^3) / (2^3) = 8 / 8 = 1\n\nWhen dividing powers of the same base number you can't get 0, unless first number is already 0. If what you said was true, and the computer did divide powers and then calculate the result, you would get 2^1 = 2, and not 2^0 = 1. Whichever way you choose to calculate this, result will be the same. I am just explaining math behind it, I guess you don't want a kid doing test wrong because he thought 3^7 / 3^7 = 3^0 :)", "likes": 0}}, {"topLevelComment": {"author": "Adam Bright", "text": "thank you, i slept well and learned a lot", "likes": 0}}, {"topLevelComment": {"author": "marcello42", "text": "coming from Java and looking for smth modern which might be a good choice for running some web services (not webpages) go seems really appealing since the syntax looks much more familiar compare to other languages you might look at (to me at least)", "likes": 0}}, {"topLevelComment": {"author": "Vladimir Popov", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "Arghyadeep Das", "text": "Can someone point to a resource to easily understand interfaces in Go? Kinda got confused here. Thanks!", "likes": 0}}, {"topLevelComment": {"author": "Leonardo Aguirre", "text": "Thanks a lot for this incredibly good tutorial!", "likes": 0}}, {"topLevelComment": {"author": "Mariano Kaimakamian", "text": "Thanks for this, very clear and \"nutritious\" for beginners... clearly, I will need time to dig in this new world nut this video helps a lot.", "likes": 0}}, {"topLevelComment": {"author": "Vasanth Kumar", "text": "@6:12:00 why does wg.add(2) should be inside the loop??", "likes": 0}}, {"topLevelComment": {"author": "Chris A.", "text": "Tip: If you are from a language like something from the C family and used to putting semicolons; what you can do is put semicolons in go too, like javascript; it is optional to put semicolons or not.", "likes": 0}}, {"topLevelComment": {"author": "Mk E", "text": "so go get is now deprecated, use go install instead", "likes": 0}}, {"topLevelComment": {"author": "Quoc Dat Phung", "text": "What's the difference between the capitalization of \"e\" in\nn = 13.7e72\r\nn = 2.1E14", "likes": 1}}, {"topLevelComment": {"author": "Kai Christenson", "text": "I sharted my pants and humpted my radiator", "likes": 0}}, {"topLevelComment": {"author": "Meganathan Balasubramaniam", "text": "thanks a lot;  Tutorial is nicely structured.. methodically channeled .. way to go !", "likes": 1}}, {"topLevelComment": {"author": "Eduardo Fabricio", "text": "Thanks a Lot !!! nice tutorial.", "likes": 0}}, {"topLevelComment": {"author": "ShadowStorm", "text": "i recommend watching this in 2x speed, you can finish the video quicker plus his voice is really slow", "likes": 0}}, {"topLevelComment": {"author": "Dustin", "text": "Decimal != Floating Point\n\nIf you need the behavior of Decimal, you should use an Integer and manage your decimal placement yourself.", "likes": 0}}, {"topLevelComment": {"author": "A J Wright", "text": "Exceptional video.", "likes": 0}}, {"topLevelComment": {"author": "Prachi Khandelwal", "text": "This is one of the best Tutorial available on youtube for Golang!", "likes": 0}}, {"topLevelComment": {"author": "Balaji Natarajan", "text": "Kudos for the instructor for using dark themed slides \ud83d\ude4f\ud83c\udffd", "likes": 1}}, {"topLevelComment": {"author": "Aleksander Mo", "text": "God how are you gonna say this is for beginners lmao, you are speaking way too fast and you are comparing things ive never heard of before... feel like ive understood nothing after 50 minutes. You are definitely not explaining issues for beginners as well... this is getting dumber and dumber every second, i have never commented a youtube video in my life, and i almost never dislike videos but this was infuriating lol", "likes": 0}}, {"topLevelComment": {"author": "Francisco Curdi", "text": "Awesome content. There are some things that could've been excluded in my opinion due to not being used regularly. But all in all very complete and clear.", "likes": 3}}, {"topLevelComment": {"author": "Harikrishnan CS", "text": "FAKE !!  -", "likes": 0}}, {"topLevelComment": {"author": "\uacf5\ubd80\ud574\uc7bc", "text": "My personal bookmark\nDay1 : 40:07", "likes": 0}}, {"topLevelComment": {"author": "Vegan Is the future", "text": "41:00  if I don't understand and never seen float32 etc doest that mean I need to learn some other program in order to start with Go first? Because I honestly didnt understand a single thing exept strings and variables", "likes": 0}}, {"topLevelComment": {"author": "Diban Pitchaimuthu", "text": "Hi author there is a mistake at 1:06:46 for \"&^\" operator where it should be when the first binary value is 1 and the second var binary value is 0 then only u get 1000 binary to get int 8.", "likes": 0}}, {"topLevelComment": {"author": "Andrew Ryabchenko", "text": "Sounds like Bill Gates is talking)", "likes": 0}}, {"topLevelComment": {"author": "dontry", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "Bodikhuu Tumurbaatar", "text": "Hello peoples", "likes": 0}}, {"topLevelComment": {"author": "Bryan Truong", "text": "Finished! Thank you for the tutorial. I do think it may be useful to have links to the code snippets so we can copy/paste the longer code examples. But great overall, thanks!", "likes": 2}, "replies": [{"author": "0xRedPill", "text": "I am starting this course today mate", "likes": 0}]}, {"topLevelComment": {"author": "Niyazi Y\u0131ld\u0131r\u0131m", "text": "you are the best, thank you", "likes": 0}}, {"topLevelComment": {"author": "Mohamed Taher", "text": "There is a small mistake in the 4rth part of the video. a &^ b = 1010 &^ 0100 = 1000 = 8. 0100 is 4 not 8.\nMany thanks for the overall effort you put in this. Hoping the best for you.", "likes": 0}}, {"topLevelComment": {"author": "Ravi Teja", "text": "It would be helping if you could post the code snippets you used while teaching on github or any other places.", "likes": 0}}, {"topLevelComment": {"author": "Arghyadeep Das", "text": "The content of this tutorial surpasses paid content. I specially enjoyed the defer, panic and recover section explanation, how he handled different situations to demonstrate their bit confusing working internals. But this was very well curated tutorial, and I learnt a lot from this. If someone made notes of this, either hand made or cheat sheet PDFs, I would really appreciate it!", "likes": 4}, "replies": [{"author": "D D", "text": "I am currently making them, send me your contact once I'm done I'll send you over", "likes": 0}]}, {"topLevelComment": {"author": "Azimjon Pulatov", "text": "Amazing tutorial, even though I already know enough Go, learnt a lot from this course. Thank you!", "likes": 0}}, {"topLevelComment": {"author": "Bryan Truong", "text": "sheesh the way he explained how to setup the dev environment is so confusing", "likes": 0}}, {"topLevelComment": {"author": "DancingStar", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"author": "Aaron Glenn", "text": "Any chance I can get a PDF with all the summaries? Thank you for the great video, incredibly high quality.", "likes": 0}}, {"topLevelComment": {"author": "Stampeder", "text": "I've also found that your example at 34:06 does not work either with the current version of Go v1.17.5 due to the use of pkg rather than modules.", "likes": 0}, "replies": [{"author": "Stampeder", "text": "The reason it fails is that import requires ( \"fmt\") instead of just \"fmt\".", "likes": 0}]}, {"topLevelComment": {"author": "Glaze", "text": "Adding labels to loops, wow that blew my mind", "likes": 0}}, {"topLevelComment": {"author": "Savan Navalgi", "text": "very very good crouse. simple. and easy to understand", "likes": 0}}, {"topLevelComment": {"author": "CriticalShow", "text": "go is awesome just like this tutorial", "likes": 0}}, {"topLevelComment": {"author": "Rog\u00e9rio Limas", "text": "Amazing video!!", "likes": 0}}, {"topLevelComment": {"author": "Bob Eskes", "text": "Thanks a lot for this excellent tutorial.", "likes": 0}}, {"topLevelComment": {"author": "Pietro", "text": "Gosh this programming language is beautiful and I can actually understand it.", "likes": 0}}, {"topLevelComment": {"author": "justwalker2", "text": "Bookmark 18:00", "likes": 0}}, {"topLevelComment": {"author": "Monke \ud83e\udda7", "text": "About to watch this through the whole school day", "likes": 0}}, {"topLevelComment": {"author": "CHITUS\ud83d\udc99\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b\u2e3b", "text": "Go naming conventions:\n- \"Names that are exported or package level variables should be clear enough that someone outside that source file should understand the meaning of it\"\nAlso Go:\n- Import (\n                      \"fmt\"\n)", "likes": 0}}, {"topLevelComment": {"author": "sadhguruXX", "text": "https://youtube.com/playlist?list=FLpxLUpO3ArlB83HFTN_yV0w", "likes": 0}}, {"topLevelComment": {"author": "Gao Fan", "text": "Perfect tutorial. Although I am not sure why Go lang is recommended for beginners cause it is easy to learn. As for me, Python, even JS looks easier than Go. No doubts, Go is versatile, but it is very easy to make mistake, since need to memorize a lot of things.", "likes": 0}}, {"topLevelComment": {"author": "Ryusaki", "text": "Thanks for this tutorial. No remove function for slices though? lol", "likes": 0}}, {"topLevelComment": {"author": "Skal Teamen", "text": "Python is slow? Just write a cpp lib for your heavy task. In more than 10 years of developing on python I made only 1 cpp lib for it to increase its  speed.", "likes": 1}}, {"topLevelComment": {"author": "R\u00e1fagan Abreu", "text": "Excelent tutorial!", "likes": 0}}, {"topLevelComment": {"author": "Linards Jubels", "text": "1:07:05 author is wrong because 0100 is not equal to 8, but 4", "likes": 0}}, {"topLevelComment": {"author": "Plainbringer", "text": "This is a bad tutorial for beginners new to programming, very unnecessary complexity with a lot of general programming knowledge required. \nAn actual beginner tutorial for people not only new to golang but to programming in general would be nice.", "likes": 1}, "replies": [{"author": "Agunbiade Basit", "text": "This is what I have been looking for..... He didn't explain it in a lame way for students to understand.... He explained it as if he was explaining to some Google engineer experts\n\nEspecially the interface part\n\nWhen I got there..... I skipped the remaining part of the video cause it was so confusing", "likes": 0}]}, {"topLevelComment": {"author": "Hargunbeer Singh", "text": "This tutorial is a lot better as compared to the go docs which are.... unorganised unlike rust docs.", "likes": 0}}, {"topLevelComment": {"author": "Dois Koh", "text": "1:07:00 For anyone else confused about this mistake regarding the &^ (AND NOT) operator also known as Bitclear.\n\nx &^ y is like literally doing x & (^y). You're AND-ing the first operand with the negation of the second operand. \n\nIn his example, it would be:\n1010 AND NOT(0011) \n= 1010 AND 1100\n= 1000 \n= 8 (base 10)", "likes": 21}, "replies": [{"author": "Marvin Espira", "text": "Thanks for this, I was almost lost", "likes": 0}, {"author": "rofagolu", "text": "I noticed that while watching the video and I was going to comment, but I checked first if someone had commented about it. Good catch!", "likes": 0}]}, {"topLevelComment": {"author": "Sidharth Dash", "text": "Great video. The speaker is too fast with the explanation. Tried using .75 playback speed. That helps", "likes": 0}}, {"topLevelComment": {"author": "AHMED AGHADI", "text": "1:41:31 not 2 to the 100 but 2 to the 20", "likes": 0}}, {"topLevelComment": {"author": "AHMED AGHADI", "text": "1:06:5  x &^ y means x & (~y) that is x AND ( NOT y ) thus we will get result equals to 1000 that is 8 and not 0100 that is 4.  BTW thanks a lot for the tutorial.", "likes": 0}}, {"topLevelComment": {"author": "MCjusticejuice", "text": "Great tutorial. I'm fairly new to go, but have some experience in other languages. For my understanding you explained the logical \"and not\" operator wrong, see 1:06:42\nThe result you get is in binary 0100, which is actually 4 not 8.\nSo the right way the \"and not\" operator works is the following:\na&(~b), so negate b first and then do the \"and\" operation, this leads to:\n1010 & 1100 = 1000 which is 8 :-)", "likes": 7}, "replies": [{"author": "Femi Alabi", "text": "Exactly.", "likes": 0}, {"author": "Daniel Benjamin", "text": "Thank you so much", "likes": 0}]}, {"topLevelComment": {"author": "np", "text": "In java, we specify memory jvm params like xmx, xms. In go, why there are no such params?", "likes": 0}}, {"topLevelComment": {"author": "Khaled Chawa", "text": "can someone please explain how to do all the exports on Mac, every time I try nothing happens and I end up having to terminate terminal because I can't exit bash_profile.", "likes": 0}}, {"topLevelComment": {"author": "Mikey Mike", "text": "Does anyone know what OS he is using?", "likes": 0}}, {"topLevelComment": {"author": "Zain Al-abdeen", "text": "your are just the best , thank you alot", "likes": 0}}, {"topLevelComment": {"author": "Ian", "text": "Take it from someone who has been teaching tech for 35 years... including public speaking, and even being a key note speaker on several occasions.  You have a remarkable talent for imparting information.  You are excellently paced, affable, informative, and a true gem.  Thank you.", "likes": 64}, "replies": [{"author": "Ian", "text": "@just a dude ... link please", "likes": 0}, {"author": "Feralz", "text": "is it worth watching, did you learn much?", "likes": 0}, {"author": "just a dude", "text": "I followed the Tour of Go which could be considered the K&R version of Go introduction, and I reviewed this video to help cement some concepts I was confused on (slices!) This video I would pay money for, it\u2019s really well made.", "likes": 2}]}, {"topLevelComment": {"author": "Curious_One", "text": "This is a nice video. But, Go is a funny language anyways...I am loving it.", "likes": 0}}, {"topLevelComment": {"author": "Rajesh Singh", "text": "Very nice explanation for all topics except Interfaces.", "likes": 0}}, {"topLevelComment": {"author": "shwetank shekhar", "text": "I never ever commented on any such video but I have to say this...I LOVE YOU BROO...such a nicely arranged and summarised in between video !!!!!\nOne can sit through your whole course at once if time allows...YOU ARE AWESOME !!!!!", "likes": 0}}, {"topLevelComment": {"author": "Sa3vis", "text": "Is there a tutorial for setting up a development environment on windows?", "likes": 0}, "replies": [{"author": "Shal Steven", "text": "Just install it with default settings. Then create go module init", "likes": 0}]}, {"topLevelComment": {"author": "braineedly", "text": "I don't understand yet what benefit of interface is\nbecause without even interface my program is still working and even cleaner\ncan anyone explain?", "likes": 0}}, {"topLevelComment": {"author": "Evade Flow", "text": "This is a fantastic introduction to Go\u2014*hank you*!", "likes": 0}}, {"topLevelComment": {"author": "Sachin Kumar", "text": "great work man! thank you for creating this.", "likes": 0}}, {"topLevelComment": {"author": "Abd", "text": "I love you guys, woow", "likes": 0}}, {"topLevelComment": {"author": "Linards Jubels", "text": "1:08:16 should be explained like this:\n a:=8 \na<<3 //8*2*2*2 = 64\n ONe more example:\na:=8\na<<4 //8*2*2*2*2  = 128", "likes": 0}}, {"topLevelComment": {"author": "Aqua", "text": "8:00 Interesting how they used Chinese for \"Hello World\" \uff08\u4e16\u754c\uff09\u3002I think it's the first time I've seen that", "likes": 0}}, {"topLevelComment": {"author": "Puru Mishra", "text": "0:32:00", "likes": 0}}, {"topLevelComment": {"author": "Good Evening Tech", "text": "Awesome course!", "likes": 0}}, {"topLevelComment": {"author": "Stefan Tasic", "text": "Thanks!", "likes": 0}, "replies": [{"author": "728 R", "text": "Hey fellow Novak fan", "likes": 0}]}, {"topLevelComment": {"author": "Listen Al Quran", "text": "Incredible overall performance\u2026 skip in advance", "likes": 0}}, {"topLevelComment": {"author": "EdiT ", "text": "learning Go after I got a copy of twitch source code", "likes": 1}}, {"topLevelComment": {"author": "Andrew Dodd", "text": "Amazing tutorial. Thank you.", "likes": 0}}, {"topLevelComment": {"author": "Gopal Mariyappan", "text": "1. @1.17.20\nbyte is alias for uint8  ( not uint8 is alias for byte )\n\n\nThanks for the Video", "likes": 0}}, {"topLevelComment": {"author": "YourOwnAzog\ud83c\uddfa\ud83c\udde6", "text": "So can I get a job after watching the course?", "likes": 0}}, {"topLevelComment": {"author": "JP", "text": "1:58:16 it would be nice to understand the 'slightly' difference of [1 5 3] and & [1 5 3]", "likes": 1}}, {"topLevelComment": {"author": "Abhishek Kothari", "text": "This has grown quite old for the present - Build does not work without go mod init. The go build is not straight forward anymore", "likes": 0}}, {"topLevelComment": {"author": "Shailesh Bangar", "text": "So far the best free tutorial available!", "likes": 0}}, {"topLevelComment": {"author": "Punith Ujwal Nayak", "text": "Thanks", "likes": 1}}, {"topLevelComment": {"author": "Christopher Phillips", "text": "Sometimes I swear I'm hearing Sheldon from BBT talking to me.", "likes": 0}, "replies": [{"author": "Arid Sohan", "text": "Hahaha..I know exactly what you're saying.", "likes": 1}]}, {"topLevelComment": {"author": "Null Fox", "text": "I've been curious about learning golang, is this tutorial still relevant for late 2021?", "likes": 0}}, {"topLevelComment": {"author": "UbermenschHoodRat", "text": "OSX 10.6.8 Snow Leopard supported? Java and Python are supported.", "likes": 0}}, {"topLevelComment": {"author": "Phuc Nguyen", "text": "you're watching a premium course made free on Youtube", "likes": 0}}, {"topLevelComment": {"author": "Saumitra Gautam", "text": "\u2764\u2764\u2764\u2764\u2764", "likes": 1}}, {"topLevelComment": {"author": "Saumitra Gautam", "text": "\u2764\u2764\u2764\u2764\u2764", "likes": 1}}, {"topLevelComment": {"author": "Saumitra Gautam", "text": "\u2764\u2764\u2764\u2764\u2764", "likes": 1}}, {"topLevelComment": {"author": "Arseni Buinitski", "text": "Spends 10 minutes on \"wow, in GO, if statement can actually have an else block!\" and next 10 minutes explaining each one of logical operators.\n...\nThen in 5 seconds tells that \"an increment operator is a statement, not an expression\" as if it should mean something for ppl who did not fell asleep during past sections :D\n\nP.S. great video, thanks a lot! very good and structured introduction (passed 3.5 hrs so far).", "likes": 0}}, {"topLevelComment": {"author": "Divij Jain", "text": "you didn't teach how to take user input", "likes": 0}}, {"topLevelComment": {"author": "Jesus Garcia", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Kamron", "text": "TOP GOLANG tutorial :)", "likes": 0}}, {"topLevelComment": {"author": "Sheru Loves", "text": "7 hours of great learning.. Thank you Mike & freecodecamp", "likes": 1}}, {"topLevelComment": {"author": "Tony W", "text": "Thanks", "likes": 1}}, {"topLevelComment": {"author": "Meet Shah", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Ritchiel Rez", "text": "I love Go. As my first language is C, Go is so similar with C. It's awesome!!", "likes": 2}}, {"topLevelComment": {"author": "Over", "text": "1:47:54", "likes": 0}}, {"topLevelComment": {"author": "Perschistence", "text": "Using Windows ,,Go install [My Github Link]\" generates an exe File under ,,C:\\Users\\[username[\\go\\bin\". Why is it not landing in my project bin folder, and what are the other apps this path contains?", "likes": 1}}, {"topLevelComment": {"author": "Nasrullah Husami", "text": "I watched this video, and I find English sub title is hiding many of the commands. Due to this subtitles I could not understand much of the things \n. Sorry", "likes": 0}}, {"topLevelComment": {"author": "Anant Bhasin", "text": "SERIOUSLY, THANK YOU!", "likes": 0}}, {"topLevelComment": {"author": "Ala'a Mezian", "text": "finally finished very insightful thanks for your effort", "likes": 0}}, {"topLevelComment": {"author": "Airen loves coffee \u2615", "text": "Thanks.\n(:", "likes": 0}}, {"topLevelComment": {"author": "Magid Elgady", "text": "Thanks", "likes": 1}}, {"topLevelComment": {"author": "Lemonadetv", "text": "Bruh linux user, what a pro", "likes": 0}}, {"topLevelComment": {"author": "Felipe Monroy", "text": "Hey mate, there's a mistake on 1:06:45. The operator &^ is AND NOT, which means you negate the second operand. So you would have 1010 & 1100 = 1000 = 8, you put 0100 and that's 4 not 8. Thanks for the video tho, it's great, good work.", "likes": 117}, "replies": [{"author": "vinolentia", "text": "Thanks! I spotted that and I just couldn't figure out what was going on. Thanks for explaining.", "likes": 0}, {"author": "Dassy Areg", "text": "Thought, it was just me. \ud83d\ude01 Everything is fine now.", "likes": 0}, {"author": "Avinav", "text": "thanks", "likes": 0}, {"author": "Joe Hsiao", "text": "I was debating whether it's you or the video is correct, then I gave a test of\nvar i:= 10  //1010\nvar j:= 14  //1110\nfmt.Println(i &^ j)\n\nAccording to the video the output should be 1, but the playground shows output 0, so you are correct.", "likes": 0}, {"author": "mingwei hu", "text": "agree with 1000", "likes": 0}]}, {"topLevelComment": {"author": "Ketan Chaudhari", "text": "4:34:05 return reference from funtion, shifts it to the heap.", "likes": 0}}, {"topLevelComment": {"author": "Saravanan S", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Babu George", "text": "Is it mandatory to set GOROOT ? I use Windows and if I set GOROOT path, go.exe breaks executing.", "likes": 0}}, {"topLevelComment": {"author": "Amogh Shendre", "text": "This is pure gold! I can't thank you enough. Changed the way I knew Go. I feel so confident now!!", "likes": 1}}, {"topLevelComment": {"author": "Rich M", "text": "I got so much out of the first 5 minutes of this video, answering some of the questions of why we need more programming languages. I would like to see a full video on more of the details of why computer languages change.", "likes": 0}}, {"topLevelComment": {"author": "cabc74", "text": "This is good stuff. PERIOD.", "likes": 0}}, {"topLevelComment": {"author": "Vaishakh Baragur Narasimhareddy", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Brain John", "text": "GOPATH and GOROOT configurations are depreciated.\n\nYou can use the GO module instead.\n\nFor example:\n\nmkdir go_app\ncd go_app\ngo mod init go_app", "likes": 7}}, {"topLevelComment": {"author": "Lights on Hidden Springs", "text": "\"Did everybody move out of Ohio?\"\n\nAs someone living there, I don't know many people who don't dream of that being the case.", "likes": 0}}, {"topLevelComment": {"author": "Amit Tanajirao Patil", "text": "Thanks a lot Michael!!, buying courses on pluralsight isn't bit affordable...it would be very great if you could release courses on udemy!!!!", "likes": 0}}, {"topLevelComment": {"author": "Ankan Basu", "text": "finally the good old C pointers \ud83d\ude0c\nmissed them in python", "likes": 0}}, {"topLevelComment": {"author": "Shivani Singh", "text": "54:57 i think you meant no public scope", "likes": 0}}, {"topLevelComment": {"author": "Kartikey Sahu", "text": "i := float32(5)\n\nTo make it float32 type instead of default float64 (i := 5.)", "likes": 0}}, {"topLevelComment": {"author": "Ritesh Agarwal", "text": "Thanks", "likes": 1}}, {"topLevelComment": {"author": "20ECE04 Prashant", "text": "57:12", "likes": 0}}, {"topLevelComment": {"author": "Ahnaf Shakil", "text": "i want my python script golang codded  multi thread algorithm 1000+ request in a second\r\nmy teligram id :@blackpanther1337\r\ni will pay don't worry", "likes": 0}}, {"topLevelComment": {"author": "Chris Chen", "text": "1:07:02, line 13 is wrong, the AND NOT result should be: 1000. It is indeed a & (^b), which is 1010(a) & 1100(^b) = 1000; also, it is not the opposite of OR. Correct me if I am wrong.", "likes": 1}}, {"topLevelComment": {"author": "P1aenkl3r", "text": "So many 42s :-- Are you present in multiple dimensions?", "likes": 0}}, {"topLevelComment": {"author": "Ashok", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Tyson Liu", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "AKHILI SV", "text": "SIR PLEASE CERTIFY PRASI\\", "likes": 0}}, {"topLevelComment": {"author": "AKHILI SV", "text": "00PLEASE CERTIFIED", "likes": 0}}, {"topLevelComment": {"author": "Kim Dominic", "text": "The best and comprehensive golang lecture I\u2019ve ever watched.", "likes": 0}}, {"topLevelComment": {"author": "ssshark slim", "text": "why not Erlang\uff1f\uff1f\uff1f", "likes": 0}}, {"topLevelComment": {"author": "Himanshu Kumar", "text": "I thought C++ is the fastest high level language", "likes": 0}}, {"topLevelComment": {"author": "jonah butler", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Deso Moncours", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Linda Murphy", "text": "There seems to be an error. 0100 is not 8 - at  https://youtu.be/YS4e4q9oBaU?t=4025", "likes": 0}, "replies": [{"author": "Linda Murphy", "text": "The &^ bitwise operator means \"clear.\" See https://yourbasic.org/golang/bitmask-flag-set-clear/", "likes": 0}]}, {"topLevelComment": {"author": "santhosh airody", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Konstantinos Kokkinopoulos", "text": "Thanks", "likes": 1}}, {"topLevelComment": {"author": "timo8887", "text": "1:07:04 why is binary 0100 = decimal 8? It is 4 I think", "likes": 0}}, {"topLevelComment": {"author": "Soley Pasban", "text": "Finished the course.\nReally nice explanation, thanks!", "likes": 1}}, {"topLevelComment": {"author": "Patrick Bossier", "text": "Danke!", "likes": 0}}, {"topLevelComment": {"author": "Vishant Rana", "text": "thanks!", "likes": 0}}, {"topLevelComment": {"author": "Aleksandar", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Vedant Madane", "text": "1:07:06 0100 in binary means 4 in decimal and not 8", "likes": 0}}, {"topLevelComment": {"author": "Soley Pasban", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Mingzhou Lin", "text": "The 0100 is 4 rather than 8. So what does &^ mean? why 3 &^ 10=8?", "likes": 1}}, {"topLevelComment": {"author": "Xiaoduo Xu", "text": "@5:47:14  why not put wg.Wait() in the for loop?", "likes": 0}}, {"topLevelComment": {"author": "Find", "text": "so good. Thank you!!", "likes": 0}}, {"topLevelComment": {"author": "\u0420\u0435\u043f\u0435\u0442\u0438\u0442\u043e\u0440 \u043f\u043e \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c\u0443 \u044f\u0437\u044b\u043a\u0443 \u043e\u043d\u043b\u0430\u0439\u043d", "text": "2:06:00 - why is  output different even though my code is an absolute copy?!! Specifically, it's about the changed slice capacity:\n\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\ta := []int{}\n\tfmt.Println(a)\n\tfmt.Printf(\"Length: %v\\n\", len(a))\n\tfmt.Printf(\"Capacity: %v\\n\", cap(a))\n\t\n\ta = append(a, 1)\n\tfmt.Println(a)\n\tfmt.Printf(\"Length: %v\\n\", len(a))\n\tfmt.Printf(\"Capacity: %v\\n\", cap(a))\n}\n\noutput: \n\n[]\nLength: 0\nCapacity: 0\n[1]\nLength: 1\nCapacity: 1", "likes": 1}}, {"topLevelComment": {"author": "Akshay Agrawal", "text": "I am from future, To prove I can tell you that Covid is a start of bioweapon wars.", "likes": 0}, "replies": [{"author": "Akshay Agrawal", "text": "I think you are from a different dimension. This is earth G2365", "likes": 0}]}, {"topLevelComment": {"author": "Superfast Reviews", "text": "How is 0100 equal to 8? Video timeline 1:07:05.\nWe should actually negate 3 and then do and operation. 1010 & 1100 is = 8 which go is printing on screen.", "likes": 0}, "replies": [{"author": "Julius Lee", "text": "0100 is 4 prolly just a mistake", "likes": 0}]}, {"topLevelComment": {"author": "Arecchi", "text": "This is obviously not for a complete noob like me. I can't get past min 24 \ud83d\ude2d", "likes": 0}}, {"topLevelComment": {"author": "HariKrishna Neela", "text": "@1:08:08", "likes": 0}}, {"topLevelComment": {"author": "echoptic", "text": "c AND cpp IS", "likes": 0}}, {"topLevelComment": {"author": "BRUH!", "text": "I love you free cod camp", "likes": 1}}, {"topLevelComment": {"author": "\uc784\uac74\uc6b0", "text": "1:06:35\n\nI love your lectures. Your explanation, however, about the operator &^ is wrong, I think, since the output is 8 (1000 binary) not 4(0100) as you explained . \nThe Go Lang Compiler executes like this:\n1) Negate b; 1100\n2) a & (b negated); (1010) & (1100) = 1000\n3) Output: 8\n\n\nI say GO! ^^", "likes": 1}}, {"topLevelComment": {"author": "Jems Naban", "text": "the best tutorial you can have, salute", "likes": 0}}, {"topLevelComment": {"author": "Abc", "text": "Java or go", "likes": 0}}, {"topLevelComment": {"author": "Muhammad Adil Naeem", "text": "Golang best framework for freelancing ?\nWhich framework I learn for golang \nAnyone guide me \nI am a new learner of golang language", "likes": 0}}, {"topLevelComment": {"author": "Muhammad Adil Naeem", "text": "This is according to latest 2021 course", "likes": 0}}, {"topLevelComment": {"author": "Javier Gonzalez", "text": "Why does go use such wide tabs? It makes the code much less readable in my opinion.", "likes": 0}}, {"topLevelComment": {"author": "GR", "text": "40:00", "likes": 0}}, {"topLevelComment": {"author": "ikram khan", "text": "(y)", "likes": 0}}, {"topLevelComment": {"author": "Dilipa Ranjan Dharmasiri", "text": "I've just completed the tutorial. This is very helpful and solved a number of my questions. Thank you very much ...", "likes": 0}}, {"topLevelComment": {"author": "DoubleM55", "text": "MSRootCACERTURL vs msRootCaCertUrl.\nI'm from java world, but I think this variable naming convention could have some problematic edge cases.", "likes": 0}}, {"topLevelComment": {"author": "Juan Carlos Garc\u00eda Medina", "text": "2:05:51 When I execute the code, capacity seems to be 1 instead of 2 :(", "likes": 0}}, {"topLevelComment": {"author": "Tareq Mahmud", "text": "52:31", "likes": 0}, "replies": [{"author": "Tareq Mahmud", "text": "don't mind me, I am learning", "likes": 0}]}, {"topLevelComment": {"author": "kyleds8888", "text": "Really great, straightforward tutorial until I got to interfaces. That example was a bit complex and harder to grasp for me.\n\nI recommend ;looking up \"Go by example interfaces\" for a more straightforward example.", "likes": 0}}, {"topLevelComment": {"author": "Ahmet Y\u0131ld\u0131r\u0131m", "text": "1m views do i have a chance WOW", "likes": 0}}, {"topLevelComment": {"author": "QAInsights", "text": "At 2:58:04 - Line 10 - it will return true because of returnTrue(), that is why it is printing \"the guest must be between 1 - 100\".", "likes": 1}}, {"topLevelComment": {"author": "Cory Taylor", "text": "I'm not sure I would advertise this as for beginners. Beginners to Go, perhaps. A lot of unfamiliar terminology that leads to confusion.", "likes": 3}}, {"topLevelComment": {"author": "xer xes", "text": "the command go build github.com/mygithubacc/firstapp output is no required module provides package github.com/mygithubacc/firstapp: go.mod file not found in current directory or any parent directory; see 'go help modules'  any suggestion?", "likes": 0}}, {"topLevelComment": {"author": "Victor Hazbun", "text": "Thank you for sharing your knowledge.", "likes": 0}}, {"topLevelComment": {"author": "Sean Flatley", "text": "Thanks so much.", "likes": 0}}, {"topLevelComment": {"author": "Web Pro", "text": "Please i am planning to switch from PHP to Go, but i need some help before diving in.\n\nThese are my questions/concerns below  \n1. Is go used for front end or back end development (Main issue here, no one is really talking about this)\n2. Can i host go website on cpanel shared hosting or it only works on cloud\n3. Can go be used for cron jobs (i use it a lot).\n4. Can Go work on root level to create emails address, subdomain etc (xml api2 does that for php)\n5. And finally is there a way to combine both go and php\n\nBest regards", "likes": 1}}, {"topLevelComment": {"author": "Bill Bob", "text": "I have been watching GoLang for over 2 years now.\nThe huge majority of code, almost all of it, is only being used at Google.\nIf I were to take a position coding GoLang, I would be shoe horned into a tech that has no demand outside Google.\nBesides, I find for over 99.9% of applications Python is better.", "likes": 0}}, {"topLevelComment": {"author": "shanmukh patel", "text": "Thank you so much for this course.\nFinished this course along with reading \"Head First Go\" side by side, \nand of course experimenting code blocks using VS code.\nOverall, it was fun and interesting.", "likes": 4}}, {"topLevelComment": {"author": "fgfanta", "text": "Very good pacing!", "likes": 0}}, {"topLevelComment": {"author": "4strodev", "text": "anyone can explain the purpose of the second parameter when we declare a map with make function?", "likes": 0}, "replies": [{"author": "4strodev", "text": "@Biginepalli Nagasai okay this explains a couple of things. This happens when you didn't read about data structures xd", "likes": 0}, {"author": "Biginepalli Nagasai", "text": "The map is similar to hash functions. They can even be considered similar to dictionaries of python which work on Hash tables. Many hash functions require the length of the hash table to perform better. If the second argument which represents the total number of elements in a map is provided the underlying hash function performs better. In an abstract view, you can not understand the power of that argument.", "likes": 0}]}, {"topLevelComment": {"author": "Soumyadeep Ghosh", "text": "If no size is allotted for a map then go internally allocate a small size and then according to key it increases that size. So I guess mentioning a size will help from those cases when internally it's trying to increase the size based on some logic. (This is what I understood from go builtin for map).", "likes": 0}}, {"topLevelComment": {"author": "Sabari Ram", "text": "at t=22455 at this point the error is from wait group, in the for loop we are adding 2  to the wait group but calling done once.", "likes": 0}}, {"topLevelComment": {"author": "Jason Davis", "text": "May God Bless and Protect everyone on earth", "likes": 1}, "replies": [{"author": "Jason Davis", "text": "And in all Universes", "likes": 0}]}, {"topLevelComment": {"author": "Jason Davis", "text": "Like the bar block", "likes": 0}}, {"topLevelComment": {"author": "Levi the Smasher", "text": "Excellent teaching!! \ud83d\ude0d\ud83d\ude0d", "likes": 0}}, {"topLevelComment": {"author": "Dilipa Ranjan Dharmasiri", "text": "thanks a lot ...", "likes": 0}}, {"topLevelComment": {"author": "dhruv shah", "text": "And Not explanation at 1:06:00 is wrong.  The operation first does NOT(3) = 1100 (if limiting to 4 bits) and then does AND(10, NOT(3)) = 1000 which is 8.", "likes": 0}}, {"topLevelComment": {"author": "hamza ali", "text": "RESPECT for this moment 1:31:39", "likes": 1}}, {"topLevelComment": {"author": "Quantum ", "text": "can anyone tell me how this language is better than python. I am a noob programmer and i would appreciate your insight. Thanks", "likes": 0}}, {"topLevelComment": {"author": "Yacyn CHERRADI", "text": "in 1:06:50 - &^ (AND NOT) there is a mistake because 0100 in Binary is equal to 4 in Decimal, but the output is 8 which is equal to 1000 in Binary.\na &^ b means AND_NOT(a, b) which is the same as AND(a, NOT(b))\nexample : \n10 is 1010\n2 is 0010\nso 10 &^ 2 is 1010 and 1101 which is equal to = 1000 which is as the output shows 8.", "likes": 0}}, {"topLevelComment": {"author": "Alp Tahta", "text": "Can someone help me to understand what he said at 1:43:55? how can he store 8 roles instead of 6 at there?", "likes": 0}}, {"topLevelComment": {"author": "jingying tt", "text": "where is subtitles or captions on this video?", "likes": 0}, "replies": [{"author": "jingying tt", "text": "I am bad at english", "likes": 0}]}, {"topLevelComment": {"author": "Danny Ralde", "text": "Can you please activate the automatic translation?", "likes": 0}}, {"topLevelComment": {"author": "Pulok", "text": "Superb tutorial", "likes": 1}}, {"topLevelComment": {"author": "GatekeeperAmps", "text": "Quick QUESTION for anyone that can HELP....For Windows Users, in Setting Up Environment, Does anything he says apply to us at all? Everything he is typing /usrs/ etc or /home/mike for example this is all linux folders correct? I wonder why he didn't say that this is just for linux users and windows users don't follow this? Any comments? I don't now what to do??? Export doesn't even work in CMD", "likes": 0}, "replies": [{"author": "Jacob Hinchliffe", "text": "did you manage to install Go?\non windows it should be automatic", "likes": 0}]}, {"topLevelComment": {"author": "Md Sultan Altamash Ali", "text": "This is a legendary tutorial. The instructor's way to explaining concepts is very clear , concise and engaging. For me, usually i never watch 6-7 hr long tutorial but this guy is not letting me leave it. Really loved it and appreciate your efforts. Thank you very much sir :) ! and Thank you free code camp.", "likes": 180}, "replies": [{"author": "Chinmay Chapla", "text": "+1", "likes": 0}, {"author": "I identify myself as a white African American", "text": "@Rock Raju\nYou need stop being pajit", "likes": 0}, {"author": "I identify myself as a white African American", "text": "I'm Indian\nBob's and vegana", "likes": 0}, {"author": "Rawb Mar", "text": "@Rock Raju Like everything in life if you want to be good at something you must practice, practice, practice my friend.", "likes": 2}, {"author": "Rock Raju", "text": "Your english too good. How bro I learning beginning of english. Can you suggest me tips to develop my english", "likes": 0}]}, {"topLevelComment": {"author": "Brother Caleb", "text": "Incredible language and tutorial. Kudos to the tutor for amazing pacing, use of examples and overall delivery,", "likes": 5}, "replies": [{"author": "Rock Raju", "text": "Are you American?", "likes": 0}]}, {"topLevelComment": {"author": "James Latief", "text": "kinda overwhelming when you are watching one concept being explained and you are bombarded with several ways of doing things. I think they should just display the best practice version of a slice, map or struct.", "likes": 1}, "replies": [{"author": "Jacob Hinchliffe", "text": "i totally agree!", "likes": 0}]}, {"topLevelComment": {"author": "Yusuf \u0130\u015fbilir", "text": "Thanks for tutorial", "likes": 0}}, {"topLevelComment": {"author": "Diego Naya", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"author": "Julius Macrohon", "text": "2:23:34 You mentioned that the ordering is not guaranteed but in the given example it looks as though the map just shifted and added the new value to the start. Was this just a coincidence and maps truly have undetermined ordering after modification?", "likes": 0}, "replies": [{"author": "Ivaylo Ivanov", "text": "In the older versions of go the order was undefined. In the newer versions after 1.12+ the maps are printed in key-sorted order.", "likes": 0}]}, {"topLevelComment": {"author": "Giuseppe T", "text": "Great course, thanks a lot Michael Van Sickle and FCC! Would be very nice to activate auto-generated english sub. Cheers!", "likes": 0}}, {"topLevelComment": {"author": "Edoardo La Greca", "text": "1:31:38 nice", "likes": 0}}, {"topLevelComment": {"author": "A Parkes", "text": "A different way to write 6:26:56 without the if and break statements (at least cleaner for me):\n\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sync\"\n\t)\n\nvar wg = sync.WaitGroup{}\n\nfunc main() {\n\tch := make(chan int, 50)\n\twg.Add(2)\n\t\n\tgo func(ch <-chan int) {\n\t\tfor i, ok := <- ch; ok ; i, ok = <- ch {\n\t\t\tfmt.Println(i)\n\t\t}\t\n\t\twg.Done()\n\t}(ch)\n\t\n\tgo func(ch chan<- int) {\n\t\tch <- 42\n\t\tch <- 27\n\t\tclose(ch)\n\t\twg.Done()\n\t}(ch)\n\twg.Wait()\n}", "likes": 0}}, {"topLevelComment": {"author": "W space mailbox", "text": "You sound like jay z", "likes": 0}}, {"topLevelComment": {"author": "jin liu", "text": "JAVA is the best program language\uff0chaha", "likes": 0}}, {"topLevelComment": {"author": "mohammad mujahid", "text": "Thank you for sharing so much knowledge.", "likes": 0}}, {"topLevelComment": {"author": "GoLang Beginners", "text": "Nice work :)", "likes": 0}}, {"topLevelComment": {"author": "Deepak Ugale", "text": "Please share ppt or short notes", "likes": 0}}, {"topLevelComment": {"author": "At time one o one", "text": "Php -> nodejs -> go -> ??", "likes": 0}}, {"topLevelComment": {"author": "Sushil Ingole", "text": "1:18:03 you always say last last, but it's never the last I see, but in hope of it being last you get our full attention and a good feeling lol...\ud83d\ude02", "likes": 0}}, {"topLevelComment": {"author": "ABHIRAMI SOUNDARARAJAN", "text": "@ 19:06 , the location mentioned is /usr/local/go   --> but my installation location is different, it is Documents/go-folder/go   --> will this affect setting up the environment or something?  kindly help me with this", "likes": 0}}, {"topLevelComment": {"author": "Ramiro Padr\u00f3", "text": "This course is amazing. I bought a GO course in udemy and had to refund my money cause it was so bad. Searching a little bit more I found this one and the way you explain is amazing !! Thanks for it !!", "likes": 6}}, {"topLevelComment": {"author": "Miles Liu", "text": "AAAAAAAAwesome!!!", "likes": 0}}, {"topLevelComment": {"author": "Shai Levi", "text": "at 01:07:06 there is a mistake where it says 0100 is 8 which is not true. 0100 is 4 and 1000 is 8.. so the bitwise calculation done is wrong.", "likes": 1}}, {"topLevelComment": {"author": "basbekjenl", "text": "Was going to apply to a golang job because I did learn a lot of C# in school but I lost all confidence... I still largely understand go from this video but to be able to work with it I'm panicking just thinking about how to answer questions. Could any anonymous internet user help me get confidence enough to apply at least? I want to try and apply even if I don't get the job, I think applying would be very helpfull for gaining confidence and maybe I could even be a usefull member of society. Considering I'm asking the internet I really hope someone will reply, please ask me golang questions and I will give the answer as I would give it on a interview. Thank you for reading my plea", "likes": 1}, "replies": [{"author": "Daniele", "text": "@basbekjenl I don't know why you mention C# in this -> but yes, you'll get an error: \"invalid operation: a + b (mismatched types int and int32)\"\nHave a nice day", "likes": 0}, {"author": "basbekjenl", "text": "@Daniele output would be an error int32 wouldn't be a valid type right? Unless it does treat it like any interger then 10 would be the output. So id say the ouput is a very panicked go compiler if only for the C# code", "likes": 0}, {"author": "Daniele", "text": "### Code \nvar a int = 4;\nvar b int32 = 6;\nfmt.Println(a+b)\n###\n\n\nWhat's the output?", "likes": 0}]}, {"topLevelComment": {"author": "Masood Khan Patel", "text": "The most friendly and comprehensive introduction to Golang for the beginner as well as experienced programmers", "likes": 2}}, {"topLevelComment": {"author": "Romulo Sendo Romulo", "text": "This is THE best go introductory course out there. Hands down", "likes": 0}}, {"topLevelComment": {"author": "Nima Talebi", "text": "Explanations are so clear that it's surprisingly easy to listen to this at anywhere from 1.5x to 2x without miss something or getting confused.", "likes": 2}}, {"topLevelComment": {"author": "Ana Bertini", "text": "I'm applying to a job that I'll work with Golang, this video is very useful, thank you so much", "likes": 1}}, {"topLevelComment": {"author": "Juan Francisco", "text": "Amazing tutorial. Thanks", "likes": 0}}, {"topLevelComment": {"author": "ANURAG", "text": "Is it okay to have a variable with the name URL?", "likes": 0}}, {"topLevelComment": {"author": "Every Thing Can Work", "text": "Hi, thanks for the video but can u put cc English auto generate, iam not a english speaker, i need a english sub. Very appreciate", "likes": 0}}, {"topLevelComment": {"author": "sahil shaikh", "text": "What about paths on windows do I have to create same paths", "likes": 0}}, {"topLevelComment": {"author": "Stef G", "text": "Great!", "likes": 0}}, {"topLevelComment": {"author": "IDK", "text": "1:16:38", "likes": 0}}, {"topLevelComment": {"author": "kate", "text": "the english pronunciation is super standard", "likes": 0}}, {"topLevelComment": {"author": "Hiten Shah", "text": "Very nice and explanatory. Just one comment:\nAt 1:06:48, the explanation of \"&^\" is not correct. In example \"10 &^ 3\" result is coming as 8. And its binary is \"1000\".", "likes": 1}}, {"topLevelComment": {"author": "simplify", "text": "Great tutorials on golang, which covered almost all key points of such language. Many thanks.", "likes": 0}}, {"topLevelComment": {"author": "acvKaZe", "text": "I'm trully grateful", "likes": 0}}, {"topLevelComment": {"author": "Mr Smith", "text": "Really awesome course if you want to get started learning GOlang... Many thanks for posting.", "likes": 0}}, {"topLevelComment": {"author": "earl bai", "text": "01:07:03 Why 0100 equals 8, can anyone help out here please?", "likes": 0}}, {"topLevelComment": {"author": "vansh verma", "text": "how did they learn the language themselves \ud83d\ude05\ud83d\ude13\nHATS OFF \u2764\u2764 great efforts man", "likes": 2}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}]}, {"topLevelComment": {"author": "Christopher", "text": "1:06:40 0100 is not 8 it is 4. My understanding of \"&^\" is that you reverse the second part 0011 to 1100, and then do the AND operation on both: 1010 AND 1100 = 1000 which is 8.", "likes": 0}}, {"topLevelComment": {"author": "Shambhav", "text": "As a person who does memory leaks, mismatching pointers, dangling pointers for performance and shorter code, when I saw that there was no pointer arithmetic on Go, I nearly deleted Go, before you said about \"unsafe\" package.", "likes": 0}}, {"topLevelComment": {"author": "Shambhav", "text": "OMG! Turns out I was using Embedding to force C into Object Oriented Programming, I didn't know what it was called but I used it all the time. I thought it was stupid and old but even Go uses it! But one thing I am sad about, I thought my method was unique... but it is not.", "likes": 0}, "replies": [{"author": "Shambhav", "text": "@Navjot Singh They're hacks. Other languages have OOP features but in C you have to do it manually. I like to say it in this way, because they're not hacks.", "likes": 0}, {"author": "Navjot Singh", "text": "Yeah, C although is not OO but there are \"hacks\" to make it act somewhat similar to OOP", "likes": 0}]}, {"topLevelComment": {"author": "Shambhav", "text": "Wow, Golang is simple and complex at the same time.", "likes": 0}}, {"topLevelComment": {"author": "Emre \u00c7intay", "text": "Hi, why we don't define type of wg. At line 8. At 5:44:26", "likes": 0}}, {"topLevelComment": {"author": "Arup Das", "text": "In 1:07:03 0100 = 4, why 8?", "likes": 0}}, {"topLevelComment": {"author": "Gowtham", "text": "Very nice vedio, I've learned golang from scratch with ur help, ur way of teaching was awesome. Love it", "likes": 0}}, {"topLevelComment": {"author": "Ibrahim Noor", "text": "Wanna learn this golang", "likes": 0}}, {"topLevelComment": {"author": "Angel", "text": "I watched all 6 hours, 39 minutes and 57 seconds. wow", "likes": 383}, "replies": [{"author": "Alexey Naidiuk", "text": "wathed it twice, btw", "likes": 0}, {"author": "Chris Keo", "text": "Lies", "likes": 0}, {"author": "Angel", "text": "@-write a project or something you'll enjoy!", "likes": 0}, {"author": "-", "text": "Just did it. Now I need to write something in Go so it stays in my brain.", "likes": 0}, {"author": "Tushar Singh Rajput", "text": "You must be very patient", "likes": 0}]}, {"topLevelComment": {"author": "Kejor", "text": "3:01:34 should be bigger than 0", "likes": 0}}, {"topLevelComment": {"author": "Sonic26 Flash", "text": "Wait this is very simular to java in my opinion", "likes": 0}}, {"topLevelComment": {"author": "ramomex1 cid", "text": "i dont see benefit to split the path", "likes": 1}}, {"topLevelComment": {"author": "Kastellan", "text": "Let's go.", "likes": 0}}, {"topLevelComment": {"author": "Sonic26 Flash", "text": "Im on windows \ud83e\udd26\u200d\u2642\ufe0f", "likes": 0}}, {"topLevelComment": {"author": "Sonic26 Flash", "text": "Heeeeeeeeeeeeey click bait you said 7 hours but it is 6 hours 39 minutes and 57 secounds but good video :D", "likes": 0}}, {"topLevelComment": {"author": "Prasoon Patidar", "text": "This is really an amazing introduction for programmers who are new to Go, but done python/c++ before. Thanks a lot for the video.,", "likes": 10}}, {"topLevelComment": {"author": "Hoorvash Nikoo", "text": "Thank you for this video. In 1:06:50 of the video, the 'a &^ b' is actually  'a & ~b'  which equals to 1000 not 100. 100 is 4 and 1000 is 8", "likes": 1}}, {"topLevelComment": {"author": "Kakhaber Vk", "text": "Great  tutorial", "likes": 0}}, {"topLevelComment": {"author": "blahdelablah", "text": "FYI, there's a small mistake around 1:07:00 , when a is 10 (1010 in binary) and b is 3 (0011 in binary), a &^ b is 8 (1000 in binary).", "likes": 1}, "replies": [{"author": "Juan Carlos Garc\u00eda Medina", "text": "10&3=2", "likes": 0}]}, {"topLevelComment": {"author": "Rafi Ahmed", "text": "\u2b50\ufe0f Course Contents \u2b50\ufe0f\r\n\u2328\ufe0f (0:00:00\u200b) Introduction \r\n\u2328\ufe0f (0:16:57\u200b) Setting Up a Development Environment\r\n\u2328\ufe0f (0:35:48\u200b) Variables\r\n\u2328\ufe0f (0:57:05\u200b) Primitives\r\n\u2328\ufe0f (1:26:29\u200b) Constants\r\n\u2328\ufe0f (1:47:53\u200b) Arrays and Slices\r\n\u2328\ufe0f (2:17:20\u200b) Maps and Structs\r\n\u2328\ufe0f (2:48:00\u200b) If and Switch Statements\r\n\u2328\ufe0f (3:21:17\u200b) Looping\r\n\u2328\ufe0f (3:41:34\u200b) Defer, Panic, and Recover\r\n\u2328\ufe0f (4:03:57\u200b) Pointers\r\n\u2328\ufe0f (4:21:30\u200b) Functions\r\n\u2328\ufe0f (4:57:59\u200b) Interfaces\r\n\u2328\ufe0f (5:33:57\u200b) Goroutines\r\n\u2328\ufe0f (6:05:10\u200b) Channels", "likes": 1}}, {"topLevelComment": {"author": "Mike Gleen", "text": "Haven't read all 800 comments, but at 1:07 your explanation of &^ is wrong. 0x0100 == 4 but the result of the operation is 8 which is 0x1000. Really just the smallest nit to pick; otherwise outstanding.", "likes": 0}}, {"topLevelComment": {"author": "Harry Bryant", "text": "I'm having some issues setting up the composite GOPATH as he did with golib and then code separately. I especially run into trouble when installing dependencies in VS Code because they get put in Users/my_username/go/pkg instead of Users/my_username/golib/pkg and I can't figure it out. Any similar issues?", "likes": 1}}, {"topLevelComment": {"author": "Abhishek Gautam", "text": "To me GO is a fusion of c++ and python XD", "likes": 0}}, {"topLevelComment": {"author": "Steen Sch\u00fctt", "text": "So what if your variable name is just an acronym, but you want it to be scoped to a package? Is the fix just as lazy as slapping whatever in front of it, or making the entire acronym lowercase?", "likes": 1}}, {"topLevelComment": {"author": "enji li", "text": "Great video. But for sure not for beginners (to CS). But great for beginners (to goLang)", "likes": 0}}, {"topLevelComment": {"author": "Jordan Cotter", "text": "4:42:15 despite this statement, I didn't see him pass or return any functions...did I miss something? (took me a while to actually get them to work in play.golang.org. They are still pretty fuzzy for me.)", "likes": 0}}, {"topLevelComment": {"author": "shubro chakroborty", "text": "what gprc ?", "likes": 0}}, {"topLevelComment": {"author": "Mia", "text": "BLANK", "likes": 0}}, {"topLevelComment": {"author": "Kenneth Cox", "text": "1:07:05 \n0100 is not 8, it\u2019s 4. The result would have to be 1000. If I\u2019m correct that operator, (&^) finds the bits that are in 10 AND NOT in 3.", "likes": 0}}, {"topLevelComment": {"author": "Zpay", "text": "Very good course \u2713", "likes": 0}}, {"topLevelComment": {"author": "Seikomega", "text": "1:31:39 nice", "likes": 0}}, {"topLevelComment": {"author": "P Ciprian", "text": "7:23 what you lose is reusability of libraries", "likes": 0}}, {"topLevelComment": {"author": "P Ciprian", "text": "5:34 not really. developers work with half a day time intervals", "likes": 0}}, {"topLevelComment": {"author": "P Ciprian", "text": "2:55 not really. c++ is very good with multithreading and concurrency", "likes": 0}}, {"topLevelComment": {"author": "P Ciprian", "text": "2:00 not sure why you complain about c/c++. also java is garbage", "likes": 0}}, {"topLevelComment": {"author": "\u62f3\u575b\u5feb\u8baf", "text": "you successfully sent me to sleep at the setting local environment part, and I just woke up", "likes": 0}}, {"topLevelComment": {"author": "Rogier van Doggenaar", "text": "at 1:07:00 you state that binary 0100 == 8, but it should be 4 right?", "likes": 0}}, {"topLevelComment": {"author": "SAIKAT KARMAKAR", "text": "knowing c really helps a lot . otherwise it would be very difficult to understand bcz it's totally different form other languages like python, js", "likes": 0}}, {"topLevelComment": {"author": "Mait Metelitsa", "text": "Amazing tutorial! Thanks!", "likes": 0}}, {"topLevelComment": {"author": "AL MAMUN KHAN", "text": "\u2764\u2764\u2764\u2764\u2764\u2764\u2764\u2764", "likes": 0}}, {"topLevelComment": {"author": "Bartosz Solowiej", "text": "0100 === 4 ... (!8) @1:07:02 S'ok, everything else is good so far.", "likes": 0}}, {"topLevelComment": {"author": "Babar Baig", "text": "Why do so many video makers use $2000 Apple laptops or virtual env setups to teach 'Hello world' tutorials?  Do they know who their audience are and what's their skill level?", "likes": 0}}, {"topLevelComment": {"author": "Jana", "text": "Why use a bizarre and difficult environment like virtual machine to tech Go, when you can download and install it directly on Windows.  Just makes it hard to learn for no good reason.  Thumbs down.  Switching to a Windows-based tutorial.", "likes": 1}}, {"topLevelComment": {"author": "Tiago Balogh", "text": "Great tutorial! Thanks!\n\nAbout the error \"no required module provides package <yourcodepath>firstapp: working directory is not part of a module\" when executing \"go build\", this article can help.\nhttps://medium.com/google-cloud/golang-before-after-modules-273b5a5df838 (before and after modules feature)", "likes": 2}, "replies": [{"author": "brus", "text": "Great article on mod-files and paths, Tiago. Thanks!", "likes": 0}]}, {"topLevelComment": {"author": "Valdi Stevanus", "text": "I'm most grateful for this video mainly because 3 years ago we didn't have this comprehensive and full video explaining about Golang", "likes": 0}}, {"topLevelComment": {"author": "Cat", "text": "Ken thompson this man is creating C , the mean go is serious language", "likes": 0}}, {"topLevelComment": {"author": "AvedisSimRacing", "text": "2:58:00 seems to be an error - returnTrue returns true which make all expression to be true and we even have a validation line printed in an output", "likes": 1}}, {"topLevelComment": {"author": "Ruy N\u00f3brega", "text": "Thank you for the huge course! Now talking about the language itself: for me, it seems that all previous discussions that modern languages had in their infancy were ultimately muted. Like, why would pass a f*ing copy of an array for a function as your default behavior? Primitives by value and objects by reference is the standard and trully is the best method. I'm from the time that this was being born so, I got the C era and it ultimately just made software maintenance more complicated.", "likes": 2}}, {"topLevelComment": {"author": "Anurag Malhotra", "text": "All the concepts in one go & that too wonderfully explained. Hail the Instructor & freeCodeCamp :)", "likes": 4}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}]}, {"topLevelComment": {"author": "Julia Montersino", "text": "Estoy buscando Backend Golang Developer para Argentina trabajo remoto, cv a : seleccionitspain@gmail.com, Asunto BGD", "likes": 1}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "thank you, \nI finished your tutorials in 6 days, \neven if I feel bored with the basics... even if I really didn't know most of them'\nI really just wanted to learn the basic and so on by building a Go lang web application to see the output on the web browser and database'\nI wish you have a web development tutorials in Go'\n\nagain, Maraming Salamat po'", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "in https://youtu.be/YS4e4q9oBaU?t=23337\n\nregarding the date time we got in the play.golang.org, I check the \"About\" link... \n\n\"In the playground the time begins at 2009-11-10 23:00:00 UTC (determining the significance of this date is an exercise for the reader). This makes it easier to cache programs by giving them deterministic output.\"\n\nRead more...\n\nAbout the Playground\n\nThe Go Playground is a web service that runs on golang.org's servers. The service receives a Go program, vets, compiles, links, and runs the program inside a sandbox, then returns the output.\n\nIf the program contains tests or examples and no main function, the service runs the tests. Benchmarks will likely not be supported since the program runs in a sandboxed environment with limited resources.\n\nThere are limitations to the programs that can be run in the playground:\n\nThe playground can use most of the standard library, with some exceptions. The only communication a playground program has to the outside world is by writing to standard output and standard error.\nIn the playground the time begins at 2009-11-10 23:00:00 UTC (determining the significance of this date is an exercise for the reader). This makes it easier to cache programs by giving them deterministic output.\nThere are also limits on execution time and on CPU and memory usage.\nThe article \"Inside the Go Playground\" describes how the playground is implemented. The source code is available at https://go.googlesource.com/playground.\n\nThe playground uses the latest stable release of Go.\nThe current version is go1.16.", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "in https://youtu.be/YS4e4q9oBaU?t=23257,\n\nwhat coming after the words...\n\n..., entry.severity, entry?\n\nI cannot drag the horizontal scrollbar there, because video nga pala iyan :D\n\nUPDATES:\n\nI try to call the: entry.message, and I got a result like yours' cool! now I am following it'", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "in https://youtu.be/YS4e4q9oBaU?t=23243\n\nI run it and no results...", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "in https://youtu.be/YS4e4q9oBaU?t=21197\n\nyou got 4 threads,\nplay.golang.org got 8 threads,\nwhile me, I got only 1 thread?", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "in https://youtu.be/YS4e4q9oBaU?t=21023\n\nI still  got an\n\nHello #1\nHello #2\nHello #3\nHello #4\nHello #5\nHello #6\nHello #7\nHello #8\nHello #9\nHello #10\n\nwith v1.16 of Go using VS code..\n\nUPDATES:\nbut when I used Go Playground (v 1.16 -may be, because it is the latest version of Go), like you I have a different results...", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "in https://youtu.be/YS4e4q9oBaU?t=20898\n\nI got an\n\nHello #1\nHello #2\nHello #3\nHello #4\nHello #5\nHello #6\nHello #7\nHello #8\nHello #9\nHello #10\n\nwithout modifying it,\nagain I am using Go 1.16 version...\n\nEDIT:\nbut when I try this on play.golang.org'\nI got a results like you...", "likes": 0}}, {"topLevelComment": {"author": "Yasir Karam", "text": "Michael what you've delivered in these 7 like hours, is what will never been delivered in 30 hours paid course, cheers.", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "in VSCode, the code was automatically reformatted from:\n\nfunc main() {\n\ti := 0\n\tfor ; i < 5; {\n \t\tfmt.Println(i)\n\t\ti++\n\t}\n}\n\nto:\n\nfunc main() {\n\ti := 0\n\tfor i < 5 {\n \t\tfmt.Println(i)\n\t\ti++\n\t}\n}", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "I accidentally run this code:\n\n\tfor i:=0; i<5; i = 1 +2{\n\t\tfmt.Println(i)\t\n\t}\n\nand produces infinite loop!\n\nI try this online, and the message is: timeout running program producing 37091 lines... same with if i = 50000\n\nI used to search the internet to stop the vscode from executing that code...", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "now I try for loop,\n< 1000000 in Go and PHP, and the faster is...\n\nI run PHP (nginx) first - host PC, then Go in VM, php script is still running, then go finished first'\nso wow!", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "in https://youtu.be/YS4e4q9oBaU?t=7554\n\nI am using v1.16\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\ta := []int{}\n\tfmt.Println(a)\n\tfmt.Printf(\"Length: %v\\n\", len(a))\n\tfmt.Printf(\"Capacity: %v\\n\", cap(a))\n\ta = append(a, 1)\n\tfmt.Println(a)\n\tfmt.Printf(\"Length: %v\\n\", len(a))\n\tfmt.Printf(\"Capacity: %v\\n\", cap(a))\n}\n\nmy output:\n\n[]\nLength: 0\nCapacity: 0\n[1]\nLength: 1\nCapacity: 1\n\nyours:\n\n[]\nLength: 0\nCapacity: 0\n[1]\nLength: 1\nCapacity: 2", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "well, well, well...\n\nnow, I got this message...\n\nworking directory is not part of a module, when I try to build it...", "likes": 1}, "replies": [{"author": "Tiago Balogh", "text": "Same here. Looking for an explanation about it on the documentation. Seems like module feature is newer than this tutorial (at least the begining) and could solve this problem.", "likes": 0}]}, {"topLevelComment": {"author": "Brijesh Shah", "text": "Pure Gold!", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "anyhow, I am using go1.16 and you are using go1.8rc3, is there any differences there in setting up the dev env?", "likes": 0}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "now I retry your code, and warning me \"mkdir /home/emp/golib/pkg: permission denied\" when I try your \"go get github.com/nsf/gocode\"\nI also tried to add sudo before \"go get github.com/nsf/gocode\", but it told me that \"go\" command not found!", "likes": 1}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "cannot make 'golib' directory via .bashrc, then I \"source ~/.bashrc\" this, that 'golib' folder really never I appears, \nI try to create a 'golib' via mkdir, but when I try to do your github stuff, nothing happened inside my 'golib' directory?\nI am stucked up for almost 12 hours...", "likes": 1}}, {"topLevelComment": {"author": "Emerson Paguia", "text": "any tutorial Golang with Web Development for Beginners,\nI want to see the output via WEB BROWSER'\nanyway haven't finish the video yet'", "likes": 0}}, {"topLevelComment": {"author": "Wild Raven", "text": "I truly appreciated this! On a recommendation I am picking up GO as my next programming language to learn and build a project in, I love the features, simplicity, speed, and expressive power it boasts! You did a great job nailing core concepts and really driving home what the language is good for. Appreciate this man.  :)", "likes": 6}}, {"topLevelComment": {"author": "J", "text": "The way you pronounce Emu is cute xD", "likes": 0}}, {"topLevelComment": {"author": "Ana Beatriz", "text": "02:50:45\nThat highlighted part is an variable and the if condition is the value stored in *ok* ?", "likes": 0}}, {"topLevelComment": {"author": "Jan M Savage", "text": "well done. congrats!", "likes": 0}}, {"topLevelComment": {"author": "Jan M Savage", "text": "well done!~", "likes": 0}}, {"topLevelComment": {"author": "Ana Beatriz", "text": "Capacity explanation\n02:05:49", "likes": 0}}, {"topLevelComment": {"author": "Sohan Tirpude", "text": "I am getting issue with setting the GOPATH environment variable on windows. It seems that in the latest GO version, GOPATH is not required. Can anyone guide me on this?", "likes": 0}, "replies": [{"author": "CentipedeKid", "text": "You dont have to", "likes": 0}]}, {"topLevelComment": {"author": "Bearshark", "text": "NONE OF THIS WORKS", "likes": 0}}, {"topLevelComment": {"author": "Karan Abraham", "text": "Comprehensive, concise and well explained", "likes": 0}}, {"topLevelComment": {"author": "Karan Abraham", "text": "I must say most American's are well spoken.", "likes": 0}}, {"topLevelComment": {"author": "Perceptron", "text": "Best guy that explains {go path} pros and cons. \nHowever, go mod is the future and it's here now.  Later.", "likes": 0}}, {"topLevelComment": {"author": "MrRobsn", "text": "`var a [3]int` does not produce an array with zero values in go as of today ...", "likes": 0}}, {"topLevelComment": {"author": "Aviv Turgeman", "text": "Hi first of all nice tutorial thanks a lot for that.\nSecondly, in 1:07:00 the last operator is `&^` which in my opinion was not explained correctly,\nthe binary number is not of 0100 is not 8 but it is 4.\nThe operation itself is 'And Not' which is equivilant to this expression:\n\" x AND NOT y \" => if x=1010 and y=0011 than NOT y is = 1100, and then needed the AND operation which in this specific example is 1000 which is equal to 8", "likes": 3}}, {"topLevelComment": {"author": "Ana Beatriz", "text": "I need subtitles", "likes": 0}}, {"topLevelComment": {"author": "MrRobsn", "text": "can someone explain me why `10 &^ 3 == 8` ?  According to the video I calculate 4 from 0100", "likes": 0}, "replies": [{"author": "MrRobsn", "text": "I think the result is not 0100 but 1000 because 1010 & 1100 == 1000 ... the ^ in &^ inverse the bits of the second value", "likes": 0}]}, {"topLevelComment": {"author": "Lawnmower Man", "text": "followed your steps but encounter an error when building firstapp.\n\"package firstapp is not in GOROOT (/usr/local/go/src/firstapp)\"\nnewly setup Ubuntu desktop 20.10\nInstalled go version go1.16\nGOPATH=\"/home/ideveloper/golib:/home/ideveloper/code\"\nGOROOT=\"/usr/local/go\"\n\nwhat am i missing here?", "likes": 0}}, {"topLevelComment": {"author": "Manasa D", "text": "2:07:59 - I tried to execute the same code in golang.org playground,the  result of len was 5 and capacity was 6, but in the video 5 and 8 were displayed. You mentioned like 2^1, 2^2 and 2^3 and so on... But it didn't happen like that. May i know the reason?", "likes": 0}, "replies": [{"author": "Sergen Gulal", "text": "the calculation of capacity has changed. @manasa", "likes": 0}]}, {"topLevelComment": {"author": "Dmytro Khyl'ko", "text": "Leave this comment to make such a great video even more noticable", "likes": 0}}, {"topLevelComment": {"author": "Jeetender Kakkar", "text": "Beggar poor pakistan", "likes": 0}}, {"topLevelComment": {"author": "Shambhav", "text": "The actual problem with Java is the when you code, your code gets so messy, complex objects, immutable lists... inheritance, weird and indirect syntax. Just unbelievably indirect, I coded a game in C++ in about 200 lines, in Java it took 300, why? Objects, classes and weird syntax made stuff indirect.", "likes": 0}}, {"topLevelComment": {"author": "Abbas Mohsin", "text": "thanks a lot", "likes": 0}}, {"topLevelComment": {"author": "Nabil Jada", "text": "Awesome work !! Thanks a lot ;)", "likes": 0}}, {"topLevelComment": {"author": "Nabil Jada", "text": "1:07:03 \n4", "likes": 0}}, {"topLevelComment": {"author": "stackpointer", "text": "i didnt expect this tutorial to teach me bitwise operations so well, i went here just to learn go but this exceeds my expectations. thank you.", "likes": 22}, "replies": [{"author": "stackpointer", "text": "@Kang Ming Chua im aware, ive seen the other comments", "likes": 1}, {"author": "Kang Ming Chua", "text": "he is wrong about AND NOT &^ operator, check the correct explanation elsewhere, the result is 8, but 0100 is actually 4, I was so shocked", "likes": 2}]}, {"topLevelComment": {"author": "Strange", "text": "It's a great course. I have a little bit experience with C and C++, so it's easy for me to follow and it's in a perfect pace for me. But I can see a beginner having trouble e.g. understanding what's the deal with iota. In that instance, I think it would make sense to *first* explain why would you want to use that feature, then explain how it works. But still, it's a great course c:", "likes": 7}, "replies": [{"author": "Domo", "text": "yes.I come from other language. So may concept is come from C/C++...Need more explain.But yes. Is a great course.", "likes": 0}]}, {"topLevelComment": {"author": "Kobul Widodo", "text": "why there is no subtitle hahahha", "likes": 0}}, {"topLevelComment": {"author": "Shubhank Saxena", "text": "Will definitely pledge to freecodecamp as soon as I start earning!", "likes": 0}}, {"topLevelComment": {"author": "Prasad P", "text": "Awesome  tutorial. Thanks very much.", "likes": 0}}, {"topLevelComment": {"author": "Ankush Das", "text": "Just starting to learn! Thank you in advance :)", "likes": 0}}, {"topLevelComment": {"author": "Geoffrey Callaghan", "text": "If you are looking to build out a Single Page Application using Golang and Vue.js.\nI would check out the template at http://picc.io. It save you weeks of writing boilerplate code.", "likes": 0}}, {"topLevelComment": {"author": "SpillKroken", "text": "is this on mac?", "likes": 0}}, {"topLevelComment": {"author": "Reema F.", "text": "2:08:37 \nthis is working too\n\na:= []int{1,2,3}\nb:= []int {4,5,6}\n\na= append(a, b... )\n\noutput: \na is [1 2 3 4 5 6]\nb is [4 5 6]", "likes": 0}}, {"topLevelComment": {"author": "Achille Cheung", "text": "\u975e\u5e38\u68d2\uff01", "likes": 0}}, {"topLevelComment": {"author": "Sayanth S", "text": "That MB, GB ..... Const will be exported right at 1:41:59", "likes": 0}}, {"topLevelComment": {"author": "Jendy Chi Jasper", "text": "Hard to believe this million dollar Knowledge was received for free. It's been a good 23 days going through the entire video, reading far and wide on the surrounding topics. How do I support the original video creator please?", "likes": 11}}, {"topLevelComment": {"author": "Shreyan Goswami", "text": "Thanks for the video. Learnt a lot.", "likes": 0}}, {"topLevelComment": {"author": "amar lingineni", "text": "YOU ARE THE BEST ! Thank YOU", "likes": 0}}, {"topLevelComment": {"author": "Darren Mason", "text": "I liked this series but bro the term \"syntactic sugar\" makes me nuts", "likes": 0}}, {"topLevelComment": {"author": "Saeed Balquizi", "text": "There use to be a time when Youtube had a video upload restrictions set to 10 minutes max.", "likes": 2}}, {"topLevelComment": {"author": "Michael", "text": "The down votes are from people who hide their go courses behind a paywall. xD", "likes": 1}}, {"topLevelComment": {"author": "Arturo Filio Villa", "text": "I thought this videos weren't monetized cause I just got three adds.", "likes": 0}}, {"topLevelComment": {"author": "Charles", "text": "As mentioned in the comments. Interfaces are way too hard to understand with these examples.\u00a0\"Teacher\" pastes code and doesn't even comment, why is this, why that etc. Feels like he is lazy. But overall the tutorial was great. I don't recommend though having it as the only source. Thank you very much for the tutorial it helped me a lot.", "likes": 0}}, {"topLevelComment": {"author": "vinod kc", "text": "Its hard to understand Go's module management. Is there any articles related to it ?", "likes": 0}}, {"topLevelComment": {"author": "Aditya", "text": "for 2:11:50 you can do this\n\na := []int{1,2,3,4,5,6}\r\nb := append(append([]int{},a[:2]...), a[3:]...)\r\n\nIt doesn't refer to a, and you can do it without a loop", "likes": 0}}, {"topLevelComment": {"author": "Aung Thiha Aung", "text": "Thanks. Great content.", "likes": 0}}, {"topLevelComment": {"author": "meh.", "text": "It's a bit verbose but I hope this will finally teach me a language that I can both replace Java with and actually like (unlike C# >:( ).", "likes": 0}}, {"topLevelComment": {"author": "Juan", "text": "1:19 It says: \"Python is slow\"... It doesn't make sense to say that, when in fact, Go is slow too. Both are slow. Even C is faster than Python, Java, Go and C++", "likes": 0}, "replies": [{"author": "Technical Trials and Tribulations", "text": "It does make perfect sense, Python is the slowest of all of them, I thought Go was much closer to C in performance", "likes": 1}]}, {"topLevelComment": {"author": "Gece Ergen", "text": "721th comment!!!", "likes": 0}}, {"topLevelComment": {"author": "Tuyen", "text": "[1:07:01]\nI don't understand a &^ b (1010 &^ 0011)  = 0100\n0100 = 4 to me, but the output shows 8\nso it should be \na &^ b (1010 &^ 0011)  = 1000", "likes": 0}, "replies": [{"author": "Tuyen", "text": "Should have been 1010 &^ 0011 = 1010 & 1100 = 1000", "likes": 0}]}, {"topLevelComment": {"author": "Mykola Poli\u0161\u010duk", "text": "It is pretty cool! this is fine, but in my opinion I thing that people would appreciate more when this video would be like series.  :) it is just about the feeling you know. 7 hours video can scare off a lot of people :D anyway .. great work :D", "likes": 0}}, {"topLevelComment": {"author": "Raptor Rachel", "text": "I watched this in two times speed and learned in three and a half hours", "likes": 1}, "replies": [{"author": "Raptor Rachel", "text": "@Hendry Ang you're a very judgemental person, I hope you find peace and prosperity \ud83c\udf1f", "likes": 0}, {"author": "Raptor Rachel", "text": "@Hendry Ang it's (mostly) a joke.  And why are you so judgmental?  You don't even know my life.", "likes": 0}]}, {"topLevelComment": {"author": "\u0412\u0438\u043a\u0442\u043e\u0440 \u0421\u043d\u0435\u0433\u0438\u0440\u0451\u0432", "text": "So you want to be a software engineer at google?", "likes": 0}}, {"topLevelComment": {"author": "T J", "text": "May I ask a question? I have tried what the video says but I can't get 2 GOBIN like in the video, so Does not the latest version of Go allow 2 GOBIN?", "likes": 0}}, {"topLevelComment": {"author": "Effective Programmer", "text": "Stopping at 57:00 for today", "likes": 0}}, {"topLevelComment": {"author": "Nick Rice Begriddled!", "text": "I expect it will be clearer later, but at 46:37 where you explain difference of scope depending on upper or lower case you don't mention mixed case. Names myint and MYINT are clear, but what about myInt (mixed case starting with lower case) and MyInt (mixed case starting with upper case)?", "likes": 0}, "replies": [{"author": "Nick Rice Begriddled!", "text": "54:38 - OK, it's the first letter that makes the difference", "likes": 0}]}, {"topLevelComment": {"author": "Ivan Tsankov", "text": "Bill Gates teaching Go lang", "likes": 0}}, {"topLevelComment": {"author": "Bruce Hewson", "text": "@1:41:40 use of GB is not correct per standards - should be GiB  ->   The gigabyte (/\u02c8\u0261\u026a\u0261\u0259ba\u026at, \u02c8d\u0292\u026a\u0261\u0259-/)[1] is a multiple of the unit byte for digital information. The prefix giga means 10^9 in the International System of Units (SI). Therefore, one gigabyte is one billion bytes. The unit symbol for the gigabyte is GB.", "likes": 0}}, {"topLevelComment": {"author": "Aggh", "text": "\u2328\ufe0f (0:00:00) Introduction \r\n\u2328\ufe0f (0:16:57) Setting Up a Development Environment\r\n\u2328\ufe0f (0:35:48) Variables\r\n\u2328\ufe0f (0:57:05) Primitives\r\n\u2328\ufe0f (1:26:29) Constants\r\n\u2328\ufe0f (1:47:53) Arrays and Slices\r\n\u2328\ufe0f (2:17:20) Maps and Structs\r\n\u2328\ufe0f (2:48:00) If and Switch Statements\r\n\u2328\ufe0f (3:21:17) Looping\r\n\u2328\ufe0f (3:41:34) Defer, Panic, and Recover\r\n\u2328\ufe0f (4:03:57) Pointers\r\n\u2328\ufe0f (4:21:30) Functions\r\n\u2328\ufe0f (4:57:59) Interfaces\r\n\u2328\ufe0f (5:33:57) Goroutines\r\n\u2328\ufe0f (6:05:10) Channels", "likes": 1}}, {"topLevelComment": {"author": "Katrin Cheung", "text": "May I know what is the meaning of no private scope in the variable session?", "likes": 0}}, {"topLevelComment": {"author": "Abiram Sundarraj", "text": "03:51:54 \"Entire Web development course in one video.\" - ROFL bro", "likes": 9}}, {"topLevelComment": {"author": "OFCIStillLoveYou", "text": "Best Golang tutorial out there!", "likes": 1}}, {"topLevelComment": {"author": "Eashwar Sathyamurthy", "text": "Thank you so much!! It was very helpful", "likes": 0}}, {"topLevelComment": {"author": "Alexandros Collie", "text": "Thanks the course was very informative", "likes": 0}}, {"topLevelComment": {"author": "KAOTEK FORCE", "text": "Appreciate the tutorial.  You should monetize it because you deserve it.", "likes": 0}}, {"topLevelComment": {"author": "passer by", "text": "1:07:04 That's 4 not 8 right? &^ seems to give 1 only when bit of 1st number is 1 and second is zero. So 10 &^ 3 gives 8 but 3 &^10 gives 1", "likes": 0}}, {"topLevelComment": {"author": "SHIVAM KASAT", "text": "java developers having pain in ass seeing pointers :D", "likes": 0}}, {"topLevelComment": {"author": "Nino", "text": "super very well explained! thank you very much!", "likes": 0}}, {"topLevelComment": {"author": "Lejun Chen", "text": "Really easy to follow, friendly to beginners!", "likes": 0}}, {"topLevelComment": {"author": "L\u1ed9c B\u00f9i", "text": "https://youtu.be/YS4e4q9oBaU?t=4025\nHow come 0100 equals 8?", "likes": 0}}, {"topLevelComment": {"author": "Tomasz", "text": "Great tutorial man but I think you are wrong when it comes to channels (in case of runtime checking if you can read or write to channel). It is compile time thing.\nCheers", "likes": 0}}, {"topLevelComment": {"author": "BARSHA BHATTACHARJEE", "text": "For more visit : https://youtu.be/q2RgFH1rPos", "likes": 0}}, {"topLevelComment": {"author": "Tb", "text": "i made a little encryption program\n\nfunc encrypt(v *string) {\r\n    var buf string\r\n    for _,v := range *v {\r\n        buf = buf + string(v+3)\r\n    }\r\n    *v = buf\r\n}\r\n\r\nfunc decrypt(v *string) {\r\n    var buf string\r\n    for _,v := range *v {\r\n        buf = buf + string(v-3)\r\n    }\r\n    *v = buf\r\n}\r\n\r\nfunc main() {\r\n    var b string = \"Hello\"\r\n    encrypt(&b)\r\n    fmt.Println(b)\r\n    decrypt(&b)\r\n    fmt.Println(b)\r\n}", "likes": 0}}, {"topLevelComment": {"author": "Zeeshan Ahmad", "text": "Make one video on erlang programming language", "likes": 2}}, {"topLevelComment": {"author": "Furkat Gafurov", "text": "Thanks for the awesome beginner tutorial of a kind, really enjoyed it!", "likes": 0}}, {"topLevelComment": {"author": "abdelouafi02", "text": "appreciate man\nyou're real shinobi", "likes": 0}}, {"topLevelComment": {"author": "Bon Huang", "text": "at 1:07:03, why 0100 is 8, but not 4?", "likes": 1}, "replies": [{"author": "Bon Huang", "text": "@passer by I think \"a &^ b\" should be \"1000\" not \"0100\"", "likes": 0}, {"author": "passer by", "text": "&^ seems to give 1 only when bit of 1st number is 1 and second is zero. So 10 &^ 3 gives 8 but 3 &^10 gives 1", "likes": 0}]}, {"topLevelComment": {"author": "k dineshreddy", "text": "Can you make a different explanation of interfaces ? Sorry, but i felt lost.", "likes": 0}}, {"topLevelComment": {"author": "Artem Kondratyev", "text": "Thank you so much!!! This free tutorial is better than many paid courses. Well structured, good pace, very clear explanations. Simply awesome", "likes": 12}}, {"topLevelComment": {"author": "Aleksander Borowski", "text": "1:31:38 nice", "likes": 0}}, {"topLevelComment": {"author": "Philippe Carphin", "text": "1:41:35 It's KB:2^10, MB:2^20, GB:2^30 which is what's in the code but not what he said.", "likes": 0}}, {"topLevelComment": {"author": "Flaming Ice", "text": "1:07:00 how is 0100 equal 8 ?", "likes": 0}, "replies": [{"author": "Nick Rice Begriddled!", "text": "It's 4. It was just a slip in the moment.", "likes": 0}]}, {"topLevelComment": {"author": "JaneGwaww", "text": "one last video to sleep", "likes": 0}}, {"topLevelComment": {"author": "KC Lin", "text": "at 1:06:31. AND NOT should be 1000 which is 8, not 0100.", "likes": 0}}, {"topLevelComment": {"author": "Navjot", "text": "My antivirus (Kaspersky) was blocking the GO executables from running, I fixed It using this - https://stackoverflow.com/questions/34033790/go-programs-hanging-on-windows-10.\nMight be helpful for someone.", "likes": 0}}, {"topLevelComment": {"author": "Guillermo S\u00e1nchez", "text": "I'm truly speechless about the quality of the content. You are by far one of the best teachers I've ever had. Thank you so much for this!", "likes": 5}}, {"topLevelComment": {"author": "Oriol Cantarell i Sala", "text": "Nice and good to have. I've been lot experienced in Java, Python,C and C++ among others programming languages, and I've to say that Go make a mixing of them. So thanks @freeCodeCamp.org. For install and script programming, I've been experienced on Bash. Update for today: there is unsigned int 64 bits size. Is simpler pointers in Go than in C (I've done a lot). Also I've get experience with Go. It serves for getting some points of views. I liked too much slices. In Go it's also so based on Matlab m language or Octave.", "likes": 0}}, {"topLevelComment": {"author": "cedrickvstheworld", "text": "Is he the warrior from Rohan? The guy with lengthy hair?", "likes": 0}}, {"topLevelComment": {"author": "Martin Coton", "text": "Love the video, but the &^ operator answer is wrong - https://youtu.be/YS4e4q9oBaU?t=4009\nThe returned value should be 1000 (8), not 0100 (4)\nAND NOT returns only bits that are set in \"A\" AND NOT IN \"B\". Matching bit values are always \"0\", bits set in \"A but not in B\" are \"1\"\nhttps://yourbasic.org/golang/bitwise-operator-cheat-sheet/", "likes": 0}}, {"topLevelComment": {"author": "Owen Wexler", "text": "1:53:54 - lol the programming bootcamp cohort I was in had someone named Lisa and someone named Ahmed... would have been freakishly coincidental if we had had an Arnold too.", "likes": 0}}, {"topLevelComment": {"author": "weisan pang", "text": "Explanation at 1:07:01 on the bitwise operation of  (a &^ b) seemed incorrect. The answer printed by Go was 8, your explanation pointed to 4 (0100 = 4)", "likes": 0}, "replies": [{"author": "passer by", "text": "&^ seems to give 1 only when bit of 1st number is 1 and second is zero. So 10 &^ 3 gives 8 but 3 &^10 gives 1", "likes": 0}]}, {"topLevelComment": {"author": "Timam", "text": "Thanks a lot for this video.", "likes": 0}}, {"topLevelComment": {"author": "ninbo", "text": "Great video, really helpful. Enjoyed every moment of it, doing this gigantic tutorial about golang must have been time-consuming, sincerely thank you :)", "likes": 0}}, {"topLevelComment": {"author": "Sushant Pachipulusu", "text": "It's a great video and thanks for not monetizing it. At the same time there are couple of things that are needed to be taken care of. At times you assume that the viewer doesn't have any background of programming language (during emphasis of control routines) and at times you assume people to know things well (the whole interfaces segment). It would be great if you stick on to one assumption", "likes": 0}}, {"topLevelComment": {"author": "EliaECoyote", "text": "Wow this is crazy good content", "likes": 0}}, {"topLevelComment": {"author": "Julien G.", "text": "Thanks ! Really good tutorial !", "likes": 0}}, {"topLevelComment": {"author": "Rjandoni Rahmana", "text": "i need english subtitle, i usually listening while reading some sub to help me more understand what people are saying, but thank you for time and effort you put in on this vdeos", "likes": 7}, "replies": [{"author": "Rjandoni Rahmana", "text": "@Hail0 \ud83d\ude4f\ud83d\ude4f,", "likes": 0}, {"author": "Hail0", "text": "its almost 7 hours long and its free", "likes": 0}]}, {"topLevelComment": {"author": "Eerik Sven Puudist", "text": "I appreciate that you are using Linux for this demo.", "likes": 0}}, {"topLevelComment": {"author": "cornermeet", "text": "Did I just hear him say \"Hell bent for leather\" ???", "likes": 0}}, {"topLevelComment": {"author": "Geoffrey Zoref", "text": "I assume that if you are using ZSH you can put the export PATH=$PATH:/usr/local/go/bin\r line in your .zshrc file instead of .bashrc?", "likes": 0}}, {"topLevelComment": {"author": "Ch Furqan Hameed", "text": "Real Support, real open source this is what most of the developers globally needs. Massive respect.\nLove the way he is making understand of the little things with such a great precision.", "likes": 0}}, {"topLevelComment": {"author": "Anton Prokopenko", "text": "Nice, fast and straight to the point.", "likes": 5}}, {"topLevelComment": {"author": "Rjandoni Rahmana", "text": "what do %v and %T?n means?", "likes": 1}, "replies": [{"author": "Rjandoni Rahmana", "text": "@Arnab Mukherjee thankuu", "likes": 0}, {"author": "Arnab Mukherjee", "text": "%v value and %T is type of that object", "likes": 0}]}, {"topLevelComment": {"author": "TEJ SINGH RANA", "text": "Let's get started with Go!!", "likes": 1}}, {"topLevelComment": {"author": "jennifer lawrence", "text": "25:02 not working vscode go tools install", "likes": 0}}, {"topLevelComment": {"author": "LG49 U63", "text": "This is an awesome tutorial. Thank you.", "likes": 1}}, {"topLevelComment": {"author": "Supra M", "text": "Yes this is so kind of you to teach a language so in depth and rich. Greatly appreciate. You gave me a head start on my interview. Thank you in general!", "likes": 23}}, {"topLevelComment": {"author": "akilan tamilarrasu", "text": "Awesome.", "likes": 1}}, {"topLevelComment": {"author": "Barouth Houb", "text": "When u say beginners do u mean people with zero knowledge of coding ? I would like to learn Golan but have zero experience in codes.\n\nThank you", "likes": 0}, "replies": [{"author": "Donal O'Connell", "text": "It is doable with zero knowledge but it will be a lot harder for you than it would be for someone who already has experience in other programming languages.", "likes": 0}]}, {"topLevelComment": {"author": "Max Walts", "text": "Respect!", "likes": 0}}, {"topLevelComment": {"author": "Jonathan Gerard", "text": "Nice video, but can a video be made on the Rust language please?", "likes": 0}}, {"topLevelComment": {"author": "Mark Rosen", "text": "Great delivery style - you're very easy to follow and the content is at a very consumable pace.  Please review &^ operator at 1:07:00 - the output is 8, but you calculate 0100  (and call it 8 ).  AND NOT is as you described, \"the opposite of OR\".   I saw a web site that describes it as \"bit clear\" which made it click for me:  with OR, you specify which bits you want to turn on, and with AND NOT, you specify which bits you want to turn off.", "likes": 7}}, {"topLevelComment": {"author": "Dave", "text": "5:00", "likes": 0}}, {"topLevelComment": {"author": "Phat", "text": "I really don\u2019t understand why they made the same mistake as it was made in C/C++ with declaring a pointer and dereferencing it with the same symbol.", "likes": 0}}, {"topLevelComment": {"author": "Taufiqul Islam Toki", "text": "pardon me, can i make pc apps just after learning this tutorial?", "likes": 0}, "replies": [{"author": "Deepak Ugale", "text": "Yes immediately but not gui and good...", "likes": 1}]}, {"topLevelComment": {"author": "Mathew Gordon", "text": "1:32:36\nNice.", "likes": 0}}, {"topLevelComment": {"author": "praveen kumar", "text": "can u please send the sample codes(Resources) which you have taught in this videos", "likes": 0}}, {"topLevelComment": {"author": "Adya Sena Pamungkas", "text": "Very nice vid and channel, i'll add your subscriber by 1", "likes": 0}}, {"topLevelComment": {"author": "Alexander Grigoryan", "text": "Thank you so much! Best introduction to Go!", "likes": 0}}, {"topLevelComment": {"author": "dreamer", "text": "the interfaces examples are too hard to follow for a complete beginner; instead of focusing on the core principle of an interface, we are lost in trying to first understand the way your example works", "likes": 31}, "replies": [{"author": "Ariel P.", "text": "same with Gorutines", "likes": 0}, {"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}, {"author": "Hemant Patel", "text": "me too!", "likes": 0}]}, {"topLevelComment": {"author": "dreamer", "text": "4:09:40 - 4 \"bits\" apart, not bytes (1 byte = 8 bits)", "likes": 1}}, {"topLevelComment": {"author": "Naman Jain", "text": "What a great tutorial. Absolutely loved it. I didn't even need to practice the code. Your teaching method was so effective, it all just sank in. And above all, no annoying ads man. I request you to at least add ads at the beginning of the video or at the end maybe. However a great gesture. Thanks a lot for such an awesome series.", "likes": 5}, "replies": [{"author": "Phat", "text": "@Yashasvi Bajpai some gay party here? )))", "likes": 0}, {"author": "Yashasvi Bajpai", "text": "you are absolutely gold!", "likes": 1}]}, {"topLevelComment": {"author": "Glenn Hancock", "text": "Too bad golang people at google have gone full woke and advertise for BLM instead of writing software.  Don\u2019t try to talk to them or they\u2019ll delete all your posts and tell you you\u2019re a bad person.  I really liked go for a good number of our projects but am currently rewriting everything in RUST and finding it to be much faster and more powerful language.", "likes": 0}}, {"topLevelComment": {"author": "Sami Fouad", "text": "This was really overly complicated and the examples were convuluted in so many ways for absolute beginners to Go. The entire Interfaces section is a write-off.\n\nI really appreciate the effort you took to not monetize a 6+ hour video, but I hope more simplicity and a slower pace is applied for the next beginner intro. People are attracted to go for simplicity and a mindset shift on how they program. A much easier to digest introduction is necessary.\n\nThis video would be great for medium level Go programmers.", "likes": 2}}, {"topLevelComment": {"author": "Cristian E", "text": "I so wish go would be without curly brackets, that would make it so much more appealing for people coming from python..", "likes": 2}}, {"topLevelComment": {"author": "AncientHero", "text": "What is the windows equivalent of making a compound GOPATH, like you do at 24:50? What do you actually write as the value for variable?", "likes": 0}}, {"topLevelComment": {"author": "Int", "text": "can you add extra english sub for this video, thank you so much!", "likes": 0}}, {"topLevelComment": {"author": "Indratej Reddy", "text": "golang= googlelanguage", "likes": 0}}, {"topLevelComment": {"author": "jamie mcmanaman", "text": "Thank you very much for all of these tutorials, even though I just add them to library and never watch it, they are really great for someone who is beginner in programming. They give a general idea about the language and basic concepts so from that point it is easier to build advanced knowledge. And it is amazing that you do all of these for free. I really appreciate. Mostly, I learn much more in these tutorials then my college courses whole semester. I hope it would help me to land a job.", "likes": 1}}, {"topLevelComment": {"author": "Chameleon Scheimong", "text": "Sincerely, thank you for not abusing all the opportunity for puns and just making a genuinely useful tutorial.", "likes": 0}}, {"topLevelComment": {"author": "quixoticfallcy", "text": "what if i have a monorepo with multiple services? How do i setup the dev environment for go? is it the same?", "likes": 0}}, {"topLevelComment": {"author": "Exis Zhang", "text": "What is the point of this gibberish cryptic syntax", "likes": 1}, "replies": [{"author": "\u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u041b\u043e\u0433\u0438\u043d\u043e\u0432", "text": "@Exis Zhang python is weakly typed and interpretive. If its the only language you're familiar with, any strongly typed language with pointers support is going to look cryptic. Python is great, though, but unfit for certain purposes.", "likes": 0}, {"author": "Exis Zhang", "text": "@\u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u041b\u043e\u0433\u0438\u043d\u043e\u0432 python", "likes": 0}, {"author": "\u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u041b\u043e\u0433\u0438\u043d\u043e\u0432", "text": "Which syntax would you not call cryptic?", "likes": 0}]}, {"topLevelComment": {"author": "Jeff", "text": "Thank you Michael for this awesome tutorial, very precise, to the point and clear explanation!", "likes": 1}}, {"topLevelComment": {"author": "Edwin Ndiritu", "text": "If this video has ads I'd watch all of them it's the least I can do", "likes": 0}}, {"topLevelComment": {"author": "Vuitton Khan", "text": "Your explanation of strong and statically typed is wrong. Strong means there are no loopholes around the type system, and statically (and only statically, not strong) means that the variable datatype has to be declared when you initiate the variable. Why do you give this wrong advice to students?", "likes": 0}, "replies": [{"author": "Ash Smith", "text": "Yep! And the fact they categorize C & C++ as one language? These guys are idiots.", "likes": 0}]}, {"topLevelComment": {"author": "c lee", "text": "Is there a follow-up video planned?  Perhaps one that goes into I/O, explores common core packages, talks about common design patterns and general tips, et cetera.  With that said, this video is amazing and very appreciated!", "likes": 70}}, {"topLevelComment": {"author": "Shreya Bhandare", "text": "get a patreon !!!", "likes": 0}}, {"topLevelComment": {"author": "\uc6b0\uc640", "text": "Thank you so much", "likes": 0}}, {"topLevelComment": {"author": "Anthony Lafont", "text": "Go naming conventions:\n- \"Names that are exported or package level variables should be clear enough that someone outside that source file should understand the meaning of it\"\nAlso Go:\n- Import (\n                      \"fmt\"\n)", "likes": 202}, "replies": [{"author": "billigerfusel", "text": "fml", "likes": 1}, {"author": "Brother Caleb", "text": "\ud83d\ude02", "likes": 0}, {"author": "Gustavo Arantes", "text": "Fmt = formarting or formatter", "likes": 0}, {"author": "M_T_T", "text": "@HDauven thanks pal, didn\u2019t think of that.", "likes": 2}, {"author": "HDauven", "text": "@M_T_T I'm guessing it's done not to trip up the language parser too much. Putting the type declaration after the variable name probably makes it much harder to parse the code and convert it to an abstract syntax tree. With var it's instantly clear to a parser what's going to come after it. \n\nThe ':=' operator is just syntactic sugar for the var declaration, and the walrus operator (':=') isn't used for anything else.", "likes": 5}]}, {"topLevelComment": {"author": "merlin boost", "text": "where is the code come from when you pasting in the playground?", "likes": 0}}, {"topLevelComment": {"author": "AhmedTheGreat", "text": "How To Setup It In Windows?", "likes": 0}}, {"topLevelComment": {"author": "Morteza Nasiri", "text": "Please add English subtitle :)", "likes": 0}}, {"topLevelComment": {"author": "TheTaygan", "text": "Great Intro course..well done..tx", "likes": 0}}, {"topLevelComment": {"author": "Veselin Nikolov", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"author": "Ewerton Tertuliano", "text": "I can't express my gratitude for this content (and others) being available on Youtube.\nThank you very much for your job and once I get employed again I will donate it!", "likes": 4}}, {"topLevelComment": {"author": "russell mccloy", "text": "Outstanding effort. Thanks man", "likes": 0}}, {"topLevelComment": {"author": "Honyopenyoko", "text": "The optional value for the map type is to designate the capacity just as it is on a slice. However, from what I have found it serves as nothing more than a \"hint\" and has no actual impact on the behavior of the map.", "likes": 0}}, {"topLevelComment": {"author": "Bayandur Pogosyan", "text": "Tbh, even on FreeCodeCamp, this is the first decent introduction to Golang I've seen. But I disagree, it does not get intuitive overtime. It's obnoxious, the whole syntax is counter-intuitive, and being middle ground between whitespace and semicolon languages makes it more and more problematic. The deal is, Google pushes for it, and its creators never were good enough to create a programming language. You have to live with it. Like with a cervical cancer.", "likes": 0}}, {"topLevelComment": {"author": "Chen Ni", "text": "This video is fantastic. Thank you so much.", "likes": 0}}, {"topLevelComment": {"author": "Amol Gautam", "text": "Thank you so much.", "likes": 0}}, {"topLevelComment": {"author": "Ambu Sreedharan", "text": "Go was exciting all along until I reached the pointer craziness in interfaces. Will watch again and learn but I feel it lost some readability and simplicity there.", "likes": 0}}, {"topLevelComment": {"author": "Akash Solanki", "text": "Who has watched the complete video?", "likes": 0}}, {"topLevelComment": {"author": "Gaurav Lotekar", "text": "I would like to know if freecode camp is going to have similar course as JavaScript for Go as well ? ... \nif not which course would you recommend I should take to do hands on learning for Go", "likes": 0}}, {"topLevelComment": {"author": "Alex Zahui", "text": "awesome video", "likes": 0}}, {"topLevelComment": {"author": "Average Guy", "text": "Best video currently on YouTube for learning Go.", "likes": 0}}, {"topLevelComment": {"author": "Kanal7 Movies \ud83c\uddee\ud83c\uddf1", "text": "If I learn this language, can I land a job at Google ?", "likes": 1}, "replies": [{"author": "Kanal7 Movies \ud83c\uddee\ud83c\uddf1", "text": "@Tri Lam wow", "likes": 0}, {"author": "Tri Lam", "text": "add a few more step, yes", "likes": 1}]}, {"topLevelComment": {"author": "sreesub", "text": "Awesome video. To the point. Thank you.", "likes": 0}}, {"topLevelComment": {"author": "Tu\u1ea5n Anh", "text": "this course is very great but it doesn't have subtitle.... >.<", "likes": 0}}, {"topLevelComment": {"author": "Alexander Carlsson", "text": "ffffffheeeemmmmmpt", "likes": 0}}, {"topLevelComment": {"author": "DALJIT KAUR", "text": "After 5 hours, things were getting tough!", "likes": 31}, "replies": [{"author": "Meta crusader", "text": "bruh", "likes": 2}, {"author": "David Cruz", "text": "Completely agree with jaja", "likes": 1}, {"author": "Shahbaz Khan", "text": "take a break", "likes": 19}]}, {"topLevelComment": {"author": "SatansFlipFlop", "text": "Why use the Go playground?", "likes": 0}}, {"topLevelComment": {"author": "Nani Banani", "text": "FreeCodeCamp always use to upload nice professional videos wich dont contain any music, half naked women , respectless speech or racism. this is the reason why i voted FreeCodeCamp at the last online challenge(Top Tech YouTuber) ...", "likes": 0}}, {"topLevelComment": {"author": "Matthew Shortle", "text": "I installed GoLang on my Windows 10 PC but I cannot find it. I tried restarting and can't find it. How do I solve this problem?", "likes": 0}}, {"topLevelComment": {"author": "M V", "text": "For those on ubuntu 20.04 you can just run this command to install go:\nsudo snap install go --classic", "likes": 0}}, {"topLevelComment": {"author": "Lou Cordero", "text": "@6:27 when discussing chan's you show a forever loop with an if to handle the closed channel. I tried to do the test in the for itself but get a timeout.\nMy program looks like this:\n```\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"sync\"\r\n)\r\n\r\nvar wg = sync.WaitGroup{}\r\n\r\nfunc main() {\r\n\tch := make(chan int, 50)\r\n\twg.Add(2)\r\n\tgo func(ch <-chan int) {\r\n\t\tfor i, ok :=  <- ch; ok; {\r\n\t\t\t\tfmt.Println(i)\n\n\t\t}\n\n\t\twg.Done()\r\n\t}(ch)\r\n\tgo func(ch chan<- int) {\r\n\t\tch <- 42\r\n\t\tch <- 27\r\n\t\tclose(ch)\r\n\t\twg.Done()\r\n\t}(ch)\r\n\twg.Wait()\n}\n```\nShould the test for 'ok' actually break out of the loop?", "likes": 0}}, {"topLevelComment": {"author": "Cody Elhard", "text": "Coming from a mainly scripting language background this video was excellent to get familiar with the syntax! Just put it on 2x speed during the basic parts (i.e. conditions, etc.)", "likes": 0}}, {"topLevelComment": {"author": "Vivek Chaudhary", "text": "How good is Golang for Data Engineering and is it compatible with Hadoop, Apache Spark? I am a Python/Big Data Developer, interested in learning a new lang, is Golang worth for me. pls suggest.", "likes": 0}}, {"topLevelComment": {"author": "MrApplewine", "text": "Microsoft releases language called \"Mo\" or \"Molang\"!", "likes": 0}}, {"topLevelComment": {"author": "Farhan Hilmi", "text": "3:21:17 just reminder where i stop", "likes": 0}}, {"topLevelComment": {"author": "Felype Rennan", "text": "When I saw Ken Thompson I was like: Wait, what? This has to be absolutely fucking worth it, it has the hand of THE COMPUTER GOD HIMSELF \ud83d\udc81\u200d\u2640\ufe0f", "likes": 0}}, {"topLevelComment": {"author": "Felype Rennan", "text": "When I saw Ken Thompson I was like: Wait, what? This has to be absolutely fucking worth it, it has the hand of THE COMPUTER GOD HIMSELF \ud83d\udc81\u200d\u2640\ufe0f", "likes": 0}}, {"topLevelComment": {"author": "Ashlin Karkada", "text": "Awesome tutorial !! Thank you :)", "likes": 0}}, {"topLevelComment": {"author": "Sadjad Talakoob", "text": "Thanks alot\ud83d\ude4f\ud83c\udffb", "likes": 0}}, {"topLevelComment": {"author": "advait", "text": "I wish you could make it 1080p as it is a bit blur (considering the fact I have a 4K display)", "likes": 0}}, {"topLevelComment": {"author": "Salam Waddah", "text": "How is 10.2 + 3.7 = 13.8999?", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "Because of floating point precision issues. Remember that they are power of two's so it's halfs, quarters, sixthteenths, etc.", "likes": 0}]}, {"topLevelComment": {"author": "Jawad", "text": "oh no, i can't use i in my for loops ;(", "likes": 0}}, {"topLevelComment": {"author": "Jawad", "text": "i still kinda miss ubuntu 16.04", "likes": 0}}, {"topLevelComment": {"author": "Hari Prasath", "text": "Please enable closed caption on all videos", "likes": 0}}, {"topLevelComment": {"author": "Kharis", "text": "God bless you guys,\nI'm guessing that most of us will be fine if you want to monetize the video later. \n\nThank you very much!", "likes": 0}}, {"topLevelComment": {"author": "Joross Barredo", "text": "I dont know why someone has to dislike this video! I dont get it.", "likes": 0}}, {"topLevelComment": {"author": "MrTronich", "text": "What a gift. Thank you for making this available.", "likes": 0}}, {"topLevelComment": {"author": "Ekerette Ekpo", "text": "I'm totally new to programming, and I didn't find this as helpful as I had hoped.\nI would appreciate if anyone here can direct me to one which applies to complete beginners, please. \ud83d\ude4f", "likes": 0}, "replies": [{"author": "Oren Ben-Meir", "text": "@Ekerette Ekpo Yes.", "likes": 0}, {"author": "Ekerette Ekpo", "text": "@Oren Ben-Meir wow! So, I should learn c# first instead?", "likes": 0}, {"author": "Oren Ben-Meir", "text": "@Ekerette Ekpo C# is high level enough that you don't have to get bogged down with pointers and memory management yet covers more broad programming concepts than python. It is also less verbose than java and just has better syntax. Python is better as a second language because after c#, it is super easy and simple to learn and it is very versatile with the frameworks and libraries you can learn. So it is good for understanding and working with higher level concepts like AI/machine learning. But c# has very solid frameworks as well like ASP .NET Core and Unity and has a well maintained ecosystem. Plus with python it is easy to get spoiled with its ease of use and it's syntax style isn't c-based like golang, java, etc... so it is harder to transition from python to those other languages than the other way around.", "likes": 1}, {"author": "Ekerette Ekpo", "text": "@Oren Ben-Meir why c# and not something like python?", "likes": 0}, {"author": "Oren Ben-Meir", "text": "The tutorial assumed prior knowledge on other concepts from other languages like pointers and object oriented programming. Personally I would prefer learning c# as a first language but if you are interested in low level concepts like pointers and memory managment, c++ is good though it is a tougher language to work with when building apps as opposed to others", "likes": 1}]}, {"topLevelComment": {"author": "Anubhav Adhyayan", "text": "Which Language I should learn first before starting Go Lang?", "likes": 0}, "replies": [{"author": "Deepak Ugale", "text": "C then c++ then Java, then javascript then  python then....  Last learn golang.\nIf you want to only one learn this\nBut sequence must be followed", "likes": 0}, {"author": "Nullpointer", "text": "Go is a fine language to start with. I'd suggest starting with Java but that's not \"hip\" enough I guess", "likes": 0}]}, {"topLevelComment": {"author": "Jabez", "text": "Thanks for making this super concise, spot-on tutorial!!!", "likes": 0}}, {"topLevelComment": {"author": "ecerejo", "text": "Some parts are great but some are not, he goes all over the place instead of keeping it simple.  When you learn something for the first time it's best to keep it simple and teach only what you need to know to get you going unfortunately he doesn't follow that concept ins some of his lessons.  He gives you an example of something he starts with \"you could also do this and that and so on\" the end product is a newbie like me with a heavy head almost falling asleep.", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "Welcome to the real world, programming ain't simple. You could of course rewatch the parts you didn't understand later", "likes": 0}]}, {"topLevelComment": {"author": "Ade Oke", "text": "at 1.07 in primitives, is the output supposed to be 8 => 1000, not 0100 \na and not b\nwhich is just the leading digit.", "likes": 0}}, {"topLevelComment": {"author": "Vivian David Martin", "text": "Can you expand on capacity and length function on slices, and the way it changes...", "likes": 1}}, {"topLevelComment": {"author": "rcarl210", "text": "It took me several days, but I finished the whole video start-to-finish. Thanks for creating this great resource.", "likes": 8}, "replies": [{"author": "Wild Raven", "text": "I agree, this was a blast unlike any other tutorial I sat down to watch!", "likes": 0}]}, {"topLevelComment": {"author": "Manish Thakur", "text": "Appreciate your efforts you put in this video", "likes": 0}}, {"topLevelComment": {"author": "UnKnown Soul", "text": "package\u00a0main\n\nimport\u00a0(\n\u00a0\u00a0\u00a0\u00a0\"fmt\"\n)\n\nfunc\u00a0print(r\u00a0interface{})\u00a0{\n\u00a0\u00a0\u00a0\u00a0fmt.Printf(\"%v\u00a0%T\",\u00a0r,\u00a0r)\n}\n\nfunc\u00a0main()\u00a0{\n\u00a0\u00a0\u00a0\u00a0var\u00a0c\u00a0uint16\u00a0=\u00a042\n\u00a0\u00a0\u00a0\u00a0print(c)\n\n}\n//just a little bit of code to hel you go faster", "likes": 0}}, {"topLevelComment": {"author": "jakio 6", "text": "why not just C++", "likes": 0}}, {"topLevelComment": {"author": "Purushothaman N", "text": "Awesome bro...\nThank you very much.. \ud83d\udc4c\ud83d\udc4c", "likes": 0}}, {"topLevelComment": {"author": "Arup Deb", "text": "At 1:07:07  the operator &^ (AND NOT) also Known as 'BIT CLEAR' operator will expressed as => a & (^b) which means:\n a AND (NOT b) => 1010 AND (NOT 0011) => 1010 AND 1100 => 1000 => 8 (as integer)", "likes": 1}}, {"topLevelComment": {"author": "vishnu webmaster", "text": "This is a great video without ads. Kudos and great job buddy.", "likes": 0}}, {"topLevelComment": {"author": "wisdom matthew", "text": "Thanks man, this tutorial just got me up and running with Golang, i think this tutorial is more valuable than most paid courses on Golang ...", "likes": 1}}, {"topLevelComment": {"author": "Lib Vlog", "text": "Man!!!!! programming is beautiful ...", "likes": 0}}, {"topLevelComment": {"author": "Andr\u00e9s Serr\u00f3n", "text": "Nice job!", "likes": 0}}, {"topLevelComment": {"author": "Amiel Aldave", "text": "Hi, i'm interested in learning programming languages and shift my career here on the way. But the problem is, I'm a total noob in this particular field. I've seen a reddit posts that GoLang is the best to program to, but i don't even know the basics. Can someone help me where can I learn even the basics of the basics? Thanks in advance! :)", "likes": 0}, "replies": [{"author": "Amiel Aldave", "text": "@Pontus Got it! Thank you so much! \ud83d\ude4c\ud83d\ude01", "likes": 0}, {"author": "Amiel Aldave", "text": "@K R Thanks! i'll start my from Java then work my way here in Golang. \ud83d\ude4c", "likes": 0}, {"author": "Pontus", "text": "Try an introductory course on e.g. Coursera, or even here on youtube. Try to search for Learn to program or something. Good luck :)", "likes": 1}, {"author": "K R", "text": "Actually I like golang , but if you start with golang as a beginner then at a certain point you may feel uncomfortable (it depends ). Start with python it's easy to learn....after your first programming language lessons you just need to learn the additional features and difference in the syntax of the next programming language..", "likes": 1}]}, {"topLevelComment": {"author": "sii", "text": "no lukehoban anymore? Install from Google one", "likes": 0}}, {"topLevelComment": {"author": "Arun Samuel", "text": "Found it useful \nThanks", "likes": 0}}, {"topLevelComment": {"author": "Enigma", "text": "so I lied in my resume to get internship that I know golang and here I am now :)", "likes": 1}, "replies": [{"author": "M V", "text": "@Nullpointer you're a dumbass \ud83d\udca9", "likes": 0}, {"author": "Nullpointer", "text": "You probably won't make it very far because you can't learn programming in a few days", "likes": 0}]}, {"topLevelComment": {"author": "Michael Stock", "text": "Excellent tutorial", "likes": 0}}, {"topLevelComment": {"author": "Kingsley Obot", "text": "Your summary for each section is awesome. Best tutorial to learn Go", "likes": 1}}, {"topLevelComment": {"author": "xin liu", "text": "Clear explanation!!! LOVE IT!!!  Appreciate it!!!!!!", "likes": 0}}, {"topLevelComment": {"author": "Qurban Azimov", "text": "thanks for awesome course", "likes": 0}}, {"topLevelComment": {"author": "\u9093\u5b50\u5eb7", "text": "Can I download it and send it to our country, just for learning use, not for profit, I will attach a link to this video", "likes": 0}}, {"topLevelComment": {"author": "DeathDragon7050", "text": "I can't seem to find the extension you recommended for visual studio. The one created by google has highly intrusive linting and I can't stand it. Does it not exist anymore?", "likes": 0}}, {"topLevelComment": {"author": "Alberto Patino", "text": "1:07:02 a &^b is 1000 not 0100. Basically a AND NOT B. For MSB, a is 1, NOT b is 1 so a AND NOT b is 1 AND 1 which is 1 not 0. The other 3 bits correspond to 0.\n\nTry:\n\ta := 10 // 1010\n\tb := 3   // 0011\n\tfmt.Printf(\"%08b\\n\", a&^b)\n\tfmt.Printf(\"%08b\\n\", b&^a)", "likes": 0}}, {"topLevelComment": {"author": "Alberto Patino", "text": "I never get comfortable with GOPATH. I know it is not a big deal to switch GOPATH values but here I got the concept of compound GOPATH. I liked it that, and then when I am feeling ok with compound GOPATH I see that the best practice is use modules and go.mod.", "likes": 0}}, {"topLevelComment": {"author": "Alberto Patino", "text": "gocode not working with latest version of go. I'm using gopls instead from vim. Thanks", "likes": 0}}, {"topLevelComment": {"author": "Igbokwe Laurence", "text": "I'd give this video a 5star except it somehow assumes from the beginning that all users are on Linux. no good explanation for environment setup for windows users. Other than that great video!", "likes": 0}}, {"topLevelComment": {"author": "Shan X", "text": "Nothing but thank you very much!!!", "likes": 0}}, {"topLevelComment": {"author": "John Mugo", "text": "This is really good, somehow I have to slow it down to take in all that's covered in the tutorial. Amazing selfless work", "likes": 0}}, {"topLevelComment": {"author": "Kevin Schmidt", "text": "This course assumes you already know how to program in other languages.", "likes": 0}, "replies": [{"author": "Harsh Saxena", "text": "and you hate each and every one of them because you cant love go otherwise", "likes": 0}]}, {"topLevelComment": {"author": "Daniel A", "text": "why did this get dislikes? lol", "likes": 0}}, {"topLevelComment": {"author": "The Tardis", "text": "Up vote for referencing Classic Doctor Who. And great tutorial!!", "likes": 0}}, {"topLevelComment": {"author": "DeezMaster", "text": "Just became member, I will keep supporting as long as I am able keep up the good work guys", "likes": 0}}, {"topLevelComment": {"author": "Terry", "text": "A suggestion for this: can you make this simpler so that it is more friendly for those who are new to coding? A lot of content is explained on an assumption of someone who has mastered a coding language before this. Thanks for sharing anyway! Great effort!", "likes": 0}}, {"topLevelComment": {"author": "Kumar Doddi", "text": "Thank you for a clear tutorial on go basics, as a beginner after watching this tutorial i got some confidence with clear idea on the concepts to start my journey on Go programing thank you ....", "likes": 3}}, {"topLevelComment": {"author": "Arpit", "text": "Thank you so much for the kickstart looking crash course of an introduction. You covered everything, i had to pause and read about interfaces a bit more than this video but that's probably because of me not being able to understand it in one attempt :)\nYou're awesome for not monetizing but i wouldn't mind an AD or two, or 50 :D :D", "likes": 1}, "replies": [{"author": "twopen ace", "text": "I am having exactly the same problem. I think the given examples for interfaces were more complex for a beginner level", "likes": 0}]}, {"topLevelComment": {"author": "DoubleSlasher", "text": "Wow!!! Like many have replied here,  great stuff here, thanks for sharing this so detailed video , if you are not yet in the teaching business, surely I would recommend you to try it because you excel in this ! I am used several years of experience with other languages (mainly C#, VB, C, Javascript, Java) but I was a kind of intrigued by this new language, so this helped me clarify a lot. I see a lot of beneficial on this language, but I also see some hard to read code (at least in my opinion, may be because I am used to other standard languages), I know this has become the latest standard but it seems to be that with so implicit code abstracted in some functions, if you are not aware of them you are  going to be completely lost on a big source code. Anyway was a pleasure to discover this video . Many thanks!!!! As for the adoption of the language we will see how it goes within 3~5 years .", "likes": 0}}, {"topLevelComment": {"author": "Yash Bhalekar", "text": "Hello Sir... Im from India and your channel is just like opportunities for many students who want to learn P. Languages... Your video on Go is just awesome... No Ads.... Point to point explanation \ud83d\ude4c", "likes": 0}}, {"topLevelComment": {"author": "TR", "text": "Conditional (if/else statements) Short Circuiting is one of my favorite computer science principles. It makes great sense and it is very useful in avoiding evaluating potentially undefined values. If the first part of the conditional passes the evaluation then the remainder of the conditional is ignored! Go would be very disappointing without this feature.", "likes": 0}}, {"topLevelComment": {"author": "Kunal Singh", "text": "People who gave 111 dislikes were Python, Java & C/C++ developers.", "likes": 0}, "replies": [{"author": "master chief", "text": "Nah probably Node users . People who use python won't ever be interested enough to end up here.", "likes": 0}]}, {"topLevelComment": {"author": "Xavier Dupont", "text": "I think the 10 in make(map[string]int, 10) is just the second parameter of the make function, and is ignored in the case of maps.", "likes": 0}}, {"topLevelComment": {"author": "TR", "text": "This is how the next generation will learn Go. All thanks to you.", "likes": 0}}, {"topLevelComment": {"author": "netlander", "text": "Java is very quick? I disagree with that... I stopped using Java and quit an illustrious career because Java is slow and clunky, amongst other problems.", "likes": 0}, "replies": [{"author": "netlander", "text": "This is exactly the kind of blurb that was thrown around when Java was first being marketed back in the day. But in everyday use the experience just doesn't reflect that. Java now is legacy, only backwards teams use it on new projects.", "likes": 0}, {"author": "Nullpointer", "text": "Java is extremely fast for an interpreted language. Depending on the use case it can get similar performance to even low level compiled languages", "likes": 0}]}, {"topLevelComment": {"author": "peruRail", "text": "putting roles into a single byte blew my mind!", "likes": 0}}, {"topLevelComment": {"author": "Ario Setiawan", "text": "i don't hear what is on 2:37:49 spelling in bearee? or else?", "likes": 0}}, {"topLevelComment": {"author": "Knight of Y333schua", "text": "Hey! Can I reupload this video on LBRY? I'll fully credit you and add links to everything you have. It's a very educational video and some might want to watch it on lbry", "likes": 0}}, {"topLevelComment": {"author": "Non Stop Enlightenment", "text": "you said uint64 is not available, but uint64 is available and the range is 0 to 18446744073709551615", "likes": 0}}, {"topLevelComment": {"author": "Taku T", "text": "Did everyone move out of Ohio, what happened?", "likes": 9}}, {"topLevelComment": {"author": "Wei Chen", "text": "Great video. It's will be good to split into different parts.", "likes": 0}}, {"topLevelComment": {"author": "Spodarman", "text": "when i turn 18 and have some money i promise ill donate", "likes": 0}}, {"topLevelComment": {"author": "Software Engineer", "text": "I can feel the care and expertise put on this video! Thank you so much!", "likes": 1}}, {"topLevelComment": {"author": "walltail", "text": "2:22:05 an effective hashing function requires the size of the hash table to be at least twice the number of elements. Reserving the size beforehand preempts the program initialising a larger map to ensure hashing efficiency.", "likes": 125}, "replies": [{"author": "Andrej Hohnjec", "text": "Thanks for clarification!", "likes": 0}, {"author": "Asif Mohammed", "text": "thanks a bunch", "likes": 0}, {"author": "Ehrengarde", "text": "Go Doc for make: Map: An empty map is allocated with enough space to hold the\r\n specified number of elements. The size may be omitted, in which case\r\n a small starting size is allocated.\n\nso, yeah. you can set the size of the map  in the second command and if you make it really really large the program may actually crash.", "likes": 4}]}, {"topLevelComment": {"author": "Hadrien Dussuel-Jarry", "text": "Thank you, I wanted an introduction to go and why it's awesome, and you really gave a perfect lesson here. Perfect pace and clear explanations! Very well done :)", "likes": 4}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}]}, {"topLevelComment": {"author": "Coolio", "text": "its like a bunch of videos wrapped into one in a good way ofcouse", "likes": 0}}, {"topLevelComment": {"author": "Subin Alex", "text": "Started learning...:)", "likes": 0}}, {"topLevelComment": {"author": "Abhinandan Singh", "text": "No ads man :)\nRespect++", "likes": 0}}, {"topLevelComment": {"author": "DALLIIAS", "text": "You sound like Sheldon, thanks :)", "likes": 1}, "replies": [{"author": "Prince", "text": "hahahaha, now i can also feel that", "likes": 0}]}, {"topLevelComment": {"author": "Ivan", "text": "excellent, exactly what i needed", "likes": 0}}, {"topLevelComment": {"author": "Allandt Bik-Elliott", "text": "This video is epic. Thank you very much", "likes": 0}}, {"topLevelComment": {"author": "Mr. Hamza ESL Instructor", "text": "My issue is setting up my environment.  I'm using VSCode running on Ubuntu like in the vid.  The Luke Hoban extension is no longer available so my functionality isn't quite the same.  I'm also having GOPATH issues.  I need help.", "likes": 0}}, {"topLevelComment": {"author": "H", "text": "Cool you use Linux! i like that OS more than windows!", "likes": 0}}, {"topLevelComment": {"author": "VB C", "text": "Finally completed this tutorial.", "likes": 0}, "replies": [{"author": "Mr. Hamza ESL Instructor", "text": "How did you find it?  Are you new to coding?  I just started.  Newbie to coding.", "likes": 0}]}, {"topLevelComment": {"author": "Tony Pendleton III", "text": "02:02:30 make", "likes": 0}}, {"topLevelComment": {"author": "Saiprasad Krishnamurthy", "text": "Never been able to sit on a tutorial session like this before! Quite amazing stuff this is. Well done mate!", "likes": 29}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 1}]}, {"topLevelComment": {"author": "Yuan Liu", "text": "Very good for me ,thanks!", "likes": 0}}, {"topLevelComment": {"author": "Kamal Weheliye", "text": "Thank you so much for giving  this video for free . This is one of best tutorial videos I have seen on YouTube.", "likes": 0}}, {"topLevelComment": {"author": "JimShapedCoding", "text": "Thank you for sharing this for free.\nWhat does everyone think about the popularity of this language?\nIt is rising up these days isn't it?", "likes": 0}}, {"topLevelComment": {"author": "Jie", "text": "Want to add subtitles, non-English speaking countries need translation", "likes": 1}}, {"topLevelComment": {"author": "Wall En", "text": "Awesome thanks \ud83d\udc4d", "likes": 0}}, {"topLevelComment": {"author": "Joseph Mak", "text": "EXCELLENT tutorial. Thank you so much", "likes": 0}}, {"topLevelComment": {"author": "beebop", "text": "This is the most well explained video of programming I've ever seen. The flow of words, the ease of explanation and is totally free? You should have a link for donations. Thank you for this great tutorial. it surpasses any other by far.", "likes": 68}, "replies": [{"author": "debbah", "text": "yeah, his accent is very clear. I hate those instructors with weird accents and annoying pronunciations in udemy, I just can't stand listening to them.", "likes": 0}, {"author": "Faisal", "text": "ikr. I regularly take MOOCs and I've never heard a more eloquent instructor.", "likes": 3}]}, {"topLevelComment": {"author": "Nykyta Kudrya", "text": "thanks", "likes": 0}}, {"topLevelComment": {"author": "E.C. Ramos", "text": "Fantastic resource \u2026 thx !", "likes": 0}}, {"topLevelComment": {"author": "jsteezeful", "text": "This is probably the best programming or educational video I've ever watched.  You gave a great deal of knowledge and clearly demonstrate and explain some tough concepts very well.  This video will be useful for many, many years.  Thank you Michael and thank you freecodecamp!", "likes": 64}}, {"topLevelComment": {"author": "EightSix", "text": "where should i go after finishing this course?", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "Programming something. Learning-by-doing is the *only* way to actually learn programming. Just google everything you don't know", "likes": 0}]}, {"topLevelComment": {"author": "CorporateBank", "text": "53:05", "likes": 0}}, {"topLevelComment": {"author": "Captain Nemo", "text": "but why var blah type =... it seems so redundant?", "likes": 0}}, {"topLevelComment": {"author": "Ali Reza", "text": "this is cool..", "likes": 0}}, {"topLevelComment": {"author": "Elazar Pimentel", "text": "Impossible to find Lukehoban in list, there are hundreds and no way to look by developer ... any advice?", "likes": 0}}, {"topLevelComment": {"author": "Jinal Kothari", "text": "Great job man! Thanks", "likes": 0}}, {"topLevelComment": {"author": "Matt Crook", "text": "Great video! One question though, when setting up your dev environment, is there a reason you don\u2019t use gvm (go version manager)? Is there an upside to just downloading it rather than using gvm? Just curious.", "likes": 4}}, {"topLevelComment": {"author": "tomz0f", "text": "Who is want to learn Golang btw?", "likes": 0}}, {"topLevelComment": {"author": "Akshay Nath.R", "text": "The size parameter for make while creating map, is defining the size at which the map data structure should resize itself. make(map[string]int,15) creates a map that will resize itself when its contents  reaches size of 15.", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "\"initial capacity\"", "likes": 0}]}, {"topLevelComment": {"author": "Moparthi Mahesh", "text": "do go lang has any features related to extension methods  or like decorators in python?", "likes": 1}, "replies": [{"author": "Nullpointer", "text": "Not that I'm aware of", "likes": 0}]}, {"topLevelComment": {"author": "Uma Selva", "text": "Excellent teaching... Appreciate your work... Great job!!! \ud83d\udc4f\ud83c\udffb\ud83d\udc4f\ud83c\udffb\ud83d\udc4f\ud83c\udffb", "likes": 1}, "replies": [{"author": "Rock Raju", "text": "Hi you tamil", "likes": 0}]}, {"topLevelComment": {"author": "Satyaki Chatterjee", "text": "Most productive 6hours! Thank you for this awesome course.Appreciate your hard work! <3", "likes": 9}}, {"topLevelComment": {"author": "Amit Jha", "text": "Really appreciate the effort to build and providing such a learning. Language and examples are quite simple to understand the concept. Thanks you very much.", "likes": 1}}, {"topLevelComment": {"author": "T Denizci", "text": "the instructor is so sweet, down to earth man", "likes": 0}}, {"topLevelComment": {"author": "T Denizci", "text": "I wish you were using MS", "likes": 0}}, {"topLevelComment": {"author": "Peng Du", "text": "wow, just finished the whole almost 7 hours video. great work and teaching!", "likes": 0}, "replies": [{"author": "Peng Du", "text": "Nykyta Kudrya nah haha over a few weekends", "likes": 0}, {"author": "Nykyta Kudrya", "text": "In one go? (just like star wars?)", "likes": 1}]}, {"topLevelComment": {"author": "Realthought", "text": "Hello everyone , i wanted to know after completing this tutorial what will be the next step .... i mean need to learn more .. any suggestioins ?", "likes": 0}, "replies": [{"author": "Sabino Ramirez", "text": "Once you've the language the best way to learn more is to build things using go. You will be exposed to real world issues that you cannot learn to solve a in a tutorial of the basics and will only add to your experience as a go programmer.", "likes": 1}]}, {"topLevelComment": {"author": "John De Oliveira", "text": "There is an error around 1:07:00 when describing &^, the and not operator. 0100 is said to be 8. The correct answer to a &^ b when a is 1010 and b is 0011: 1000. The video gives 0100 as the correct answer.", "likes": 0}, "replies": [{"author": "John De Oliveira", "text": "I should also mention that the video is well done and I'm learning a lot. :)\nThank you, Mr. Van Sickle.", "likes": 0}]}, {"topLevelComment": {"author": "Vitor Queiroz", "text": "I just didnt get why in the channels example, the receiving part was declared first (the anonymous function), but the sending part was being executed first, what defined the order of execution here?", "likes": 1}}, {"topLevelComment": {"author": "Gary Tsai", "text": "Love the vids so far. However, there is an updated feature for Capacity in 1:47:53 section. The calculation of capacity within an array has changed.", "likes": 4}, "replies": [{"author": "HillaShx", "text": "I was confused about that when I got a different output than what' shown in the video, so thanks for the clarification.", "likes": 0}]}, {"topLevelComment": {"author": "Amirul Clasher", "text": "nice video", "likes": 0}}, {"topLevelComment": {"author": "BuGr33d0_Hunter", "text": "Usr/ isn't user its unix system resources.   Just what we need another programming language.  I've already learned about 14 now. Neverending information.", "likes": 0}, "replies": [{"author": "BuGr33d0_Hunter", "text": "@Nullpointer not just that. There all the same in a way. Just the syntax is different.", "likes": 0}, {"author": "Nullpointer", "text": "14 programming languages and mediocre in all of them lmao", "likes": 0}]}, {"topLevelComment": {"author": "Roger Lawrence", "text": "Only half way through, but I'm learning so much. thank you", "likes": 0}}, {"topLevelComment": {"author": "Kalhan Pamuditha", "text": "Thank you!", "likes": 0}}, {"topLevelComment": {"author": "liberi futurae", "text": "Best tutorial on Go out here!!!!  \n\ud83d\ude03\u2764\ufe0f", "likes": 2}}, {"topLevelComment": {"author": "K\u00e1ri Har\u00f0arson", "text": "Lucid, Intelligent, fast!  Love it!", "likes": 0}}, {"topLevelComment": {"author": "Mohamed Aboulmaaly", "text": "This video is for Failing Forward channel \ud83e\udd28", "likes": 0}}, {"topLevelComment": {"author": "Liwei Dai", "text": "This video course is excellent,  3Q for sharing this free course for the developers", "likes": 0}}, {"topLevelComment": {"author": "beartastic", "text": "Its difficult to give this video enough praise. Its long, but not slow, its through but not boring. Its just right (if we ignore the &^ part, but thats still 99.9999% pure gold:)", "likes": 0}}, {"topLevelComment": {"author": "Abhijit Maity", "text": "Dude, thanks for the video. But the coolest feature is with complex example. There a re cores of example  for interface but you gave buffer example. It is very difficult  for beginners.", "likes": 0}}, {"topLevelComment": {"author": "Benutza", "text": "Just starting, but it sounds great. This comment is for the algorithm.", "likes": 2}, "replies": [{"author": "Benutza", "text": "@Kimion I didn't, but I watched roughly half of it. I am decent in Golang by now tho, I even published a small synchronization program on GitHub. It's a great language!", "likes": 0}, {"author": "Kimion", "text": "Did you finish the course?", "likes": 1}]}, {"topLevelComment": {"author": "Peng Du", "text": "what's the design logic behind struct being copied by value whereas map by reference?", "likes": 0}}, {"topLevelComment": {"author": "Andres Mijares", "text": "nothing to say but thank you, this is amazing, you basically helped me to keep my job during these hard times", "likes": 167}, "replies": [{"author": "Andres Mijares", "text": "@LeJames Bron i wouldnt say \"get a job\" but def it would help to catch up if this is a new language for you, it was my case at the moment I made this comment!", "likes": 0}, {"author": "LeJames Bron", "text": "Would you say one can get a job with just this video alone?", "likes": 0}, {"author": "Stephon King", "text": "I wish I had seen it... I left mike because I didnt see this video \ud83d\ude2d... congrats tho", "likes": 1}]}, {"topLevelComment": {"author": "aria \u2661", "text": "Seems very quality and clear explanation, well-done! thanks, the man for your contribution in this regards", "likes": 0}}, {"topLevelComment": {"author": "Felipe C\u00e9spedes", "text": "Awesome 1:42:00", "likes": 1}}, {"topLevelComment": {"author": "Anthony Firmin", "text": "+Michael Van Sickle I realise you are very excited and really into golang... but could you speak a little slower... please?", "likes": 0}}, {"topLevelComment": {"author": "Nooras Fatima Ansari", "text": "At time 2:7:00 you have explained about length and capacity my compiler gives this output. Maybe it changed in new version(go version go1.14 linux/amd64)\nCode  :\ny := []int{}\ny = append(y, 1)\nfmt.Printf(\"%v\\n\", len(y))\nfmt.Printf(\"%v\\n\", cap(y)) \ny = append(y, 2, 3, 4, 5, 6)\nfmt.Printf(\"%v\\n\", len(y))\nfmt.Printf(\"%v\\n\", cap(y))\nOutput :\n1\n1\n6\n6", "likes": 7}, "replies": [{"author": "Gaurav Chandel", "text": "try removing 6 from y = append(y, 2, 3, 4, 5, 6)\nyou will get capacity = 6\nor add/insert 7 (or any other number) in y = append(y, 2, 3, 4, 5, 6)\nyou will get capacity = 8", "likes": 1}, {"author": "Nooras Fatima Ansari", "text": "@Vicky_007 yeeah I check it online it shows exactly that output which shown in video.... But in local pc it shows different output.", "likes": 0}, {"author": "Vicky_007", "text": "ya i think so bruhh it shows me the same output", "likes": 0}]}, {"topLevelComment": {"author": "\u540e\u77e5\u540e\u89c9", "text": "very good video", "likes": 0}}, {"topLevelComment": {"author": "Peng Du", "text": "\"declared and not used\" you call it interesting. I call it pain-in-the-a**\n\n\ngreat video though.", "likes": 1}, "replies": [{"author": "Nullpointer", "text": "@Peng Du Because Go's creator -- Rob Pike -- is a massive, elitist fuckwit. Which is funny because his language isn't even very good at all", "likes": 0}, {"author": "Peng Du", "text": "same applies to all these \"name conventions\". what's the point of having these \"implicit assumption\" in a language. Every of these convention is explicitly defined in other language. What's the reason here that Go wants to be different? Go seems to have lots of things like this with no apparent reason.", "likes": 1}, {"author": "Peng Du", "text": "and yet they allow declaring struct without the name of the struct member, which as shown in the video is just time bomb for problem. In this perspective I don't really get the design of this language. At place where it doesn't matter, it's super strict (like the defined but not used), while it also leaves out invite to bad code like for the struct. What the hell is their standard of \"good code\"?", "likes": 1}]}, {"topLevelComment": {"author": "Zedd Y", "text": "Thank you!", "likes": 0}}, {"topLevelComment": {"author": "Bii Kih", "text": "What microphone / audio software do you use? The audio is great. I\u2019m a teacher and need a good audio source for my now online teaching. Thanks.", "likes": 0}}, {"topLevelComment": {"author": "Md Monirul Islam", "text": "How can I get the Summery Slide?", "likes": 0}}, {"topLevelComment": {"author": "Do-or-Die", "text": "Why the hell they are creating all these languages ?\nIs c and c++ not enough ?", "likes": 0}, "replies": [{"author": "The Exception Handler", "text": "Golang has better handling for managing thread in a multithreaded application using the goroutines\n\nyou can watch the complete tutorial about golang, on the below channel\n\nhttps://youtube.com/channel/UCgRrjz7mHwqTQqm6KC4mSBQ", "likes": 0}]}, {"topLevelComment": {"author": "\u7231\u60c5\u798f\u5e03\u65af", "text": "you have error in the &^ operation,if get binary result is 0100,how can it be 8? the truth of this &^ binary operation result should be  1000", "likes": 0}}, {"topLevelComment": {"author": "Mihajlo Nesic", "text": "1:08:05 About bit shifting, if you have a number 9 (1001 in binary) and bit shift by 2 to the left (9 << 2) you just add two zeros at the end of number 9 (100100) and you get a number 36. Similar for the >> operator, you just add n zeros to the beginning.", "likes": 0}}, {"topLevelComment": {"author": "Yuval Pruss", "text": "Great video! thanks so much", "likes": 0}}, {"topLevelComment": {"author": "Nick Tromboukis", "text": "2:22:02 that second parameter is a hint for the go compiler to allocate memory. If you know that you're expecting 10,000 key value pairs you can let go allocate that initially instead of re-allocating the memory during runtime. That's my understanding after doing a little bit of digging \u00af\\_(\u30c4)_/\u00af", "likes": 18}, "replies": [{"author": "Daniel Kurniadi", "text": "nice", "likes": 1}]}, {"topLevelComment": {"author": "Raw At Life", "text": "Completed it in two days it was very nice and informative only one part is little difficult to understand is that of \"INTERFACE\" else is all good . Really appreciated the content .\nThanks", "likes": 0}}, {"topLevelComment": {"author": "Pedro Junior", "text": "Congratulations for this video! Thanks for your special time to teach us!", "likes": 0}}, {"topLevelComment": {"author": "Luis Serrano", "text": "Sometime English subs helps with English Technical words for no native speakers. :-(", "likes": 0}}, {"topLevelComment": {"author": "Kees de Jong", "text": "Awesome!! Love the open tech/science community. It's like the global problem solving and information sharing brain... Love the 21st century.", "likes": 0}}, {"topLevelComment": {"author": "Ashish Galagali", "text": "Awesome! Thank you :)", "likes": 0}}, {"topLevelComment": {"author": "user", "text": "So, I am coming from Java and there is so much weird stuff like the variable naming scheme or the compiling errors when a variable is not used.", "likes": 1}}, {"topLevelComment": {"author": "Yoni Shafrir", "text": "1:07:05 but 0100 is not 8, its 4", "likes": 0}}, {"topLevelComment": {"author": "Terminal World", "text": "Go is shat, it can't even run the simplest of programs.\n\n\npackage main\n\nimport \n(\n \"fmt\"\n)\n\nfunc main() \n{\n fmt.Println(\"Hello, playground\")\n}\n\n\nFails.\n\n\nUseless junk.", "likes": 1}, "replies": [{"author": "The Exception Handler", "text": "If this is the exact code then the problem is with the starting of the curly bracket. The function starting curly bracket should be in same line where you have specified the function name and signature.\n\nI think you should plan to watch our tutorial on golang basic on the below mentioned channel \n\nhttps://youtube.com/channel/UCgRrjz7mHwqTQqm6KC4mSBQ", "likes": 0}, {"author": "Failing Forward", "text": "Hmm. Interesting that you are having problems. Assuming that you are really trying to learn Go, and not just trolling, I'd love to try and help out. Can you share a link to this app on GitHub or similar? I'd be happy to take a look!", "likes": 0}]}, {"topLevelComment": {"author": "Shappire Black", "text": "Thank you for giving us a free source for learning. Thank you so much.\ud83d\udc96", "likes": 0}}, {"topLevelComment": {"author": "lardosian", "text": "What are the more common use cases for Go?", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "I've also seen it been used for small script-ish things amd command line tools", "likes": 0}, {"author": "lardosian", "text": "@Failing Forward Thank you!", "likes": 0}, {"author": "Failing Forward", "text": "The most common use cases that I'm aware of are network services, such as the backing applications for a microservice-based application suite.", "likes": 2}]}, {"topLevelComment": {"author": "Nazar Ahmed Amjad", "text": "Thank you very much, really good content", "likes": 1}}, {"topLevelComment": {"author": "F S", "text": "there seems no subtitiles,expect to  add that~~~", "likes": 0}}, {"topLevelComment": {"author": "S\u00e9lom", "text": "85 dislikes? Those people definitely didn't smoke the right weed.", "likes": 1}}, {"topLevelComment": {"author": "Codegirl", "text": "You're a grade saver. Amazing video!", "likes": 1}}, {"topLevelComment": {"author": "Wentao Qiu", "text": "35:49 variables", "likes": 0}}, {"topLevelComment": {"author": "jzeman", "text": "2:12:06. We *do* have the tools.  To make a memory copy of a slice there is no need to loop.\n a := []int {1,2,3}\r\n b := append([]int(nil), a...);", "likes": 17}}, {"topLevelComment": {"author": "jzeman", "text": "Notes on UTF8. UTF8 can represent any Unicode text. Each element in a Go string is a UTF8 Code Unit - not a UTF8 character. Since the first 7 bits of UTF8 values correspond to their ASCII counterparts, those characters require only one code unit, characters with accents or for other non-Roman script require more Code Units. So if you were to run fmt.Println([]byte(\"Hello, \u4e16\u754c\")) you will see [72 101 108 108 111 44 32 228 184 150 231 149 140]. Notice that \"Hello, \" correlates one-to-one with [72 101 108 108 111 44 32], while the other two characters require 3 UTF8 Code Units each. Since Unicode is defined for code points up to 10FFFF a rune has more than enough capacity to fully express any code point . Code points can still combine to form characters.", "likes": 0}, "replies": [{"author": "jzeman", "text": "I use \"character\" in my comment above, the official term is \"grapheme\".", "likes": 0}]}, {"topLevelComment": {"author": "Duan Tran Ngoc", "text": "I'm not a native so my english is not good, sometimes i can't hear what you're talking about. Please add english-sub . Thank you", "likes": 1}}, {"topLevelComment": {"author": "Govindrao Kulkarni", "text": "3 mins into it and I'm already liking it..", "likes": 5}}, {"topLevelComment": {"author": "Kishan Khadela", "text": "good explanation", "likes": 2}}, {"topLevelComment": {"author": "nerosonic", "text": "The go logo is so ugly. It just looks like some blue blob", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "Have you seen the language? Seems pretty fitting", "likes": 0}]}, {"topLevelComment": {"author": "Aji Kuspriambodo", "text": "really appreciate this! thanks!^^b", "likes": 1}}, {"topLevelComment": {"author": "Aman Verma", "text": "this channel is doing great things... keep it up !!.. and great tutorial on golang", "likes": 3}}, {"topLevelComment": {"author": "Zigmas Slu\u0161nys", "text": "Do you have an opinion about GC performance and delays concerning huge data? I guess discords main issue was GC performance spikes and that's why they switched to rust for that specific part of their system", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "GC overhead is fine for most cases. I mean even Minecraft runs on Java\n\nIn network services you wil mostly have a problem with inconsistent latencies even when throughput is fine", "likes": 2}, {"author": "Failing Forward", "text": "I saw that article. While I obviously can't speak to their specific use case, I can say that Go's garbage collection tooling has been a source of aggressive optimization for a long time now. \n\n\n\nFrom what I understand, Discord was using a fairly old version of Go (1.9?). That was probably the latest version at the time that they decided to move to Rust, but Go's GC tooling has matured a lot since then. Also, from what I understand, Discord was already experimenting with Rust so they might have had more motivation than strictly a performance issue.\n\nOverall, I'd have to say that any language with a garbage collector is probably going to run into a use case where the GC is a liability. In my experience, those situations are exceedingly rare in the real-world, but they do happen. In those cases, changing to a language whose strengths are better aligned to the problem makes total sense.\n\n\nHope that helps!", "likes": 1}]}, {"topLevelComment": {"author": "Joy Tocho", "text": "Nice but not appropriate to a beginner in programming", "likes": 0}, "replies": [{"author": "The Exception Handler", "text": "you can watch the complete tutorial about golang, on the below channel\n\nhttps://youtube.com/channel/UCgRrjz7mHwqTQqm6KC4mSBQ", "likes": 0}]}, {"topLevelComment": {"author": "Joel Davis", "text": "Really enjoyed this video, might be useful to get to advanced topics like ginkgo, glide, and more on golang project structure.", "likes": 1}}, {"topLevelComment": {"author": "Bryan Lumbantobing", "text": "please make english subtitle in this video even it auto generated . pleas", "likes": 0}}, {"topLevelComment": {"author": "S. Z.", "text": "U talked to many unnecessary things and made this very complex, lengthy to understand.", "likes": 0}}, {"topLevelComment": {"author": "Abhishek Vaid", "text": "Feedback: The section on Interface was hurried and wasn't very easy to understand.", "likes": 0}}, {"topLevelComment": {"author": "Sandeep Chadha", "text": "Thank you so much for this video, really appreciate!", "likes": 1}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}]}, {"topLevelComment": {"author": "Abhishek Porwal", "text": "at 1:41:35  -- bit shifting  example -- I guess for  MB and GB calculation it should not be 2 to 100 and 1000 . it should 20 and 30. Please correct my understanding", "likes": 1}}, {"topLevelComment": {"author": "Harry", "text": "Awesome video dude, I would like to see more. Keep them coming.", "likes": 1}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}]}, {"topLevelComment": {"author": "Aditya Pratap", "text": "How did you make import suggestions work in vscode at 31:40 . I have been trying for last 12 hours to enable that feature.  Please help!!!", "likes": 1}, "replies": [{"author": "Aditya Pratap", "text": "@truekiba Thanks!!!", "likes": 0}, {"author": "truekiba", "text": "In settings (ctrl + ,) type in \"Autocomplete Unimported Packages\" and select the checkbox. Or in your settings.json add \"\"go.autocompleteUnimportedPackages\": true\"", "likes": 1}]}, {"topLevelComment": {"author": "Cat4-7", "text": "0:7:48", "likes": 0}}, {"topLevelComment": {"author": "Bhageerath Reddy", "text": "Read about ConcurrentDictionary in C#. The constructor there takes a second parameter called initialCapacity. I am assuming the second parameter in make() for a map is going to be that. Just a wild guess though!", "likes": 0}}, {"topLevelComment": {"author": "n3rdy", "text": "I don't understand why youd need the PATH variable.. Would be awesome if anyone could explain.", "likes": 0}, "replies": [{"author": "Failing Forward", "text": "Where are you talking about? If you provide a timestamp, I'll try to help.", "likes": 0}]}, {"topLevelComment": {"author": "Swer4324", "text": "42 + 27 \n\ni see what u did there", "likes": 1}}, {"topLevelComment": {"author": "Mayank Kumar Vlogs", "text": "Best channel to learn Computer Programming!", "likes": 0}}, {"topLevelComment": {"author": "Lexi Lex", "text": "thank you", "likes": 1}}, {"topLevelComment": {"author": "Petri Laakso", "text": "This video gives anyone enough information to get going with Golang \ud83d\ude4f thank you so much!", "likes": 3}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}]}, {"topLevelComment": {"author": "Evoleo", "text": "I love how he uses 42 (meme number) and then adds 27 to it to get an another meme number.\n\n\n*Nice.*", "likes": 16}, "replies": [{"author": "superscatboy", "text": "\"meme number\" smh", "likes": 1}, {"author": "taunty1", "text": "I'm dead. I noticed the 42 but not the adding 27 part", "likes": 2}, {"author": "Evoleo", "text": "@Australian Panda lol, edited", "likes": 0}, {"author": "Australian Panda", "text": "\"a meme number\" ok..", "likes": 1}]}, {"topLevelComment": {"author": "Moto Nugget", "text": "control WHAT?! lmao", "likes": 0}}, {"topLevelComment": {"author": "Dawn", "text": "1:31:48 nice", "likes": 1}}, {"topLevelComment": {"author": "Inderjit Kolappan", "text": "Every sec is a vital info. Thanks", "likes": 3}}, {"topLevelComment": {"author": "Timur Babyuk", "text": "Not sure about cleaner, but I read \"theHTTPRequest\" as \"the HTTPR equest\"", "likes": 6}}, {"topLevelComment": {"author": "chris plusplus", "text": "i wish golang was used in flutter, instead of dart, to be able to promote and expose the language better", "likes": 6}, "replies": [{"author": "superscatboy", "text": "I haven't heard Dart mentioned for a very long time. I was super hyped about it at the start, but when it just devolved into a convoluted way to write JavaScript I totally lost interest. It was such a shame, as the original plan had a lot of promise.", "likes": 1}]}, {"topLevelComment": {"author": "Rutvij Khatri", "text": "Anyone else confused with the capacity portion shown at (2:05:52)? I still get both length and capacity as 1. Have there been some updates in golang related to that? Please give the link to reference if anyone knows about that.", "likes": 0}}, {"topLevelComment": {"author": "ubiquity", "text": "1:41:30 correct me if I'm wrong but  MB is not 2^100 but rather 2^20. In other words the constants are increasing by a factor of 2^10 not 2^100.", "likes": 1}}, {"topLevelComment": {"author": "Equity Track", "text": "Thank you for a detailed video. Appreciate all your efforts and time spent in making a quality video without adds. I have subscribed to get more informative videos.", "likes": 1}}, {"topLevelComment": {"author": "Asyiatul Rahmi Putri", "text": "Thank you very much for the tutorial.", "likes": 1}}, {"topLevelComment": {"author": "BLATSHIT", "text": "Thanks so much for this", "likes": 1}}, {"topLevelComment": {"author": "MrPirax", "text": "You had me doubting myself at 1:06:40, 0100 is 4, but it should have been 1000\nStill an excellent video though, it's really helping me a lot.", "likes": 29}, "replies": [{"author": "\u041d\u0438\u043a\u0438\u0442\u0430 \u041b\u0443\u043f\u0435\u043d\u043a\u043e", "text": "Also noticed it. Thank you. :D", "likes": 0}, {"author": "gloubiboulga", "text": "@Ruchi Saluja 1010 &^ 0011 = 1010 & 1100 = 1000 => 8", "likes": 1}, {"author": "MrPirax", "text": "@Ruchi Saluja Well, the result for the a &^ b is 8 (which he gets as well, and I got also when running it myself), but 0100 is 4\nand it should be 1000 since \n1 &^ 0 => 1 & 1 = 1, \n0 &^ 0 => 0 & 1 = 0, \n1 &^ 1 => 1 & 0 = 0, \n0 &^ 1 => 0 & 0 = 0", "likes": 9}, {"author": "Ruchi Saluja", "text": "Could you explain why it should be 1000? I am a little confused myself at this point.", "likes": 0}]}, {"topLevelComment": {"author": "A", "text": "thanks!!!", "likes": 1}}, {"topLevelComment": {"author": "Mark Durbin", "text": "The second parameter on the make(map[string]int,10) function is the initial capacity", "likes": 5}, "replies": [{"author": "Hoof` Hearted", "text": "Does that fix the size of the map explicitly?", "likes": 1}]}, {"topLevelComment": {"author": "Yana Osipov", "text": "Thank you, It was really helpful to get started :)", "likes": 2}}, {"topLevelComment": {"author": "Cisco", "text": "Is it possible to add a timer to your program? for example, say I was creating a game and I wanted to time how long it took them to complete the game or if I wanted to limit the time  they have to complete it...", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "Yes, that's possible as Go is turing complete", "likes": 0}, {"author": "bashiry", "text": "you can do it", "likes": 1}]}, {"topLevelComment": {"author": "Mark Galea", "text": "Great video, minor correction, @1:07:00 the last bitwise operation explanation is incorrect, 0100 is not 8, 1000 is 8", "likes": 1}}, {"topLevelComment": {"author": "Hyper Hero", "text": "I'm just beginning and sheepish to say but as far as I can tell Golang now returns elements within a map in alphabetical order, and elements added to the map are slotted in that way too. I.E. statePopulations[\"Georgia\"] would return right after statePopulations[\"Florida\"] when the map statePopulations is called.", "likes": 0}}, {"topLevelComment": {"author": "Lorenzo M", "text": "The course is really good. I understand well but next time put the subtitles so people can understand better. I am italian", "likes": 1}}, {"topLevelComment": {"author": "Mike Mcgrath", "text": "Just wanted to say thank you for offering such a comprehensive, in depth, and all around great video for totally free. This video clearly took many hours of your life to create, and the world needs more people like you. THANKS.", "likes": 31}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}]}, {"topLevelComment": {"author": "C", "text": "Learn Go in 3.5 hrs *2x Playback Speed*", "likes": 1}, "replies": [{"author": "mart3323", "text": "$(\"video\").playbackRate = 3", "likes": 0}]}, {"topLevelComment": {"author": "Hsbcbdj Fmrkgjkv", "text": "Learn Go in 3.5 hrs *2x Playback Speed*", "likes": 0}}, {"topLevelComment": {"author": "u3u", "text": "For those on mobile, like me:\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Introduction \n\u2328\ufe0f (0:16:57) Setting Up a Development Environment \n\u2328\ufe0f (0:35:48) Variables\n\u2328\ufe0f (0:57:05) Primitives \n\u2328\ufe0f (1:26:29) Constants \n\u2328\ufe0f (1:47:53) Arrays and Slices \n\u2328\ufe0f (2:17:20) Maps and Structs\n\u2328\ufe0f (2:48:00) If and Switch Statements \n\u2328\ufe0f (3:21:17) Looping \n\u2328\ufe0f (3:41:34) Defer, Panic, and Recover \n\u2328\ufe0f (4:03:57) Pointers \n\u2328\ufe0f (4:21:30) Functions \n\u2328\ufe0f (4:57:59) Interfaces \n\u2328\ufe0f (5:33:57) Goroutines \n\u2328\ufe0f (6:05:10) Channels", "likes": 1311}, "replies": [{"author": "Dmitriy", "text": "Does the information in this course actual now in 2022 ?", "likes": 0}, {"author": "LillanaKitten", "text": "Thanks \ud83d\ude00", "likes": 0}, {"author": "frosty", "text": "Efforts...", "likes": 0}, {"author": "Shambhav", "text": "@ccriztoff Who said you can't be active on mobile? And what weird language is your name in. This just breaks English. This may seem okay at the end but it breaks the typing.", "likes": 1}, {"author": "Gavin M", "text": "Not all heroes wear capes.", "likes": 0}]}, {"topLevelComment": {"author": "Thomas Neilly", "text": "This is what I love most about the tech community; learning, sharing, and teaching. This is a fantastic resource and it is instructors like you that are helping to pave a new generation of coders. Thank you for your dedication. Go makes sense now.", "likes": 5}}, {"topLevelComment": {"author": "Shubham Mathur", "text": "First of all, Thanks for the awesome tutorial...I have one query @2:22:30, is it again required to use\nstatePopulations = map[string]int{\n  \\ \\  \\ \\\n}\nif we have already defined the type of key and value in make function.", "likes": 1}}, {"topLevelComment": {"author": "bert", "text": "When I'm no longer broke, I promise I'll donate.", "likes": 1139}, "replies": [{"author": "Vishwa", "text": "+1", "likes": 0}, {"author": "Abhinav Ghosh", "text": "@Genghis Khan Pepe  me too! they are so good that even when they are not asking for money , people still are willing to donate.", "likes": 0}, {"author": "Diego Iturriaga", "text": "where is the donate button?", "likes": 1}, {"author": "Wertia Dreams", "text": "I wont . I'm not broke but I'm not rich. Only if I'm rich", "likes": 2}, {"author": "Suave Bajaj", "text": "+1", "likes": 2}]}, {"topLevelComment": {"author": "Wiliam Buckingham", "text": "I  hope  to  see  English Subtitle\r.", "likes": 0}}, {"topLevelComment": {"author": "Ksuby", "text": "Is it bad practice to use := instead of writing out what type you want the variable to be ex   var i int = 30 vs var i := 30", "likes": 0}, "replies": [{"author": "Ksuby", "text": "Failing Forward yeah that does help! I totally forgot about int16 32 and so forth. So it makes sense , coming from JS we didn\u2019t have that haha \ud83d\ude05", "likes": 1}, {"author": "Failing Forward", "text": "Not at all! If the default type for the literal your assigning (an int in your example) is adequate, then := is the idiomatic way to initialize it. Go tends to emphasize expressiveness in cases like this so shorter is better. You'd normally use the \"var i ...\" syntax when you either need to forward declare the variable (e.g. you're going to assign it in a loop that comes later) or if the default type isn't what you want (e.g. var i int32 = 30).\n\n\nHope that helps!", "likes": 1}]}, {"topLevelComment": {"author": "zz c", "text": "i learn english by the video?", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "No?", "likes": 0}]}, {"topLevelComment": {"author": "Harrys Kavan", "text": "Kind Request, would it be possible to get the Code / Notes?", "likes": 0}}, {"topLevelComment": {"author": "\u30b0\u30a8\u30f3\u30fb\u30c1\u30e7\u30f3\u30fb\u30bf\u30f3", "text": "I'm from Viet Nam. Thank your tutorial. Hope you add subtitles, i'm bad in listening", "likes": 0}}, {"topLevelComment": {"author": "Michael Carnright", "text": "Great vid!  At 1:06:45 the \"&^\" appears to be taught as a NAND, but when done on the playground it appears to act as AND NOT as in P AND !Q.  Did I misunderstand?", "likes": 0}}, {"topLevelComment": {"author": "Horatiu Stanciu", "text": "Beautiful, thank you!", "likes": 1}}, {"topLevelComment": {"author": "Wisnu W", "text": "thanks you for your hard works <3", "likes": 1}}, {"topLevelComment": {"author": "Joon Son", "text": "1:09", "likes": 0}}, {"topLevelComment": {"author": "Black Hermit", "text": "Thank you so much for this tutorial! Please subscribe to my channel!", "likes": 0}}, {"topLevelComment": {"author": "Hash", "text": "You guys are simply awesome \ud83d\udd25 keep up the good work!", "likes": 2}}, {"topLevelComment": {"author": "bobsort", "text": "You seem to be so excited about abilities VSCode giving you. but when I which was working with IDE in windows since 1996, I'm still surprised that this IDE still cannot do half the stuff you can do with Visual Studio or even some older IDEs such as \"Borland Delphi 5 (1999)\" \"Visual Studio 2000\" or \"DreamWeaver (1997)\" but still, VSCode is very good at 3 things: Calling home, giving you things that you don't need and Crashing for no obvious reason", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "Vscode is more of a text editor that _can_ sorta be a lite IDE. If you want a proper IDE checkout JetBrains products", "likes": 0}]}, {"topLevelComment": {"author": "Rogier van Doggenaar", "text": "Really good tutorial, Thanks Michael", "likes": 1}}, {"topLevelComment": {"author": "ABHINAV SHROFF", "text": "16:57\n35:48", "likes": 2}}, {"topLevelComment": {"author": "Michael Ishri", "text": "A truely excellent primer for Go, explained clearly and concisely. Thanks for making this available for the everyone, for free. A wonderful way to help newbies like me to get into Golang.", "likes": 17}}, {"topLevelComment": {"author": "Max V", "text": "Leave a like if you watched it in one GOlang!", "likes": 1}}, {"topLevelComment": {"author": "Rajesh Bimana", "text": "please can you enable subtitles.", "likes": 0}}, {"topLevelComment": {"author": "Sblinger", "text": "I finished the entire video  thanks to 1.75x", "likes": 1}}, {"topLevelComment": {"author": "Harley Burton", "text": "Bang Up Job. Thank you for this.", "likes": 1}}, {"topLevelComment": {"author": "Krassi Em", "text": "This is an educational video so I am not looking to argue regarding the example with the \"continue\". However, please note that for large sets, if one is planning to print out only odd numbers and skip the even numbers, then one does not necessarily need continue statement. Simply start printing at one, and then increase the counter by two! 1,3,5,7,9, etc. This will run nearly twice as fast as the code at 3:21\nThanks!!", "likes": 0}}, {"topLevelComment": {"author": "Huabing Zhao", "text": "Awesome golang video tutorial!  Thanks,man!", "likes": 3}}, {"topLevelComment": {"author": "Julian Alexander", "text": "Why not to use the distro default repository to get Go installed?", "likes": 0}, "replies": [{"author": "Failing Forward", "text": "Great question, Julian. That is certainly an option. As I recall (this video was originally created a couple of years ago), the distro repository was lagging behind several versions and I wanted to create the video using the latest available version of the language.", "likes": 0}]}, {"topLevelComment": {"author": "Cr7pt0r", "text": "C#, .NET CORE", "likes": 0}}, {"topLevelComment": {"author": "Jon Forrest", "text": "In your summary of the basic types, and I think one other place, you imply that there's no such thing as uint64. But there is. From the Go Language Spec:\n\n\"uint64 the set of all unsigned 64-bit integers (0 to 18446744073709551615)\"", "likes": 2}}, {"topLevelComment": {"author": "Fachrizal Rifahdi", "text": "is learn go must learn math?", "likes": 0}}, {"topLevelComment": {"author": "Jon Forrest", "text": "I believe your presentation of runes, where you said they were UTF-32, was incorrect. Instead, a rune can hold a single UTF-8 \"character\", which can require between 1 and 4 bytes.", "likes": 1}, "replies": [{"author": "Nullpointer", "text": "A rune doesn't actually hold a UTF-8 \"character\" either but an unencoded unicode codepoint", "likes": 0}, {"author": "Failing Forward", "text": "@Jon Forrest it's very possible that there are some minor issues here and there. I made originally made this series a few years ago and free code camp recently compiled the series into this monolith.\nI'm actually in the process of remaking and expanding this content even further for my new online school.", "likes": 0}, {"author": "Jon Forrest", "text": "@Failing Forward This is an excellent video, and it's very kind of you to release it for free. There are several other places where I think what you're saying is incorrect, like when you first mention byte slices. I'm not sure if you're just trying to simplify things or making an actual mistake.", "likes": 0}, {"author": "Failing Forward", "text": "You are correct. Go uses UTF-8 characters. Good eye for detail!", "likes": 0}]}, {"topLevelComment": {"author": "An\u0131l Kazdal", "text": "There is 42 dislike. it seems like 42 people is still using java", "likes": 0}, "replies": [{"author": "Yeetesh Pulstya", "text": "which Java developer hurt you bro", "likes": 1}]}, {"topLevelComment": {"author": "pavithra K", "text": "Where it use Printf and println ?", "likes": 0}}, {"topLevelComment": {"author": "Kevin Wei", "text": "the BEST golang tutorial in the universe!", "likes": 2}}, {"topLevelComment": {"author": "RuleKinG", "text": "Watched the whole video in almost one Go. Woke up next morning converted and started to build some BS slack-bot to test my new knowledge. Thanks & Respect.", "likes": 3}}, {"topLevelComment": {"author": "Siva D", "text": "Excellent stuff , thanks a ton mate", "likes": 1}}, {"topLevelComment": {"author": "Bj\u00f6rn K\u00f6tter", "text": "One of the best tutorial videos I have ever seen on YouTube.", "likes": 10}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}]}, {"topLevelComment": {"author": "Rizwan Ahmed Butt", "text": "awesome", "likes": 1}}, {"topLevelComment": {"author": "rallokkcaz", "text": "Pretty sure half of this video is just how to program, there's barely anything about the actual useful features of go.", "likes": 0}}, {"topLevelComment": {"author": "\u0cb0\u0cb5\u0cbf\u0c95\u0cbf\u0cb0\u0ca3 Ravikiran \u0cb8\u0ca4\u0ccd\u0ca4\u0cbf\u0c97\u0cc7\u0cb0\u0cbf Sattigeri", "text": "SGVP\n\n1:27:00 Constants\n1:58:36 Slices Jsr|3Oct19\n2:17:26 Maps and Structs ONS|14oct19", "likes": 1}}, {"topLevelComment": {"author": "Mani", "text": "Salaam... Can anyone help me in telling should I learn Go or kotlin for future? Thank you", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "@Mani Of the two definitely Kotlin", "likes": 0}, {"author": "Mani", "text": "@NERD of GAMES Salaam pls do", "likes": 0}, {"author": "NERD of GAMES", "text": "Mani im gonna write here so just I can see the answers", "likes": 1}]}, {"topLevelComment": {"author": "komal chitkara", "text": "This is an awesome video. It is so compact and well explained.\nThanks a lot !!!\nLooking forward for a video for web development with go.", "likes": 4}}, {"topLevelComment": {"author": "zach duncan", "text": "fmt=`fumpt`?!\nno, its `ef-em-tee`", "likes": 0}}, {"topLevelComment": {"author": "Rama Chandran", "text": "Very good tutorial on go", "likes": 1}}, {"topLevelComment": {"author": "Scott Soward", "text": "Vim command :x == :wq", "likes": 0}}, {"topLevelComment": {"author": "Desertpillar", "text": "just watched this straight through on 2x speed and scrubbing... so about 2 hours total time... I feel like Neo in The Matrix acquiring new information :). Thank you! This was super awesome and I now understand that Go is well made! Really like the constructs around arrays and slices in combination with matrix computations etc!", "likes": 5}}, {"topLevelComment": {"author": "Diego Barria Paiva", "text": "You are awesome. Thanks!", "likes": 3}}, {"topLevelComment": {"author": "liberi futurae", "text": "3/4 of the way and  this tutorial was lay down  for people who already knew a first language.  Yet, is a great tutorial nonetheless.  I learned a lot.   I appreciated it.  Thanks.", "likes": 2}}, {"topLevelComment": {"author": "Adam Bourne", "text": "This video in combination with the \"Introducing Go\" book from Weily are a perfect match!", "likes": 2}}, {"topLevelComment": {"author": "Alexsandro Souza", "text": "Man, I am amazed by this course. Congrats on the amazing work. If it was on udemy I would buy it just to help u.", "likes": 3}}, {"topLevelComment": {"author": "\u0412\u0430\u0441\u0438\u043b\u0438\u0439 \u041f\u0443\u043f\u043a\u0438\u043d", "text": "Could u add auto-subtitles? Regards", "likes": 0}}, {"topLevelComment": {"author": "Laksh Perumal", "text": "Helped to learn quickly and have a insight of GoLang. Thanks a lot", "likes": 4}}, {"topLevelComment": {"author": "Navdeep Singh", "text": "Bro you nailed it you deserve salute for your work", "likes": 14}}, {"topLevelComment": {"author": "Pablo Tejada", "text": "Thank you for the extended Go introduction!", "likes": 19}, "replies": [{"author": "Jatin \ud83c\uddee\ud83c\uddf3", "text": "@Jurendran Senthil Kumar idk", "likes": 0}, {"author": "Jurendran Senthil Kumar", "text": "how to learn advanced concepts and become a golang developer", "likes": 0}]}, {"topLevelComment": {"author": "Inaccessible Cardinal", "text": "Love it. Qq--how does the len function work? For example, in b := a[:len(a)-1]... In JavaScript length is constant time ( but that's kinda because JS arrays aren't really arrays and length is on the prototype), is it constant time here too?", "likes": 0}}, {"topLevelComment": {"author": "Swedish Tea", "text": "Great walkthrough of the basics (Y)", "likes": 7}, "replies": [{"author": "Jurendran Senthil Kumar", "text": "how to learn advanced", "likes": 0}]}, {"topLevelComment": {"author": "Exodion", "text": "Is this video recommended for someone like me, who's new to programming ? I've done a bit of JAVA though.", "likes": 1}}, {"topLevelComment": {"author": "vas u", "text": "Great tutorial.", "likes": 2}}, {"topLevelComment": {"author": "-FikiCar", "text": "11:03 57:17", "likes": 0}}, {"topLevelComment": {"author": "binyan357", "text": "I have to agree with the other authors, this really was a great tutorial on golang.", "likes": 72}, "replies": [{"author": "URVASHI M", "text": "https://m.youtube.com/watch?v=Vl4Ya2GxW-Q&t=456s", "likes": 0}]}, {"topLevelComment": {"author": "Owais Hussain", "text": "Amazing tutorial! Thanks for your efforts.\nI have a question, which golang framework is good for web development to learn after completing this tutorial.", "likes": 1}}, {"topLevelComment": {"author": "George Ariton", "text": "var foo int = 32 gives the lint notice: \"should omit type int from declaration of var foo; it will be inferred from the right-hand side\".", "likes": 3}, "replies": [{"author": "Failing Forward", "text": "Yeah, I think they added the linter to the playground after I made the original videos. I love that they added that!", "likes": 0}]}, {"topLevelComment": {"author": "kunal s lawtawar", "text": "Boss you deserve Noble prize for this  work. thanks a lot.", "likes": 2}}, {"topLevelComment": {"author": "Mahfuzur Rahman", "text": "Thank you. This was a good video.", "likes": 1}}, {"topLevelComment": {"author": "YuuliRose", "text": "no offense, but I don't find this tutorial to be very beginner friendly.", "likes": 0}, "replies": [{"author": "The Exception Handler", "text": "you can watch the complete tutorial about golang, on the below channel\n\nhttps://youtube.com/channel/UCgRrjz7mHwqTQqm6KC4mSBQ", "likes": 0}, {"author": "Nullpointer", "text": "@Failing Forward He's probably refering to the assumption that the listener already has some programming knowledge in another language. So it's more of a \"Golang beginner\" tutorial instead of a \"Golang\" \"beginner\" tutorial", "likes": 0}, {"author": "Failing Forward", "text": "That's an interesting observation. I guess it depends on how you define \"beginner\". Can you help me understand what skill-sets / background do you consider a beginner to have?", "likes": 0}]}, {"topLevelComment": {"author": "loverboyhk", "text": "At 1:08:18 for beginners it might be easier to explain the shift operators in binary with bits actually moving.", "likes": 1}}, {"topLevelComment": {"author": "Yi Man", "text": "Awesome one, really helps a lot for beginners like me.", "likes": 3}}, {"topLevelComment": {"author": "Terence Lam", "text": "I learned some basic JavaScript (20 hours online course I guess). But if I even felt difficulty to follow \"Setting Up a Development Environment\", what pre-requisites do I need to clear before moving on? Do I need to learn Linux first?", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "@blackout Go Stop recommending Python, it's a garbage tier scripting language with dynamic typing which is the worst thing to teach beginners", "likes": 0}, {"author": "blackout Go", "text": "No. You dont need yo learn about linux to program. If your just starting out i recommend python, its cleaner and easier to read and write. What exactly do you want to do?", "likes": 1}]}, {"topLevelComment": {"author": "MattieCooper", "text": "Thank you for making this video! Learned so much!", "likes": 5}}, {"topLevelComment": {"author": "loverboyhk", "text": "You my friend did a very good job. Go has never been so clear.", "likes": 4}}, {"topLevelComment": {"author": "T. Tran", "text": "Could you turn on subtitle generating feature?", "likes": 0}}, {"topLevelComment": {"author": "Shankar SG", "text": "Thank you for video.. very well explained..", "likes": 1}}, {"topLevelComment": {"author": "Bal Loney", "text": "Wow, no ad! This means you are not earning from posting this? How nice!!!", "likes": 0}}, {"topLevelComment": {"author": "Samet \u015eahin", "text": "On 02:03:14, didn't we have to use '&' symbol while declaring arrays to be able to manipulate the array a?", "likes": 0}}, {"topLevelComment": {"author": "Arnau Taberner", "text": "Thank you so much for this video, really appreciate!", "likes": 3}}, {"topLevelComment": {"author": "Tamunotein Oribimaba", "text": "Thank you for this video, I am so happy i came across this channel. I am loyal fan from Nigeria. I am just new to Golang and this tutorials have made me learn a programming lang I have always dream of for free. Thanks you once again", "likes": 23}}, {"topLevelComment": {"author": "Ievgen Dergausov", "text": "hi man, not understand binary operators , can u give a link to have more close look on it", "likes": 0}}, {"topLevelComment": {"author": "Mike Dudeyo", "text": "Amazing intro to Go! Only two hours in and I am truly  getting a feel for the language and its inner working.  All of the resources you link to are also amazing! Thank you for all the hard work!", "likes": 18}}, {"topLevelComment": {"author": "Svipul", "text": "Thanks for not even monetize  the video. Well, personally I hope you monetize the video, it does not matter too much for me, your work deserve some real reward, not only my thanks.", "likes": 3}}, {"topLevelComment": {"author": "Harmandeep Singh", "text": "\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Introduction \n\u2328\ufe0f (0:16:57) Setting Up a Development Environment\n\u2328\ufe0f (0:35:48) Variables\n\u2328\ufe0f (0:57:05) Primitives\n\u2328\ufe0f (1:26:29) Constants\n\u2328\ufe0f (1:47:53) Arrays and Slices\n\u2328\ufe0f (2:17:20) Maps and Structs\n\u2328\ufe0f (2:48:00) If and Switch Statements\n\u2328\ufe0f (3:21:17) Looping\n\u2328\ufe0f (3:41:34) Defer, Panic, and Recover\n\u2328\ufe0f (4:03:57) Pointers\n\u2328\ufe0f (4:21:30) Functions\n\u2328\ufe0f (4:57:59) Interfaces\n\u2328\ufe0f (5:33:57) Goroutines\n\u2328\ufe0f (6:05:10) Channels", "likes": 3}}, {"topLevelComment": {"author": "suneel sai", "text": "you waste person why are you running cant you be  little bit slow I am not able to understand what you are talking about I wasted my  time ...please do-not make videos,, next time if you want to do that give some examples with real world , what you are talking about and be precise you idiot.", "likes": 0}, "replies": [{"author": "netizen trotter", "text": "Show some respect. First of all this is free, second of all no ads....may be you need to learn English and being humble.", "likes": 5}]}, {"topLevelComment": {"author": "Sandro TV", "text": "add automatic subtitles, pls", "likes": 1}}, {"topLevelComment": {"author": "Ume", "text": "Much respect for this channel!", "likes": 1}}, {"topLevelComment": {"author": "Simon -", "text": "wrt your explanation of type conversion, this is known as type assertion in the docs", "likes": 0}}, {"topLevelComment": {"author": "Ionut Alexa", "text": "On my side, using go playground, the map seems a sorted list, just as in C++. Everytime you add a new element, the map gets sorted. I don't know why in your case the map doesn't get sorted!", "likes": 0}}, {"topLevelComment": {"author": "Aleksandar \u0110ur\u0111evi\u0107", "text": "at 1:06:59 the number 0100 is 4 not 8 ... 1000 is correct", "likes": 4}}, {"topLevelComment": {"author": "Aleksandr Vysockij", "text": "Started on this but seems to be going a bit fast for my mind... :(", "likes": 0}, "replies": [{"author": "Failing Forward", "text": "I completely understand. Everyone likes to listen at different speeds. Have you tried slowing down the playback a bit? That make it easier to take it all in.", "likes": 2}]}, {"topLevelComment": {"author": "Oso Grande", "text": "Can't encode all characters with utf-8?    Not all utf-32 characters are 32 bits?   What rubbish.", "likes": 1}}, {"topLevelComment": {"author": "Pro Gamer", "text": "Can I build mobile apps using golang?", "likes": 0}, "replies": [{"author": "Naman Gupta", "text": "Go is specifically used for Backend not Client side(Mobile Apps / Frontend Website)", "likes": 3}]}, {"topLevelComment": {"author": "InspirasiVID", "text": "appreciate man", "likes": 1}}, {"topLevelComment": {"author": "tlb", "text": "37:17", "likes": 0}}, {"topLevelComment": {"author": "Shane Detsch", "text": "Is there a browser plugin that allows one to auto-complete in a go playground?  I thought the \"Better Go Playground\" chrome browser plugin would do this but seems to only auto-complete previously seen methods and variable names and not all the methods available in a package; for example if you type ( fmt.P ) followed by ( control + space ) this does not show me all the methods available in the fmt package that start with ( P ) only those already used in the go playground.", "likes": 0}}, {"topLevelComment": {"author": "ahmar siddiqui", "text": "This is pure GOld !!! \n\ud83d\ude47\ud83d\ude47", "likes": 3}}, {"topLevelComment": {"author": "Yaqing Chyi", "text": "TIME: 1:07:07, fmt.Println(a &^ b) // 0100 , should be // 1000, because a &^ b is equal a & ~ b", "likes": 22}, "replies": [{"author": "Kenneth Cox", "text": "Lmao just comment this and saw your reply. Good catch  man", "likes": 0}]}, {"topLevelComment": {"author": "Makara Hun", "text": "hello can put subtitle cc", "likes": 0}}, {"topLevelComment": {"author": "Carlos Saavedra", "text": "So... Where's the link to the no GOROOT set up that you mentioned @ 20:00 ?", "likes": 0}}, {"topLevelComment": {"author": "laura", "text": "i love you", "likes": 0}}, {"topLevelComment": {"author": "Mohammed Ayaz S", "text": "why don't we have multi-dimensional arrays in Go?", "likes": 0}, "replies": [{"author": "Vamshi Palreddy", "text": "You can create a multi-dimensional array in Go.", "likes": 1}]}, {"topLevelComment": {"author": "Everything Sucks", "text": "thank you for this great tutorial !", "likes": 4}}, {"topLevelComment": {"author": "FanonX Rogers", "text": "This is amazing! I have one request, can you make a tutorial of actually building out an example Go app whether it be a web application/desktop/ or system. Whatever really. It's really hard to find go code bases that reflect an built application.", "likes": 26}, "replies": [{"author": "Sami Fouad", "text": "@Sharthak Ghosh Link??", "likes": 1}, {"author": "Sharthak Ghosh", "text": "Checkout any CNCF projects", "likes": 0}]}, {"topLevelComment": {"author": "Zhiwei Liu", "text": "Thank you very much for sharing such a good tutorial, it is definitely better than golang's official entry level one!", "likes": 5}}, {"topLevelComment": {"author": "Gustavo Roque", "text": "10/10 course man", "likes": 5}}, {"topLevelComment": {"author": "Mohammed Ayaz S", "text": "The video covers a lot of things that even the official Go tour doesn't cover. I love the way how the instructor dives deeper and explains each concept with the code.", "likes": 3}, "replies": [{"author": "Navjot Singh", "text": "@Exodion do both, follow tutorial/documentation and do this video.", "likes": 0}, {"author": "Exodion", "text": "Hi im new to programming, can u tell me if  this video is better compared to the official tour for a beginner ?", "likes": 0}]}, {"topLevelComment": {"author": "Makara Hun", "text": "please put subtitle cc", "likes": 1}}, {"topLevelComment": {"author": "Mithun Dutta", "text": "excellent tutorial. thank you very much for sharing your knowledge with us.", "likes": 2}}, {"topLevelComment": {"author": "Rui Xu", "text": "This is a real crash course!!! This is the best course for beginner! Thank you for making this, appreciate man!!!", "likes": 2}}, {"topLevelComment": {"author": "dream sound", "text": "i don't mind ads on this amazing videos", "likes": 7}}, {"topLevelComment": {"author": "Gbemi Aiyewumi", "text": "Excellent video man, but i think 0100 is 4 not 8", "likes": 3}}, {"topLevelComment": {"author": "Elidor Varosi", "text": "The fact that he is using Linux gives the tutorial a better and more serious look", "likes": 1}, "replies": [{"author": "Pranjal", "text": "he is using linux on virtual box", "likes": 1}, {"author": "Failing Forward", "text": "@Elidor Varosi Thank you for that response. I do agree that using the command line is much more natural for Linux users than Windows users and Go really does work best when you are willing to open up a terminal to build, run tests, or whatever. I also agree that the *nix platforms tend to be faster for things like Java, although I can't say that I've noticed much of a difference when using Go.\n\nAnyway, thank you for the reply. That was very helpful!", "likes": 2}, {"author": "Elidor Varosi", "text": "@Failing Forward First of all congrats for making a great job in explaining GO. For me, Linux makes such a huge difference cause it somehow forces users to learn more about their stacks than Windows. Furthermore, I noticed that for eg, Ubuntu is much faster than Win10 with Java-based programs like JetBrains IDE-s and that makes a difference for me. Maybe I am exaggerating a little bit the fact that Linux is the best for me, cause a good programmer can do a great job as he has a functional computer, but the way I am seeing the fact that my fellow college students don't even think that command line is needed in software developing, that somehow makes me feel sad.  However, keep doing awesome tutorials(those PLuralsight ones look really interesting).", "likes": 1}, {"author": "Failing Forward", "text": "This comment is fascinating to me. Why does the operating system influence your opinion of the subject matter so much. Not trying to troll, I'm genuinely curious.", "likes": 2}]}, {"topLevelComment": {"author": "SecurityDivision", "text": "Just to think how severely limited golang is, no surprise it failed to gain traction and started to die in past year..", "likes": 1}, "replies": [{"author": "netizen trotter", "text": "Are you kidding? The language is gaining traction a lot.", "likes": 0}]}, {"topLevelComment": {"author": "country boy", "text": "we became best friends when i saw the ubuntu logo", "likes": 0}, "replies": [{"author": "Harjit Singh", "text": "Lol same. Well i use Lubuntu mainly, but i like all the versions.", "likes": 0}]}, {"topLevelComment": {"author": "Lemon Squeezer", "text": "I thought the title said Gulag in 7 hours lol", "likes": 31}, "replies": [{"author": "JsonKody", "text": "Lol xD", "likes": 0}, {"author": "Todd Lyon", "text": "Thats the guys at amazon .... not google.", "likes": 4}]}, {"topLevelComment": {"author": "The Noob", "text": "For Android Users - \n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Introduction \n\u2328\ufe0f (0:16:57) Setting Up a Development Environment\n\u2328\ufe0f (0:35:48) Variables\n\u2328\ufe0f (0:57:05) Primitives\n\u2328\ufe0f (1:26:29) Constants\n\u2328\ufe0f (1:47:53) Arrays and Slices\n\u2328\ufe0f (2:17:20) Maps and Structs\n\u2328\ufe0f (2:48:00) If and Switch Statements\n\u2328\ufe0f (3:21:17) Looping\n\u2328\ufe0f (3:41:34) Defer, Panic, and Recover\n\u2328\ufe0f (4:03:57) Pointers\n\u2328\ufe0f (4:21:30) Functions\n\u2328\ufe0f (4:57:59) Interfaces\n\u2328\ufe0f (5:33:57) Goroutines\n\u2328\ufe0f (6:05:10) Channels", "likes": 7}, "replies": [{"author": "H", "text": "we dont need, android users can still see description, only press the arrow button", "likes": 0}]}, {"topLevelComment": {"author": "Weluv Muzik", "text": "Can you make a video about dotnet core (and C# 8)?", "likes": 2}}, {"topLevelComment": {"author": "Vizay Soni", "text": "Very useful tip suggested by mike is to use 2 GOPATHs, one for libs and other for code... This is helpful.. Thanks :)", "likes": 4}, "replies": [{"author": "John Williams", "text": "@Vizay Soni \nexport GOPATH=$HOME/projects/golib\nexport PATH=$PATH:$GOPATH/bin\nexport GOPATH=$HOME/projects/go", "likes": 0}, {"author": "Vizay Soni", "text": "@John Williams this doesn't happen to me, works perfectly fine... share your setup", "likes": 0}, {"author": "John Williams", "text": "I tried setting this up but still my library code src ends up in code directory but bin is going to golib folder. Did you face the same issue ? Any help in resolution", "likes": 0}]}, {"topLevelComment": {"author": "Sarith Prasad", "text": "Thank you so much guys providing free course ....love from India \ud83d\udc4d\ud83d\udc4d", "likes": 6}}, {"topLevelComment": {"author": "Ricardo Munhoz", "text": "Julia please. It's the Best.\nS\u00e3o Paulo Futebol Clube, the Best team of World.", "likes": 2}}, {"topLevelComment": {"author": "ShivTheDev", "text": "You are an amazing tutor... you got to throw in more courses.", "likes": 1}, "replies": [{"author": "Failing Forward", "text": "Thank you so much!\n\nI don't have any active plans for more YouTube series, but I have quite a bit on Pluralsight. They offer free trials, if you want to check them out.", "likes": 1}]}, {"topLevelComment": {"author": "for vm", "text": "The highest is 720p, which is not clear if I play this video full screen. Hope to have 1080p version?", "likes": 0}, "replies": [{"author": "Hm", "text": "Bruh", "likes": 0}]}, {"topLevelComment": {"author": "Jesenia Limited", "text": "Wow, what a clearly spoken tutorial +1 love it\nThank you very much", "likes": 48}}, {"topLevelComment": {"author": "Krithik Suvarna", "text": "Can you guys make one for kotlin ?", "likes": 0}}, {"topLevelComment": {"author": "K KK 2.0", "text": "Thank for the video", "likes": 0}}, {"topLevelComment": {"author": "Fajar A. R", "text": "Thank you so much, gonna spend the weekend watching this", "likes": 6}, "replies": [{"author": "Ai yo", "text": "gituuuuu?", "likes": 0}]}, {"topLevelComment": {"author": "Kingsley Udenewu", "text": "Please can you build web apps with golang", "likes": 1}, "replies": [{"author": "Failing Forward", "text": "Hello! I don't have any plans to make a web app course on YouTube, but I do have one one Pluralsight. They offer free trials, if you want to check them out.", "likes": 0}]}, {"topLevelComment": {"author": "Goodvibes 2020", "text": "Im new to code, is Golang is good for beginners like me?", "likes": 0}, "replies": [{"author": "Nullpointer", "text": "Kinda", "likes": 0}]}, {"topLevelComment": {"author": "imflyingoverclouds", "text": "Again a very short video from freecodecampers! Love your work!", "likes": 1}, "replies": [{"author": "freeCodeCamp.org", "text": "We'll try to get a longer video next time. :)", "likes": 5}]}, {"topLevelComment": {"author": "Sravan Chalikonda", "text": "You are my Robinhood \ud83d\udc4d", "likes": 0}}, {"topLevelComment": {"author": "Srini R", "text": "Rust please. Thanks a lot for Go.", "likes": 18}, "replies": [{"author": "Logan Murray", "text": "@Randy Diaz Why _not_ learn so many languages?", "likes": 7}, {"author": "mileslemon", "text": "@Randy Diaz You answered your own question: general purpose. You use the tool right for the job, you don't try to fit the job to the tool. Rust is a great language for up and coming technologies such as Web Assembly (wasm), something Go is certainly capable of doing but not necessarily as suitable for it as Rust.", "likes": 10}, {"author": "Randy Diaz", "text": "why learn so many languages? Go seems like a perfectly good language that is general purpose.", "likes": 1}]}, {"topLevelComment": {"author": "Vikas Mittal", "text": "Please also make course on Golang web development. Thanks for all your free help and support.", "likes": 7}}, {"topLevelComment": {"author": "Abhishek", "text": "Man if there heaven after life you'll surely go there I mean how to thank you!!!!", "likes": 17}}, {"topLevelComment": {"author": "Randy Diaz", "text": "Will mastering every topic in this be enough to learn everything about go that is built in and not 3rd party?", "likes": 0}, "replies": [{"author": "netizen trotter", "text": "@Failing Forward you are a teaching genius who loves to teach and discuss....God bless you. You are great. Hats off to you.", "likes": 0}, {"author": "Failing Forward", "text": "@Randy Diaz are you kidding? I love talking about this stuff!. I do have some distributed computed courses on Pluralsight, but don't have any plans for similar content on YouTube. \n\nAs for what is best for IoT, it depends on what you're trying to do but I would reach for Go before Java. I've used both extensively and I think Go make it easier to write clean, well organized code. Of course, ymmv.\n \nHappy gophering!", "likes": 2}, {"author": "Randy Diaz", "text": "@Failing Forward  Cool! \n\nI really enjoy networked programming and hope to get employed doing something that connects computers.\n\nSorry for the various questions but, do you think Java is still best for IOT? Or is Go just as good/better?", "likes": 1}, {"author": "Failing Forward", "text": "This will take you through almost everything in the core language. I probably missed a few minor points here and there.", "likes": 3}]}, {"topLevelComment": {"author": "meh", "text": "Havent watched it yet but definitely saved it for later. Thanks a lot for your hard work!", "likes": 30}, "replies": [{"author": "Yi\u011fidov", "text": "If you say later, it is better to say never.", "likes": 0}, {"author": "Gokul beats", "text": "\ud83d\ude01", "likes": 0}, {"author": "Gon Kong", "text": "@BaggioVL15 Of course never.", "likes": 2}, {"author": "BaggioVL15", "text": "Have this \"later\" ever come?", "likes": 8}]}, {"topLevelComment": {"author": "Kayan \u0645\u0646\u0635\u0629 \u0643\u064a\u0627\u0646", "text": "like for no ad", "likes": 0}}, {"topLevelComment": {"author": "ADhackking status", "text": "Grate team   work hands of  for you all \nPlesh make a video for full strach web devloper", "likes": 1}, "replies": [{"author": "Randy Diaz", "text": "@freeCodeCamp.org God bless freecodecamp lol all the value to the people.\n\nDo you think there can be a market for people that tutor side by side to someone learning on this platform?\n\nFor example: \n\nTeachers in public schools use khan academy side by side with one on one instruction.", "likes": 0}, {"author": "freeCodeCamp.org", "text": "For a free full stack web development curriculum, check out www.freecodecamp.org.", "likes": 2}]}, {"topLevelComment": {"author": "s m", "text": "@1:07:10 you said a&^b = 0100 which results in 4. That's not what it is I think. I think it's just simply a & (^b) ie a and not b. Which results to 1000 or 8. A minor mistake in calculation I guess. Thanks for the tutorial man. I'll soo looking forward to learning Go. Great job", "likes": 102}, "replies": [{"author": "Bill Woods", "text": "It should be 1000 and not 0100. It shows 8 (1000) when the code is run. It shows 8 when I ran it too. It looks like what it does if you run several examples is takes (A & B)^A which makes sense since in code you\u2019d probably want to use B or the 2nd parameter as a type of mask or such.", "likes": 0}, {"author": "Arun Samuel", "text": "I was about to  post a comment about this ...\r\nFound the actual conversion method.\nThanks @Eric Wyles for the explaination", "likes": 2}, {"author": "Eric Wyles", "text": "I came here to post the same thing. It is a & (^b)\n\nSo in the example from the video we have:\n\na = 1010\nb = 0011\n^b = 1100\n\nSo \"a &^ b\" comes out to 1000 which is 8\n\nThis is also thought of as the \"bit clear\" operator because it effectively zeroes out any bit that is set in the value of 'b' because you are executing an and against the opposite of b.", "likes": 15}, {"author": "dub K", "text": "@Vineet Garg If YOU do the bit conversion 0100 is 4 not 8. Please make sure you are right before you try and correct others otherwise it just makes you look stupid.", "likes": 18}, {"author": "Theopub Doukousap", "text": "Yes i had a small question in my head about it as well and i rewinded the video to see if i heard correctly.", "likes": 0}]}, {"topLevelComment": {"author": "REMOL", "text": "Let's Go!", "likes": 121}, "replies": [{"author": "Joseph Sa'gotti", "text": "what in the", "likes": 0}, {"author": "Alexander Carlsson", "text": "Go! to hell.\n\n\n\n\n\n\n\n\n\nJK!", "likes": 3}]}, {"topLevelComment": {"author": "Rifaldi Kusnawan", "text": "Hell Yeaaa Finally Codecamp!", "likes": 2}}, {"topLevelComment": {"author": "Anindya", "text": "Thank You so much guys for providing us with such free courses. Keep up the work", "likes": 30}}, {"topLevelComment": {"author": "Texture tree", "text": "Dart tutorial please", "likes": 1}}, {"topLevelComment": {"author": "Master Pc", "text": "Really big thanks", "likes": 3}}, {"topLevelComment": {"author": "Ketan", "text": "Can you make a django real time video tutorial for 2019 not old ?", "likes": 28}, "replies": [{"author": "z10n0v4", "text": "@Ketan Just use Go.  Its faster, requires much less code to have a basic RESTful api and web server going, and can build into an executable that requires no preinstalled dependencies on your server.  You get crazy good concurrency, async, and you know that it'll still be running when the world has turned to dust from WW3.", "likes": 1}, {"author": "Space Capitalism", "text": "@Ketan Do not recommend Django for asynchronous + real time. I recommend websockets in nodejs/express for asynchronous, or just pure GO for fastest web server.", "likes": 1}, {"author": "Ketan", "text": "@Raduan Hi I want Django real time, but it is not asynchronous (real time). Any more suggestions ???", "likes": 1}, {"author": "Host Promo", "text": "I second this \ud83d\udc4d", "likes": 4}]}, {"topLevelComment": {"author": "R N", "text": "This channel is awesome", "likes": 4}}, {"topLevelComment": {"author": "Yule Thomas", "text": "Awesome!", "likes": 2}}, {"topLevelComment": {"author": "Souman Paul", "text": "by the way i'm using Brave browser which comes up with in-built  adblocker", "likes": 2}, "replies": [{"author": "GreenSphinx", "text": "Souman Paul :O", "likes": 0}]}, {"topLevelComment": {"author": "I know python", "text": "Go seams really very interesting", "likes": 4}}, {"topLevelComment": {"author": "Code on Ice", "text": "This is amazing, i would like to request a elixir phoenix full stack(crud with login and logout, user role management(Admin regular user)) tutorial. This tutorial would help a lot of your subscribers and students. Thanks in advance.", "likes": 0}}, {"topLevelComment": {"author": "HoangLan TV", "text": "Amazing", "likes": 1}}, {"topLevelComment": {"author": "Md Ariful Islam", "text": "Amazzzzzzzing Man. Thanks For Sharing", "likes": 2}, "replies": [{"author": "Hadi Ali", "text": "Bro\nIs he explaining the basics or going deep and explaining how the programs work and their applications?", "likes": 0}]}, {"topLevelComment": {"author": "UiD", "text": "Finally!!!!", "likes": 1}}, {"topLevelComment": {"author": "Taha-Yassine MOSLIH", "text": "Cobol is there anything abou it?", "likes": 2}, "replies": [{"author": "Nullpointer", "text": "lmao what year do you live in?", "likes": 0}]}, {"topLevelComment": {"author": "Rupnarayan kumar", "text": "Erlang", "likes": 1}}, {"topLevelComment": {"author": "Arindam Sen", "text": "Good work team!! Can we have a detail course on IoT .. Also it will be really helpful how to prepare for career shift to IoT? Thanks in advance", "likes": 6}}, {"topLevelComment": {"author": "Nolan Amadi", "text": "Been waiting for this.... \ud83d\ude4f\ud83d\ude4f\ud83d\ude4f", "likes": 1}}, {"topLevelComment": {"author": "Mindless Bass.", "text": "Amazing!!! <3333", "likes": 8}}]}