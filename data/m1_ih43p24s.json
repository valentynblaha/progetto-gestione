{"video": {"id": "m1_ih43p24s", "title": "Build a Calculator with Vue.js", "description": "In this tutorial, you will learn to use Vue.js to create a basic calculator component inside a web browser.\n\n\ud83d\udcbbCode: https://github.com/codyseibert/vue-calculator\n\n\ud83d\udd17Check out Cody Seibert's main channel: https://www.youtube.com/channel/UCsrVDPJBYeXItETFHG0qzyw\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://medium.freecodecamp.org", "duration": "PT22M36S", "likes": "3246", "views": "151699"}, "comments": [{"topLevelComment": {"author": "Navi Nathane Charlotte", "text": "thumbs down because of the lame implementation of sign(). should have just multplied by -1", "likes": 0}}, {"topLevelComment": {"author": "Sanjar Usmonaliyev", "text": "", "likes": 0}}, {"topLevelComment": {"author": "Rohan Vidhate", "text": "Without telling how to setup is useless for beginners. Even its easy but they get problems.", "likes": 0}}, {"topLevelComment": {"author": "KidBrave_", "text": "Great video, I'm just checking this out a a year later trying to find out if I want to learn react or vue and so far vue looking really fun to start building web applications. \ud83d\ude01\ud83d\ude4c\ud83c\udffd", "likes": 0}}, {"topLevelComment": {"author": "JOHN", "text": "1:1  error  Component name \"Calculator\" should always be multi-word  vue/multi-word-component-names\n\nwhy this is happening and how do i fix this? ty", "likes": 0}}, {"topLevelComment": {"author": "Max Ron", "text": "How do you know someone\u2019s using Apple? They\u2019ll tell you.", "likes": 0}}, {"topLevelComment": {"author": "Jan Novaczek", "text": "Hi, avesome tutorial. Thanks.", "likes": 0}}, {"topLevelComment": {"author": "Eyad Mohammed Osama", "text": "I don't really care about what this calculator is missing, the most important objective is to understand the concept here, and i think this video pretty much explains it \nThanks for the great explanation", "likes": 0}}, {"topLevelComment": {"author": "Harrison Fok", "text": "I don't really understand the operator part. How does it know what a and b are?\nthis.operator = (a, b) => a * b", "likes": 0}, "replies": [{"author": "Simon Zeman", "text": "Watch equal() function again. This operator stores a function and you provide parameters in equal()", "likes": 0}]}, {"topLevelComment": {"author": "Marcus Aurelius Regulus", "text": "Good for displaying vue, but terrible ui/ux", "likes": 0}}, {"topLevelComment": {"author": "pepijn1231", "text": "50/4 = 0.8 \ud83e\uddd0", "likes": 0}}, {"topLevelComment": {"author": "Romeo", "text": "My solution for checking whether the dot exists \n// Append Dot only if it doesn't exist\r\ndot(e) {\r\nlet symbol = e.target.innerHTML;\r\nif(!this.result.includes(symbol)) {\r\nthis.result += e.target.innerHTML;\r\n}\r\n}", "likes": 1}}, {"topLevelComment": {"author": "Romeo", "text": "Instead of typing a string with number each time you can do \n<div class=\"button\" @click=\"type($event)\">4</div>\n\nand then \n\ntype(e) {\r\nthis.result += parseInt(e.target.innerHTML);\r\n},", "likes": 4}}, {"topLevelComment": {"author": "Mello", "text": "I love you so much", "likes": 0}}, {"topLevelComment": {"author": "Edward Leung", "text": "awesome! keep building more vue apps !", "likes": 1}}, {"topLevelComment": {"author": "Ludka Motylikova", "text": "Its quite difficult. At least for me.", "likes": 0}}, {"topLevelComment": {"author": "Cigomba Miler", "text": "Thanks for sharing. This is the easiest implementation of a calculator webapp that I have found so far and I was able to follow it throughly even though it was my first time using Vue.js. Thanks again!", "likes": 0}}, {"topLevelComment": {"author": "Diego Almeida", "text": "Great video! I'm just starting with Vue.js and was wondering what is the criteria for deciding how to divide an app into reusable components. For example, could I create a Vue component for the keys called keyComponent and each key of the calculator would be an instance of this Vue component?", "likes": 1}}, {"topLevelComment": {"author": "Saurabh Chavan", "text": "Awersome tutorial \u2764\ufe0f we want more vuejs project \u263a\ufe0f", "likes": 0}}, {"topLevelComment": {"author": "Radovan Kri\u017ealkovi\u010d", "text": "Hey man, thanks for a great video.\nIs there a reason you don't use .concat() ? or just personal preference?", "likes": 0}}, {"topLevelComment": {"author": "wEoOOmPSm6aAG4BXE2ki", "text": "in 20 minutes!", "likes": 1}}, {"topLevelComment": {"author": "\u5927\u897f\u74dc", "text": "yeah ,this is good example for VUE\uff0cthank you buddy!", "likes": 0}}, {"topLevelComment": {"author": "Wycliffe", "text": "This is brilliant.", "likes": 0}}, {"topLevelComment": {"author": "Wycliffe", "text": "This is brilliant.", "likes": 0}}, {"topLevelComment": {"author": "Mr.Yellow", "text": "why I cant click the divs as he did ? I added my click function but it doesnt work. Should I replace those divs to button ?", "likes": 0}}, {"topLevelComment": {"author": "Scorpion Edge", "text": "didn't anyone notice the critical bug with this is that if you press 1 + 1 + 1 and then press equal, you get 2..", "likes": 0}}, {"topLevelComment": {"author": "Cynical Observer", "text": "Presenting at 1.25x speed by default. I like that.", "likes": 1}}, {"topLevelComment": {"author": "Aishah Yusra", "text": "how do u change multiple div class names at same time , or how to select multiple div and put same class name at the same time ....", "likes": 0}, "replies": [{"author": "Eduardo R. Romero", "text": "With shortcuts. Holding alt key you can put multiple cursors. Ctrl D for selecting multiple words. Try ctrl alt arrows and shift alt arrows", "likes": 0}]}, {"topLevelComment": {"author": "\u00d3\u00f0inn", "text": "append('1') - why no to get event.target.innerText ?", "likes": 0}}, {"topLevelComment": {"author": "naspy971", "text": "Unfortunately with this project we use very few of Vue features.", "likes": 0}}, {"topLevelComment": {"author": "Calm & Relaxing", "text": "I really just wanna know how to edit multiple lines specifically like he did here 18:44", "likes": 0}, "replies": [{"author": "Calm & Relaxing", "text": "\ud83d\ude02 I figured it out today on my mac, pressing shift'option worked. Thanks", "likes": 0}, {"author": "Angelo", "text": "hold alt and press where you wanna edit, but seeing this comment was made months ago you prolly figured it out xD", "likes": 0}, {"author": "Sunny Kumar", "text": "That was VSCode function. If you are on Mac press option button and click on places where you want your cursors to be. If you want to edit the same lines in the entire file then press command+D to multiple select the similar lines of code.", "likes": 2}]}, {"topLevelComment": {"author": "Access Code", "text": "Wow, this made my vue learning journey a lot more enjoyable. I didn't know we could do these things.", "likes": 5}, "replies": [{"author": "El Polo Diablo", "text": "Stfu", "likes": 0}]}, {"topLevelComment": {"author": "Luki aus dem Kaff", "text": "Hi, thanks for the video. What editor are you using? Thanks in advance.", "likes": 0}}, {"topLevelComment": {"author": "Ashto", "text": "I\u2019m new to vue.js but this kinda is a JavaScript tutorial. I mean like is this how vue.js is?", "likes": 0}}, {"topLevelComment": {"author": "Muhammad Yusoff Jamaluddin", "text": "Why my calc cant event revert back when i am pressing the 'sign' button like your's?\n10:50", "likes": 0}, "replies": [{"author": "Angelo", "text": "Exactly the same", "likes": 0}]}, {"topLevelComment": {"author": "Mustapha Abdulmujeeb", "text": "This application in cute", "likes": 0}}, {"topLevelComment": {"author": "Kumar", "text": "Try to make a tutorial on react native has frontend and Laravel has backend, no good tutorial found in online", "likes": 0}}, {"topLevelComment": {"author": "Zina Right", "text": "Sold to VueJs, finally! Thanks", "likes": 0}}, {"topLevelComment": {"author": "vincent youmans", "text": "Good job...  how about some videos on doing Menu's and Routing.  Ideally vue.js . single page . where we just slide a card out of view and transition a new card for its place.", "likes": 0}}, {"topLevelComment": {"author": "stephen", "text": "I love the vid but feel that this is more of a JS / CSS tutorial lol\n\nWhy didn\u2019t you separate the numbers into separate components to show off Vue\u2019s reusable component system?", "likes": 5}}, {"topLevelComment": {"author": "prckomir", "text": "this is only ok if you are operating 2 numbers.. for example 1+2+3 will be 5", "likes": 0}}, {"topLevelComment": {"author": "ruspina spark", "text": "Thanks for your informative video \nin sign method you can multiple this.current *-1 :)", "likes": 2}}, {"topLevelComment": {"author": "iNVICTUX", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"author": "Ek Shiv Bhakt", "text": "'-${this.current}' not working", "likes": 0}, "replies": [{"author": "Jo\u00e3o Bandeira", "text": "@Glenn Cottrell 2 years later, still being helpful. Thanks!", "likes": 1}, {"author": "Glenn Cottrell", "text": "easy mistake to make. This is the grave accent character ` (the key to the left of the 1 key) not the apostrophe  '", "likes": 0}]}, {"topLevelComment": {"author": "Anroop Anu", "text": "Hii ,\nThanks for putting calculator example, pls can u keep calendar example...............", "likes": 0}}, {"topLevelComment": {"author": "DABHIRI DANIEL", "text": "A little bug but can be fixed....just update the equal function : `${this.operator(\r\n        parseFloat(this.previous),\r\n        parseFloat(this.current)\r\n      )}` ; ..............this.previous should come first not the otherwise", "likes": 1}}, {"topLevelComment": {"author": "Donald", "text": "In your equal function, the positions of this.previous and this.current should be switched, else the calculation would not be correct.", "likes": 0}}, {"topLevelComment": {"author": "MrMu2sS", "text": "I took the idea but didn't watched the video to not get influenced: here is my version\n\nhttps://github.com/ultraMIND/vue-mac-calculator\nFeedback is appreciated", "likes": 0}}, {"topLevelComment": {"author": "The_Top_10", "text": "Is it me or does he sound like Seth rollins?", "likes": 0}}, {"topLevelComment": {"author": "Dominykas S", "text": "btn {\n   cursor:pointer\n}\n\n.btn:active {\n   transform: scale(0.95);\n}\n\nThis will give you a nice button click effect.", "likes": 37}, "replies": [{"author": "Alexander Mikhaylov", "text": "@Dominykas S I'm just surfing for Vue.JS lessons and this is will pretty...", "likes": 0}, {"author": "Dominykas S", "text": "@Alexander Mikhaylov 2 years first reply, I dont remember commenting this, haha.", "likes": 1}, {"author": "Alexander Mikhaylov", "text": "Thanks!! Looks cool.", "likes": 0}]}, {"topLevelComment": {"author": "\u0412\u043b\u0430\u0434 \u0418\u0432\u0430\u043d\u043e\u0432", "text": "very bad code. sorry\nit`s good video as vue & css grid tutorial.\nHowever, as for the calculator algorithm - everything`s very bad", "likes": 1}, "replies": [{"author": "Jaros\u0142aw Buka\u0142a", "text": "\u0412\u043b\u0430\u0434 \u0418\u0432\u0430\u043d\u043e\u0432\r Is that you contribution then? Can you improve the code and show to others to learn from! Thanks", "likes": 1}]}, {"topLevelComment": {"author": "putu de", "text": "Damm you are genius!", "likes": 0}}, {"topLevelComment": {"author": "Randall White", "text": "I think a good next step would be to show how this calculator could be made into a component for nesting into a larger project. Thanks for the video.", "likes": 1}}, {"topLevelComment": {"author": "Leonid Gordo", "text": "Just made a sample calculator using VueJs and Vuex. \nhttps://github.com/leon737/Calculator", "likes": 0}}, {"topLevelComment": {"author": "Tom Hermans", "text": "Good tutorial and needed for me how to structure the vue functions/methods etc. Quickly built this with Codesandbox (for those who are asking about setup, this'll get you up and running immediately). \nChanged a few thingies (e.g. the sign working numerical), switched the previous / current so 50 / 8 returns 12.5 instead of .08 or 10 - 2 returns 8 instead of -8. Working version (wip and to be checked) is here: https://codesandbox.io/s/6wr0jo9p2r", "likes": 0}}, {"topLevelComment": {"author": "Steve Richter", "text": "that was outstanding.", "likes": 0}}, {"topLevelComment": {"author": "Taslim Oseni", "text": "Had to reduce the speed to 0.5 so I could catch up, nice video though!", "likes": 2}}, {"topLevelComment": {"author": "Haytham", "text": "is it require to learn typescript for vue ?", "likes": 0}}, {"topLevelComment": {"author": "ShadeTheory", "text": "11:15  I would simply write that as `this.current -= (this.current * 2)`", "likes": 0}, "replies": [{"author": "pikachu1324", "text": "His code was more complex because of his somewhat questionable decision to implement the calculator using strings", "likes": 1}]}, {"topLevelComment": {"author": "SilvetaGui", "text": "Very nice tutorial. However, the part who took my attention was definitely your fluency using your editor.\n\nIt even made me question if I should make the switch from IntelliJ to VSCode.", "likes": 1}}, {"topLevelComment": {"author": "Fady Asaad", "text": "https://codesandbox.io/s/yvkqv17jxx", "likes": 0}}, {"topLevelComment": {"author": "Kingdom Focus with Ken Kopelson", "text": "Well, first of all, thanks for making this tutorial.  I wanted to offer some helpful advice if I may.  This is not meant to attack you, or to minimise the nice job you did in presenting the material.  What I'd like to offer is the thought that perhaps it would have been much simpler and easier to understand if you had used a \"number\" data type for a \"total\" field, and also a \"number\" data type for the \"current\" field, which is the current field being entered.  It doesn't seem that a \"string\" type is the right type for a calculator, which is meant to calculate numeric values.\n\nFor example, if you had made the variable a number, then you could have done the '%' function as: \"this.total /= 100.0\", and that would be it.  When a person presses an operator, you would store the operation into a variable, (such as addition for '+'), and then before you change to a new operator you resolve the current one.  You would have to implement a calculation stack if you wanted to support proper operator precedence.  You could also have a \"total\" variable that contains the current total, which is different from the \"current\" value being entered.  To add a new digit to the present \"current\" you could then do the formula (current * 10 + digit).  By doing this, you avoid all this parsing of strings.  Javascript is capable of displaying number values easily, either with floating point or with fixed point.\n\ni hope this was helpful.", "likes": 4}}, {"topLevelComment": {"author": "Brawndo", "text": "I cringed a little over all the type coercion (strings to numbers and back again)", "likes": 1}}, {"topLevelComment": {"author": "Jeremy Leach", "text": "IF YOU ARE LIKE HEY WHY NO CLI INSTRUCTIONS::: HERE THEY ARE. FOR LATEST... CLI v3\n\nIn console/terminal, such as ConEmu or XTerm, Terminator, Guake, ITerm, Hyper\r\n[anywhere on pc]\r\n  npm install -g @vue/cli\r\n[somewhere on pc like /code]\r\n  vue create --default hello-world\r\n\r\ncd hello-world\r\n\r\nOpen the folder with your code editor.\r\n\r\nWith VS Code you can type:\r\n    code .\r\nIn the location you want to open.\r\n\r\nProbably most that support \u201cFolders as projects\u201d do this.", "likes": 0}}, {"topLevelComment": {"author": "Cinthya Frid", "text": "Do you have a tutorial that show how to set up everything before working with the code part?", "likes": 0}, "replies": [{"author": "Bunrak", "text": "Pretty much all you need is: node and npm, then on visual studio code terminal do\n1) npm install -g vue-cli\n2) vue init webpack nameofproject\n-respond to the (y/n)\n3) cd nameofproject\n4) npm run dev\nThis should bring you to the start of this video", "likes": 0}]}, {"topLevelComment": {"author": "crazycris4", "text": "cursor: pointer", "likes": 1}}, {"topLevelComment": {"author": "raymondpcs pangcheeseng", "text": "thx for giving the code and sharing this calculator", "likes": 1}}, {"topLevelComment": {"author": "Marius Selvf\u00f6lgelig Mikelsen", "text": "this.current *= -1; would have been a few less characters in the sign method (If it had been a number of course :P)", "likes": 2}, "replies": [{"author": "Ian Sebryk", "text": "this still works just fine, just with a small tweak:  `${parseFloat(this.current)  *  -1}`.  ironically, what he did for percentage was right on the money, logic-wise.", "likes": 0}]}, {"topLevelComment": {"author": "Jurgent Gjeloshaj", "text": "</html>  \n  <tr>< great video </tr>\n</html>", "likes": 2}, "replies": [{"author": "Veganize", "text": "jesus christ", "likes": 7}]}, {"topLevelComment": {"author": "groce147", "text": "thanks man", "likes": 0}}, {"topLevelComment": {"author": "Miroslav Makhruk", "text": "You should switch previous and current in your equal method. 50 divided by 4 is 0.08 - it should've rang a bell haven't it?", "likes": 4}, "replies": [{"author": "Denny Luckes", "text": "thank you man!!!! great job, it work!!!", "likes": 0}]}, {"topLevelComment": {"author": "Abdur Rob", "text": "Hi, in the equal function 'this.previous' should be the first and 'this.current' should be the second argument \nequal() {\n      this.current = `${this.operator(parseFloat(this.previous), parseFloat(this.current))}`\n      this.previous = null\n    }\notherwise, minus operator will give you inverted results.\n\n\nthank you for you great work.", "likes": 34}}, {"topLevelComment": {"author": "Steven Kennedy", "text": "Great intro video, thank you! Will be sharing", "likes": 0}}, {"topLevelComment": {"author": "Robert Mion", "text": "For anyone looking to learn more Vue by making the iOS calculator a completely different way, here's a tutorial I wrote on Medium. Bonus: it uses Grid **and** Flexbox: https://medium.com/@rmion/learn-vue-css-grid-and-flexbox-10-part-beginner-tutorial-20f8c422ea06", "likes": 0}}, {"topLevelComment": {"author": "AlexCubed", "text": "21:13 \u201c50 divided by 4 equals 0.08\u201d\nYou switched the a and b in the calling the operator function. A should be previous and b should be current", "likes": 16}, "replies": [{"author": "Jason Nightingale", "text": "Totally agree", "likes": 1}, {"author": "Mu'in Mundzir", "text": "@AlexCubed thanks", "likes": 1}, {"author": "AlexCubed", "text": "@M Younas \nequal() {\n  this.current = `${this.operator(\n    parseFloat(this.previous),\n    parseFloat(this.current)\n  )}`;\n  this.previous = null;\n}", "likes": 4}, {"author": "M Younas", "text": "did you have solved this problem can you share.", "likes": 0}, {"author": "James Marks", "text": "Seconded", "likes": 0}]}, {"topLevelComment": {"author": "Rocreex Creekston", "text": "Wait, so 50/4 = 0.08?", "likes": 16}, "replies": [{"author": "DABHIRI DANIEL", "text": "A little bug but can be fixed....just update the equal function : `${this.operator(\r\n        parseFloat(this.previous),\r\n        parseFloat(this.current)\r\n      )}` ; ..............this.previous should come first not the otherwise", "likes": 2}, {"author": "Jeremy Blake", "text": "his divide and subtract is messed up.  3 - 2 will return -1.", "likes": 0}]}, {"topLevelComment": {"author": "Karl Olofsson", "text": "I found it confusing to have a common operator function that switches between lambda functions to do the correct calculation at use, I did not catch that design on the first watching. Any particular reason you choose that design since you have to have different functions for each operand anyway to set them, besides simplifying the \"equals\" method?", "likes": 0}}, {"topLevelComment": {"author": "Enrico Deleo", "text": "I would have based the calculator on numbers not strings. When I saw the sign() method implemented with character comparison I fell down from my chair :) the right way of switching sign of any number is to multiply it by -1 so it should be this.current * -1", "likes": 5}}, {"topLevelComment": {"author": "\u9b54\u6cd5\u5e2b", "text": "thanks you for sharing", "likes": 0}}, {"topLevelComment": {"author": "ST1M", "text": "thanks very interesting", "likes": 0}}, {"topLevelComment": {"author": "\u8d75\u8d8a", "text": "Cool, I love grid.", "likes": 0}}, {"topLevelComment": {"author": "Israel Cena developer", "text": "Thanks for demonstrating", "likes": 0}}, {"topLevelComment": {"author": "Dude D", "text": "50/4 != 0.08    to fix change to       this.operator = (a, b) => b / a\n\n    sign () {\n      if (this.current === 0) {\n        this.current = ' '\n      } else {\n        this.current = this.current.charAt(0) === '-' ? this.current.slice(1) : `-${this.current}`\n      }", "likes": 0}}, {"topLevelComment": {"author": "Hazem Elshabini", "text": "CSS grid is a god send.", "likes": 0}}, {"topLevelComment": {"author": "videososTV", "text": "AVE JS))", "likes": 0}}, {"topLevelComment": {"author": "Sayyed Ehsan Taheri Javid", "text": "You've developed a calculator in 20 minutes, that's awesome. Thanks.\nBTW, it's good if you create another video, developing the same calculator completely, and going into details and best practices.", "likes": 0}}, {"topLevelComment": {"author": "pjesh", "text": "How does he make it a standalone app without hosting it on the browser @ 4:28?", "likes": 0}, "replies": [{"author": "Sayyed Ehsan Taheri Javid", "text": "It's Mac's calculator app.", "likes": 0}]}, {"topLevelComment": {"author": "Kenichi Sakiyama", "text": "Thank you for sharing. This video is great for learning Vue.js!", "likes": 0}}, {"topLevelComment": {"author": "Andrei Kamarou", "text": "Thanks! Useful video!", "likes": 0}}, {"topLevelComment": {"author": "Jared Rubin", "text": "What IDE is that? Anybody??", "likes": 0}, "replies": [{"author": "Jared Rubin", "text": "Thanks for the quick reply! Yeah, looks totally awesome.", "likes": 0}, {"author": "Dim GG", "text": "VS Code, it's extremely popular", "likes": 2}]}, {"topLevelComment": {"author": "Lu Zaw", "text": "Next video, Chess app with Vue? :D", "likes": 0}}, {"topLevelComment": {"author": "Bo Sy", "text": "Thank you sooo much! :)", "likes": 0}}, {"topLevelComment": {"author": "Blackblock", "text": "you can enter +/- (I am on Windows) on mac by shift pressing key under escape.", "likes": 0}}, {"topLevelComment": {"author": "Sander Houttekier", "text": "what's up with the operator clicked state... why does the append method need to check that. your setPrevious could just as well reset current instead of setting an operator clicked flag no?", "likes": 1}}, {"topLevelComment": {"author": "Awesome Adijos", "text": "we want more projects with vue :D", "likes": 5}}, {"topLevelComment": {"author": "Vladyslav Loboda", "text": "14:47 you may also use !String.includes('.') instead of String.indexOf('.') === -1\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes", "likes": 1}}, {"topLevelComment": {"author": "K.", "text": "Awesome tutorial as a simple overview on how vue.js works. Thank you.", "likes": 2}}, {"topLevelComment": {"author": "Alex Selariu", "text": "u can make it way easy with just vannila js. just use eval() function on the screen.value", "likes": 2}}, {"topLevelComment": {"author": "Chiaki Nanami", "text": "I understand skipping setup in the video itself, but giving the options used for the Vue CLI in the video's description would have been nice.", "likes": 12}, "replies": [{"author": "DABHIRI DANIEL", "text": "make sure you have node js installed then use cmd to install :  npm install -g vue-cli", "likes": 0}, {"author": "First Feed", "text": "He still hasn't given them. Lame.", "likes": 2}]}, {"topLevelComment": {"author": "Egor Kravchenko", "text": "Hello! You've made a great and simple video. But there's a bug that you don't show on video - if you want to type a new number after calculating, it appends to the result instead of clearing the display)) I fixed it by adding a new variable \"Result\" to data() and a condition to append() method.\n\nThank you for the video, please continue to do such tutorials. I can suggest you to make an audio player using HTML5 audio and Vue.js", "likes": 4}, "replies": [{"author": "M Younas", "text": "great job it solved the division problem too. before this when i was dividing 8 /4 = 0.4 now ok", "likes": 0}]}, {"topLevelComment": {"author": "Robert Holak", "text": "In your equal() method you need to switch the order of current and previous. Otherwise 10 / 5 comes out to 0.5 instead of 2. Aside from that little logic bug, this was really helpful since I am learning Vue at the moment myself.\n\n[Update] I was going to make a pull request but there's already one there for this bug.", "likes": 53}, "replies": [{"author": "Zraffens", "text": "Random question: How'd you get verified just with 3 subscribers?", "likes": 4}]}, {"topLevelComment": {"author": "junhui lee", "text": "awesome video", "likes": 0}}, {"topLevelComment": {"author": "Abhishek Kumar", "text": "Thank u for this awesome video", "likes": 0}}, {"topLevelComment": {"author": "Kyle Anderson", "text": "Implementing a calculator with strings? That's a bold move, Cotton...", "likes": 23}, "replies": [{"author": "Devin Gray", "text": "*strategy", "likes": 0}, {"author": "John Jackson", "text": "Let's see how it plays out.", "likes": 1}]}, {"topLevelComment": {"author": "Kim Codes Monkey", "text": "awesome. thanks for sharing..", "likes": 0}}, {"topLevelComment": {"author": "David Glenn", "text": "Another suggestion could be to enhance the app to use vuex to show state management in vue. By the way great video. I built a similar app using vanilla js and it took me a lot longer than 22 mins. Vue is great!", "likes": 0}}, {"topLevelComment": {"author": "Deliverant", "text": "Hey cody thanks for the video, do you have any plan on a new big Fullstack project like the one you did with vue+express? This time maybe with nuxt, would be the best thing ever", "likes": 4}}, {"topLevelComment": {"author": "N LT", "text": "css grid is awesome!!!!!!!!!!!", "likes": 35}, "replies": [{"author": "First Feed", "text": "Flexbox and CSS Grid are supposed to be used together, they are not competitors.", "likes": 7}, {"author": "Nachname Vorname", "text": "isnt flexbox just a css grid with one row/column?", "likes": 1}, {"author": "Kamal Mahmud", "text": "flexbox is better, fight me", "likes": 2}]}]}