{"video": {"id": "SiBw7os-_zI", "title": "Intro to Object Oriented Programming - Crash Course", "description": "Learn the basics of object-oriented programming all in one video.\n\n\u270f\ufe0f Course created by Steven from NullPointer Exception. Check out their channel: https://www.youtube.com/channel/UCmWDlvMYYEbW42B8JyxFBcA\n\n\ud83c\udfa5 Introduction to Programming: https://www.youtube.com/watch?v=zOjov-2OZ0E\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (00:00) Introduction\n\u2328\ufe0f (07:37) Encapsulation\n\u2328\ufe0f (12:45) Abstraction\n\u2328\ufe0f (17:49) Inheritance\n\u2328\ufe0f (22:47) Polymorphism\n\n\u2b50\ufe0f Sources \u2b50\ufe0f\n\ud83d\udd17 https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html\n\ud83d\udd17 https://stackify.com/oop-concept-for-beginners-what-is-encapsulation/#:~:text=Encapsulation%20is%20one%20of%20the,an%20object%20from%20the%20outside\n\ud83d\udd17 https://press.rebus.community/programmingfundamentals/chapter/encapsulation/\n\ud83d\udd17 https://stackify.com/oop-concept-inheritance/\n\ud83d\udd17 https://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news", "duration": "PT30M18S", "likes": "19724", "views": "628518"}, "comments": [{"topLevelComment": {"author": "Sauvik Goel", "text": "I know JavaScript only so is it a good language to learn oops?", "likes": 0}}, {"topLevelComment": {"author": "Lukas Chumchal", "text": "Thanks for helpfull intro to OOP. However can anybody tell me some practical usage for method overloading, because even after this video i cannot think of any.", "likes": 0}}, {"topLevelComment": {"author": "Wayne Interessierts", "text": "Great explanation, thank you!", "likes": 0}}, {"topLevelComment": {"author": "TonyTiger6521", "text": "Getting/getters and setting/setters are not the language-neutral terms, are they?  I thought the language-neutral terms were accessors and mutators.  No??", "likes": 0}}, {"topLevelComment": {"author": "TonyTiger6521", "text": "My short definitions.\n\nAbstraction: Simplifying the aspects of the real world being modeled by including only the data and behaviors relevant to the system being developed.\n\nEncapsulation:  The bundling together into classes of both (a) all relevant data (attributes) for each type being modeled for the system, along with (b) the methods (behaviors) that operate on each type's data; while also hiding implementation details and protecting internal data.\n\nInheritance: Implementing code reuse by creating derived classes that automatically include (inherit) the public and protected data members and methods (attributes and behaviors) of their parent class.\n\nPolymorphism: Having \u201cmany forms\u201d of a shared behavior (method), most often by having multiple classes implement a method of the same \"interface\" differently: the \u201cinterface\u201d can be either a literal interface, or a shared abstract (or other base) class.", "likes": 0}}, {"topLevelComment": {"author": "Shin Tori", "text": "i\u2019m hearing a lot of paralles  between programming and society.", "likes": 0}}, {"topLevelComment": {"author": "Donna J", "text": "basically stuck on methods, arrays , and objects, thats a huge disadvantage", "likes": 0}}, {"topLevelComment": {"author": "Samuel kibunda", "text": "Honest to god i can't believe this information is free wow \ud83e\udd2f", "likes": 0}}, {"topLevelComment": {"author": "John Benedict Divinagracia", "text": "stamo: 22:55", "likes": 0}}, {"topLevelComment": {"author": "David Rodr\u00edguez \ud83d\udd1d", "text": "Nice video, thank you", "likes": 0}}, {"topLevelComment": {"author": "Peachu", "text": "BYE I DONT UNDERSTAND THE CHESS EXAMPLE \ud83d\ude2d", "likes": 2}}, {"topLevelComment": {"author": "Luke S", "text": "When it comes to the gas mileage example of dynamic polymorphism, does this mean that the class Car could have a set variable of 0.4miles/gallon, and then for the class sportsCar you could set this to be a percentage of the class Car mileage? So, in effect, you are creating a ratio in which could be changed if the set mileage variable of class Car were to change, so this would automatically be reflected in the percentage value in class sportsCar? And further to that, if you were to add further sub classes of class sportsCar, could you then use a percentage value on the mileage of the sub class that creates a ratio in relation to the sportsCar mileage (which is already a ratio of the original class Car) creating a kind of ratio hierarchy from parent class down the chain to the sub classes...? I am so sorry for how wordy my post is!\n\nI hope I explained my question clearly enough! Thank you in advance to anyone who is able to provide feedback.", "likes": 0}}, {"topLevelComment": {"author": "josephine kwakye", "text": "This is gold...Thank you", "likes": 0}}, {"topLevelComment": {"author": "ibrahim jamil", "text": "not explained properly", "likes": 0}}, {"topLevelComment": {"author": "Felipica", "text": "valeu mano ajudou demais slk", "likes": 0}}, {"topLevelComment": {"author": "JC", "text": "really good tutorial but 24:24 makes no sense, sports cars eat through gas like crazy", "likes": 0}}, {"topLevelComment": {"author": "Dutchy DownUnder", "text": "which language does not allow mixing of data types within an array?", "likes": 0}}, {"topLevelComment": {"author": "Lilia A", "text": "This was a life save thank youuu!!", "likes": 0}}, {"topLevelComment": {"author": "\u7530\u4e2d\u8aa0", "text": "OOP makes code unreadable. \nbecause we need to search parent code to understand the child. and we need to search grand parent code to understand the parent code and so on.", "likes": 1}}, {"topLevelComment": {"author": "Mayuk Akat", "text": "Thank you for sharing this video. I have watched multiple videos on this topic on YouTube and yours is hands down the best I have seen. I just watched it the third time and and comfortable with all the concepts.", "likes": 1}}, {"topLevelComment": {"author": "Adrian Bartholomew", "text": "So, why would we want method overloading? In other words, what use case would there be where having 3 classes with the same name but different functionality would be preferable over having 3 classes with different-yet-similar names? It seems like the latter would be much simpler to keep straight for future use of the code, especially if the code is shared with others. Is there an example you can give that illustrates why the method overloading would be helpful? \n\nGreat video and explanation, though. I'm just struggling to conceptualize this one.", "likes": 0}}, {"topLevelComment": {"author": "Carlos Washington Mercado", "text": "The slides go to fast at some points.", "likes": 0}}, {"topLevelComment": {"author": "Mike Asterios", "text": "Amazing vid", "likes": 0}}, {"topLevelComment": {"author": "Anthony Lee", "text": "Thank you! Was a good refresher!", "likes": 0}}, {"topLevelComment": {"author": "J C", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Bruce Lee", "text": "Why do they have to give such difficult to understand names that is my only problem with oop", "likes": 0}}, {"topLevelComment": {"author": "S Binti", "text": "Gettirrr n)", "likes": 0}}, {"topLevelComment": {"author": "kand\u00e9 babou", "text": "Great videos! But in the beginning of the video at around 4:27 when discussing arrays, you said that arrays can not hold different data types. However, in JavaScript you actually can store various data types in an array. You can have an array with strings, numbers, booleans etc..", "likes": 0}, "replies": [{"author": "Chess", "text": "a dynamically typed language", "likes": 0}, {"author": "Chess", "text": "Coz it is javascript..", "likes": 0}]}, {"topLevelComment": {"author": "Andre Bugaescu", "text": "thanks", "likes": 0}}, {"topLevelComment": {"author": "Prasad Mamidi", "text": "Pro tip speed = 1.5X", "likes": 0}}, {"topLevelComment": {"author": "JZ1917", "text": "This is great content! Clear and great density. Thank you!", "likes": 0}}, {"topLevelComment": {"author": "\u179f\u17c1\u1784 \u17a0\u17ca\u17b6\u1784", "text": "\u17a2\u179a\u1782\u17bb\u178e", "likes": 0}}, {"topLevelComment": {"author": "Muhammad Haris", "text": "I have a question. Can we learn OOP without having the knowledge of C/C++ language??", "likes": 1}}, {"topLevelComment": {"author": "cyberpunk world", "text": "History. One must fast, that is, not fall asleep, because something happened sometimes when collective memory erased. System remained. Programming not for kids.", "likes": 0}, "replies": [{"author": "cyberpunk world", "text": "Apologies. Cache cleared. Don't know how to say it. History re-taught systematically. Like after a major genocidal event. java.gc", "likes": 0}]}, {"topLevelComment": {"author": "Nawaz Haider", "text": "Awsome explanation", "likes": 0}}, {"topLevelComment": {"author": "sivi", "text": "Amazing video! Thanks, it really helped me as a total newbie to OOP.", "likes": 0}}, {"topLevelComment": {"author": "HARSH DEVMURARI", "text": "Too good....", "likes": 0}}, {"topLevelComment": {"author": "TechBro", "text": "Where I can find whole course in details", "likes": 0}}, {"topLevelComment": {"author": "Luna Nightingale", "text": "\u2665I fucking love you. You've cured my code fear.", "likes": 0}}, {"topLevelComment": {"author": "DopeItsAlonso", "text": "Thanks for this. I'm taking this class next semester. Wish me luck", "likes": 0}}, {"topLevelComment": {"author": "Pawel Jastrzebski", "text": "Very good overview and intro to the subject.", "likes": 0}}, {"topLevelComment": {"author": "\u30c7\u30ed\u30b9\u30b5\u30f3\u30c8\u30b9Kairu", "text": "I like how he use game examples to implement the 4 main principles of oop, it keeps me interested.", "likes": 0}}, {"topLevelComment": {"author": "siva charan", "text": "Sir,I have a doubt in oop in JavaScript.when can implement anything in JavaScript without oop also.Then what is the use of oop in JavaScript?When do We use oop in JavaScript?", "likes": 0}}, {"topLevelComment": {"author": "MyTech", "text": "The real question now, does oop solve any real problem outside of a game like structure? I have never seen an example that wasn't completely game centric. Yes I know oop doesn't break Turing completeness and thus can be used for any program. I'm asking if oop is a good fit for problems outside of games.", "likes": 1}, "replies": [{"author": "Schmetter Ling", "text": "OOP is simply code documentation. It's a tool for architects to work out sensible functional boundaries and to limit call tree complexity. That's its most professional use. In the hand of the average programmer it will probably cause more harm than good in most cases because programmers tend to write before they think, so they are more likely to dig themselves into a structural hole and then they have to refactor endlessly. It works in scenarios where many similar or highly similar objects have to be handled. Games may be one of those, so are graphical user interfaces. The less code reuse there is in a project, the more OOP becomes an additional plumbing overhead.", "likes": 0}]}, {"topLevelComment": {"author": "Ankit kumar", "text": "Speed x2\nOOP in 15mins.", "likes": 0}}, {"topLevelComment": {"author": "Vedant Sharma", "text": "amazing explanation", "likes": 0}}, {"topLevelComment": {"author": "Anya Ozioma", "text": "I can say you are one of the best tutor I have met, u take your time to explain, I also watched you tutorial on introduction to programming, it was \ud83e\udd2f. Well done \ud83d\udc4d.", "likes": 0}}, {"topLevelComment": {"author": "Danilo Silva", "text": "It would be nice to make it clear that some languages like Python don't use encapsulation. Their approach are very different from the Getter/Setter approach!", "likes": 0}, "replies": [{"author": "Schmetter Ling", "text": "Getters and setters are plumbing. They don't do anything for you. A setter function allows anybody to manipulate out of scope data, anyway (bad) and a getter is like making a variable public. How many times do you need the combination where you can set but not get the value of a variable? None of this prevents anybody from changing to public, anyway, and to ignore your setters and getters. Now you have two mechanism that access variables. One that may check ranges and one that doesn't. There will always be a fool who will get around your setter/getter, no matter how much you try to prevent it. None of this has anything to do with what Python does.", "likes": 0}]}, {"topLevelComment": {"author": "Andreas Sj\u00f6gren", "text": "Best video ive seen in my life. Thanks for saving my future", "likes": 0}}, {"topLevelComment": {"author": "Andrew Kipsang", "text": "Beautiful", "likes": 1}}, {"topLevelComment": {"author": "Nafis Nawal Nahiyan", "text": "Thank you for  helping me! Forever in debt! <3", "likes": 0}}, {"topLevelComment": {"author": "James Hansen", "text": "Thank you so much for this course! It's so pleasing to listen to :)", "likes": 2}}, {"topLevelComment": {"author": "Quinism", "text": "Watch this video on 1.25x speed, trust me", "likes": 0}}, {"topLevelComment": {"author": "Zechariah Hounwanou", "text": "This was really helpful. It made me understand Encapsulation, Abstraction, Inheritance, and Polymorphism.  worth my time", "likes": 0}, "replies": [{"author": "Schmetter Ling", "text": "Yes, but you still don't know how to use any of that to write better software. Maybe you think you do, but that only makes you more dangerous, not more professional.", "likes": 0}]}, {"topLevelComment": {"author": "Shardhay Vatshyayan", "text": "NICE", "likes": 0}}, {"topLevelComment": {"author": "Alan Coates", "text": "This is an exceptionally clear explanation of OOP.  Well done!", "likes": 0}}, {"topLevelComment": {"author": "Syed Usama Manzoor", "text": "I'm a complete beginner to programming and this is so well explained that even a illiterate like me can understand.", "likes": 1}}, {"topLevelComment": {"author": "Vonaan", "text": "This is the best explanation I've been able to find. I was creating my own first OOP application and was struggling to see the difference between a class and an object. This explanation via chess makes it so obvious that I wonder why I didn't get it in the first place. It's al about the chess example and the way you explain it. You have great presentation and tutor skills. Now I just need to start my application from scratch again. Please could you also explain the several UML diagrams based on this chess example? That would be a great way to show everyone how you can design your application with OOP in mind before even starting to code. It would have prevented me from making a lot of beginners and obvious mistakes.", "likes": 5}, "replies": [{"author": "Tik Tok  Hits", "text": "Yeah thts true", "likes": 1}]}, {"topLevelComment": {"author": "u tube", "text": "Great video I wish I watched this when I first started OO", "likes": 0}}, {"topLevelComment": {"author": "Michael", "text": "Excellent!  Clear and concise.  Also fluent English, instead of a bastardized version you have to try to figure out what they say more than what they're talking about.", "likes": 0}}, {"topLevelComment": {"author": "Ajibade Samuel", "text": "Just brilliant, you made it really simple. I have tried so hard to understand these concepts and now your explanations gave me a better understanding. Thank you.", "likes": 0}}, {"topLevelComment": {"author": "moh gawsih", "text": "thank you . . . much needed material . . . trans-language concepts", "likes": 1}}, {"topLevelComment": {"author": "Tom\u00e1s Sacripanti", "text": "This course is amazing, but why would a sports car consume less than a normal car?", "likes": 0}}, {"topLevelComment": {"author": "Antonio lopez", "text": "Thanks very much, extraordinary and very clear crash course", "likes": 0}}, {"topLevelComment": {"author": "Doltrane", "text": "00:01\n10:17", "likes": 0}}, {"topLevelComment": {"author": "Frederick Tiku", "text": "I love Your voice tone and method of teaching,thank you.", "likes": 0}}, {"topLevelComment": {"author": "Petar Stoyanov", "text": "Utterly excelent!", "likes": 0}}, {"topLevelComment": {"author": "thecaveofthedead", "text": "Very useful. Criticism: sometimes you're referring to this object refers to this object and it became completely unclear in which direction interactions were happening.", "likes": 0}}, {"topLevelComment": {"author": "Homesweethome homesweethome", "text": "Thank you", "likes": 0}}, {"topLevelComment": {"author": "SK Hasan", "text": "Can anyone slove a java problem? \nIf anyone please  response!!\nI have need your help. \ud83d\ude42", "likes": 0}}, {"topLevelComment": {"author": "Sarath Krishnan A", "text": "Even though I have learned these before, this one is a real gem.", "likes": 6}}, {"topLevelComment": {"author": "Haitham Badarin", "text": "The best of the best, Thank You!", "likes": 0}}, {"topLevelComment": {"author": "Fire_Rice", "text": "this is very helpful. thank you!", "likes": 0}}, {"topLevelComment": {"author": "Neu Zen", "text": "dude, don't make me read something that you speak", "likes": 0}}, {"topLevelComment": {"author": "flyagaricfly", "text": "Thanks, Freecodecamp. You're my favorite guide in programming. This narrator is really nice to listen to, and the formal style makes the tutorial somewhat more engaging :)", "likes": 1}}, {"topLevelComment": {"author": "Nicola Hu", "text": "Resume:\n1) Encapsulation ----> Getters and setters\n2) Abstraction --> We care about Interface. Not the implementation behind the hood.\n3) Inheritance --> Extending classes... Access modifiers: public, private, modifier\n4) Polymorphism --> Interface / Implements in Java ... Same methods' name, but different implementations of methods.", "likes": 216}, "replies": [{"author": "YSAmmo", "text": "Thankyou", "likes": 1}, {"author": "JAN JEROME SORIANO", "text": "@Hector Fontanez I agree", "likes": 1}, {"author": "JAN JEROME SORIANO", "text": "@Adi purnomo yes", "likes": 1}, {"author": "Adi purnomo", "text": "Inside polymorphism: overriding and overloading, right", "likes": 10}]}, {"topLevelComment": {"author": "Ashraf Beshtawi", "text": "I am having a job interview after 15 min..  good short refresh.. wish me luck\n\nUpdate: I got the job \u270c\ud83d\ude03", "likes": 20}, "replies": [{"author": "Ashraf Beshtawi", "text": "Update : I am now hired as Backend developer", "likes": 1}, {"author": "do abuse phone", "text": "@Ashraf Beshtawi booooo", "likes": 1}, {"author": "Bruh Man", "text": "@Ashraf Beshtawi Nicee", "likes": 1}, {"author": "Flash\u26a1", "text": "@Ashraf Beshtawi congratulations bro", "likes": 1}, {"author": "Ashraf Beshtawi", "text": "@Bruh Man 3 Job offers until now \u270c\ud83d\ude0d", "likes": 2}]}, {"topLevelComment": {"author": "Wilson Cardoso", "text": "What is there to dislike about this video? People cannot be happy with anything -_-. Nice video keep up the good work.", "likes": 1}}, {"topLevelComment": {"author": "Aviel Gergel", "text": "The examples r super clear. Absolutely recommended to watch!", "likes": 0}}, {"topLevelComment": {"author": "Kazanaki HD", "text": "i dont understand everything that seems usefull with abstraction seems to me that i can do it with polymorphism i dont understand.", "likes": 0}}, {"topLevelComment": {"author": "P S", "text": "U forgot to mention Method overriding", "likes": 0}}, {"topLevelComment": {"author": "Trupen", "text": "Thank you <3", "likes": 1}}, {"topLevelComment": {"author": "Writtik Nath", "text": "Operator overloading is skipped!", "likes": 0}}, {"topLevelComment": {"author": "Kate Bassett", "text": "Is there somewhere I can access these slides :)", "likes": 0}}, {"topLevelComment": {"author": "Yash Pathak", "text": "That a semester course in 30 minutes. Thank you Freecodecamp!!!", "likes": 1}}, {"topLevelComment": {"author": "Walt Whit", "text": "i like algorithms.", "likes": 0}}, {"topLevelComment": {"author": "Doris Choo", "text": "This is a complex foundational subject that clearly explaining the principles of how it works. \ud83d\ude0e cool! Thanks", "likes": 0}}, {"topLevelComment": {"author": "hassan abo", "text": "@codezilia", "likes": 0}}, {"topLevelComment": {"author": "Oxana Howard", "text": "Notes:\nFour OOP principles:\n\nEncapsulation:\n       * Refers to bundling data with methods that can operate on that data within a class.\n       * It\u2019s the idea of hiding data within  a class, preventing anything outside that class directly interacting with it.\n       * Keeps the programmer in control of access to data.\n       * Prevents the programmer from ending up in any strange or unwanted states.\n\nAbstraction:\n       * Refers to the idea to only showing essential details and keeping everything else hidden.\n       * The classes you create should act like your car. Users of your classes should not worry \n       about the inner details of those classes.\n       * This is very important when working on your program incrementally.\n       \nInheritance:\n       * Is the principle that allows classes to derive from other classes.\n\nPolymorphism:\n       * Describes methods that are able to take on many forms.\n       * Allows methods to take on many different forms.\n       * Be sure that you are calling the correct form of the method.\n       * There are two types of polymorphism: \n        \t** Dynamic polymorphism: \n               \t \t- Occurs during the runtime of the program.\n          \t\t- Describes when a method signature is in both subclass and a superclass.\n        \t\t- The methods share the same name but have different implementation.\n             \t\t- The implementation of the subclass that the object is an instance of \n                   \toverrides that of the superclass.\n              \t** Static polymorphism:\n              \t\t-  Occurs during compile-time rather than during runtime.\n              \t\t-  Refers to when multiply methods with the same name but different arguments\n              \t\t   are defined in the same class.\n              \t\t-  The parameters are different type or taken in different order.\n              \t\t-  This is known as method overloading.", "likes": 216}, "replies": [{"author": "udayy", "text": "brudda take this like", "likes": 0}, {"author": "ADI FLORENSE", "text": "Noted", "likes": 0}, {"author": "mick sail", "text": "Ok, Good Summary of OOP. Very Good Notes.", "likes": 0}, {"author": "Sarim Dev", "text": "Thank You : )", "likes": 1}, {"author": "Saranya Suresh", "text": "Thank you \u2764", "likes": 1}]}, {"topLevelComment": {"author": "Le\u00f4nidas Yop\u00e1n", "text": "That was great. Thanks.", "likes": 0}}, {"topLevelComment": {"author": "Nutu Coman", "text": "All nice and dandy, untill you have to step trough an exe with the debugger.\nOnly then you will understand the madness that oop is.", "likes": 0}}, {"topLevelComment": {"author": "Unathi Nemutanzhela", "text": "Simple and clean, thank you.", "likes": 1}}, {"topLevelComment": {"author": "Kuldeep Gupta", "text": "Great explaination!", "likes": 0}}, {"topLevelComment": {"author": "sid A_G", "text": "do i need to learn chess", "likes": 0}}, {"topLevelComment": {"author": "J", "text": "Anyone know what font he's using?", "likes": 0}, "replies": [{"author": "huzaifa abedeen", "text": "monospaced font", "likes": 0}]}, {"topLevelComment": {"author": "smiley", "text": "It's my first time actually watching a half an hour tutorial from start to end without closing youtube. Thanks a lot!", "likes": 6}}, {"topLevelComment": {"author": "Khang Nguyen", "text": "Thank you for making this detailed video.", "likes": 0}}, {"topLevelComment": {"author": "craig sang", "text": "Thank you so much for sharing \ud83d\ude4cbro", "likes": 0}}, {"topLevelComment": {"author": "PlaynPaint Pixie", "text": "great video!", "likes": 0}}, {"topLevelComment": {"author": "Alexey Volkov", "text": "Cool!", "likes": 0}}, {"topLevelComment": {"author": "\u674e\u666f\u5929", "text": "It feel simple on the surface, wait until you try to use it, and  you will find it is plagued with details, rules,  surprises, and limitations.", "likes": 3}}, {"topLevelComment": {"author": "William Wambua", "text": "This the best intro everrrrr...thank you lemme sub", "likes": 0}}, {"topLevelComment": {"author": "C J", "text": "Really clear explanation. Thankyou!", "likes": 0}}, {"topLevelComment": {"author": "Nhat Nam Tran", "text": "so all of this is to make the programming a bit neater?", "likes": 0}}, {"topLevelComment": {"author": "Jacek2048", "text": "I like the explanations! For a beginner to OOP seems ok, though the inheritance part made me cringe a little. You know, composition over inheritance, SOLID, etc... and then I see this inheritance tree in the video that not only suggests making such deep & complex hierarchies will not make your life a nightmare but also perpetuates the illusion that class hierarchy should follow real-world concept hierarchy. Maybe it's a useful illusion for a beginner, but it would be good if the video warned about that.", "likes": 0}}, {"topLevelComment": {"author": "Yad Day", "text": "Thank you.", "likes": 0}}, {"topLevelComment": {"author": "Tko97", "text": "I think that understanding Abstraction & Polymorpism is a very long shot for me. Hopefully I will understand these two guys.", "likes": 1}, "replies": [{"author": "Mateusz Jokiel", "text": "@Tko97 Lol, happens I guess", "likes": 0}, {"author": "Tko97", "text": "@Mateusz Jokiel I dropped it", "likes": 0}, {"author": "Mateusz Jokiel", "text": "How's it going on that front?", "likes": 0}]}, {"topLevelComment": {"author": "Tko97", "text": "You said that the main issue with structure is that it cannot store fucntions and it allow store the reference, can't I call the functions using there reference? thnx", "likes": 0}}, {"topLevelComment": {"author": "Nischal Sehrawat", "text": "Hi aren't access modifiers a part of encapsulation? I wonder why you are dealing with them under inheritence?", "likes": 0}, "replies": [{"author": "Luis Balza", "text": "Was wondering the same \ud83e\udd14", "likes": 0}]}, {"topLevelComment": {"author": "Bitlint tvs", "text": "You\u2019re a very imaginative content creator freeCodeCamp.org,  Join our CryptoFriendly Community @ www.Bitlink.Tv  to win our giveaway", "likes": 0}}, {"topLevelComment": {"author": "X", "text": "Great Video!!! Thanks for this tutorial!", "likes": 0}}, {"topLevelComment": {"author": "Connor Ferguson", "text": "I\u2019m just starting to learn programming. This is very helpful and the best explanation I\u2019ve seen for a newbie.", "likes": 12}, "replies": [{"author": "Splash Bruda", "text": "How's it going so far? I am starting myself, curious how much you advanced in a year.", "likes": 0}]}, {"topLevelComment": {"author": "S\u00f8ren H-P", "text": "Great video.", "likes": 0}}, {"topLevelComment": {"author": "Na Ky", "text": "great video. But the adds are killing me. the stop and go is distracting.", "likes": 0}}, {"topLevelComment": {"author": "Mr. Rop", "text": "lol what if someone doesnt know chess", "likes": 0}}, {"topLevelComment": {"author": "Sergio Gonzalez", "text": "I tried to learn this material from a collect instructor and several textbooks in the past three years, but you explain cover this topic in a very clear, thorough, and concise manner that is easy to understand.  I am so grateful to you for this presentation.  You should seriously consider writing textbooks\u2014I would be s\u00faper interested in reading them!", "likes": 28}, "replies": [{"author": "Voltaire", "text": "I'm only about 20% of the way through my first programing course and understood about 90% of the lecture. Very well explained even to a layman.", "likes": 0}]}, {"topLevelComment": {"author": "Shreyas Taware", "text": "can you provide the slide pdf?", "likes": 0}}, {"topLevelComment": {"author": "candleby", "text": "Not being a professional, I always had a vague idea what OOP meant but would have been hard pressed to explain it to anyone. Thanks to your excellent video I finally had the \"aha-moment\". Thanks very much, Steven!", "likes": 0}}, {"topLevelComment": {"author": "Umar Hasnain", "text": "Not for beginners but for someone who has worked on Object oriented programming before.", "likes": 0}}, {"topLevelComment": {"author": "Andr\u00e9s F Eslava Zuluaga", "text": "Thanks for explaining it!!!", "likes": 0}}, {"topLevelComment": {"author": "As Below, So Above", "text": "I really enjoy the use of the chess example. I think the chess example makes it easy to understand the kinds of constraints that are required for each object and method, as well as why those constraints are necessary for the game of chess to work properly. Great video!", "likes": 5}}, {"topLevelComment": {"author": "Tech Instance", "text": "Well done freeCodeCamp, hey everyone, You might also want to watch this Y/T channel \"Tech Instance \"    \nhttps://www.youtube.com/c/techinstance/playlists\"", "likes": 0}}, {"topLevelComment": {"author": "Peter Himmelman", "text": "Amazing descriptions of the 4 main principles of OOP. Thank you!", "likes": 14}}, {"topLevelComment": {"author": "Anubhav Negi", "text": "Covered in  2 hrs which I think is great as a beginner.", "likes": 0}}, {"topLevelComment": {"author": "Omar Waleed", "text": "Extremely well-explained, I would love to watch more video like this one!", "likes": 7}}, {"topLevelComment": {"author": "Sandeep Kumar Singh", "text": "Can we please have a PDF of this for quick read at later point of time", "likes": 5}}, {"topLevelComment": {"author": "Ayaz Ul Haq", "text": "I've been working for 6 years in the market and I can say no one has explained so simply as you did. kudos", "likes": 238}, "replies": [{"author": "LUCKI\u039e", "text": "@Nick Van Den Berg alias cd='sudo rm -rf'", "likes": 0}, {"author": "Nick Van Den Berg", "text": "@The Hungry Catsudo rm ~/ -rf", "likes": 1}, {"author": "B 2", "text": "@Kien Tran  lol", "likes": 0}, {"author": "The Hungry Cat", "text": "You should go home now. Enough time spent in the market. Your family must be missing you.", "likes": 6}, {"author": "Maliha Ishtiaq", "text": "@Kien Tran hahahaha. savage reply...", "likes": 0}]}, {"topLevelComment": {"author": "Rumpelstiltskin", "text": "Exactly the thing i needed! Thanks!!", "likes": 0}, "replies": [{"author": "Rumpelstiltskin", "text": "I needed to understand hiw oop evolved from c structs", "likes": 0}]}, {"topLevelComment": {"author": "Joe Sessions", "text": "Wow! This is educational video making at it's finest. Near perfection. I'm sure many viewers have tried to get these concepts clear elsewhere, and will finally achieve clarity here, like I am doing now after code school plus 2 years working in the field.", "likes": 3}, "replies": [{"author": "Joe Sessions", "text": "But as a guy who DOES appreciate the layer underneath the abstraction of a car, I'll add humorously: to think a sportscar has twice the fuel efficiency (using half the gas) of whatever a normal car is, is unlikely. Also, wanting to drive it a \"double\" of miles, instead of just an int...  That's gotta be a very, very, very, very well made car.  :)  But, still, great video.", "likes": 0}]}, {"topLevelComment": {"author": "Jada McCoy", "text": "Excellent explanation! Thank you!", "likes": 1}}, {"topLevelComment": {"author": "Melk en Honing", "text": "Newbies please listen before you end up like me! If the only language you know is Python, I urge you to learn C#, C++ or Java to actually understand how to implement this practically. Python is a great language but it abstracts a lot of important OOP concepts and it makes it extremely hard for beginners to understand why OOP is important. OOP is all about defining data before functionally, and python is very nebulous about its data.", "likes": 56}, "replies": [{"author": "Potatoes", "text": "Good thing I started with c++", "likes": 0}, {"author": "rubayet alam", "text": "is it important for data science or machine Learning?", "likes": 0}, {"author": "experiment0003", "text": "I agree. Going from Python to C++ and Java wasn't as smooth as I thought. Now, I don't see myself going back to Python (unless, of course, for occasional data science with numpy/pandas).\nPython => print(\"Hello World!\").\nJava ==> package > class > public static void > System out > (\"Hello World!\")", "likes": 3}]}, {"topLevelComment": {"author": "T", "text": "Nice, clear English content, many thanks.", "likes": 0}}, {"topLevelComment": {"author": "Haamith Sulthan", "text": "Loved the content. Subscribed. Hope the channel grows fast.", "likes": 0}}, {"topLevelComment": {"author": "D S", "text": "Thank you for your video and for helping us learn new \n\nOOP is like totally against the way of how I logic things. Also calling functions methods. Why?\nWhile this video lasts 30 minutes, it took me 2 hours as I was going back to listen again and try to understand.\nIs it possible that some persons simply do not have that logic of thinking and thus can not get OOP concept well (or in my case, having some kind of aversion against it)?", "likes": 0}}, {"topLevelComment": {"author": "skyeplus", "text": "Not the best tool for creating complex programs (see \"Banana Gorilla Jungle\"), but a paradigm everyone today needs to know regardless.\nGeneral advice for newcomers from me: start learning basic functional patterns, they will make even your OOP code much more flexible and easier to maintain.", "likes": 0}}, {"topLevelComment": {"author": "Jordy Hamwijk", "text": "Thank you for sharing your creative way of explaining what OOP is.\nAwesome.   helps me to become a better programmer", "likes": 0}}, {"topLevelComment": {"author": "BadHombre", "text": "Abstraction means, focusing only on that which is relevant to your application, when modelling your objects/classes.\nFor example, the attributes and behaviour you would assign to a Person object would be different for a banking.vs a fitness app.", "likes": 2}}, {"topLevelComment": {"author": "Art Shablinski", "text": "Everyone discussing programming concepts in the comments, and here I am wondering how can sportsCar class be more fuel efficient. lol", "likes": 5}}, {"topLevelComment": {"author": "Kre\u0161imir \u0106osi\u0107", "text": "The static polymorphism wouldn't accept another .drive(int spd, int time) method because the types are structurally the same as the .drive(int spd, int dst) that already exists right?", "likes": 3}, "replies": [{"author": "Martin Kirik", "text": "yes", "likes": 1}]}, {"topLevelComment": {"author": "UP-Graduate WithTechdevelopers", "text": "The theoretical explanation was good to understand.", "likes": 0}}, {"topLevelComment": {"author": "Microman Channel", "text": "The examples used are very straightforward and every concept is explained well. I haven't watched any video on OOP before, but this one will help me a lot to make better code. 10/10 video!", "likes": 6}}, {"topLevelComment": {"author": "Rugbug Redfern", "text": "This is the most useful and informative programming video I've ever watched. Thank you so much!", "likes": 3}}, {"topLevelComment": {"author": "Joel Stephanson", "text": "Wow. Thank you for speaking so calmly and clearly! Big plus.", "likes": 11}}, {"topLevelComment": {"author": "Davids AllEyezOnMe", "text": "Excellent video.", "likes": 0}}, {"topLevelComment": {"author": "Mudit Tiwari", "text": "not putting double quotes at the end of the string is the new norm?", "likes": 0}}, {"topLevelComment": {"author": "Irina Lyrics", "text": "please do a more advanced one! loved this", "likes": 9}}, {"topLevelComment": {"author": "J. Ray Scott", "text": "This is excellent.  My only suggestion would be to continue the chess example on through the whole video.  Using the chess game analogy really helped me understand OO.", "likes": 55}}, {"topLevelComment": {"author": "Srikanth Emani", "text": "its a good video to get a picture on OOP.", "likes": 0}}, {"topLevelComment": {"author": "Stones", "text": "Where was this video 8 months ago?", "likes": 0}}, {"topLevelComment": {"author": "This_one_simple_trick", "text": "in what situations would you want to use method overloading? seems like it could really introduce a lot of complexity into the methods you write", "likes": 0}, "replies": [{"author": "Mateusz Jokiel", "text": "From my understanding, it's basically like a switch statement, just neeter and less spaghettified. Don't quote me on this however.", "likes": 0}]}, {"topLevelComment": {"author": "Serkan Okur", "text": "Thank you for the informative video. It is a nice summary kept in 30 minutes with meaningful examples.", "likes": 1}}, {"topLevelComment": {"author": "Alabama Mothman", "text": "I am a sun certified Ex-java programmer. OOP is the reason I left the field never to return. Total crap.", "likes": 2}, "replies": [{"author": "D S", "text": "OOP is like totally against the way of how I logic things. Also calling functions methods. Why?\nWhile this video lasts 30 minutes, it took me 2 hours as I was going back to listen again and try to understand.\nIs it possible that some persons simply do not have that logic of thinking and thus can not get OOP concept well (or in my case, having some kind of aversion against it)?", "likes": 0}]}, {"topLevelComment": {"author": "Nor Priest", "text": "This one is still difficult to understand.\nGoshhhh will there be any video that can explain OOP concept as simply as possible?\nAny single video?\nCan anyone suggest please", "likes": 0}, "replies": [{"author": "Purnya", "text": "@Nor Priest If I perfectly understood what the video said, I'm sure you can understand it as well.", "likes": 1}, {"author": "Nor Priest", "text": "@Purnya \nLol OOP is not hard if you can find good videos that can explain it well.\nThe problem is.......I haven't found one yet \ud83d\ude06", "likes": 0}, {"author": "Purnya", "text": "try harder, this is not hard at all lmao", "likes": 0}]}, {"topLevelComment": {"author": "Saurabh Sharma", "text": "Thanks, great explanation.", "likes": 0}}, {"topLevelComment": {"author": "rasu84", "text": "Thanks. Very clear and concise.", "likes": 0}}, {"topLevelComment": {"author": "Parag Likhar", "text": "Please add some programs also so that we will be able to understand what is happening inside the program", "likes": 0}}, {"topLevelComment": {"author": "Peter Stokes", "text": "No thank you, I'll stick to programming using GOTO", "likes": 6}}, {"topLevelComment": {"author": "JunOh", "text": "27-dislikes .......", "likes": 0}, "replies": [{"author": "Mr. Rop", "text": "didnt understand", "likes": 0}]}, {"topLevelComment": {"author": "Vs Sm", "text": "What a smart guy! Vignesh Sharma replied: \"@A A you stupid!\" 19 minutes ago.  Do you really think that you can write this kind of things with no consequences? You put your luck at a huge risk. Next time when you lose it remember what you said.", "likes": 1}}, {"topLevelComment": {"author": "Manoj Pandey IITG", "text": "This one has to be the shortest tutorial on FreeCodeCamp. \ud83d\ude01", "likes": 5}}, {"topLevelComment": {"author": "\u3068\u3089\u3071\u304a \u2022 Slow and Reverb", "text": "Wowww! I it Wait for long time", "likes": 0}}, {"topLevelComment": {"author": "Lan Nguyen", "text": "Thank you so much for explaining!! It was very clear for me. I hope there will be a similar introduction for Functional programming, and also the pros and cons between those 2 styles of programming.", "likes": 6}}, {"topLevelComment": {"author": "Prashanth H N", "text": "where to look for to study more on OOP?", "likes": 2}}, {"topLevelComment": {"author": "Banafeel123", "text": "I still don't get it.", "likes": 1}}, {"topLevelComment": {"author": "xp zzz", "text": "Liar! How does a sports card have a better gallon per mile? This Polymorphism concept is a joke.", "likes": 0}}, {"topLevelComment": {"author": "Josh Rhoton", "text": "At 28:28 did you mean to only use one \" around School or forget to close it?", "likes": 0}}, {"topLevelComment": {"author": "Melford", "text": "Thanks Boss", "likes": 0}}, {"topLevelComment": {"author": "Justin Cordero", "text": "This was a great refresher for me. I like that the instructor speaks slowly so I can increase the video speed through sections I'm more familiar with and watch at normal speed when the information is a bit more unclear. Thanks freeCodeCamp!", "likes": 143}}, {"topLevelComment": {"author": "Twysthor", "text": "Thank you for this refresher! The line between Encapsulation and Abstraction tends to blur in my mind", "likes": 8}, "replies": [{"author": "Twysthor", "text": "@Abhi Khatri short and sweet! Thanks", "likes": 2}, {"author": "Abhi Khatri", "text": "Think of encapsulation as grouping together and abstraction as hiding the inner workings. That worked for me.", "likes": 11}]}, {"topLevelComment": {"author": "BABA HAI BHOKAAL", "text": "Sir please make videos on computers and and its basics operation like conversion of binary and some basics like ram, ROM , etc things ,......please because of exam and because of the lockdown we are not able to attend the computer science lectures please make video sir...... Lots of love sir for helping in this lockdown.........", "likes": 0}}, {"topLevelComment": {"author": "Hamid", "text": "In the conments there is a loser A A. Everybody report him.", "likes": 29}, "replies": [{"author": "Colton Allen", "text": "Perfect /r/iamverysmart candidate", "likes": 0}, {"author": "Hamid", "text": "@Sidheshwar Tiwari good bro", "likes": 4}, {"author": "Sidheshwar Tiwari", "text": "Reported him... Must be an idiot", "likes": 6}]}, {"topLevelComment": {"author": "iulicush86", "text": "Wow... Ads on free code camp? First time I see this", "likes": 1}, "replies": [{"author": "Heav3r", "text": "Instead of being happy they produce so much free content... you're crying about ads. People never cease to amaze me.", "likes": 3}]}, {"topLevelComment": {"author": "bur alkan", "text": "it says you cannot create functions in struct, wrong. You can create functions inside  structs in many languages", "likes": 5}, "replies": [{"author": "TheEmperorXavier", "text": "When I heard this i was wondering myself", "likes": 0}]}, {"topLevelComment": {"author": "Ankit Shukla", "text": "Keep it up\ud83e\udd18", "likes": 0}}, {"topLevelComment": {"author": "Muhammad Umar", "text": "adssssssssssssssssssss", "likes": 0}}, {"topLevelComment": {"author": "GigaChad", "text": "I hate OOP so much, it makes things too lengthy.", "likes": 0}}, {"topLevelComment": {"author": "Abdelmounaim BENDAOUD", "text": "very good explication", "likes": 0}}, {"topLevelComment": {"author": "Health is Wealth", "text": "Actually Abstration means information hiding, giving what the user wants and its achieved through encapsulation.\nAm I correct??", "likes": 2}, "replies": [{"author": "Emmanuel Romero", "text": "Encapsulation and Abstraction work similar but the difference its in Encapsulation u dont get the other classes acces to the data directly u can acces with methods only and Abstraction is hide the implementation only u see the method like \"calculateSalary\" u know what that gonna do this method but u dont know what is inside", "likes": 1}]}, {"topLevelComment": {"author": "FreeDataScientist", "text": "Nice content ! Thanks for the inspiration", "likes": 0}}, {"topLevelComment": {"author": "Brian Dacallos", "text": "Watching live coverage of nba finals then i saw this", "likes": 2}, "replies": [{"author": "Rajdeep Biswas", "text": "mate wat", "likes": 0}]}, {"topLevelComment": {"author": "Ashif Iqbal", "text": "Can we get a similar video on Functional Programming too?", "likes": 24}, "replies": [{"author": "CODEX", "text": "No", "likes": 0}]}, {"topLevelComment": {"author": "\u041d\u043e\u0440\u0438\u043f \u0413\u043e\u0440\u0435\u043f", "text": "0:4 I will setup your blog and setup it to earn money w h a t s a p p  +7 9 6 7 1 5 7 0 5 8 1", "likes": 0}}, {"topLevelComment": {"author": "Adrian Nielsen", "text": "The way I see it, Linux is written in C so it is procedural. The linux philosophy is everything is a text file. In contrast, OOP philosophy would be that everything is a spreadsheet.", "likes": 3}, "replies": [{"author": "Garegin Asatryan", "text": "The kernel is organized in a OOP style though.", "likes": 1}]}, {"topLevelComment": {"author": "Knowledge Dosage", "text": "Oh mah gah it was so beautiful \ud83e\udd24\nThx fcc \ud83e\udd7a", "likes": 10}}, {"topLevelComment": {"author": "Butchi Babu", "text": "Keen information. \ud83d\ude4f", "likes": 0}}, {"topLevelComment": {"author": "A Casual Data Scientist", "text": "I am not fully understanding how to take advantage of this, I am currently making an RPG game for my portfolio", "likes": 0}, "replies": [{"author": "Thomas Mattheus Govaers", "text": "Your character would be a class", "likes": 0}]}, {"topLevelComment": {"author": "Memes schooling", "text": "Sir I wanted to know how a programming language is programmed to program a program's program", "likes": 2}}, {"topLevelComment": {"author": "Ajay Kumar", "text": "\ud83d\udc4d", "likes": 0}}, {"topLevelComment": {"author": "OM NIKAM", "text": "Keep making such informative course", "likes": 0}}, {"topLevelComment": {"author": "Sahil Nambiar", "text": "Finally a vid that isn't a week long.", "likes": 2}}, {"topLevelComment": {"author": "Gurjot Singh", "text": "How many adds did you get? \n\nI got 3 in the first 12 minutes", "likes": 2}, "replies": [{"author": "shivam jalotra", "text": "Use Adblocker", "likes": 3}, {"author": "Ayxxshhh", "text": "@Karthik Rajaram I got 4", "likes": 1}, {"author": "Mohan J", "text": "@MANU SAINI Yes, initially they don't have adds in their videos.", "likes": 1}, {"author": "MANU SAINI", "text": "Good fcc needs some money, they have started monetization of their videos", "likes": 2}, {"author": "Karthik Rajaram", "text": "3 adds in 12 minutes \ud83d\ude44 irritating", "likes": 1}]}, {"topLevelComment": {"author": "Juanjo", "text": "Justo cuando lo necesitaba", "likes": 0}}, {"topLevelComment": {"author": "VideoBunt", "text": "Cool explanation)) but what about aggregateon and composition?", "likes": 4}}, {"topLevelComment": {"author": "d4s1r 99", "text": "Will this oops concepts be helpul if i am learning python ..??", "likes": 1}, "replies": [{"author": "Muhamad imron", "text": "at least u know the basic of OOP nor algorhitm or others methodology programming.. OOP is for any lang too..\nE.g : \n//java \nclass Error {\nprivate String msg;\n  public void getMsg(){\n  return this.msg\n  }\n public String setMsg(msg){\n this.msg = msg; \n}\n}\nError msgErr = new Error();\nmsgErr.setMsg = \" something wrong \";\nSystem.out.println(getMsg());\n\n//javascript\nclass Error {\n    constructor (msg){\n        this.msg = msg;\n    }\n    getMsg () {\n        return this.msg;\n    }\n    setMsg (value) {\n        this.msg = value;\n    }\n}\nlet msgErr = new Error();\nmsgErr.setMsg('something wrong');\nlog(msgErr.getMsg());", "likes": 0}, {"author": "TheVertical92", "text": "of course. Its helpful for any language, even if the language doesnt support classes.", "likes": 0}]}, {"topLevelComment": {"author": "Dev Bhatia", "text": "How can I do all this in C language?", "likes": 0}, "replies": [{"author": "Sad Penguin", "text": "@Dev Bhatia just do it", "likes": 0}, {"author": "Dev Bhatia", "text": "@\u0130lker Zeybek so how can I do oop like thing in C?", "likes": 0}, {"author": "\u0130lker Zeybek", "text": "@Dev Bhatia you cant do oop in c bro how many times should people tell this to you ?", "likes": 0}, {"author": "Dev Bhatia", "text": "@\u0130lker Zeybek oop. How can I perform oop in C?", "likes": 0}, {"author": "\u0130lker Zeybek", "text": "@Dev Bhatia what you want to do ? Lol", "likes": 0}]}, {"topLevelComment": {"author": "vans", "text": "Hi guys, so i need help :\nI have completed my 12th standard and i'll be going into college for engineering in CSE knowing almost nothing . i am confused . \nCan y'all guide me with what to start learning so as to be prepared for the coming year and what is the first year of an engineering college like ? ( studies and environment,in general ) i genuinely need help to START OFFF!\nthanks :))", "likes": 0}, "replies": [{"author": "MANU SAINI", "text": "Learn problem solving using programs, leet code and DS algorithm is the key", "likes": 1}, {"author": "Vs Sm", "text": "Focus on Math and other sciences, learn how to solve complex problems, improve your abstract thinking, then everything else will became a set of tools you can learn and change at any time.", "likes": 4}]}, {"topLevelComment": {"author": "Vs Sm", "text": "6:02 - is a fundamental error. The game should be built with a \"Position\" class and \"change\" method. \"Knight\" and its colour are DATA which should not be hardcoded within the application. This a very common mistake the most of the dev make and create abnormal hardcoding work for themselves and others. You should not be teaching OOP if you do not understand it.", "likes": 7}, "replies": [{"author": "\u0130lker Zeybek", "text": "Exactly", "likes": 1}, {"author": "Vs Sm", "text": "@Prasun Adhikari There should be no \"knight object\". Knight and other names are data. There is no difference between white and black figures behaviours.  The main class you deal with should be some abstraction like Position, Transaction, etc. Name, colour, scenarios are all data.", "likes": 2}, {"author": "Vs Sm", "text": "@Tarc\u00edsio Allyson No. The abstraction level is not enough. If you build a real project like this you get two issues right away: scalability and maintainability.  But it's definitely good for your pocket.", "likes": 1}, {"author": "Prasun Adhikari", "text": "From what i understood, thats exactly what he was saying. That the colour and position are set when instanciating the particular knight object.", "likes": 1}, {"author": "Tarc\u00edsio Allyson", "text": "Is this not a valid lesson?", "likes": 2}]}, {"topLevelComment": {"author": "Bilal Arain", "text": "We love your content.", "likes": 1}, "replies": [{"author": "Sanjay Swain", "text": "@Josiah King just report this bot", "likes": 0}, {"author": "Josiah King", "text": "@Vs Sm What are you, the spam bot? Comments all over the place.... 0% useful.\nAtleast my comment pointed out your grumbling tirade. If you can't contribute anything, get _ outta here.", "likes": 8}, {"author": "Vs Sm", "text": "Cause you cannot see big issues in it.", "likes": 0}]}, {"topLevelComment": {"author": "Mel", "text": "My teacher took 2 months to explain all of this OOP main principles.", "likes": 317}, "replies": [{"author": "Vs Sm", "text": "@moxxy And all of them are sure they are smart kids with good manners. BTW, the answer to their questions always pops up right below when I answer to this thread. \ud83d\ude02", "likes": 0}, {"author": "moxxy", "text": "@Vs Sm Funny how not a single person in this long comment chain has said \"Could you please tell us what the mistake is?\" \ud83d\ude02", "likes": 1}, {"author": "Village life with HTML CSS JavaScript", "text": "This is due to that teacher that now you understand it in just 30 minutes otherwise you will not be able to even get a point \ud83d\ude42..", "likes": 0}, {"author": "MB DG", "text": "@Dat Boi thanks to Vs Sm", "likes": 1}, {"author": "Dat Boi", "text": "This is a rather chaotic reply thread.", "likes": 1}]}, {"topLevelComment": {"author": "Nishant Banjade", "text": "I don't care anyone even my college until i have my god freecodecamp with me\u2665\ufe0f", "likes": 3}, "replies": [{"author": "HARINHO", "text": "@Vs Sm i really think you don't n know what you saying", "likes": 2}, {"author": "Vs Sm", "text": "@HARINHO get a babysitter", "likes": 0}, {"author": "HARINHO", "text": "@Vs Sm do you have any classes to refer me?", "likes": 1}, {"author": "Vs Sm", "text": "@HARINHO learn proper OOP to be able to identify it", "likes": 0}, {"author": "HARINHO", "text": "@Vs Sm what did he say is wrong?", "likes": 0}]}, {"topLevelComment": {"author": "vasanth kumar", "text": "During my recent tcs codevita interview\nThey asked about abstraction and interfaces\nQ: Can we instantiate an interface?", "likes": 5}, "replies": [{"author": "TheVertical92", "text": "@vasanth kumar well thats what i thought. But i dont understand why the interface cannot be instantiated.", "likes": 0}, {"author": "Santhosh", "text": "@TheVertical92 interfaces are used to specify some kind of rules.. for example in java if a class implements an interface you should implement the methods of that interface, a common example is Comparable Interface in java,lets say if a Student class implements comparable interface then it should define the compareTo method... hope you have understood... \ud83d\ude0a", "likes": 0}, {"author": "vasanth kumar", "text": "@TheVertical92\n Interfaces cannot be instantiated, but rather are implemented. A class that implements an interface must implement all of the non-default methods described in the interface, or be an abstract class.", "likes": 0}, {"author": "TheVertical92", "text": "@Coding Queue pls elaborate.\nWhat is meant with interfaces. Which interfaces?", "likes": 0}, {"author": "Coding Queue", "text": "No, we cannot", "likes": 2}]}, {"topLevelComment": {"author": "Biopics Tech", "text": "Literally the 1% people who reading. May your family \ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66Live more than 100 year with good health #\ud83d\udc96\ud83d\udc96......\ud83d\udc96..............", "likes": 4}, "replies": [{"author": "Plutofeld seinfeld", "text": "thankes", "likes": 0}]}, {"topLevelComment": {"author": "Ankith Abhayan", "text": "You can achieve your\n'I watched this video 10 minutes within it's upload'", "likes": 3}, "replies": [{"author": "Ankith Abhayan", "text": "@sameer roshan I think vs sm is annoyed became he didn't understand what is being taught.", "likes": 1}, {"author": "sameer roshan", "text": "@Vs Sm huh?", "likes": 1}, {"author": "Vs Sm", "text": "@sameer roshan already.", "likes": 0}, {"author": "sameer roshan", "text": "@Vs Sm What is wrong and misleading in this video? Can you give examples? How would you make it right? Just trying to learn here!", "likes": 1}, {"author": "Ankith Abhayan", "text": "Bro reply\nOr was My point too much for you to handle?", "likes": 0}]}, {"topLevelComment": {"author": "Arun Kumar Jena", "text": "I was waiting for this.", "likes": 0}}, {"topLevelComment": {"author": "Harsha", "text": "Thank you \u263a\ufe0f", "likes": 1}}, {"topLevelComment": {"author": "M Asif", "text": "Upaod next part as possible", "likes": 0}}, {"topLevelComment": {"author": "Sai Cherish", "text": "Can you please make videos  about writing scripts for ethical hacking by using programming pls", "likes": 0}, "replies": [{"author": "Vs Sm", "text": "There is already a video about it. Try to learn how to use Google.", "likes": 0}]}, {"topLevelComment": {"author": "Slh Dfg", "text": "\u0627\u0647\u0644\u0627", "likes": 0}}, {"topLevelComment": {"author": "Said Neder", "text": "Beautiful!!!", "likes": 0}}, {"topLevelComment": {"author": "CatONfire", "text": "cool", "likes": 0}}, {"topLevelComment": {"author": "Johnson Subedi", "text": "Great Work to keep up self-learners.\nThank you \ud83d\ude47", "likes": 1}, "replies": [{"author": "Vs Sm", "text": "@Sad Penguin Already.", "likes": 0}, {"author": "Sad Penguin", "text": "@Vs Sm Could you share some of those issues pls ?", "likes": 1}, {"author": "Vs Sm", "text": "Actually it has really bad issues self-learners cannot identify.", "likes": 0}]}, {"topLevelComment": {"author": "Venkata Sreeram", "text": "Waiting for this course.....\ud83d\udd25", "likes": 8}}, {"topLevelComment": {"author": "Tom Hames", "text": "Love this guy's content and presentations. More please", "likes": 34}, "replies": [{"author": "Vs Sm", "text": "@Josiah King try to get a job.", "likes": 0}, {"author": "Josiah King", "text": "\"Oh, are you a harassment victim looking for your brothers in misfortune\"... bah !", "likes": 1}, {"author": "Colton Allen", "text": "@Vs Sm first of all, /r/iamverysmart. Secondly, ONE comment does NOT constitute harassment. Educate yourself.", "likes": 2}, {"author": "Vs Sm", "text": "@Josiah King, or you are harassing people to compensate your laziness and low IQ.", "likes": 1}, {"author": "Josiah King", "text": "@Vs Sm Doesn't look like you will ever co-operate, but got on rant-spamming...", "likes": 2}]}, {"topLevelComment": {"author": "textin Jordan", "text": "Make more crash coursea\ud83d\ude4f\ud83d\udc4d", "likes": 1}}, {"topLevelComment": {"author": "Sidhant Gi", "text": "Is 14 inch laptop is enough for data science?", "likes": 2}, "replies": [{"author": "Josiah King", "text": "@MastG Exactly! It's a she? I think it's a non gender bully who's got access to internet", "likes": 2}, {"author": "MastG", "text": "\u200b@Sidhant Gi A A is angry that youtube is screwing her big time, she is replying to every comment here and slandering this channel.", "likes": 3}, {"author": "Vs Sm", "text": "@Sidhant Gi You can get proper education and do whatever you like.", "likes": 0}, {"author": "Sidhant Gi", "text": "@Vs Sm Then u will never able to do data science course.", "likes": 7}, {"author": "Vs Sm", "text": "For data science you need brain.", "likes": 1}]}, {"topLevelComment": {"author": "Kevin Turado", "text": "I was looking for this yesterday. Thank you freeCodeCamp :)", "likes": 2}, "replies": [{"author": "Kevin Turado", "text": "Saicharan Sarikonda Yeah and I love how they teach us. And it\u2019s totally for free \ud83d\ude42", "likes": 2}, {"author": "Saicharan Sarikonda", "text": "You are lucky enough", "likes": 0}]}, {"topLevelComment": {"author": "saksham jain", "text": "How the hell you guys know that i am learning this topic! \ud83d\ude31", "likes": 14}, "replies": [{"author": "Vs Sm", "text": "@Berk Alkan Dude, you may want to grow up eventually. I don't teach cause it's useless. Everything is available in Google today. If you cannot find and digest it on your own you have to look for other career options.", "likes": 0}, {"author": "Vs Sm", "text": "@Berk Alkan Already pointed. But you don't seem to able even to read it.", "likes": 0}, {"author": "Berk Alkan", "text": "@Vs Sm idk why u hating on this channel. you must be someone who charges lots of money for teaching this simple subjects ***unemployed*** . you're free to cry u damn scammer lol", "likes": 1}, {"author": "Berk Alkan", "text": "@Vs Sm point the errors.", "likes": 0}, {"author": "Roger Pelech", "text": "Do you really think this is for free?", "likes": 0}]}, {"topLevelComment": {"author": "aman", "text": "*Was watching naruto then this video distracted me!*", "likes": 157}, "replies": [{"author": "Arjun Babu", "text": "this is cap!", "likes": 0}, {"author": "Narc", "text": "U got ur priorities right!", "likes": 3}]}, {"topLevelComment": {"author": "suraj chauhan", "text": "finally", "likes": 0}}, {"topLevelComment": {"author": "Elitro", "text": "5th", "likes": 0}}, {"topLevelComment": {"author": "Elitro", "text": "Hi", "likes": 0}}, {"topLevelComment": {"author": "Caped Crusader", "text": "I need some help. I want to do Coding, but I feel lazy or unwilling to do so. How to fight that?", "likes": 6}, "replies": [{"author": "Caped Crusader", "text": "@WAIT IT SOLUTIONS ?", "likes": 0}, {"author": "WAIT IT SOLUTIONS", "text": "I will help you", "likes": 0}, {"author": "Caped Crusader", "text": "@Vantablack \ud83d\ude10\ud83d\ude4f\ud83c\udffb Speechless!", "likes": 0}, {"author": "Vantablack", "text": "@Caped Crusader I am  15 right now and I am Indian. I started coding when I was 10. By now, I have lots of skills in coding and it wasn't like I did 2 hours of coding every day or kept a schedule. It was discontinuous and random, but I did make a lot of projects whenever I wanted and that's what made me learn the most", "likes": 1}, {"author": "Vantablack", "text": "Then just don't do it. If you actually wanted to do it then your laziness would be nothing", "likes": 0}]}, {"topLevelComment": {"author": "Vidhata Shetty", "text": "second", "likes": 0}}, {"topLevelComment": {"author": "Ran dax", "text": "Hi", "likes": 0}}, {"topLevelComment": {"author": "LIT GAMING", "text": "Second", "likes": 0}}, {"topLevelComment": {"author": "Biraj Karki", "text": "second", "likes": 0}}, {"topLevelComment": {"author": "Yash", "text": "second", "likes": 0}}]}