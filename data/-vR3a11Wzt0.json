{"video": {"id": "-vR3a11Wzt0", "title": "Destructuring in ES6 - Beau teaches JavaScript", "description": "Destructuring assignment is special syntax for neatly assigning values taken directly from objects and arrays to variables. This is a new feature in JavaScript ES6.\n\n\ud83d\udcbb Code: http://codepen.io/beaucarnes/pen/PpvQPm?editors=0012\n\n\ud83d\udd17 Resource: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\n\n\ud83d\udc26 Beau Carnes on Twitter: https://twitter.com/carnesbeau\n\n\u2b50JavaScript Playlists\u2b50\n\u25b6JavaScript Basics: https://www.youtube.com/playlist?list=PLWKjhJtqVAbk2qRZtWSzCIN38JC_NdhW5\n\u25b6Data Structures and Algorithms: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ\n\u25b6Design Patterns: https://www.youtube.com/playlist?list=PLWKjhJtqVAbnZtkAI3BqcYxKnfWn_C704\n\u25b6ES6: https://www.youtube.com/playlist?list=PLWKjhJtqVAbljtmmeS0c-CEl2LdE-eR_F\n\u25b6Clean Code: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh\n\n-\nWe're busy people who learn to code, then practice by building projects for nonprofits. Learn Full-stack JavaScript, build a portfolio, and get great references with our open source community.\n\nJoin our community at https://freecodecamp.com\nRead great tech articles at https://medium.freecodecamp.com", "duration": "PT6M10S", "likes": "2059", "views": "62414"}, "comments": [{"topLevelComment": {"author": "Eleventh-EL", "text": "This is a very good tutorial. Simple, fast, effective. Thanks a bunch", "likes": 0}}, {"topLevelComment": {"author": "Vi Huynh", "text": "G.O.A.T Content ty", "likes": 0}}, {"topLevelComment": {"author": "hung", "text": "what's that font?", "likes": 0}}, {"topLevelComment": {"author": "Anjanique", "text": "Beautiful simple and effective tutorial.", "likes": 0}}, {"topLevelComment": {"author": "Kelevra", "text": "I don't quite get how in the last example the computer knows which object it is taking the values from, like \n\nwhat If I have 2 objects that have parameters with the same name, or should I use this syntaxis only when 1 of the objects can match? \n\nconst profileUpdate = ({ name, age, nationality, location }) => {\r\n\r\n}", "likes": 0}}, {"topLevelComment": {"author": "Kaustubh Maladkar", "text": "Best explanation of de structuring possible", "likes": 0}}, {"topLevelComment": {"author": "John Yepthomi", "text": "Thank you Beau!!", "likes": 0}}, {"topLevelComment": {"author": "Omega Lul", "text": "awesome. thanks!", "likes": 0}}, {"topLevelComment": {"author": "YAHUAH'S son & friend", "text": "Always remember we must repent of our sins (sin is transgression The Law Of Yahuah The Father in Heaven. The Law are The Books: Genesis, Exodus, Leviticus, Numbers, & Deuteronomy). We must repent of our sins and Have Belief On Yahusha The Messiah. HE Died and Rose three days later so that we can be forgiven of our sins! \n\nCome to HIM\ud83d\ude42\ud83d\ude42\ud83d\ude42\ud83d\ude42\ud83d\ude42\ud83d\ude42\ud83d\ude42\ud83d\ude42", "likes": 0}}, {"topLevelComment": {"author": "ARtD 3D", "text": "i can't get it because the course is not organized i go to much tutorials and they all speaks about things haven't seen clearly in the course for example you ask someone about spread operator while he need to know others stuff which you think already we know \ni think the course need more simplicity and videos with solution to know exactly and clearly what does this means", "likes": 0}}, {"topLevelComment": {"author": "LittleRogue", "text": "Homie is still using var", "likes": 0}}, {"topLevelComment": {"author": "khadija ouakkaha", "text": "that was usefull", "likes": 0}}, {"topLevelComment": {"author": "Chhavimani Choubey", "text": "almost feels like magic, these new programming updates and features.", "likes": 0}}, {"topLevelComment": {"author": "Weird stuff", "text": "you make it more complex using same key value names", "likes": 0}, "replies": [{"author": "Weird stuff", "text": "now i understand this because I had watch the tutorial from other channels :)", "likes": 0}]}, {"topLevelComment": {"author": "18_049 MAHFUJ HOSSAIN", "text": "Clear and on to the point explanation.BTW the thumbnail\ud83d\ude04", "likes": 0}}, {"topLevelComment": {"author": "Jasper Klingen", "text": "Thank you very much!", "likes": 0}}, {"topLevelComment": {"author": "Khidirboev", "text": "I was going to leave fcc web platform because it got complex starting from ES6 and I couldn't catch the concept. But these videos are way more than great!! I think freecodecamp should put these videos on the web platform order by order", "likes": 1}}, {"topLevelComment": {"author": "Whatsthis", "text": "Thanks, here to work on my 'Destructuring'.", "likes": 0}}, {"topLevelComment": {"author": "CapsLock", "text": "Good tutorial", "likes": 0}}, {"topLevelComment": {"author": "Fjord", "text": "Thumbnail thought \ud83d\ude06\ud83d\ude01", "likes": 0}}, {"topLevelComment": {"author": "Heavydirtysoul", "text": "What is his name again?", "likes": 0}}, {"topLevelComment": {"author": "Information Giant", "text": "Hey Bau, which code editor you use??", "likes": 0}}, {"topLevelComment": {"author": "Hemanth Kotagiri", "text": "Awesome tut! But, the thumbnail is a bit funny.", "likes": 0}}, {"topLevelComment": {"author": "Saoud Ahmed Khan", "text": "Thanks men", "likes": 0}}, {"topLevelComment": {"author": "Prakash Das", "text": "Beau, your explanation is Beautiful!", "likes": 0}}, {"topLevelComment": {"author": "joselmedrano", "text": "Is it just me or does this guy sort of sounds like Jerry Seinfeld?", "likes": 0}}, {"topLevelComment": {"author": "Gustavo Dias", "text": "Every time I need a well organized, concise, and well-explaned concept, I come to you! Beau, you are the best!", "likes": 1}}, {"topLevelComment": {"author": "Adaja Tobi", "text": "Amazing stuff. Thank you Sensei", "likes": 0}}, {"topLevelComment": {"author": "Steven", "text": "Best explanation ever", "likes": 0}}, {"topLevelComment": {"author": "Honza Kucha\u0159", "text": "Found this:\nlet array = [0,1,2,3,4,5];\n[array[0], array[3]] = [array[3], array[0]]\narray;    // [3,1,2,0,4,5]\n\nWhy?", "likes": 0}}, {"topLevelComment": {"author": "Amy Cross", "text": "WOW...you are awesome....I truly mean that!!!", "likes": 0}}, {"topLevelComment": {"author": "modern cloth", "text": "This is a really helpful video. My thanks. But I have a question. How does this work when there are two objects with different names, different values, but the exact same keys?", "likes": 0}}, {"topLevelComment": {"author": "Star Elite", "text": "Your ide name pls", "likes": 0}}, {"topLevelComment": {"author": "Ashish Kushwaha", "text": "you are just awesome .....love from India", "likes": 0}}, {"topLevelComment": {"author": "Morgana Oliveira", "text": "Hi, tested this example. \n\n\nconst profileData = {\r\n    name: 'Morgana',\r\n    age: 22,\r\n    nationality: 'Brazilian',\r\n    address: 'Rua Monsenhor Dourado, N\u00b0 25'\r\n};\r\n\r\nconst profileUpdate = ({ name, age } = profileData ) => {\r\n    console.log(name + 'and' + age);\r\n    // const { name, age, nationality, location } = profileData;\r\n    // do something with these variables\r\n}\r\n\r\nprofileUpdate();", "likes": 0}}, {"topLevelComment": {"author": "pravin poudel", "text": "this video deserve more attention-seeking title !!!", "likes": 0}}, {"topLevelComment": {"author": "Jdb", "text": "4:46 I don't understand when you would ever be able to pass anything into profileUpdate since it is a variable and not a function. Can somebody explain this to me?", "likes": 0}, "replies": [{"author": "Salman Hanif", "text": "@Jdb whatever man", "likes": 0}, {"author": "Jdb", "text": "@Salman Hanif Yes, you did, with a snarky attitude", "likes": 1}, {"author": "Salman Hanif", "text": "@Jdb I answered your every question. Don't know why you getting pissed.", "likes": 0}, {"author": "Jdb", "text": "@Salman Hanif I have not, so instead of being snarky you just answer the damn question?", "likes": 0}, {"author": "Salman Hanif", "text": "@Jdb yes. I think you haven't read the documentations for es6", "likes": 0}]}, {"topLevelComment": {"author": "Matt Nolan", "text": "Great tutorial mate, thank you!!", "likes": 0}}, {"topLevelComment": {"author": "greg frllo", "text": "come here, got what i look for, like, comment, bye.", "likes": 0}}, {"topLevelComment": {"author": "Aar\u00f3n Argotte L\u00f3pez", "text": "danke", "likes": 0}}, {"topLevelComment": {"author": "Ed", "text": "Thank you.  Nice clear explanation, but would be nice if you include syntax for default values?", "likes": 0}}, {"topLevelComment": {"author": "Ryan Lyu", "text": "This video is very helpful for me to understand the magic syntax of javascript.", "likes": 0}}, {"topLevelComment": {"author": "Roman Korniienko", "text": "Thank you for the material and very useful example\ud83d\ude0a\ud83d\ude4f\ud83c\udffc", "likes": 0}}, {"topLevelComment": {"author": "Ijeoma Oguegbu", "text": "There might be an error at 5:10 -- \nIt doesn't say how it knows which object it should deconstruct and didn't work when I ran the code.\nAfter some tries, I came up with this: \n\n\nlet str = {greet:\"Hello\", name:\"Gollom\"}\n// specify the object in the function parameter\nconst friendlybot = ( {greet, name} = str ) => greet + \", my name is \" + name\n>> friendlybot()\n// outputs \n'Hello, my name is Gollom'", "likes": 3}, "replies": [{"author": "ouf cena", "text": "const defaultObj = {greet:\"Hello\", name:\"Gollom\"};\r\nconst friendlybot = ( {greet, name} = defaultObj ) => alert(greet + \", my name is \" + name);\r\nconst myObj = {greet:\"Bonjour\", name:\"...\"};\r\nfriendlybot(myObj);", "likes": 1}]}, {"topLevelComment": {"author": "Ethorbit", "text": "Quick and straight to the point, thank you. Your explanation is crystal clear and now variables surrounded by curly brackets make sense to me.", "likes": 0}}, {"topLevelComment": {"author": "Himbary", "text": "Great video, but a bit fast imo", "likes": 0}}, {"topLevelComment": {"author": "zoe bot", "text": "YouTube needs a feature to like a video twice! Just like how it is on Codepen.", "likes": 0}}, {"topLevelComment": {"author": "Mauricio Rodr\u00edguez", "text": "When you are passing the object as paratemer at 5:10 , how do you know which object is passed?", "likes": 3}}, {"topLevelComment": {"author": "keveszm", "text": "This is so fucking amazing", "likes": 0}}, {"topLevelComment": {"author": "Take The First Step Marketing", "text": "I could never get my head around destructuring. This video totally helps me out. Thanks for the explanation.", "likes": 1}}, {"topLevelComment": {"author": "Incolas", "text": "thank you very much", "likes": 0}}, {"topLevelComment": {"author": "Nare Poghosyan", "text": "When you are passing the object as paratemer at 5:10 , how do you know which object is passed?", "likes": 10}, "replies": [{"author": "ouf cena", "text": "@BlastZone You're right!", "likes": 2}, {"author": "BlastZone", "text": "When you call the function then you pass the object you want to use in the function. Here he was just setting up the function and not using it.", "likes": 13}, {"author": "Kozie", "text": "I think it should've been: \"const profileUpdate = ({name, age, nationality, location} = nameOfTheObject) => {\n//...\n}", "likes": 1}]}, {"topLevelComment": {"author": "Travis Mathews", "text": "Are you naturally typing this fast?  Or is that portion sped up for the video?  I have been trying to speed up and become more efficient at typing code.", "likes": 1}}, {"topLevelComment": {"author": "lalaithan", "text": "That moment when a programming video makes you feel like a goldfish, going \"oooh\".", "likes": 11}}, {"topLevelComment": {"author": "Karl", "text": "Thanks so much. I was struggling with this, but you've explained it very well!", "likes": 2}}, {"topLevelComment": {"author": "Roman Valenta", "text": "You sound a bit like John Malkovich...", "likes": 1}}, {"topLevelComment": {"author": "parthiban n", "text": "Which editor r u using? I see many hv asked this !", "likes": 0}}, {"topLevelComment": {"author": "Nick Schmitt", "text": "You are a god", "likes": 0}}, {"topLevelComment": {"author": "Adam", "text": "Mind blown for destructuring in the params. Thanks!", "likes": 1}}, {"topLevelComment": {"author": "Nick Hart", "text": "destructuring is lit", "likes": 1}}, {"topLevelComment": {"author": "OriFl", "text": "nice. fast, clear and no bs", "likes": 66}, "replies": [{"author": "JEBJOSH", "text": "for real", "likes": 2}]}, {"topLevelComment": {"author": "Big J", "text": "This really helped me understand destructuring and carve it into my JS notes.  Thank you Beau!", "likes": 2}}, {"topLevelComment": {"author": "Michelle Corbett", "text": "With the last example of passing an object as a function's parameter, is the function's name \"profileUpdate\" or is that the Object's name that we are using in the destructuring parameters? If not what would be the syntax to use the Objects name or is it unecessary?", "likes": 0}, "replies": [{"author": "Ash C", "text": "profileUpdate is the name of the function, not the object. the objects name is profileData", "likes": 0}]}, {"topLevelComment": {"author": "shilpa syal", "text": "Nice explanation, thank you \u263a\ufe0f", "likes": 0}}, {"topLevelComment": {"author": "Daphne D", "text": "I'm still confused about how \"Pass an Object as a Function's Parameters\" works. If I have two objects that contain the same properties name but different values, then I pass the variable names into a function, how does js know which object I'm actually looking at?", "likes": 2}, "replies": [{"author": "Kristyna Sodomkova", "text": "@Sudhanshu Chaudhary AHA! I couldn't understand it, thank you so much!!!!", "likes": 1}, {"author": "Sudhanshu Chaudhary", "text": "when calling you give the object name as  an argument", "likes": 1}, {"author": "Jdb", "text": "That's exactly what I'm confused about. No one has been able to give me an answer yet?", "likes": 0}]}, {"topLevelComment": {"author": "Adam W", "text": "It's fairly confusing. I think I understand it a little better, but I'm having trouble wrapping my head around it.", "likes": 0}}, {"topLevelComment": {"author": "Patrick TAYLOR", "text": "What editor is this? CodePen?", "likes": 4}, "replies": [{"author": "lalaithan", "text": "Yes, there's a link to the pen in the desc.", "likes": 0}]}, {"topLevelComment": {"author": "Daniel Chambers", "text": "Question:  Where does these destructed values exist? In your example, at 1:14 \"voxel\" values 'a', 'b', and 'c' exist where now after they are assigned? They are not on the object (voxel.a). They are not on the BOM (window.a). So where are these new values now being stored in the browser? Hope that is clear. I have been trying to find that answer for a day or so now when it comes to destructing,", "likes": 0}, "replies": [{"author": "freeCodeCamp.org", "text": "After assigning to 'a', 'b', and 'c', they are just standard const variables. They are stored just like any variable. You access them like any other variable using their name, which in this case are the letters 'a', 'b', and 'c'. Does that answer your question?", "likes": 0}]}, {"topLevelComment": {"author": "Crypto Connoisseurs", "text": "Here is the answer to ES6: Use Destructuring Assignment to Assign Variables from Objects\ntook me a while to grasp this. I think the hardest part is understanding that in the code below,\nlen becomes, str.length.\nit makes sense in the video examples but when applying it to a real use case it's kind of tricky.\nHopefully this helps somebody. This took me about a half hour for it to click. Knowledge is power! I am proud of myself LOL.\n\n\nfunction getLength(str) {\n  \"use strict\";\n\n  // change code below this line\n  const {length: len} = str;\n  // change code above this line\n\n  return len; // you must assign length to len in line\n\n}\n\nconsole.log(getLength('FreeCodeCamp'));   // 12", "likes": 3}, "replies": [{"author": "Freddy Lopez", "text": "I think the explanation is that it takes the str object-string and deconstruct the propertie lenght to the variable len", "likes": 2}, {"author": "Johhny Barendrecht", "text": "Hey thanks! I still don't understand why  **const {length: len} = str;** \nturns len into str.length. .. The output to me looks more like  **len = str** and just returns the string unchanged, for that I was not even thinking about this solution.\nBut thanks for sharing at least I know in what direction I need to think (Y)", "likes": 0}]}, {"topLevelComment": {"author": "Azen", "text": "Use your code for good <3", "likes": 2}}, {"topLevelComment": {"author": "Krzysztof \u017belechowski", "text": "That was disgusting.", "likes": 3}}, {"topLevelComment": {"author": "Abdelrahman Hafez", "text": "Test", "likes": 0}}, {"topLevelComment": {"author": "Christopher Malloy", "text": "Mind blown.  Been seeing the syntax for a while now in React code, now it all makes sense!", "likes": 2}, "replies": [{"author": "Random Guy", "text": "@T H O R N  Everyone says Vue is the best but I don't know why React is still dominating the market.", "likes": 1}]}, {"topLevelComment": {"author": "dogcow666", "text": "this is often called \"unboxing\" in other languages eg. C#.NET", "likes": 1}}, {"topLevelComment": {"author": "Good Wish", "text": "Excellent on teaching Destructuring. It is concise and easy to understand.", "likes": 1}}, {"topLevelComment": {"author": "Christopher McCormack", "text": "I was wondering if there was an easy way to do this just this morning!  I really appreciate these videos and I hope you keep doing them!", "likes": 15}}]}