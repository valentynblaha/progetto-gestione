{"video": {"id": "3zw5LgKDMhg", "title": "Full Stack Web App using Vue.js & Express.js: Part 5 - View Song", "description": "Welcome to part 5 of a new series where I will create a full stack web application using Vue.js and Express.js\n\nGitHub repo: https://github.com/codyseibert/tab-tracker\n\nFollow Cody on Twitter: https://twitter.com/CodyLSeibert\n\nLearn to code for free and get a developer job: https://www.freecodecamp.com\n\nRead hundreds of articles on programming: https://medium.freecodecamp.com", "duration": "PT51M14S", "likes": "303", "views": "29988"}, "comments": [{"topLevelComment": {"author": "nelida murataj", "text": "Hello, thank u for your tutorial.Should we need to use Vuex for a project like this one?", "likes": 0}}, {"topLevelComment": {"author": "Flavien", "text": "00:00 view song\n26:52 Youtube view\n35:48 tab view", "likes": 0}}, {"topLevelComment": {"author": "Kevin Brown", "text": "Is anyone else having a problem with the show endpoint sending back all db records, instead of just the one matching the songId sent? Using sequelize 5, so I'm having to use findByPk. Here's my show endpoint\nasync show (req, res) {\n    try {\n      const song = await Song.findByPk(req.params.songId)\n      res.send(song)\n    } catch (err){\n      res.status(400).send({\n        error: `${err}'An error has occured trying to create the song '`\n      })\n    }\n  }", "likes": 2}, "replies": [{"author": "Kevin Brown", "text": "I figured it out. It looks like I hadn't specified the correct path in my SongsService.js file. Make sure it is `songs/${songId}`", "likes": 0}]}, {"topLevelComment": {"author": "Roberto Garcia", "text": "he  pass  parameters to the edit song  .Why he  specific the  route path like:                                                       path: '/songs/:songId/edit  ? rather then  path: '/songs/:songId/edit/:songId'", "likes": 0}}, {"topLevelComment": {"author": "Sumesh Sadanandan", "text": "Hi Cody,,Great work and great way of doing the tutorial. People understand the nuances of coding and lot more since your video exactly shows what you are doing. I would say there is a lot to learn by the way you are coding if people watch with attention to details. Patience is the key.", "likes": 0}}, {"topLevelComment": {"author": "mcdba", "text": "Song.findById  need change to Song.findByPk", "likes": 2}, "replies": [{"author": "Peter Ulev", "text": "Thank you very much man!", "likes": 0}]}, {"topLevelComment": {"author": "Mauro Insacco", "text": "I'm getting the same value of route params by just using this.$route.params.id, whats the point of storing it in the store ? O_O", "likes": 0}}, {"topLevelComment": {"author": "Meme Shorts", "text": "With Sequelize v5, findById() was replaced by findByPk(). Replace findById using findByPk and everything should work fine", "likes": 7}, "replies": [{"author": "Peter Ulev", "text": "Niice!", "likes": 0}]}, {"topLevelComment": {"author": "AliveAgain", "text": "For anyone watching this tutorial recently. I ran across an issue where my show would keep catching a 500 error. It is because \"findById\" is deprecated in the new sequelize. Instead, use \"findByPk\" - 'find by primary key'. Works like a charm.", "likes": 36}, "replies": [{"author": "Jeevan sira manjunath", "text": "u r awesome bro thank you for your effort.", "likes": 0}, {"author": "Manuela", "text": "thank you so much :D", "likes": 0}, {"author": "Umar Faruq", "text": "Thanks brother. You are awesome", "likes": 0}, {"author": "Juan Sm", "text": "There's always one saviour on each video! Thanks!", "likes": 0}, {"author": "Shahin Farzane", "text": "YOU ARE A LIFE SAVER", "likes": 3}]}, {"topLevelComment": {"author": "S. Robinson", "text": "At 8:32 in the video, I am following exactly the code to get a single song view but keep on getting a 500 error. I get the following error: Error in mounted hook (Promise/async): \"Error: Request failed with status code 500\". Any ideas on what might be causing this. I have spent several hours trying to debug and cannot seem to find what is causing the error. Thanks :)", "likes": 0}, "replies": [{"author": "Criss Zahid", "text": "@AliveAgain Thanks .. that works for me (Y)", "likes": 0}, {"author": "AliveAgain", "text": "Happened to me, seeing your comment - I realized it's probably a version issue. So I figured it out: \"findById\" is now deprecated. Instead use \"findByPk\" (find by primary key). .findByPk(req.params.songId)", "likes": 3}]}, {"topLevelComment": {"author": "Evan Vaughan", "text": "Great tutorial! I went down the path of making another application after making the login and I was wondering how I could persist the vuex store state of tokens and users after a page refresh. If anyone could point me in the right direction that would be wonderful. Thanks", "likes": 0}, "replies": [{"author": "Felipe Muner", "text": "bro then you could save it in localStorage.token", "likes": 0}]}, {"topLevelComment": {"author": "Alex Leibowitz", "text": "Why do you get the parameters from the store rather than the router?", "likes": 0}}, {"topLevelComment": {"author": "Diego L", "text": "it's the best you can find on youtube\n\nfull-stack\n\nthanks cody", "likes": 2}}, {"topLevelComment": {"author": "Tony Branze", "text": "Vuetify kiind of sucks... and is way different when I'm using it vs this tut", "likes": 0}, "replies": [{"author": "dejo095", "text": "version changed", "likes": 0}]}, {"topLevelComment": {"author": "Max Drlji\u0107", "text": "It's a good tutorial, but very difficult to follow along", "likes": 0}}, {"topLevelComment": {"author": "christo Ben", "text": "am having this problem Error: Invalid value { title: { '$like': '%f%' } }. I dont know what to do", "likes": 0}}, {"topLevelComment": {"author": "YesImHere", "text": "Cody, great tutorials!  I've learned a lot.  Thank you.  You were suggesting that there was a different way to return to the previous page.  After searching I found this:  this.$router.go(-1).  Works just like the back button assuming your browser is keeping the history.\n\nAlso, instead of sending the id separately, I just use the id value in the body.  Is there any reason not to do it that way?  \n\nThanks again!  Looking forward to 6 & 7.", "likes": 2}}, {"topLevelComment": {"author": "CW", "text": "Cody,  hopefully in the future you will 'git branch Partx' so us poor fools can get back on track since the master is completely different than what you are doing here in Part 5.  Maybe it's me but I am getting bored with UI copy.paste of html when this is supposed to be about VueJS. Just saying. Overall nice job but decided to look up the final code for what I can learn.  I think this series could of done in half the time if you just put  your design hat on before coding....", "likes": 0}}, {"topLevelComment": {"author": "StoneWeaver", "text": "Why not using <pre> tag for tabs?", "likes": 1}}, {"topLevelComment": {"author": "Mohamed Adel", "text": "hey cody thank you very much , and i face a problem in this part \n       const areAllFieldsFilledIn = Object.keys(this.song).every(key => !!this.song[key])\n      if (!areAllFieldsFilledIn) {\n        this.error = 'Please fill in all the required fields.'\n        return\n      }\nin edit song page if i remove this part it's going to be right but if i use it it give me error that is \"Please fill in all the required fields.\"\nalthough i already filled all inputs!!!", "likes": 0}, "replies": [{"author": "Parth Patel", "text": "before you do const areAllFieldFilledIn = ...\nset this.error = null. so it would look like this:\nasync create() {\n    this.error = null\n\n    const areAllFieldsFilled = Object.keys(this.song).every(key => !!this.song[key])\n    \n    if(!areAllFieldsFilled) {\n     this.error = \"Please fill in all the fields.\"\n     return\n                                 }\n}", "likes": 1}, {"author": "nassmim", "text": "Same Here ! Did you come up with any answer for this ? By the way, thanks so much Cody for these videos, extremelyyy helpful  !!", "likes": 0}, {"author": "Sully Neret", "text": "the same for me!", "likes": 0}]}, {"topLevelComment": {"author": "Ryan Pecor", "text": "A little late to the party but to include the vue-youtube-embed without doing it globally, I found that adding Vue.use(VueYoutubeEmbed)  in the Youtube.vue file works. If you include the import here as well you don't need to import on the main.js file at all.", "likes": 3}}, {"topLevelComment": {"author": "Artur Mello", "text": "Is it possible to setup this web app to get responsive? When I inspect the content on my browser, it has a weird aspect on smaller screens.", "likes": 2}, "replies": [{"author": "Artur Mello", "text": "Thanks Cody, and btw, great tutorials, I'm starting a project on Vue, based on what I've learned here! Congrats for your great job, and thank you for this!!", "likes": 0}]}, {"topLevelComment": {"author": "Frankie V", "text": "This app is going well so far Cody thanks! Now that I am at part 5 I would say that it is a bit speedy as I have not gained the skills with the shortcuts in the editor like you have. And I would like to point out that at the beginning I wasn't very aware that this requires a good amount of knowledge in ES6 JS which I haven't touched on a lot yet. Otherwise this is incredible to see Vue's inner workings. I'm excited to make my web apps with it.", "likes": 2}}, {"topLevelComment": {"author": "Pablo Vent", "text": "This segment was very interesting but you were kinda racing along. I've had to replay many times. Thanks for sharing though.  I'll read through  documentation and play all 7 or 8 segments again so it sinks in. Greetings from UK", "likes": 1}, "replies": [{"author": "blyat", "text": "I actually think the passing is quite alright, even a bit slow.", "likes": 2}, {"author": "Pablo Vent", "text": "the lyrics bit in this specific tutorial was a bit fast.  I guess I kinda was a bit overwhelmed, but I think I'll replay that section; I need to backtrack on myself so I understand how everything is connected and work together and understand the whole functionality and the patterns you are establishing when reusing code and when you introduce new concepts/techniques.   I greatly appreciate the time and effort you take to explain how to develop an entire app full-stack from scratch right through to completion.  I'm an advanced beginner going into intermediate level, so some parts are difficult, but I'll press on. Thx again", "likes": 0}]}, {"topLevelComment": {"author": "blyat", "text": "Here's my take on the Youtube.vue component without having to rely on an a external component (also, the video is responsive) http://pasted.co/a916e111", "likes": 2}}, {"topLevelComment": {"author": "blyat", "text": "Thanks again for this, Cody. Helps a lot", "likes": 6}}]}