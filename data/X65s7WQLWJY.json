{"video": {"id": "X65s7WQLWJY", "title": "jQuery vs vanilla JavaScript - Beau teaches JavaScript", "description": "When should you use jQuery instead of vanilla JavaScript? Is jQuery still relevant? What is jQuery good for? Find out in this video!\n\n-\nVideo based on this article by Ollie Williams: https://css-tricks.com/now-ever-might-not-need-jquery/\n\nThe only polyfill you'll ever need: https://polyfill.io\n\n\ud83d\udc26 Beau Carnes on Twitter: https://twitter.com/carnesbeau\n\n\u2b50JavaScript Tutorials Playlists\u2b50\n\u25b6jQuery Playlist: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkyK9woUZUtunToLtNGoQHB\n\n\u25b6JavaScript Basics: https://www.youtube.com/playlist?list=PLWKjhJtqVAbk2qRZtWSzCIN38JC_NdhW5\n\n-\nLearn to code for free and get a developer job: https://www.freecodecamp.com\n\nRead hundreds of articles on technology: https://medium.freecodecamp.com\n\nAnd subscribe for new programming videos every day: https://youtube.com/subscription_center?add_user=freecodecamp", "duration": "PT5M9S", "likes": "1060", "views": "48821"}, "comments": [{"topLevelComment": {"author": "Liberation", "text": "so finally what's bad about using JQuery? it's clear that JS is almost as good as JQuery, but what are the exact reason why should i use the less convenient way?", "likes": 5}}, {"topLevelComment": {"author": "karl russell menil", "text": "how do I convert jquery to vanilla javscript?", "likes": 0}}, {"topLevelComment": {"author": "KL", "text": "Vanilla JS is the truth", "likes": 0}}, {"topLevelComment": {"author": "Tarek Faham", "text": "There are a lot of other jquery methods you didn't mention which is much harder to implement in plan js. For example, find and close, do they exist in plain js?", "likes": 0}}, {"topLevelComment": {"author": "NM AA", "text": "For me vanilla js much better for readibility.", "likes": 0}}, {"topLevelComment": {"author": "Andy MacLeod", "text": "I wrote a hundred lines of jQuery yesterday (including comments), then decided to use vanilla js instead. It took me 170 lines to write the same functionality. (NB: My vanilla js was slightly more efficient code because it was the second time I wrote the same app, so I had refactored some stuff). So I'd estimate the jQuery probably had about half the lines of code overall. The main reason why the jQuery was slightly leaner (in terms of lines of code) was because of the ability to chain statements together, rather than reselecting elements.\n\n\nI think jQuery has a slight advantage in terms of readability... but it's not a big deal.\n\n\nIn my case, jQuery is probably still the best option, because I'm likely going to want to use jQuery UI as the app develops. Otherwise I'd have to rewrite some of the same functionality jQuery UI provides.\n\n\nAs with everything, I guess it all depends on what you need to do. If all you are doing is basic web enhancement stuff, vanilla js is perfectly fine. But the more you go beyond that, the more you appreciate out of the box solutions...\n\n\nI think it's great though that js is evolving into a leaner and more powerful scripting language. And when you combine it with CSS3, you've really got a lot more power and flexibility than we had previously.", "likes": 10}}, {"topLevelComment": {"author": "Fahmi Abdillah", "text": "But vanilla is faster than even you use jquery", "likes": 1}}, {"topLevelComment": {"author": "Busherino LoL", "text": "Isn't it common do use a $ sign infront of vannilla queryselector variables aswell ?", "likes": 0}}, {"topLevelComment": {"author": "David K", "text": "var gdI = document.getElementById.bind(document);\nvar an_el = gdl('an_id');", "likes": 0}}, {"topLevelComment": {"author": "arjang ap", "text": "Just JQuery\u2764", "likes": 0}}, {"topLevelComment": {"author": "Arcane Lore", "text": "What percentage Javascript cover Jquery in?", "likes": 0}, "replies": [{"author": "freeCodeCamp.org", "text": "A lot of things from jQuery has been put into JavaScript. At this point, you probably only want to learn jQuery if you are dealing with legacy code that already uses it. jQuery focusses on DOM manipulation and is only covers a small part of what JavaScript can do.", "likes": 2}]}, {"topLevelComment": {"author": "iMakeOnionsCry", "text": "I learn bootstrap and jquery in college, but i don't like both of them. Vanilla ftw!", "likes": 14}}, {"topLevelComment": {"author": "Bagas Wahyu Hidayah", "text": "i am doing this usually\n\nfunction $(selector) {\n let elems = document.querySelectorAll(selector);\n return elems.length > 1 ? Array.from(elems) : elems[0];\n}\n\nlet elem = $('.someClass');", "likes": 7}}, {"topLevelComment": {"author": "Antonio Kobashikawa Carrasco", "text": "Thank you. Personally, I like jquery chained way to express a solution", "likes": 8}}, {"topLevelComment": {"author": "Tiago Gomes", "text": "So cool the pollyfil tip. So cool, so cool! I didn\u00b4t know about that really will make me more happy code js on future projects! I am a fan of vanilla js!", "likes": 1}}, {"topLevelComment": {"author": "Jason Welsh", "text": "When you say to place that polyfill script tag at the top of your website, where exactly do you mean? In the head of the document? Does it matter what comes before or after it?", "likes": 1}}, {"topLevelComment": {"author": "Jason Welsh", "text": "I have a problem with the requestAnimationFrame() thing. I have an element with a class of '.other-div' and I set the original state to the same state as you did in the CSs (opacity and display and gave it a transition property). I have a button on the button and I am trying to make the element fade in using this method and it is not working. Can anyone help please? \nconst output = document.querySelector('.output');\nconst otherDiv = document.querySelector('.other-div');\nconst btn = document.querySelector('#button');\n\nbtn.onclick = () => {\n  otherDiv.style.display = 'block';\n  requestAnimationFrame = ( () => otherDiv.style.opacity = 1);\n};\n\nOr here is the pen so far: https://codepen.io/Balmora/pen/XaNroE", "likes": 0}, "replies": [{"author": "Felipe Falco", "text": "So, I know this is incredibly old and you don't need this anymore, but just in case anyone in the future is looking for the response:  requestAnimationFrame is a function, and you used it as a variable. You should do \"requestAnimationFrame( () => otherDiv.style.opacity = 1);\" instead of \"requestAnimationFrame = ( () => otherDiv.style.opacity = 1);\".", "likes": 0}]}, {"topLevelComment": {"author": "D\u00e1niel Szal\u00f3k", "text": "I still like jQuery after the video :)", "likes": 8}, "replies": [{"author": "arjang ap", "text": "I like it more after this video", "likes": 1}]}, {"topLevelComment": {"author": "Ws Webus", "text": "What about siblings and slideToggle? Is there alternatives in vanilla js?", "likes": 1}}, {"topLevelComment": {"author": "Sergi", "text": "Should \"var\" still be used? That's something that I still wonder myself. I mean in production.", "likes": 17}, "replies": [{"author": "The Gigachad", "text": "There is sometimes where \"bar is useful\" and when \"let \" is useful for me I use var for global variables, and let for local variables like in a for loop or and if statement", "likes": 0}, {"author": "\u0639\u0628\u062f \u0627\u0644\u0644\u0647 \u0627\u0644\u0641\u0631\u0642\u0627\u0646", "text": "Just sometimes on loop you need it", "likes": 0}, {"author": "MrChubib0", "text": "IE11 will give you problem if you are not using var", "likes": 0}, {"author": "MapleLeaf", "text": "Sergi Not really, IMO. The problems with var are overstated, e.g. the setTimeout + for loop problem, and block scoping with let just makes more sense than function scope.\n\nNever had a reason to use var since let and const landed, and I hardly ever use let over const.", "likes": 10}]}, {"topLevelComment": {"author": "proofs for islam on my channel", "text": "youre a legend", "likes": 1}}, {"topLevelComment": {"author": "Wira Andhika", "text": "love it! very clear explanation, please do more vanilla javascript videos", "likes": 4}}, {"topLevelComment": {"author": "trapped cat", "text": "I like doing this:\nconst doc = document, get = \"querySelector\";\n\ndoc[get](\".selector\")", "likes": 4}, "replies": [{"author": "MrBestard", "text": "ES6 or later, [...document.querySelectorAll (\"div\")],   Array.from( document.queryselectorAll (\"div\") )", "likes": 0}, {"author": "trapped cat", "text": "do this and you're good to go...\n\n$id = (x) => document.getElementById(x) // get element by id\n$el = (x) => document.querySelector(x) // get first element\n$all = (x) => [ ].slice.call(document.querySelectorAll(x)) // get array of elements", "likes": 3}, {"author": "trapped cat", "text": "krlik 12516 just be aware jQuery will auto return a matching collection that has jQuery methods. If you use querySelectorAll to return a collection it will need to be converted to an array to use plain js array methods.", "likes": 1}, {"author": "krlik 12516", "text": "You can actually do the following: function $(string) { return document.querySelector(string) } var elem  = $('body'). It is like jQuery selection without jQuery.", "likes": 0}, {"author": "Jose Angel Gomez", "text": "It's just assigning two variables in one sentence, you can do it separated by commas:\n\nconst doc = document, get = \"querySelector\";\n\nEquals to:\nconst doc = document;\nconst get = \"querySelector\";", "likes": 3}]}]}