{"video": {"id": "bgU7FeiWKzc", "publishedAt": "2017-02-26T20:09:29Z", "title": "Singleton Design Pattern - Beau teaches JavaScript", "description": "The Singleton Design pattern limits the number of instances of a particular object to just one. Find out how to implement this in JavaScript.\n\nCode\n\ud83d\udd17 http://codepen.io/beaucarnes/pen/QpWvgP?editors=0012\n\nOther resources on topic:\n\ud83d\udd17 https://addyosmani.com/resources/essentialjsdesignpatterns/book/#singletonpatternjavascript\n\ud83d\udd17 http://www.dofactory.com/javascript/singleton-design-pattern\n\nBeau Carnes on Twitter: https://twitter.com/carnesbeau\n\n-\n\u2b50JavaScript Playlists\u2b50\n\u25b6Design Patterns: https://www.youtube.com/playlist?list=PLWKjhJtqVAbnZtkAI3BqcYxKnfWn_C704\n\u25b6JavaScript Basics: https://www.youtube.com/playlist?list=PLWKjhJtqVAbk2qRZtWSzCIN38JC_NdhW5\n\u25b6ES6: https://www.youtube.com/playlist?list=PLWKjhJtqVAbljtmmeS0c-CEl2LdE-eR_F\n\u25b6Data Structures and Algorithms: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ\n\u25b6Clean Code: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh\n\n-\nWe're busy people who learn to code, then practice by building projects for nonprofits. Learn Full-stack JavaScript, build a portfolio, and get great references with our open source community.\n\nJoin our community at https://freecodecamp.com\nFollow us on twitter: https://twitter.com/freecodecamp\nLike us on Facebook: https://www.facebook.com/freecodecamp\nFollow Quincy on Quora: https://www.quora.com/Quincy-Larson", "duration": "PT4M51S", "likes": "485", "views": "40656"}, "comments": [{"topLevelComment": {"id": "UgwC5WFUVKmeMQVXjIZ4AaABAg", "publishedAt": "2021-06-16T14:46:09Z", "author": "Daniel Crain", "text": "dislike for flashing a giant jquery logo in my face in front of my jquery hating coworkers.", "likes": 1}}, {"topLevelComment": {"id": "Ugz-KiBOawXbXaQl02Z4AaABAg", "publishedAt": "2021-06-10T07:55:12Z", "author": "ilovelctr", "text": "This explanation is gold! I really like the fact that a randomly generated number is used to detect whether the singleton has been created or not.", "likes": 0}}, {"topLevelComment": {"id": "UgyxtPHocYP3_UOnNIF4AaABAg", "publishedAt": "2020-10-17T10:08:05Z", "author": "Isra", "text": "very good explanation as usual Beu", "likes": 0}}, {"topLevelComment": {"id": "UgytFmlvqMI_kzq7dyZ4AaABAg", "publishedAt": "2020-05-18T15:17:20Z", "author": "Seth Eden", "text": "I was hoping to find an NPM module that implements all of this for a generic JSON data structure. But I guess implementing all of this internally to a project from first principals is probably a bit more flexible and powerful for the individual needs of a project / developer. Nice thank you for sharing!! :-D", "likes": 1}}, {"topLevelComment": {"id": "UgyiOuVC62JEhlGgQ9N4AaABAg", "publishedAt": "2020-02-11T02:10:49Z", "author": "Kenneth Kim", "text": "I have read a lot of articles about this in hopes of understanding it clearly but this video sums it all up. Straight to the point! Thanks for this!", "likes": 0}}, {"topLevelComment": {"id": "UgwerJg5yQvNf3_Q3Nd4AaABAg", "publishedAt": "2019-11-07T06:41:33Z", "author": "Moh Jawad Reza B", "text": "this guy cut through the BS and to the point. keeping his videos short. love it", "likes": 1}}, {"topLevelComment": {"id": "UgxrwhIHsjmlm8q79-V4AaABAg", "publishedAt": "2019-10-13T05:29:55Z", "author": "Erick Israel", "text": "Thank you!", "likes": 0}}, {"topLevelComment": {"id": "Ugw2c28wOFUlBRjmDNB4AaABAg", "publishedAt": "2018-09-03T12:45:42Z", "author": "Nitesh Sawant", "text": "Nice tutorial", "likes": 0}}, {"topLevelComment": {"id": "UgxVkXztqEz_L9J9oyB4AaABAg", "publishedAt": "2018-06-02T04:21:51Z", "author": "fordfiveohh", "text": "Boom! Definition straight out the gate . No BS . I already like you ... Continuing video...", "likes": 10}}, {"topLevelComment": {"id": "UgybI07LoJDSTriJId14AaABAg", "publishedAt": "2018-04-13T18:03:47Z", "author": "dcortesnet", "text": "singleton explain to es5 ?", "likes": 0}}, {"topLevelComment": {"id": "UgwJcQe5K4o33go4QYJ4AaABAg", "publishedAt": "2018-02-06T17:55:13Z", "author": "Paterfamilias Geminus IV", "text": "It's quite funny that I came to Youtube because I didn't get Addy Osmani's explanation and then I clicked one of the top results, it turns out to be a plagiarism of his Singleton Pattern section in Learning JavaScript Design Patterns.", "likes": 0}, "replies": [{"id": "UgwJcQe5K4o33go4QYJ4AaABAg.8cKpLS1iULl8nGik_eLXUZ", "publishedAt": "2018-11-05T13:25:59Z", "author": "lzszl", "text": "Double Orts is it plagiarism if the author you refer to didnt invent the design pattern? Wise up", "likes": 5}]}, {"topLevelComment": {"id": "UgyvybFysKMWZoOMsop4AaABAg", "publishedAt": "2018-01-22T02:49:55Z", "author": "Fabi\u00e1n Pern\u00eda", "text": "There is something additional about this example. The reason because you get the same values through different instances is because of closures. When you reference things outside of its scope a closure is created (a closure is a reference that is kept over a context that is already finished). For those who want to learn more about this, please check the following book by Kyle Simpson:  \"Scope & Closures\" ---> https://github.com/getify/You-Dont-Know-JS/blob/master/scope%20%26%20closures/README.md\n\nAlso, you can find here a quick introduction to closures: http://skilldrick.co.uk/2011/04/closures-explained-with-javascript/", "likes": 3}}, {"topLevelComment": {"id": "UgwwQXiB2iMuZF-pstB4AaABAg", "publishedAt": "2017-11-29T15:14:50Z", "author": "Vibs", "text": "nice explanation.", "likes": 0}}, {"topLevelComment": {"id": "UghZu2MC7YSISngCoAEC", "publishedAt": "2017-04-28T11:48:56Z", "author": "NikosKeyz", "text": "Singleton pattern in JavaScript is completely useless. Javascript uses the prototype pattern, with that in mind you can just create an Object (JUST AN OBJECT) and use it like a singleton class. One instance, no \"new\", no classes, less code, easier implementation!", "likes": 13}, "replies": [{"id": "UghZu2MC7YSISngCoAEC.8Rttf9VEg5j8zqk2DPw4UJ", "publishedAt": "2019-09-14T04:45:54Z", "author": "\u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0410\u043b\u0435\u043a\u0441\u0435\u0435\u0432\u0438\u0447", "text": "You mean object literal?", "likes": 1}, {"id": "UghZu2MC7YSISngCoAEC.8Rttf9VEg5j8ezI4Gom2T2", "publishedAt": "2018-04-13T13:26:40Z", "author": "Fredo Corleone", "text": "Asdf this approach is rather conplicated but easier to grasp for a Java developer than learning how prototype chain works", "likes": 1}]}, {"topLevelComment": {"id": "UgiPMi3PhppzpHgCoAEC", "publishedAt": "2017-04-10T19:05:14Z", "author": "Andrii Artemenko", "text": "This example is absolutely useless. I still have no clue how to use singleton in real life and why I want to use it. The code is taken out of empty space. Why couldn't you give some real life example?", "likes": 26}, "replies": [{"id": "UgiPMi3PhppzpHgCoAEC.8RBKHwLAWvQ8iEY-MGduDU", "publishedAt": "2018-07-03T10:27:50Z", "author": "Krypto", "text": "@Fredo Corleone Are there Singleton classes in Javascript because as far as i know, we can create multiple instances for a class.", "likes": 0}, {"id": "UgiPMi3PhppzpHgCoAEC.8RBKHwLAWvQ8ezHtDCr4wp", "publishedAt": "2018-04-13T13:25:01Z", "author": "Fredo Corleone", "text": "It seems an old way of making classes in JS, now JS has classes and therefore this approach is obsolete.", "likes": 0}, {"id": "UgiPMi3PhppzpHgCoAEC.8RBKHwLAWvQ8ROLDQ3kC5q", "publishedAt": "2017-04-15T20:23:28Z", "author": "Andrii Artemenko", "text": "Daniel McCoy, thanks for a detailed answer!", "likes": 3}, {"id": "UgiPMi3PhppzpHgCoAEC.8RBKHwLAWvQ8RMqBJHgXfF", "publishedAt": "2017-04-15T06:24:19Z", "author": "Daniel McCoy", "text": "It's basically used for when you want to have private variables that can't be accessed or overwritten anywhere else. It's just an object wrapped in an iffe that only returns the public methods and variables. Think of like a banking application or delicate configuration files, where you'd want extra assurance that an account number/configuration variable/method couldn't be accessible anywhere else except through a single object instance. Well, this is one which way how you could achieve such. There are a ton of use cases. The only 'real' important method (function) to take real note of is the public one near the bottom, the one called privateRandomNumber. THAT is the only way to access that innerVariable (private variable, say bank account info or a gateway, for example). The init function is just a way to create the new instance (create a new object). All instances share the same reference values (so say if you had a method that changed an array in object a, the array would be updated in object b as well, assuming they were created via the same Singleton). A very basic object literal and its properties are much easier to overwrite than you'd think, especially on a big project. In this example, he only showcases accessing privateRandomNumber to access said private variables. Say you wanted to access that privateMethod, well, you could create a public method called getPrivateMethod that's sole expression is to return the privateMethod. Don't overthink it. Javascript doesn't exactly have true OOP like something like Java, so this is one way to create a closure to access private variables and methods that are all accessed via a global variable (aka, the Singleton). The only real downside is that you're polluting the global namespace with that mySingleton variable. On bigger projects with tons of files, you have to be aware of such things. Personally, I don't use them, or haven't needed to, they're more of an anti-pattern imo, but hopefully this can bring understanding to someone.", "likes": 17}]}, {"topLevelComment": {"id": "UgiN_WVawlrJbHgCoAEC", "publishedAt": "2017-03-05T15:45:12Z", "author": "Penny G", "text": "Crystal clear & straightforward example. Like it!", "likes": 3}}, {"topLevelComment": {"id": "Ugh71AKpFih7zHgCoAEC", "publishedAt": "2017-03-05T01:54:11Z", "author": "monkey luffy", "text": "Perfect. I like it. Thank you so much (y)", "likes": 2}}]}