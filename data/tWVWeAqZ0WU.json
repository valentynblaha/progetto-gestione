{"video": {"id": "tWVWeAqZ0WU", "title": "Graph Algorithms for Technical Interviews - Full Course", "description": "Learn how to implement graph algorithms and how to use them to solve coding challenges.\n\n\u270f\ufe0f This course was developed by Alvin Zablan from Structy. Check out Alvin's channel: https://www.youtube.com/c/AlvinTheProgrammer\n\n\ud83d\udd17 Learn data structures and algorithms: https://structy.net/\n\n\u2b50\ufe0f Course Contents \u2b50\ufe0f\n\u2328\ufe0f (0:00:00) course introduction\n\u2328\ufe0f (0:02:23) graph basics\n\u2328\ufe0f (0:07:10) depth first and breadth first traversal\n\u2328\ufe0f (0:29:13) has path - https://structy.net/problems/has-path\n\u2328\ufe0f (0:42:11) undirected path - https://structy.net/problems/undirected-path\n\u2328\ufe0f (1:00:44) connected components count - https://structy.net/problems/connected-components-count\n\u2328\ufe0f (1:13:29) largest component - https://structy.net/problems/largest-component\n\u2328\ufe0f (1:24:03) shortest path - https://structy.net/problems/shortest-path\n\u2328\ufe0f (1:39:36) island count - https://structy.net/problems/island-count\n\u2328\ufe0f (1:58:52) minimum island - https://structy.net/problems/minimum-island\n\u2328\ufe0f (2:12:05) outro\n\n\ud83c\udf89 Thanks to our Champion and Sponsor supporters:\n\ud83d\udc7e Wong Voon jinq\n\ud83d\udc7e hexploitation\n\ud83d\udc7e Katia Moran\n\ud83d\udc7e BlckPhantom\n\ud83d\udc7e Nick Raker\n\ud83d\udc7e Otis Morgan\n\ud83d\udc7e DeezMaster\n\ud83d\udc7e Treehouse\n\ud83d\udc7e AppWrite\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news", "duration": "PT2H12M19S", "likes": "22184", "views": "889213"}, "comments": [{"topLevelComment": {"id": "UgxRhYw5QGaf_gPcScJ4AaABAg", "publishedAt": "2021-08-04T22:26:50Z", "author": "Alvin the Programmer", "text": "Hey Programmers! Thanks for checking out the course and I hope you find it useful as you prepare for those tech interviews. If you enjoyed this content, be sure to check out Structy for more data structure and algorithm tutorials from me. Links in the description!\n\nThere I cover all of the common interview topics and you can code along and run test cases directly on the platform. You'll also be able to find video walkthroughs for every problem in JavaScript and Python, (more language support coming soon!).\n\nCheers!\n-Alvin", "likes": 520}, "replies": [{"id": "UgxRhYw5QGaf_gPcScJ4AaABAg.9QdKxQErfD59kws1ypPxHW", "publishedAt": "2023-01-16T11:29:32Z", "author": "Salman Saeed", "text": "@Alvin the Programmer  Awesome Explanation\nI need to explore other problems in structly but it is paid \ud83d\ude25 . Can you please give it to me for free?", "likes": 0}, {"id": "UgxRhYw5QGaf_gPcScJ4AaABAg.9QdKxQErfD59iku5Ymo2-I", "publishedAt": "2022-11-23T02:53:49Z", "author": "ewwitsantonio", "text": "Alvin, you are a SUPER skilled teacher. The way you explain your code as you write is very clear and thoughtful of the learner. Much appreciated.", "likes": 0}, {"id": "UgxRhYw5QGaf_gPcScJ4AaABAg.9QdKxQErfD59fYSNMe5_k9", "publishedAt": "2022-09-04T07:58:32Z", "author": "Sushmita Goswami", "text": "I wish all your courses were free. You are the BEST.", "likes": 0}, {"id": "UgxRhYw5QGaf_gPcScJ4AaABAg.9QdKxQErfD59e_KLnuk0QW", "publishedAt": "2022-08-11T04:55:30Z", "author": "Rus Cul", "text": "just subscribed! thank you so much for this guys!!! big help for people like me who cant afford subscription fees", "likes": 0}, {"id": "UgxRhYw5QGaf_gPcScJ4AaABAg.9QdKxQErfD59b1QAi08aVG", "publishedAt": "2022-05-15T01:58:49Z", "author": "osagie osemwota", "text": "hello please i need help...on the Largest Component question, i decided to not use the recursive method in my DFS function but i am stuck in a bug... Every single one of the test cases on structy works except the first...here is my code  : \n\n// Write a function, largestComponent, that takes in the adjacency list of an undirected graph. The function should return the size of the largest connected component in the graph.\n\n\nconst largestComponent = (graph) => {\n\tlet largest=0;\n\t//keep a track of visited nodes\n\tlet visited =  new Set();\n\n\t// loop through the graph object\n\tfor (node in graph) {\n\t\tif(visited.has(String(node))) continue;\n\t\tlet currentCount = DFS(graph, node, visited);\n\t\tlargest = Math.max(largest, currentCount);\n\t}\n\n\treturn largest;\n\n}\n\nconst DFS = (graph, node, visited) => {\n\n\tlet currentCount = 1;\n\tlet stack = [node];\n\n\twhile(!!stack.length){\n\n\t\tlet current = stack.pop();\n\t\tfor( neighbor of graph[current]){\n\n\t\t\tif(visited.has(String(neighbor))) continue;\n\t\t\tstack.push(neighbor);\n\t\t\tvisited.add(String(current));\n\t\t\tcurrentCount++;\n\n\t\t}\n\n\t}\n\n\treturn currentCount;\n}\n\n\nconsole.log(largestComponent({\n  0: ['8', '1', '5'],\n  1: ['0'],\n  5: ['0', '8'],\n  8: ['0', '5'],\n  2: ['3', '4'],\n  3: ['2', '4'],\n  4: ['3', '2']\n}))", "likes": 0}]}, {"topLevelComment": {"id": "UgwFwJ6tkmSb3Vm__WB4AaABAg", "publishedAt": "2023-01-23T17:34:28Z", "author": "Daniel Sottile Music - Official", "text": "This course is nice...but his code is very poor.\n\nin the hasPath, he basically has 'if true return true' nonsense.", "likes": 0}}, {"topLevelComment": {"id": "Ugyyql9aGF6ytpdJHcR4AaABAg", "publishedAt": "2023-01-20T23:11:48Z", "author": "Dennis Kozevnikoff", "text": "this course is so amazing! there are so many autistic programmers on youtube that cover this subject by just banging code on their keyboard, which is totally useless without visually explaining the underlying intuition.", "likes": 0}}, {"topLevelComment": {"id": "UgwmcaAh8cl-71hO0w54AaABAg", "publishedAt": "2023-01-18T22:39:30Z", "author": "affandi19", "text": "In \"has path\" section of the video, for worst case graph, why is # edges = n^2? Shouldn't it be 2n?", "likes": 0}}, {"topLevelComment": {"id": "Ugx5ehtX2mvX7ywVoNp4AaABAg", "publishedAt": "2023-01-18T05:45:59Z", "author": "Robert Ospara", "text": "Great explenation and graphics of this presentation \ud83d\ude42", "likes": 0}}, {"topLevelComment": {"id": "UgwBMnmfMOSlCOtf2ER4AaABAg", "publishedAt": "2023-01-08T08:55:51Z", "author": "Johnny Chang", "text": "OMG this video is an absolute gem! I used to be baffled by the island problem and just simply memorizing the solution on leetcode, but after following along for two hours, I can confidently code up the solution all by my self! Thank you so much you are a fantastic teacher.", "likes": 0}}, {"topLevelComment": {"id": "UgxAqwjW4JDo-f_V9fB4AaABAg", "publishedAt": "2023-01-01T04:49:13Z", "author": "Vinay Rajagopal", "text": "This is a great intro to basic graph problems \u2014 however we may need a part two to cover more advanced topics such as Union Find, Minimum Spanning Trees, Dijkstras & bellman ford, topological sort, etc.", "likes": 4}}, {"topLevelComment": {"id": "UgyF5gfm3tRNbaDuhmx4AaABAg", "publishedAt": "2022-12-31T08:43:28Z", "author": "Jasper van Zuijlen", "text": "As an embedded software engineer, I never learned about these kind of algorithms. This is invaluable knowledge for me, thanks for leveling up my skill!", "likes": 0}}, {"topLevelComment": {"id": "Ugy5X4PxJOG2V_0uCwx4AaABAg", "publishedAt": "2022-12-27T22:27:05Z", "author": "sub-harmonick", "text": "would the 'visited' set in a traversal be a good use case for WeakSet instead of Set?", "likes": 0}}, {"topLevelComment": {"id": "Ugx-y8WpAaKt9T5NMpd4AaABAg", "publishedAt": "2022-12-27T21:09:27Z", "author": "RandomShowerThoughts", "text": "this was such a great course, literally understood every aspect of it. Was able to do the problems after your explanations", "likes": 0}}, {"topLevelComment": {"id": "Ugz2Nn1Q_7YzEIui3kx4AaABAg", "publishedAt": "2022-12-27T19:21:33Z", "author": "RandomShowerThoughts", "text": "1:12:00 Javascript really has some weird behavior lol", "likes": 0}}, {"topLevelComment": {"id": "Ugydo6QAJ-LA-4VJICR4AaABAg", "publishedAt": "2022-12-27T18:48:26Z", "author": "RandomShowerThoughts", "text": "easily the best teacher of algorithms I've ever seen. Alvin spends time going over theory, Big O notation, and common errors. As someone that's never studied algorithms and data structures, all the videos he has done have helped drastically", "likes": 0}}, {"topLevelComment": {"id": "UgxyXz-m6MtLHWVVU_p4AaABAg", "publishedAt": "2022-12-21T09:58:43Z", "author": "\u0628\u0637\u0644 \u0645\u0627\u062a\u064a\u06462", "text": "Thanks Alvin and FreeCodeCamp<33333333333333333333333333333333333\nA life savior", "likes": 0}}, {"topLevelComment": {"id": "UgycXISMyXM5gOuX5gx4AaABAg", "publishedAt": "2022-12-11T23:31:35Z", "author": "Poltergeyist", "text": "I chose this video after I got an invitation for an online test from a well-known company. This was my only chance since I have never studied algorithm oriented programming.\nI was given a graph problem and handled it correctly with a minor deficiency in efficiency :) Thanks a lot!", "likes": 4}}, {"topLevelComment": {"id": "UgwNWr5JqPbkjf7i4v94AaABAg", "publishedAt": "2022-12-08T09:57:08Z", "author": "RAGZZY TV", "text": "I'm a mid/senior level webdev and I just come back to Alvin's videos when preparing for interview everytime. its so simple and help me rebrush all of them without much hassle. very good work", "likes": 19}}, {"topLevelComment": {"id": "UgywEaNoobunuXh9fc54AaABAg", "publishedAt": "2022-12-04T09:48:28Z", "author": "Dajjal", "text": "const graph = {\n  a: ['b', 'c'],\n  b: ['d'],\n  c: ['e'],\n  d: [],\n  e: ['b'],\n  f: ['d'],\n}\nAbove graph DFS is not correct as per the algorithm discussed, please clarify", "likes": 0}}, {"topLevelComment": {"id": "UgwuokhnTPcMip3TUpV4AaABAg", "publishedAt": "2022-12-02T09:39:05Z", "author": "Ana Paula", "text": "Fantastic. Thank you so much for this amazing explanation!", "likes": 2}}, {"topLevelComment": {"id": "UgzZtvnU5-xlrBOaSYh4AaABAg", "publishedAt": "2022-11-30T02:12:55Z", "author": "aura", "text": "aKsHiTa", "likes": 0}}, {"topLevelComment": {"id": "Ugz8J1CWsLa9_Kl6got4AaABAg", "publishedAt": "2022-11-29T16:49:26Z", "author": "Josh", "text": "When I did leetcode, this does not pass all tests. By changing colInBounds to 0 <= c && c < grid[0].length; it all passed. Also, you could save a bit more memory by taking away the visited and have grid[r][c] = 'W' in place of visited.add, etc and put those variables in the recursive function instead of visited. Regardless, I learned a lot. Thank you.", "likes": 0}}, {"topLevelComment": {"id": "UgwEIF7axOiTluWlMih4AaABAg", "publishedAt": "2022-11-20T16:00:01Z", "author": "katerin perdom", "text": "Thank you so much for this video\nHelp me a lot \ud83e\udd70", "likes": 0}}, {"topLevelComment": {"id": "UgxURaJjQQsVqqssfDN4AaABAg", "publishedAt": "2022-11-19T08:40:54Z", "author": "Shahrin Nakkhatra", "text": "34:27 How's that n^2? I mean, if you take 3 nodes, then the permutation is 3P2 = 6. I don't think that it's possible to make 9 edges with 3 nodes. Please correct me if I'm wrong.", "likes": 0}, "replies": [{"id": "UgxURaJjQQsVqqssfDN4AaABAg.9ibDd3-awQB9ibEFNGxEBL", "publishedAt": "2022-11-19T08:46:16Z", "author": "Shahrin Nakkhatra", "text": "I guess he didn't mean that it should be exactly n^2, rather the max degree of the polynomial should be 2 for the number of edges. For directed graphs, max no. of edges should be, nP2 = n!/ (n-2)! = n(n-1)(n-2)...3.2.1/ (n-2)(n-3)...3.2.1 = n(n-1) = n^2-n ~ O(n^2)", "likes": 0}]}, {"topLevelComment": {"id": "UgyxJo7mwomUdOPDDxB4AaABAg", "publishedAt": "2022-11-18T18:03:02Z", "author": "Amit Kundu", "text": "I am following Alvin's last couple of series DP, Graph.  Really enjoying his teaching. Appreciate.", "likes": 0}}, {"topLevelComment": {"id": "UgxbLZvla5kEicJS8X54AaABAg", "publishedAt": "2022-11-17T09:30:01Z", "author": "mahesh kokare", "text": "Who the Hell are you to teach Graphs in this outstanding way....Fear of Heights can overcome by visiting cliff and Fear of Graphs can overcome by going through your Videos. I am speechless", "likes": 0}}, {"topLevelComment": {"id": "UgwnyDz9OkVgxQ6IuyV4AaABAg", "publishedAt": "2022-11-03T18:33:10Z", "author": "Coding Warlock", "text": "Great Explanations", "likes": 0}}, {"topLevelComment": {"id": "UgwAHqUaXv5EqktV_qp4AaABAg", "publishedAt": "2022-11-03T12:46:57Z", "author": "sam wilson", "text": "this man is the greatest DS&ALG teacher ever", "likes": 0}}, {"topLevelComment": {"id": "Ugz8vf_brvYSc4Vl0NR4AaABAg", "publishedAt": "2022-10-31T12:15:04Z", "author": "Mohamed Siddic", "text": "Hey Man its gem thanks a lot. Now graph in my deep memory. Please help me to get the other course video you did.", "likes": 0}}, {"topLevelComment": {"id": "UgzfIYf_mUKWUVmYQJd4AaABAg", "publishedAt": "2022-10-29T06:20:26Z", "author": "Menugonda Pavan Kumar", "text": "explanation - simply \"woww\"", "likes": 0}}, {"topLevelComment": {"id": "UgyEFF-YqyoZqNtznHJ4AaABAg", "publishedAt": "2022-10-27T19:54:40Z", "author": "Peter Rocc", "text": "(Revelation 20:11-15)And I saw a great white throne, and him that sat on it, from whose face the earth and the heaven fled away; and there was found no place for them. And I saw the dead, small and great, stand before God; and the books were opened: and another book was opened, which is the book of life: and the dead were judged out of those things which were written in the books, according to their works. And the sea gave up the dead which were in it; and death and hell delivered up the dead which were in them: and they were judged every man according to their works. And death and hell were cast into the lake of fire. This is the second death. And whosoever was not found written in the book of life was cast into the lake of fire. (Revelation 20:11-15)", "likes": 0}}, {"topLevelComment": {"id": "Ugy5xYb0lOC-tm-ndAZ4AaABAg", "publishedAt": "2022-10-26T20:37:59Z", "author": "Neha Bhagchandani", "text": "This was really helpful! Thank you very much!", "likes": 0}}, {"topLevelComment": {"id": "Ugwe_mBCxYxfAEmm0Px4AaABAg", "publishedAt": "2022-10-24T14:00:47Z", "author": "Yogesh Ulhe", "text": "Hey Alvin Awesome video on Graph Algorithm", "likes": 0}}, {"topLevelComment": {"id": "UgwVOiyjQCtIZgVPCIZ4AaABAg", "publishedAt": "2022-10-24T09:51:10Z", "author": "Code Pandit", "text": "Mast", "likes": 0}}, {"topLevelComment": {"id": "Ugxx_cvgs36cOXuhQo14AaABAg", "publishedAt": "2022-10-21T17:41:38Z", "author": "Siddhant Jagdish", "text": "THANK YOU!!", "likes": 0}}, {"topLevelComment": {"id": "UgzNhXD28gLReMtgmnR4AaABAg", "publishedAt": "2022-10-17T11:25:03Z", "author": "Sai Adigoppula", "text": "graphs are easy then I thought", "likes": 0}}, {"topLevelComment": {"id": "Ugy6qeUjvDFtw8t63gt4AaABAg", "publishedAt": "2022-10-16T17:43:30Z", "author": "Sandman", "text": "Is n^2 edges or 2n edges?", "likes": 0}}, {"topLevelComment": {"id": "UgzLIdflwyiTMpwMdLd4AaABAg", "publishedAt": "2022-10-16T08:57:06Z", "author": "Towfiq Rafi", "text": "When our graph node is empty, during for loop Python shows None Key error. How to solve it?", "likes": 0}}, {"topLevelComment": {"id": "Ugx44xy99a8NNqC55jp4AaABAg", "publishedAt": "2022-10-16T06:22:47Z", "author": "Sas Kirakosyan", "text": "Great course. Thanks", "likes": 0}}, {"topLevelComment": {"id": "UgwuTlxh1J9vtItwR0J4AaABAg", "publishedAt": "2022-10-11T20:45:23Z", "author": "Las Ranas Malevolas", "text": "1:39:30", "likes": 0}}, {"topLevelComment": {"id": "UgxdQU_z0kNSK8wtfSN4AaABAg", "publishedAt": "2022-10-10T18:38:11Z", "author": "Deepak kumar pandey", "text": "One thing to keep in mind for javascript is when you are using queue the shift operation on array is of O(n) complexity. to make it O(1) you need to implement circular queue class yourself.", "likes": 0}}, {"topLevelComment": {"id": "UgxHnLPXKRAakfWFUGl4AaABAg", "publishedAt": "2022-10-07T19:32:53Z", "author": "Fiifi yawson", "text": "I am a little bit confused with the recursive functions written inside the for loops and while loops. I want to know, won't visited be reset on each iteration of the loops?", "likes": 0}, "replies": [{"id": "UgxHnLPXKRAakfWFUGl4AaABAg.9gtf3hyMHh69hHjd3AgfY5", "publishedAt": "2022-10-17T13:13:48Z", "author": "Live TV", "text": "No, because objects are passed as referenced. so basically we are passing the same object to all the recursive functions which update the same object by the function stack by stack.", "likes": 0}]}, {"topLevelComment": {"id": "UgxO2HSqFFXdCvvsR514AaABAg", "publishedAt": "2022-10-06T10:58:19Z", "author": "Ritwik Shivam", "text": "Some doubt-\n52:15 code line number 9 why are you taking only [a, b] it might be the case when where each nested list would have different number of string or say '[[a1,a2,a3], [a1,a2], [a2,a3,a4].......], any general approach to handle that, please suggest\n1:15:08 for the problem Largest component of graph - Can we just count the length of array which is the key associated with  node in graph dictionary, Python approach\ndef lengthOfLargestCompoent(graph):\r\n     ans = []\r\n     for node in graph:\r\n          ans.append(len(graph[node])+1)\n\n     return max(ans)", "likes": 0}}, {"topLevelComment": {"id": "UgxlR-GM1Lc-3o__T314AaABAg", "publishedAt": "2022-10-06T10:55:40Z", "author": "Ritwik Shivam", "text": "Amazing video great effort, quality, superb", "likes": 0}}, {"topLevelComment": {"id": "Ugy8R9XPzEKQNrMZK2N4AaABAg", "publishedAt": "2022-10-06T04:59:03Z", "author": "Mohamed A. Ahmed", "text": "This was clutch yo I got an interview in 2 days \ud83d\ude2d\ud83d\ude02", "likes": 0}}, {"topLevelComment": {"id": "UgwUK_HjV40G2MD8ow14AaABAg", "publishedAt": "2022-10-06T01:31:16Z", "author": "briansyoutubechannel", "text": "A little confused how the worst case graph with 3 nodes at 34:26 has 6 total edges, which is not equal to n^2?", "likes": 0}}, {"topLevelComment": {"id": "UgzMtAdRdewlKyiv7Gh4AaABAg", "publishedAt": "2022-10-03T21:39:41Z", "author": "ptreeful", "text": "Sorry, for spoiling the impression, but there are two moments.\nFirst: in DFS and BFS in fact you traverse tree. And if there is a cycle in a graph it\u2019s not clear how to process it\nSecond: in hasPath you say that number of edges would be n^2, but in worst case you have 3 nodes and 6 edges! Number of pairs would be C n 2, or (n 2) I suppose, and as we have 2 directions, then we need to multiply that by 2.", "likes": 0}}, {"topLevelComment": {"id": "UgxjxMe3qFtFUxU5jjR4AaABAg", "publishedAt": "2022-10-01T18:47:01Z", "author": "Famous Badger", "text": "This is a great video! Just an observation - when counting islands following the logic in this video - going to a neighbor above at [r -1][c] is redundant, since we are descending throughout the run, and it's impossible to encounter an unvisited 'L' box in the row above the current one. We only need neighbors at the right, bottom and left.", "likes": 0}}, {"topLevelComment": {"id": "UgxbehdNOy-0zuUTI8t4AaABAg", "publishedAt": "2022-10-01T15:40:49Z", "author": "Meshkat Shadik", "text": "A simple trick would help to get the calculations more faster.\n\nmy approach of Island counting problem:\nvar numIslands = function(grid) {\n    let count = 0;\n    for(let r=0; r<grid.length; r++){\n        for(let c=0; c<grid[0].length;c++){\n            if(islandFound(grid,r,c)===true){\n                count++;\n            }        \n        }\n    }\n    return count;\n};\n\nconst islandFound = (grid,r,c) =>{\n    const rowBound = 0<= r && r<grid.length;\n    const colBound = 0<= c && c<grid[0].length;\n    \n    if(!rowBound ||!colBound) return false;\n    if(grid[r][c] === 'W' || grid[r][c] === 'X') return false;\n    else{\n        grid[r][c]='X';\n    }\n    islandFound(grid,r-1,c);\n    islandFound(grid,r+1,c);\n    islandFound(grid,r,c-1);\n    islandFound(grid,r,c+1);\n    \n    return true;\n}\n\n\nInstead of using set, I just make the visited land as 'X' and catch the condition with 'W' checking block. \ud83d\ude06\ud83d\ude06\n\nTHIS APPROACH CAN BE USED IN OTHER VISITED TYPE SOLUTION'S ALSO.", "likes": 0}}, {"topLevelComment": {"id": "UgyuywQOiQoxcmXD9_t4AaABAg", "publishedAt": "2022-10-01T13:54:25Z", "author": "Famous Badger", "text": "34:28 - I think the worst case of 3 nodes with 6 edges is not a good example of n = # nodes and n^2 = # edges.", "likes": 0}}, {"topLevelComment": {"id": "Ugzt-tauA1_hBbxU5jR4AaABAg", "publishedAt": "2022-09-30T19:56:31Z", "author": "Alberto Miranda", "text": "Can't believe this is free!! This info would cost hundreds at my university. Great content \ud83d\udc4d", "likes": 0}}, {"topLevelComment": {"id": "Ugxmt1oTy44N6o63sXZ4AaABAg", "publishedAt": "2022-09-29T23:41:20Z", "author": "Sebasti\u00e1n Jara Uribe", "text": "\u00a1Gracias!", "likes": 1}}, {"topLevelComment": {"id": "UgyDHy9PiYZzFqtI4l94AaABAg", "publishedAt": "2022-09-28T12:56:13Z", "author": "Quadri Abolarinwa", "text": "Alvin, you\u2019re one of a kind. Thanks", "likes": 0}}, {"topLevelComment": {"id": "Ugzw50ssGRm15P8Fb4V4AaABAg", "publishedAt": "2022-09-28T00:09:08Z", "author": "Tess Zheng", "text": "at 01:45:00 , when doing island count, we can actually change the grid[r][c] from 'L' to 'W' when exploring island, so we don't need to use a set to track which node has been visited", "likes": 0}}, {"topLevelComment": {"id": "Ugz8FuvDGQxrO2gl2k94AaABAg", "publishedAt": "2022-09-27T15:51:51Z", "author": "Vince P", "text": "Why on earth would you choose JS for this? Python is the OBVIOUS choice.", "likes": 0}}, {"topLevelComment": {"id": "UgxT_T5Rtrq33wrd3h94AaABAg", "publishedAt": "2022-09-22T15:16:15Z", "author": "Aaron Biliyok", "text": "I love you for real!!!!!!!!", "likes": 0}}, {"topLevelComment": {"id": "UgxlgCSPSvotM3syLx14AaABAg", "publishedAt": "2022-09-22T11:32:06Z", "author": "marie laure Debeaune", "text": "many thanks for this video. How do you do the same thing in C#?", "likes": 0}}, {"topLevelComment": {"id": "Ugx94Pi0sjYgyOIc3tZ4AaABAg", "publishedAt": "2022-09-19T18:55:33Z", "author": "Varma", "text": "Very nice and intuitive explanation.", "likes": 0}}, {"topLevelComment": {"id": "UgzjFLbUb01SgzYLQQ54AaABAg", "publishedAt": "2022-09-14T19:10:34Z", "author": "Franco Giuliano Pertile", "text": "Awesome Video", "likes": 0}}, {"topLevelComment": {"id": "UgwRAS2ocbsClFFZSgh4AaABAg", "publishedAt": "2022-09-14T06:15:40Z", "author": "Blue Skies", "text": "Is there any resources you guys have on matrices? for example, rotating a 2d matrix?", "likes": 0}}, {"topLevelComment": {"id": "UgzGT5Tr9YtHsNI7Ukl4AaABAg", "publishedAt": "2022-09-14T03:42:56Z", "author": "Igor Popov", "text": "content is 10/10, but js syntax is a nightmare :D", "likes": 0}}, {"topLevelComment": {"id": "UgyWVveT8FK1h0VTYNx4AaABAg", "publishedAt": "2022-09-14T00:57:44Z", "author": "Goblin Moblin", "text": "I really enjoyed this course.", "likes": 0}}, {"topLevelComment": {"id": "Ugxygea1k1wsD_9DeD54AaABAg", "publishedAt": "2022-09-11T01:25:26Z", "author": "Aashutosh Murthy", "text": "1:45:05\nThe space complexity of O(r * c) can be reduced to O(1) by just marking the land L we visit as water W? That way, we would ignore any land we have seen before just like we would ignore water, thereby saving space.", "likes": 0}}, {"topLevelComment": {"id": "UgyhO_MAw8zSTZ1doeZ4AaABAg", "publishedAt": "2022-09-10T21:08:49Z", "author": "Gabriel Vaz", "text": "Very good class", "likes": 0}}, {"topLevelComment": {"id": "UgwzNXhm0Jyl5_Il7hl4AaABAg", "publishedAt": "2022-09-08T11:20:53Z", "author": "Nom9d", "text": "thanks a lot!!!", "likes": 0}}, {"topLevelComment": {"id": "UgxpWIEhEABUja8h6594AaABAg", "publishedAt": "2022-09-08T02:50:46Z", "author": "Vincent Hou", "text": "The series of your videos are amazing. They are the best courses I have ever seen regarding data structure and algorithm studies. However, I do think I find out a potential mistake. At 1:53:55, check the line 12, const colInbounds = 0 <= c && c< grid.length. Technically, the number of the columns could be different from the number of the rows, so this line should be const colInbounds = 0 <= c && c< grid[0].length, grid[0] must exist for sure. Or, pass the number of columns as argument for this function.", "likes": 0}}, {"topLevelComment": {"id": "UgxEW0bPycOW842tHrN4AaABAg", "publishedAt": "2022-09-06T10:23:39Z", "author": "Raj singh", "text": "Great course, I loved it! But how was it decided for the island count problem to use depth first traversal instead of breadth first? What is the logic behind that?", "likes": 0}}, {"topLevelComment": {"id": "UgxHQq1NPRjNt6PQnsh4AaABAg", "publishedAt": "2022-09-06T05:00:07Z", "author": "Jayanta Samaddar", "text": "Breadth-first is also possible recursively. Here's the solution:\n\n/** Breadth-First Search - Recursive Method */\nfunction bfsRecursive(graph, source) {\n  if (!Object.keys(graph)?.length || !graph?.[source]) return null;\n  else {\n    function search(Q, result = []) {\n      if (Q.length === 0) return result;\n      const node = Q.shift();\n      result.push(node);\n      for (let i = 0; i < graph[node].length; i++) {\n        Q.push(graph[node][i]);\n      }\n      return search(Q, result);\n    }\n    return search([source]);\n  }\n}\n\n// Result: [ 'a', 'b', 'c', 'd', 'e', 'f' ]", "likes": 0}}, {"topLevelComment": {"id": "UgzLsVhXxZy_fuGww3N4AaABAg", "publishedAt": "2022-09-05T10:56:43Z", "author": "Max Ax", "text": "great for beginning!!!!", "likes": 0}}, {"topLevelComment": {"id": "UgxpAyexc_3d1kgESJV4AaABAg", "publishedAt": "2022-08-29T19:39:26Z", "author": "Shafana Safwan", "text": "best source of graphs I found so far.", "likes": 0}}, {"topLevelComment": {"id": "UgxD6QTqzqbcwfCsAit4AaABAg", "publishedAt": "2022-08-28T22:15:59Z", "author": "Apple", "text": "thanks for posting this course. Very practical and concise. Great job!", "likes": 0}}, {"topLevelComment": {"id": "Ugzg299ihFuHLB8oybB4AaABAg", "publishedAt": "2022-08-28T03:39:44Z", "author": "sumedha j", "text": "Thanks so much for uploading this! The approaches are clearly explained", "likes": 1}}, {"topLevelComment": {"id": "UgyiHLKKAPSl9ZPuIcJ4AaABAg", "publishedAt": "2022-08-28T03:15:55Z", "author": "OEThe11", "text": "This was an elite video. I did the last two questions and did not understand how to approach it or understood what the right answer for those questions. Watch the 2+ hours of video as well as coding it up myself, and everything makes sense. EVERYTHING. I am now able to do one of the toughest topics that I was having trouble with. So BIG Thank You for that. \n\nP.S. For the last 2 questions, you don't need the visited set, you can flip the land to water or another value altogether. Avoiding the cyclic infinite loop.", "likes": 2}}, {"topLevelComment": {"id": "Ugzj6T8-Ng2bIFsdv2B4AaABAg", "publishedAt": "2022-08-27T10:29:10Z", "author": "Amandeep singh jaura", "text": "Great course and learned alot.\nJust a heads-up, we should never use Array as Queues in production problem instead we can use Linked List.\nAs removing a value from start of the array has o(n) time complexity as we have to re-index again and Queue should have constant time complexity for adding and removing an element.", "likes": 2}}, {"topLevelComment": {"id": "UgxNMvFaY8xFOUBgf714AaABAg", "publishedAt": "2022-08-26T21:59:07Z", "author": "Matt Hou", "text": "excellent video, good work Alvin", "likes": 0}}, {"topLevelComment": {"id": "UgwNBIYJjyryuJChO0F4AaABAg", "publishedAt": "2022-08-18T16:11:51Z", "author": "Raj Dwivedy", "text": "at 34:30 shouldn't it be O(2n)..for 4 edges it becomes O(3n).. please clarify i might be wrong .. was never good with the big O", "likes": 0}}, {"topLevelComment": {"id": "Ugwj53XmkRhJWIbS4Ot4AaABAg", "publishedAt": "2022-08-12T09:22:07Z", "author": "Igor The Overlord", "text": "Python iterative solution to connected components count\n\ndef connected_components_count(graph):\n    stack = []\n    visited = set()\n    n = 0\n    count = 0\n    while n != len(graph):\n        for key in graph:\n            n += 1\n            if key in visited:\n                continue\n            stack.append(key)\n            current = stack.pop()\n            for node in graph[current]:\n                if node not in visited:\n                    visited.add(node)\n                    stack.append(node)\n            count += 1\n    return count\ngraph = {\n    0: [8, 1, 5],\n    1: [0],\n    5: [0, 8],\n    8: [0, 5],\n    2: [3, 4],\n    3: [2, 4],\n    4: [3, 2],\n}\nprint(connected_components_count(graph))", "likes": 0}}, {"topLevelComment": {"id": "UgxXA_V04eai36gHB1R4AaABAg", "publishedAt": "2022-08-11T19:25:08Z", "author": "Igor The Overlord", "text": "Python iterative solution to undirected path problem\n\ndef undirected_path(graph, source, target):\n    visited = set()\n    queue = [source]\n    while queue:\n        current = queue.pop(0)\n        if current == target:\n            return True\n        for neighbor in graph[current]:\n            if neighbor not in visited:\n                visited.add(neighbor)\n                queue.append(neighbor)\n    return False\ngraph = {\n    'i': ['j', 'k'],\n    'j': ['i', 'k'],\n    'k': ['i', 'm', 'l', 'j'],\n    'm': ['k', 'p'],\n    'l': ['k'],\n    'o': ['n'],\n    'n': ['o'],\n    'p': ['m']\n}\nprint(undirected_path(graph, 'j', 'p'))", "likes": 0}}, {"topLevelComment": {"id": "UgxbryLSVvITs-TH80F4AaABAg", "publishedAt": "2022-08-11T16:09:40Z", "author": "Tiyen", "text": "Thank you for the video. Also to find the minimum sizes of the island, we can use the method that calls the recursive function (parent method) to hold an integer that points to the size of the visited set before the recursive call and then use the difference in size after the recursive call to determine the minimum size. This to me didn't require me to create a new recursive method that returns an integer. However, creating an extra method does have its benefits too.", "likes": 0}}, {"topLevelComment": {"id": "UgyxPSpqbzYNvlxnhut4AaABAg", "publishedAt": "2022-08-10T10:16:25Z", "author": "Suraj Shah", "text": "Great tutorial Alvin. For python programmers, here is the pattern for largest components (connected components is similar):\n\ndef explore(arr, node, visited, comp_count):\n    if node in visited:\n        return 0, visited\n    \n    visited[node] = 1\n    for neighbour in arr[node]:\n        comp_count += 1\n        explore(arr, neighbour, visited, comp_count)\n        \n    return comp_count, visited\n    \ndef largestcomponent(arr):\n    largest_comp = 0\n    visited = {}\n    \n    for node in arr:\n        if node not in visited:\n            comp_count, visited_new = explore(arr, node, visited, 1)\n            visited = visited_new\n\n            if comp_count > largest_comp:\n                largest_comp = comp_count\n\n    return largest_comp", "likes": 0}}, {"topLevelComment": {"id": "UgycXVFVO9G8-vBnHq54AaABAg", "publishedAt": "2022-08-08T21:15:22Z", "author": "Daniyal Kabir", "text": "This is super helpful! Thank you!", "likes": 0}}, {"topLevelComment": {"id": "UgxlVok66zcJl1s8vlh4AaABAg", "publishedAt": "2022-08-06T01:08:21Z", "author": "Mr. Anonymous", "text": "Shouldn't the time complexity be O(n + e)?", "likes": 0}}, {"topLevelComment": {"id": "UgwjS2UjdNOhRdWIQ014AaABAg", "publishedAt": "2022-08-01T14:31:06Z", "author": "PotatoCoder", "text": "I have a question. If the number of nodes in a graph is n, then in the worst case, would the number of edges be n^2 or would they be 2*n?", "likes": 0}}, {"topLevelComment": {"id": "UgyaoWMUHEVQWvIA2CJ4AaABAg", "publishedAt": "2022-07-31T20:02:21Z", "author": "Pandey Aashish", "text": "Preprocessing the input by storing edges in hashmap: this line took all my fears of not even trying to attempt graph problems to making me feel I could do any graph problems. Thanks for this video \u2764\ufe0f", "likes": 1}}, {"topLevelComment": {"id": "Ugz1L45bgibLHawGbtJ4AaABAg", "publishedAt": "2022-07-31T07:50:54Z", "author": "minciNashu", "text": "34:04 E = N*(N-1) for directed graphs. So in that example, 3 nodes means 6 edges (not 9, as in 3 squared)", "likes": 0}}, {"topLevelComment": {"id": "UgxfMA4RyflSsI7_03J4AaABAg", "publishedAt": "2022-07-31T01:24:23Z", "author": "F. U. Spammers", "text": "Dude I absolutely love the graphics in the beginning, which absolutely MAKE this video the one that helps me understand. For FOR F&#K'S SAKE, stop obsessing over the output order. You keep interrupting the flow of understanding EVERY TIME to obsess over whether it's a,b,c or a,b,d, who gives a flying chip. Yes, yes, I understand we're taking a new branch. But I'm just trying to understand the basic flowchart of your code, for which abc/abd is utterly irrelevant and distracting and you keep touting it endlessly like it will make a difference to understanding the basic steps for traversal. It won't!", "likes": 0}}, {"topLevelComment": {"id": "Ugzx31X8zMP8Dws-1Fh4AaABAg", "publishedAt": "2022-07-30T22:36:43Z", "author": "70 Da", "text": "I like this course ,Thank you \")", "likes": 0}}, {"topLevelComment": {"id": "UgxPbipWxn-ExB_CdiV4AaABAg", "publishedAt": "2022-07-30T18:27:44Z", "author": "Jerin John Kachirackal", "text": "This is really really a complete tutorial for \u201cGraph based Problems\u201d both in terms of coding Problems, interview preperation including MAANG and even for a new bie.", "likes": 0}}, {"topLevelComment": {"id": "UgwjsGzcQDlMPczGQUl4AaABAg", "publishedAt": "2022-07-30T18:17:30Z", "author": "Dominic Amodeo Lee", "text": "very useful", "likes": 0}}, {"topLevelComment": {"id": "UgwGYav5WiNWEi2hXTZ4AaABAg", "publishedAt": "2022-07-30T05:01:06Z", "author": "Jerin John Kachirackal", "text": "Perfect content", "likes": 0}}, {"topLevelComment": {"id": "UgwaIad7ZmLqyBXZ9sZ4AaABAg", "publishedAt": "2022-07-29T17:47:14Z", "author": "hemil patel", "text": "Best video on graphs I have ever seen .", "likes": 0}}, {"topLevelComment": {"id": "UgxgziAeOZBD_ZatV_J4AaABAg", "publishedAt": "2022-07-25T17:09:40Z", "author": "Andr\u00e9 Padez", "text": "On your solution for \"islandCount\" there is a mistake: the tests only pass because the inputs are all squared matrixes. Line 15 should be you should be testing 'c' against 'grid[0].length', not just 'grid.length'", "likes": 3}}, {"topLevelComment": {"id": "UgwdBY4Kod3YLR-lAJp4AaABAg", "publishedAt": "2022-07-22T19:14:20Z", "author": "Nadiia Heckman", "text": "IslandCnt implementation is elegant beyond words.", "likes": 0}}, {"topLevelComment": {"id": "Ugy_cqtMHOm9JKcdrdh4AaABAg", "publishedAt": "2022-07-21T20:48:48Z", "author": "DIY By Joji", "text": "You are awesome bro. \ud83d\ude0d\ud83d\ude0d", "likes": 0}}, {"topLevelComment": {"id": "UgyU-57_cKwOqu93lv14AaABAg", "publishedAt": "2022-07-21T19:58:10Z", "author": "nezzari yasser", "text": "much appreciated !!!!", "likes": 0}}, {"topLevelComment": {"id": "UgzKNcdEN6CYv81o-b94AaABAg", "publishedAt": "2022-07-21T03:35:35Z", "author": "pankajdnb", "text": "Can you please make a video on the method you are using for testing the program? Any framework that you prefer for testing such as JEST?", "likes": 1}}, {"topLevelComment": {"id": "Ugw6Y422B1A2Bnmdz1h4AaABAg", "publishedAt": "2022-07-20T22:01:15Z", "author": "RamanSB100", "text": "How come for hasPath he didn't keep track of the nodes he had already visited?", "likes": 0}}, {"topLevelComment": {"id": "UgyuRYD9s4QEhkq4euV4AaABAg", "publishedAt": "2022-07-20T21:45:52Z", "author": "Roger Perez", "text": "I'm only half way through the course it I'm \ud83e\udd2f on how i'm clearly understanding graphs. Now to practice", "likes": 0}}, {"topLevelComment": {"id": "UgxoF1ES9jDlIKvwmol4AaABAg", "publishedAt": "2022-07-19T12:56:55Z", "author": "Sergii M", "text": "Amazing introduction to graphs! Very well explained !", "likes": 0}}, {"topLevelComment": {"id": "UgzidhGAOGFFC9q0NWx4AaABAg", "publishedAt": "2022-07-15T17:35:01Z", "author": "bambamgam", "text": "Huge fan of these courses, he's a great teacher and breaks down these problems to be far less intimidating", "likes": 0}}, {"topLevelComment": {"id": "UgwEvAoSp-qMpidPW0J4AaABAg", "publishedAt": "2022-07-14T14:24:50Z", "author": "Aya", "text": "pure gold!", "likes": 0}}, {"topLevelComment": {"id": "Ugwye_K_NxSXtc_PDBJ4AaABAg", "publishedAt": "2022-07-11T04:11:40Z", "author": "tagakosmos", "text": "solve all leetcode problems", "likes": 0}}, {"topLevelComment": {"id": "Ugx7cO_a3LFCgwc0G1l4AaABAg", "publishedAt": "2022-07-09T17:06:41Z", "author": "Debangshu Paul", "text": "Great work brother", "likes": 0}}, {"topLevelComment": {"id": "Ugx3_L98r9VTu44w1LZ4AaABAg", "publishedAt": "2022-07-07T15:29:57Z", "author": "brberis", "text": "Great video, thank you.\nWhy are you using arrow functions?", "likes": 0}}, {"topLevelComment": {"id": "UgxsczG1AkIuj1T2M214AaABAg", "publishedAt": "2022-07-06T21:57:50Z", "author": "Aditya Byreddy", "text": "This is amazing. I found it really easy to understand the graph algorithms after referring to this video. Great job, Alvin :)\n\nSmall correction in the solution described for checking if a source and destination have a path in an undirected graph. (line no. 8)\n\nThe logic of traversing the neighbors and adding the source node to the visited list has to be part of the condition that validates whether ta node is visited or not.\n\nif !(visited.has(src)) {\n  // add the src to the visitors list\n  // recursively traverse through the src neighbors\n}", "likes": 5}}, {"topLevelComment": {"id": "UgxrGtNPf8gjgS8B0oh4AaABAg", "publishedAt": "2022-07-04T07:48:38Z", "author": "Damian", "text": "Regarding to 1:55:50, when you say that you \u201cI don\u2019t look before I leap\u201d, if the algorithm was using bfs, the space complexity of the queue becomes O(edges) instead of O(nodes), right? Because you will potentially add a given node many times if different nodes at the same level have an edge to it, even when it is processed only the first time is polled and the other times will be ignored.", "likes": 0}}, {"topLevelComment": {"id": "UgzIRgIZqOujeW-M53R4AaABAg", "publishedAt": "2022-07-04T07:21:22Z", "author": "Ben L", "text": "please do a similar video for weighted graphs. alvin has the best teaching style. clear concise with helpful drawings!!!", "likes": 0}}, {"topLevelComment": {"id": "Ugwzz574WrGM4JCrDIt4AaABAg", "publishedAt": "2022-07-03T08:49:33Z", "author": "Satyajit Mishra", "text": "nice explanation in teaching", "likes": 0}}, {"topLevelComment": {"id": "UgxoLcnAKqpTY3_rXKN4AaABAg", "publishedAt": "2022-07-03T03:00:07Z", "author": "Serge Kamga", "text": "What editor are you using?", "likes": 0}, "replies": [{"id": "UgxoLcnAKqpTY3_rXKN4AaABAg.9d-h8UywJpP9d9y9OcAUV3", "publishedAt": "2022-07-07T02:41:11Z", "author": "XZalla", "text": "The editor is on https://www.structy.net/", "likes": 0}]}, {"topLevelComment": {"id": "Ugx7x1xP6JDyReDjRqZ4AaABAg", "publishedAt": "2022-07-02T18:35:51Z", "author": "Mohammed Thavaf", "text": "amazing teaching skills man. thank you <3", "likes": 0}}, {"topLevelComment": {"id": "UgzzoDdqKoPkUQ356T54AaABAg", "publishedAt": "2022-07-02T04:26:13Z", "author": "FastDrop", "text": "Excellent video! Thank you!", "likes": 0}}, {"topLevelComment": {"id": "UgwQwfqVes_8OY5NCIl4AaABAg", "publishedAt": "2022-07-01T17:53:11Z", "author": "Shyamu Yadav", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"id": "UgynkIdD4ApvBfHboQV4AaABAg", "publishedAt": "2022-06-30T03:48:13Z", "author": "daniel gunawan", "text": "shouldn't the time complexity for haspath be O(V+E), since it is just another dfs/bfs?", "likes": 1}}, {"topLevelComment": {"id": "UgwNSefIXT_rLFULC-l4AaABAg", "publishedAt": "2022-06-29T21:14:50Z", "author": "Live2Code", "text": "Thx a lot for your couse!! great explanation!", "likes": 0}}, {"topLevelComment": {"id": "UgxCH6PfwGP7w35t88Z4AaABAg", "publishedAt": "2022-06-28T14:10:54Z", "author": "Arjit Shrivastava", "text": "46:13", "likes": 0}}, {"topLevelComment": {"id": "UgzKBXuwM_xYBLo_P0F4AaABAg", "publishedAt": "2022-06-28T08:07:24Z", "author": "Andrew Ohiienko", "text": "I presume on https://youtu.be/tWVWeAqZ0WU?t=7101 should be \nconst colInbounds = 0 <= c && c < grid[0].length;\ninstead of\nconst colInbounds = 0 <= c && c < grid.length;", "likes": 0}}, {"topLevelComment": {"id": "UgzDLPzW8sxIq_kgAC14AaABAg", "publishedAt": "2022-06-28T00:26:20Z", "author": "manivannan sivaraj", "text": "Thanks for this video tutorial, Alvin!\nIt helped me to understand graphs, graph traversals and most common graph related tech interview problems much better.", "likes": 0}}, {"topLevelComment": {"id": "UgwEJ5arB-ilC555_ZF4AaABAg", "publishedAt": "2022-06-27T04:44:42Z", "author": "Graym", "text": "helpful", "likes": 0}}, {"topLevelComment": {"id": "UgxwHrOtXr8Cv9ZapE14AaABAg", "publishedAt": "2022-06-25T12:29:23Z", "author": "Bikki Kumar sha", "text": "Changing lives, one algorithm at a time. Great work Alvin!", "likes": 2}}, {"topLevelComment": {"id": "UgzkKZAzyQVroO9AwQh4AaABAg", "publishedAt": "2022-06-22T18:19:15Z", "author": "Soorya Prakash", "text": "Thank you for the video!", "likes": 0}}, {"topLevelComment": {"id": "UgyNBPAVJTBZ6JTXRV54AaABAg", "publishedAt": "2022-06-22T17:04:28Z", "author": "ybelsare", "text": "Exceptional .. you have a lovely voice and narration style", "likes": 0}}, {"topLevelComment": {"id": "Ugzeb527TQvobwz3oT14AaABAg", "publishedAt": "2022-06-21T17:51:14Z", "author": "Sam Azadi", "text": "i love how clean the approach to BFS is here. I have a question - does anyone have examples of how we can do the same with a Node type rather than being given the graph as an array. i.e we're given a Node with left and right children, how do we use this same approach for BFS in this case?", "likes": 1}, "replies": [{"id": "Ugzeb527TQvobwz3oT14AaABAg.9cYO_kKP1Uo9cpUlcaDn3D", "publishedAt": "2022-06-28T18:31:37Z", "author": "Prashant Godara", "text": "Hi Sam,\nIn case of left and right node you can add the nodes in queue directly after checking visited set.\nJava eg- \nqueue.offer(head);\nwhile (!queue.isEmpty()){\n             TreeNode visiting = queue.poll();\n             System.out.println(visiting.val);\n             if(visiting.left != null && !visited.contains(visiting.left)){\n              queue.offer(visiting.left);\n              visited.add(visiting.left);\n             }\n            if(visiting.right != null && !visited.contains(visiting.right)){\n             queue.offer(visiting.right);\n              visited.add(visiting.right);\n            }\n        }\n\nHope this helps!!", "likes": 0}]}, {"topLevelComment": {"id": "Ugwv9AhXTogrY7XQIEt4AaABAg", "publishedAt": "2022-06-20T21:00:14Z", "author": "Feng Liu", "text": "Oh the keys being converted to string has to do with javascript preamptively assuming you want to work with it serialized and ready to go over the web as a json.", "likes": 0}}, {"topLevelComment": {"id": "Ugzw8Y00R_IoYvoupVt4AaABAg", "publishedAt": "2022-06-19T00:09:41Z", "author": "Sushant Thakur", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"id": "UgyA6DmT_lImX3hlIVR4AaABAg", "publishedAt": "2022-06-17T11:39:31Z", "author": "IntCoder", "text": "You are the man!! Thanks for these tutorials!! The are great!!!", "likes": 1}}, {"topLevelComment": {"id": "UgzBNZxZZUpqN0BiUzV4AaABAg", "publishedAt": "2022-06-16T15:21:58Z", "author": "Philip Debrah", "text": "Awesome!", "likes": 0}}, {"topLevelComment": {"id": "UgxO7Q6kgyj5lJx3VwB4AaABAg", "publishedAt": "2022-06-12T17:50:50Z", "author": "iCH4N6", "text": "amazing video on graphs. Relearning graphs now and this has been very useful. Thank you!", "likes": 0}}, {"topLevelComment": {"id": "UgxV5c_Wm7zTB51gXwJ4AaABAg", "publishedAt": "2022-06-12T11:32:29Z", "author": "Ratheesh R", "text": "Best crash course!", "likes": 0}}, {"topLevelComment": {"id": "UgzqaDtl1a4N1AeD0rZ4AaABAg", "publishedAt": "2022-06-12T11:30:35Z", "author": "Ratheesh R", "text": "Best course!", "likes": 0}}, {"topLevelComment": {"id": "Ugyp3cWXDfoHRJTcogF4AaABAg", "publishedAt": "2022-06-12T11:16:47Z", "author": "Ratheesh R", "text": "Best Video!", "likes": 0}}, {"topLevelComment": {"id": "UgxNEh4LkuVayMHsN154AaABAg", "publishedAt": "2022-06-10T16:11:17Z", "author": "simonlchilds1", "text": "this is such a great video, thank you!", "likes": 0}}, {"topLevelComment": {"id": "Ugy2j3-pDow68Hv3-PZ4AaABAg", "publishedAt": "2022-06-08T22:24:56Z", "author": "spurthi rao", "text": "Thanks for making the graph problems easy!", "likes": 0}}, {"topLevelComment": {"id": "UgxNPZeYApU-tw5MU854AaABAg", "publishedAt": "2022-06-08T12:04:58Z", "author": "Dev Jeff", "text": "Thank you soooo much !!! You explained everything in a more simple and concise way !!!!", "likes": 0}}, {"topLevelComment": {"id": "UgxIGdrcYA9V4q6XMIh4AaABAg", "publishedAt": "2022-06-07T15:56:48Z", "author": "A Little Coding", "text": "really helpful", "likes": 0}}, {"topLevelComment": {"id": "UgzaN23_egQwLXBVrWh4AaABAg", "publishedAt": "2022-06-06T18:51:55Z", "author": "Alaa Radwan", "text": "this easy smooth explanation of graph is realy helpful , realy like it , thanks for your efforts", "likes": 0}}, {"topLevelComment": {"id": "UgwfqOfZjP3_DQ3ZoOh4AaABAg", "publishedAt": "2022-06-01T15:38:31Z", "author": "Hasan", "text": "Excellent explanation. Will implement these algorithms in Python for practice.", "likes": 0}}, {"topLevelComment": {"id": "Ugy12YPv3FzG-BCNkE14AaABAg", "publishedAt": "2022-06-01T04:02:23Z", "author": "kreo debunk", "text": "on 2d grid, you can count islands more efficiently, with shallow algorithm. Found begin and end of island fragments for each row and then match rows of begins and ends", "likes": 0}}, {"topLevelComment": {"id": "UgwO4U51ozv60-0WDzx4AaABAg", "publishedAt": "2022-06-01T00:15:33Z", "author": "Rob Malford", "text": "Ah JavaScript; where const does not mean const at all and no one is really sure why it's even there.", "likes": 0}}, {"topLevelComment": {"id": "UgyQonMllTvBqxwXPfp4AaABAg", "publishedAt": "2022-05-31T18:33:40Z", "author": "Mahabub Karim", "text": "Why the time complexity is O(e) for has path, not O(V+E)???  \ud83e\udd14\ud83e\udd14\ud83e\udd14, Explain please...", "likes": 0}}, {"topLevelComment": {"id": "UgxsEwI59BLoUYdz0Zt4AaABAg", "publishedAt": "2022-05-30T05:55:45Z", "author": "Jimmy Bellmon", "text": "So Breathe First Traverse is the Fibonacci \ud83e\udd14\ud83d\udc4d\ud83c\udffe", "likes": 0}}, {"topLevelComment": {"id": "UgxBgcg84idsPvdASeZ4AaABAg", "publishedAt": "2022-05-29T19:51:44Z", "author": "Modern Teenage Investor", "text": "Great explainer, the fact that this type of content is free is truly amazing", "likes": 0}, "replies": [{"id": "UgxBgcg84idsPvdASeZ4AaABAg.9bcO5E2C8yP9biFyGsYAJ-", "publishedAt": "2022-06-01T02:36:11Z", "author": "kreo debunk", "text": "it is primitive. no dujksra/a*/ minimum spanning tree is mentioned :D", "likes": 0}]}, {"topLevelComment": {"id": "UgxTxZwXvfsCKxuzxSF4AaABAg", "publishedAt": "2022-05-28T18:16:19Z", "author": "gaurav sharma", "text": "This is an amazing tutorial on graph theory!!!", "likes": 0}}, {"topLevelComment": {"id": "Ugw7wbZdG6iOAG5vZqp4AaABAg", "publishedAt": "2022-05-23T02:16:18Z", "author": "Priyanshu", "text": "34:37  i think ther is 2n not n^2  and time complexity  is n", "likes": 0}}, {"topLevelComment": {"id": "UgxNFNs2UlrAr5aXHPt4AaABAg", "publishedAt": "2022-05-20T05:55:25Z", "author": "Symbol", "text": "The best beginner graph tutorial.\nI always come back to this to refresh myself on graphs.", "likes": 0}}, {"topLevelComment": {"id": "Ugy_lfBfhpwdXs-H6VN4AaABAg", "publishedAt": "2022-05-20T03:20:45Z", "author": "Devendra Chauhan", "text": "Really well explained \ud83d\udc4d", "likes": 0}}, {"topLevelComment": {"id": "UgzAIaaCiKR7xWqSJRJ4AaABAg", "publishedAt": "2022-05-20T01:51:09Z", "author": "Jay P", "text": "I learned more from this tutorial then all other tutorials that I watched combined. Great videos man!", "likes": 0}}, {"topLevelComment": {"id": "UgzlWu-ID6rVRBkidjx4AaABAg", "publishedAt": "2022-05-19T13:30:06Z", "author": "Jacob Moore", "text": "For the shortest path algorithm, finding the length of the shortest path is helpful of course but shouldn't we be returning the path itself? That's arguably the most important feature.", "likes": 1}, "replies": [{"id": "UgzlWu-ID6rVRBkidjx4AaABAg.9bCxTJ2GGVl9d6Jl7ReEVj", "publishedAt": "2022-07-05T16:41:45Z", "author": "Jacob Moore", "text": "@HaZe Have you heard of Logistics by chance?", "likes": 0}, {"id": "UgzlWu-ID6rVRBkidjx4AaABAg.9bCxTJ2GGVl9c4-n3s1mXy", "publishedAt": "2022-06-09T22:37:23Z", "author": "HaZe", "text": "No because you mistakely think these kind of problems have any real world use", "likes": 0}]}, {"topLevelComment": {"id": "UgxNXxiDpm6ELzOXRSd4AaABAg", "publishedAt": "2022-05-18T17:30:54Z", "author": "Sai Nagarjuna", "text": "The best course for beginners", "likes": 0}}, {"topLevelComment": {"id": "Ugym21YBSLUUfmPBWvJ4AaABAg", "publishedAt": "2022-05-18T13:06:55Z", "author": "Gagandeep singh Madaan", "text": "Thanks so much for this open source video. Highly appreciate your efforts. \nAre there any further videos on Greedy Algorithms, Cyber security , BLE basics ?", "likes": 0}}, {"topLevelComment": {"id": "UgzjW5PFHm9DqqnPvHV4AaABAg", "publishedAt": "2022-05-18T09:42:34Z", "author": "M", "text": "Thanks to the first 30mins of this video alone I was able to extend the idea of adjacency lists and independently solve all the following problems on undirected graphs and grid graphs in just under a week's worth of practice", "likes": 0}}, {"topLevelComment": {"id": "UgxzgF4G5JD6X70aTBx4AaABAg", "publishedAt": "2022-05-14T10:09:40Z", "author": "osagie osemwota", "text": "hello please i need help...on the Largest Component question, i decided to not use the recursive method in my DFS function but i am stuck in a bug... Every single one of the test cases on structy works except the first...here is my code  : \n\n// Write a function, largestComponent, that takes in the adjacency list of an undirected graph. The function should return the size of the largest connected component in the graph.\n\n\nconst largestComponent = (graph) => {\n\tlet largest=0;\n\t//keep a track of visited nodes\n\tlet visited =  new Set();\n\n\t// loop through the graph object\n\tfor (node in graph) {\n\t\tif(visited.has(String(node))) continue;\n\t\tlet currentCount = DFS(graph, node, visited);\n\t\tlargest = Math.max(largest, currentCount);\n\t}\n\n\treturn largest;\n\n}\n\nconst DFS = (graph, node, visited) => {\n\n\tlet currentCount = 1;\n\tlet stack = [node];\n\n\twhile(!!stack.length){\n\n\t\tlet current = stack.pop();\n\t\tfor( neighbor of graph[current]){\n\n\t\t\tif(visited.has(String(neighbor))) continue;\n\t\t\tstack.push(neighbor);\n\t\t\tvisited.add(String(current));\n\t\t\tcurrentCount++;\n\n\t\t}\n\n\t}\n\n\treturn currentCount;\n}\n\n\nconsole.log(largestComponent({\n  0: ['8', '1', '5'],\n  1: ['0'],\n  5: ['0', '8'],\n  8: ['0', '5'],\n  2: ['3', '4'],\n  3: ['2', '4'],\n  4: ['3', '2']\n}))", "likes": 0}}, {"topLevelComment": {"id": "Ugz3riDwQq-fdP263aN4AaABAg", "publishedAt": "2022-05-14T05:22:18Z", "author": "Amir", "text": "stg I have to learn JavaScript to learn C++ lmao", "likes": 0}}, {"topLevelComment": {"id": "UgxXlrT_eKl1XQ_Zk5d4AaABAg", "publishedAt": "2022-05-13T22:02:09Z", "author": "ANTHONY LUGO", "text": "The course on DP was a winner. Course on Graph algo is another winner. Hope to learn a lot more from you.", "likes": 0}}, {"topLevelComment": {"id": "UgyHo4g7JmDUer50lYJ4AaABAg", "publishedAt": "2022-05-13T07:08:49Z", "author": "M", "text": "Alvin you have just explained in 30mins what I tried and failed to learn from google in 30days!", "likes": 0}}, {"topLevelComment": {"id": "UgyHrZgEBtijmlvNHkZ4AaABAg", "publishedAt": "2022-05-13T06:42:16Z", "author": "M", "text": "I have wasted years of time on google learning to code when I should have come straight to this youtube channel", "likes": 0}}, {"topLevelComment": {"id": "UgyFm9OapdlVRwEPDyB4AaABAg", "publishedAt": "2022-05-07T19:08:17Z", "author": "ujjwal jain", "text": "island code : \nvar numIslands = function(grid) {\r\n    let islandCount = 0;\r\n    for (let i = 0; i < grid.length; i++) {\r\n        for (let j = 0; j < grid[0].length; j++) {\r\n            if (grid[i][j] === '1') {\r\n                islandCount += dfs(i, j, grid);\r\n            }\r\n        }\r\n    }\r\n    return islandCount\r\n};\r\n\r\nconst dfs = (i, j, grid) => {\r\n    if (invalidCell(i, j, grid) || grid[i][j] !== '1') return // no need to process these cells\r\n    grid[i][j] = '#' // mark visited nodes so we dont count again \r\n    dfs(i - 1, j, grid)\r\n    dfs(i + 1, j, grid)\r\n    dfs(i, j - 1, grid)\r\n    dfs(i, j + 1, grid)\r\n    return 1 // now we've processed the whole island, return 1 to add to our count\r\n}\r\n    \r\nconst invalidCell = (i, j, grid) => i < 0 || i >= grid.length || j < 0 || j >= grid[0].length", "likes": 0}}, {"topLevelComment": {"id": "UgxBRG-BdBPlOcIkTqJ4AaABAg", "publishedAt": "2022-05-07T18:13:38Z", "author": "Anthony Park", "text": "just wow on the fact that we're living in a world where we have access to such a quality learning material for FREE. Thanks a lot!!", "likes": 0}}, {"topLevelComment": {"id": "Ugx8LB9NjWMmWu4LGe14AaABAg", "publishedAt": "2022-05-07T17:39:54Z", "author": "Agustin Vargas", "text": "This is fantastic. Makes graphs easy to digest. Thanks for that.\n\nI did find a minor issue in the island count problem solution.\n\nIt assumes that each row will have the same number of columns. That assumption isn't described in the problem. So a quick fix would be to run the nested loop to the length of the row instead of fixing it to zero. And doing the same for the inbounds check. That would present an issue in the exploration in that there might not be any map in either direction, so you'll have to add an existence check in the explore to account for that.\n\nThis way if a row has less coordinates, or more, it would still work properly.", "likes": 1}}, {"topLevelComment": {"id": "UgyUxJyCKAZ97bk1kcZ4AaABAg", "publishedAt": "2022-05-07T16:49:09Z", "author": "ujjwal jain", "text": "Thanks for this tutorial !!", "likes": 0}}, {"topLevelComment": {"id": "UgyUWTHo-tE5fwva6UJ4AaABAg", "publishedAt": "2022-05-06T15:57:15Z", "author": "Udit Verma", "text": "I search for videos where Alvin is the tutor \ud83d\ude02", "likes": 0}}, {"topLevelComment": {"id": "Ugy7qDubwllE5jK3wqF4AaABAg", "publishedAt": "2022-05-06T15:09:49Z", "author": "K D", "text": "Honestly probably the best explanations for DS&A", "likes": 0}}, {"topLevelComment": {"id": "UgyD-lfz5KZgEseI0Sd4AaABAg", "publishedAt": "2022-05-06T13:20:43Z", "author": "Mohib", "text": "one of the best instructors. what a beast", "likes": 0}}, {"topLevelComment": {"id": "UgyB6-_LkaK3Pcx1ECN4AaABAg", "publishedAt": "2022-05-03T14:36:31Z", "author": "Th\u1ecd Hu\u1ef3nh", "text": "Thanks for the great course !!! But I don\u2019t understand why in worst case, number of edge will be equal to square of number of nodes? Should it be (number of node)z! in 2-way graph?", "likes": 0}}, {"topLevelComment": {"id": "Ugyl5W5ADizRPJ_JerZ4AaABAg", "publishedAt": "2022-05-03T11:29:30Z", "author": "Best Quotes", "text": "Can anyone explain When will the while loop condition get failed?", "likes": 0}}, {"topLevelComment": {"id": "UgxUFTG2-WtXVIjKnVJ4AaABAg", "publishedAt": "2022-05-02T07:44:32Z", "author": "dan mus", "text": "if all teachers were like Alvin, everyone would have a PhD in computer science", "likes": 2}}, {"topLevelComment": {"id": "UgxRrRyLMeZBqwB9MZ54AaABAg", "publishedAt": "2022-04-30T17:29:31Z", "author": "igaming_", "text": "Keep learning...Keep growing", "likes": 0}}, {"topLevelComment": {"id": "Ugx8kxFj7s0rtyBWbBh4AaABAg", "publishedAt": "2022-04-30T03:23:43Z", "author": "Michael Branconier", "text": "Thanks for the video!!", "likes": 0}}, {"topLevelComment": {"id": "Ugw8IC9_rQ2vgB26ynt4AaABAg", "publishedAt": "2022-04-28T19:28:20Z", "author": "reactdev 2020", "text": "Very good course", "likes": 0}}, {"topLevelComment": {"id": "UgwOyPJNuY-9ykPEs_x4AaABAg", "publishedAt": "2022-04-28T09:38:12Z", "author": "Alex Neagoe", "text": "I am actually studying C but I have found this video tremendeously helpfull in explaining how graphs are traversed and how not to use return in a bad way when you want to actually make use of recursion to backpedal from dead ends in situations where you don't find your base case.\n\nthank you again. subscribed!", "likes": 2}}, {"topLevelComment": {"id": "UgyCRxmVU3rvNxlXdrR4AaABAg", "publishedAt": "2022-04-28T05:20:00Z", "author": "Paddy D", "text": "He is the guy", "likes": 0}}, {"topLevelComment": {"id": "UgzKDtLVro7o2xx82u54AaABAg", "publishedAt": "2022-04-27T20:29:13Z", "author": "Amit Dey", "text": "Really good", "likes": 0}}, {"topLevelComment": {"id": "Ugz3Ug1kS8SoSWzu4vl4AaABAg", "publishedAt": "2022-04-27T20:04:00Z", "author": "Thakur Yogeshwar Singh", "text": "What a great series! Learnt so much in just under 2 hours!", "likes": 0}}, {"topLevelComment": {"id": "UgxUrMCKj2YFAmb32Jl4AaABAg", "publishedAt": "2022-04-24T20:27:35Z", "author": "Jerald Macachor", "text": "Leetcode - O(n^2) brute force.\nAlgoexpert - O(n) linear\nAlvin / Structy - log(n)", "likes": 41}}, {"topLevelComment": {"id": "Ugyx38NL0c_OQfZ_C4B4AaABAg", "publishedAt": "2022-04-23T16:25:04Z", "author": "RoniFinTech", "text": "amazing walk-throughs!", "likes": 0}}, {"topLevelComment": {"id": "Ugw5A7eDgCfr-RWWdMB4AaABAg", "publishedAt": "2022-04-21T14:26:38Z", "author": "Kishore Kumar", "text": "You just made me crack my Interview on graph algorithms... and I have just seen half the video only to make it... Thanks a ton Bro... Let me complete this", "likes": 0}}, {"topLevelComment": {"id": "UgzQXcjXXMiEJNmn8_Z4AaABAg", "publishedAt": "2022-04-21T07:10:23Z", "author": "Code Cleric", "text": "I thought I'd seen the all the greatest of online coding instructors, and then I found Alvin... Seriously these explanations are paced exactly perfectly and ultra clear", "likes": 0}}, {"topLevelComment": {"id": "UgwBQT5IqSJ9SjsrBHt4AaABAg", "publishedAt": "2022-04-20T12:29:30Z", "author": "Ben Sang", "text": "You teach so well this is the future of education!", "likes": 0}}, {"topLevelComment": {"id": "Ugxrx8jui3YirXBaiHd4AaABAg", "publishedAt": "2022-04-20T10:30:47Z", "author": "Aravind Sanjeev", "text": "25:25 I don't understand how iteration will still continue after the it hits the first empty array?  Like once it hits f, how does it restart from c?\n\nEdit: well, i figured it out :)", "likes": 0}}, {"topLevelComment": {"id": "UgzuRbMG7MVfN2YCY054AaABAg", "publishedAt": "2022-04-17T07:36:46Z", "author": "Michael Vigato", "text": "Woudln't it be \"easier\" to use JS Maps instead of regular JS objects for stuff like adjacency lists?", "likes": 0}}, {"topLevelComment": {"id": "Ugz-MyFXPcWrquFhYV14AaABAg", "publishedAt": "2022-04-17T00:37:46Z", "author": "Niki", "text": "This is the only course I\u2019ve found that has successfully got the concept of graphs through my thick skull, it\u2019s been a subject that\u2019s been so hard for me to learn. Thank you for making this!!", "likes": 5}}, {"topLevelComment": {"id": "UgyNttRrfza0Hys80Y94AaABAg", "publishedAt": "2022-04-16T14:14:59Z", "author": "Tabrez khan", "text": "Thanks \ud83d\udc4d\ud83c\udffc", "likes": 0}}, {"topLevelComment": {"id": "Ugxw7ovfcSCsAk9aehd4AaABAg", "publishedAt": "2022-04-14T21:30:16Z", "author": "Harshit Choudhary", "text": "Amazing content :)", "likes": 0}}, {"topLevelComment": {"id": "UgzI0Wv7eZWnYqVs09x4AaABAg", "publishedAt": "2022-04-12T07:40:37Z", "author": "Content Karishma", "text": "nice video :)", "likes": 0}}, {"topLevelComment": {"id": "Ugy7w36kpbUMOZz-WPd4AaABAg", "publishedAt": "2022-04-10T20:36:53Z", "author": "Eliyahu Levy", "text": "this guy is the best teacher  there is. \nThank you so much!\nI have subscribed to your chanel (:", "likes": 0}}, {"topLevelComment": {"id": "UgxeEYD6-NVAIE-6YMF4AaABAg", "publishedAt": "2022-04-09T10:10:59Z", "author": "Randomisticful", "text": "Einstein once said \"If you are able to explain it to a 5 year old, you understand it yourself\". Alvin, you are one of a kind!", "likes": 27}}, {"topLevelComment": {"id": "UgzjjzPxj1tNPa44ILR4AaABAg", "publishedAt": "2022-04-08T10:26:46Z", "author": "Jaleel Douglas", "text": "Finished my very first fCC course. The pedagogy is excellent, Alvin is a great teacher", "likes": 0}}, {"topLevelComment": {"id": "Ugw-hFEsZhWJTKJFzhh4AaABAg", "publishedAt": "2022-04-06T22:40:09Z", "author": "Mithila Navishka", "text": "I need Advice From You! \n\nI have few input files which included maze, if i want find shortest path of that maze, i have to convert that maze file in to adjacency l list or matrix right? or is there other way i can do it, please advise me regarding this", "likes": 0}}, {"topLevelComment": {"id": "UgyBmHJ-4PNYbajpRdV4AaABAg", "publishedAt": "2022-04-06T06:24:14Z", "author": "Sivagami Subramanian Nambi", "text": "Only love <3, have never understood this well!!", "likes": 0}}, {"topLevelComment": {"id": "Ugy49A5_HnlM0xIXh3B4AaABAg", "publishedAt": "2022-04-05T14:25:06Z", "author": "Robert Volgman", "text": "Should be noted that the algorithms used in part 1 only work for directed ACYCLIC graphs. They will loop forever in a graph that has any cycles.", "likes": 0}}, {"topLevelComment": {"id": "Ugxf35zbVhnUI2OpaHJ4AaABAg", "publishedAt": "2022-04-02T19:50:06Z", "author": "JS dev", "text": "thanks for providing suck elegant solutions, i was doing Map and really complicating my code,", "likes": 0}}, {"topLevelComment": {"id": "UgxYtHLnDpMTNFb1CFZ4AaABAg", "publishedAt": "2022-04-01T08:43:18Z", "author": "TheBarthinator", "text": "Wow amazing how you made me understand graphs and I have extreme comfortability with the recursive approach and queue method. Always struggled understanding these implementations in python but as a web dev it made a lot more sense in JS. Thank you for taking the time to make this video!", "likes": 0}}, {"topLevelComment": {"id": "UgyGjObOGnaHCl1Pa_d4AaABAg", "publishedAt": "2022-03-26T16:33:41Z", "author": "FJ", "text": "I wished your code was in JAVA", "likes": 1}}, {"topLevelComment": {"id": "UgwNGT88dDyGO632bUZ4AaABAg", "publishedAt": "2022-03-22T22:36:46Z", "author": "Ams1 Ams", "text": "in the find minimum size island you can use grid.length * grid[0].length as initial min size island instead of infinity", "likes": 0}}, {"topLevelComment": {"id": "UgzntSBZB8tDH06-CXJ4AaABAg", "publishedAt": "2022-03-22T07:55:33Z", "author": "Paul Papacz", "text": "Amazing walkthroughs and explanations! Much appreciated \ud83d\ude4f", "likes": 0}}, {"topLevelComment": {"id": "UgybMsjrD3JnVAtOtI54AaABAg", "publishedAt": "2022-03-21T17:25:26Z", "author": "Sid", "text": "Thank you for providing this course!!!", "likes": 0}}, {"topLevelComment": {"id": "UgxUCGmiKRywD0w-Ht54AaABAg", "publishedAt": "2022-03-20T23:57:05Z", "author": "Safi Abdul", "text": "number islands problem couldnt have been solved easier than this, kudos to this guy! for once i was able to understand the solution and complete the problem without errors.", "likes": 0}}, {"topLevelComment": {"id": "UgwR_SbklaryE5WjFxh4AaABAg", "publishedAt": "2022-03-19T20:32:40Z", "author": "Mesghali Rasoul", "text": "Amazing, I love the way you explain graph algorithms", "likes": 0}}, {"topLevelComment": {"id": "UgyZMHgG6RGA7riyM9t4AaABAg", "publishedAt": "2022-03-18T19:02:09Z", "author": "aron canapa", "text": "I think this should be the first programming video anyone watches , I was struggling so hard before this", "likes": 0}}, {"topLevelComment": {"id": "UgyoBR3Y8xPnGI_4cA54AaABAg", "publishedAt": "2022-03-18T16:20:08Z", "author": "J M", "text": "is breadthFirstPrint not suitable for a recursive version?", "likes": 0}}, {"topLevelComment": {"id": "UgySWqQP6XKkOoUb10Z4AaABAg", "publishedAt": "2022-03-17T20:40:00Z", "author": "Shuvo Habib", "text": "For colInbounds, the array should be grid[0] ?\nconst colInbounds = 0 <= c && c < grid[0].length;", "likes": 0}}, {"topLevelComment": {"id": "UgzrdjLnqaKi6PQaXlx4AaABAg", "publishedAt": "2022-03-17T19:51:09Z", "author": "Alysha Gilliard", "text": "This was so gooooood!! Watching all the other ones. So glad I found this!", "likes": 0}}, {"topLevelComment": {"id": "UgzxTleXElB-hDTXYRF4AaABAg", "publishedAt": "2022-03-17T18:10:52Z", "author": "Stargazing", "text": "Splendid! Alvin is an incredible instructor", "likes": 0}}, {"topLevelComment": {"id": "UgzD6WKhC2f-wUQorQR4AaABAg", "publishedAt": "2022-03-15T19:56:53Z", "author": "Casual Overwatcher", "text": "I haven't finished the video yet, but this will be very helpful  for my coding interviews!", "likes": 2}}, {"topLevelComment": {"id": "Ugz1BFKryH-DtJ2Aj1B4AaABAg", "publishedAt": "2022-03-15T17:38:05Z", "author": "Amarjeet Chaurasia", "text": "Never looked graph so easy to me before I watched this one, thanks! \ud83d\ude0a", "likes": 5}}, {"topLevelComment": {"id": "UgyV--DRUyrXkiXV5qN4AaABAg", "publishedAt": "2022-03-12T04:06:21Z", "author": "Anupam Pandey", "text": "Hey Alvin, thanks, could you please create such videos on other topics like Heaps, Tries, Binary search trees etc.", "likes": 0}}, {"topLevelComment": {"id": "Ugzbn-mWdZyNWY7pyYl4AaABAg", "publishedAt": "2022-03-11T15:29:54Z", "author": "Australian Scholarships for International Students", "text": "great", "likes": 0}}, {"topLevelComment": {"id": "Ugy6MYfUnyUTtPAUO6l4AaABAg", "publishedAt": "2022-03-10T13:13:01Z", "author": "antoniorand", "text": "you might have solved my final project and thesis thank you", "likes": 0}}, {"topLevelComment": {"id": "UgzwiFvxHpfvqSxxlsV4AaABAg", "publishedAt": "2022-03-10T08:39:44Z", "author": "NarengBull", "text": "Great video,", "likes": 0}}, {"topLevelComment": {"id": "Ugwgwwlvf90ahL1VQVZ4AaABAg", "publishedAt": "2022-03-08T05:09:55Z", "author": "Khai No", "text": "This instructor is great. I wish he create complete data structure and algo course.", "likes": 0}}, {"topLevelComment": {"id": "UgxT8i88ebqtVAozY654AaABAg", "publishedAt": "2022-03-07T02:29:00Z", "author": "Navid M", "text": "Thanks!", "likes": 1}}, {"topLevelComment": {"id": "UgwBXJhi1AuSCURBmoF4AaABAg", "publishedAt": "2022-03-05T17:05:26Z", "author": "David S", "text": "wow, this person is an amazing teacher", "likes": 0}}, {"topLevelComment": {"id": "UgxnV5ayvouIQhLJGrd4AaABAg", "publishedAt": "2022-03-05T17:02:52Z", "author": "Madhubala Jayakumaran", "text": "Excellent course!", "likes": 0}}, {"topLevelComment": {"id": "UgzBIixfWatsCvq4AK54AaABAg", "publishedAt": "2022-03-05T08:40:59Z", "author": "Rudri", "text": "After @mycodeschool I found your channel, thank you for teaching the graph topic in such a simple manner.", "likes": 0}}, {"topLevelComment": {"id": "UgxBqFfqmt3vq4jMJpZ4AaABAg", "publishedAt": "2022-03-03T20:37:51Z", "author": "Sunil Jimenez", "text": "when do you compare the different distances between each found path ?", "likes": 0}}, {"topLevelComment": {"id": "UgyI_13iHZtO8ey74UR4AaABAg", "publishedAt": "2022-03-02T16:15:03Z", "author": "Timothy L.J. Stewart", "text": "Hey Thanks @Alvin the Programmer, I have a question about the visited nodes @48:22, It appears you return to node K after marking it visited, and in the code @59:00 there doesn't appear to be a removed from visited call. I'm curious, how you are able to return to an already visited node such as @48:22? I'm thinking visited is a copy and each recursive call gets its unique state at the time of the call...", "likes": 0}}, {"topLevelComment": {"id": "Ugz8UPwrlUsWDgHkH0t4AaABAg", "publishedAt": "2022-03-02T04:32:46Z", "author": "Scrub", "text": "Wait, is this App Academy Alvin?!\n\nEdit: It just switched to PIP. It is! Alvin is the best?", "likes": 0}}, {"topLevelComment": {"id": "UgwvbS3x4P4JiSm6qGh4AaABAg", "publishedAt": "2022-03-01T06:08:49Z", "author": "Maksatbek Burkanov", "text": "20:40 Looks like you need a queue to implement DFS, because stack is taking as current last node that  entered stack: \n[b, c] => current becomes \"c\" but you need \"b\", queue in this case fits this implementation", "likes": 0}, "replies": [{"id": "UgwvbS3x4P4JiSm6qGh4AaABAg.9Z0kA2iNfQK9ZAPk8rFwPr", "publishedAt": "2022-03-05T00:14:02Z", "author": "Maksatbek Burkanov", "text": "@Ayoub Alem thats right at beginning you append 2 nodes of F sequentially starting from right and lets say clockwise, then you will need to proceed with the first element that entered(because you need to go all the way deep with first element that you pushed not last)", "likes": 0}, {"id": "UgwvbS3x4P4JiSm6qGh4AaABAg.9Z0kA2iNfQK9ZAKuCl_zJ8", "publishedAt": "2022-03-04T23:31:43Z", "author": "Ayoub Alem", "text": "Hi, if he used a queue he will end up with BFS traversal because he will print all the neighbours of each node before jumping to the children.\nBut for DFS traversal think of it like you append to the stack all the neighbours of a node once there is no more neighbours you pop the last neighbour you appended, and you start visiting its neighbours and so on.", "likes": 0}]}, {"topLevelComment": {"id": "UgxPfxSBbfRijzMrLN14AaABAg", "publishedAt": "2022-03-01T03:09:11Z", "author": "Radhika Tupkary", "text": "This is phenomenal! I was finding Graph problems so difficult before watching this video, and now they seem fairly easy after watching the entire video! Thanks a ton!", "likes": 15}}, {"topLevelComment": {"id": "Ugytrz3ypg6YITiXThd4AaABAg", "publishedAt": "2022-02-28T08:10:22Z", "author": "rjlacanlaled", "text": "why don't you use ++ instead of += 1", "likes": 0}}, {"topLevelComment": {"id": "UgzA8H4zcv2C86gv2Zx4AaABAg", "publishedAt": "2022-02-28T05:43:18Z", "author": "Tetrax", "text": "Are there any tutorials that use the same hash map structure to build a graph with weights on it?", "likes": 0}}, {"topLevelComment": {"id": "Ugwnp7H9x0JubV-vj9t4AaABAg", "publishedAt": "2022-02-26T06:26:39Z", "author": "Hor Meng Yoong", "text": "Great video and it is free. Thanks.\nBTW, what software was used to record the video and speaker head at the same time?", "likes": 0}}, {"topLevelComment": {"id": "UgxKSRIk4PuNrZHgKT14AaABAg", "publishedAt": "2022-02-25T20:02:24Z", "author": "Mazhar Ali", "text": "At 47:50 . Lets say we wanted to find 'm'. Since you marked 'K' as visited, and are now at 'l'. The icon shouldn't go back to 'K' (as it is visited), so does the program just ends there? Without finding a path to 'm', even though there is a path?", "likes": 0}}, {"topLevelComment": {"id": "UgyeDqeaQeeNxkmahHd4AaABAg", "publishedAt": "2022-02-25T10:52:49Z", "author": "thobias larsen", "text": "Thanks FreeCodeCamp and Alvin, you are doing some important work right here and contributing it to a large amount of people. I love you guys", "likes": 0}}, {"topLevelComment": {"id": "UgzF7WzYsxTvxdqHUfR4AaABAg", "publishedAt": "2022-02-24T18:53:32Z", "author": "Prince Adigwe", "text": "How this person managed to explainamy concepts perfectly is superb... We really need people like this guy in the teaching field... I downloaded the video and I ve not regretted at all", "likes": 6}, "replies": [{"id": "UgzF7WzYsxTvxdqHUfR4AaABAg.9YqEhfeCKKO9bdTTVASIzg", "publishedAt": "2022-05-30T05:57:59Z", "author": "Jimmy Bellmon", "text": "Me too I just realized Breathe First Traverse is Fibonacci", "likes": 0}]}, {"topLevelComment": {"id": "UgxTT3kfimgmrdeRgbZ4AaABAg", "publishedAt": "2022-02-22T19:44:12Z", "author": "Samuel Okoth", "text": "Very good course. Thank you", "likes": 1}}, {"topLevelComment": {"id": "UgzMN_K4ogf17Tblx-B4AaABAg", "publishedAt": "2022-02-22T19:04:00Z", "author": "Julian Wareley", "text": "Nice one!", "likes": 0}}, {"topLevelComment": {"id": "UgzXKV7uy9jaiwQjdpt4AaABAg", "publishedAt": "2022-02-21T16:50:47Z", "author": "Ifeanyi Okonkwo", "text": "Alvin and the chipmunks \ud83d\udc3f", "likes": 1}}, {"topLevelComment": {"id": "UgwMQlYbzc3yLkQe3ON4AaABAg", "publishedAt": "2022-02-20T09:44:36Z", "author": "Rick", "text": "This was amazing. I've watched a bunch of these types of videos over the years and this is the only one that actually made it look easy. I can actually say I understand this now. Thank you.", "likes": 15}}, {"topLevelComment": {"id": "Ugze6XvnUZhLbanfbmh4AaABAg", "publishedAt": "2022-02-19T02:41:41Z", "author": "John Bell", "text": "For island count (1:58:20), you actually don't need a visited set to keep track of the tiles you have already visited. Simply set the land tile to water \"W\" when you visit it; you already have the logic there to skip over water tiles.", "likes": 8}, "replies": [{"id": "Ugze6XvnUZhLbanfbmh4AaABAg.9YbcWHxIjkX9d5V7vgdhgB", "publishedAt": "2022-07-05T09:01:53Z", "author": "Manu mathew", "text": "If space complexity needs to be minimized and the interviewer allows in-place modification, then this is a good approach.", "likes": 0}, {"id": "Ugze6XvnUZhLbanfbmh4AaABAg.9YbcWHxIjkX9d2oQzFE6AM", "publishedAt": "2022-07-04T08:01:32Z", "author": "Damian", "text": "Yes, but in real life, functions don\u2019t modify input objects, it\u2019s a bad practice. In an interview I wouldn\u2019t do it without asking.", "likes": 3}]}, {"topLevelComment": {"id": "Ugz7h2EiJ0c9YEu7rad4AaABAg", "publishedAt": "2022-02-17T19:39:12Z", "author": "Monotoba", "text": "just one quick clarification. At about 34 minutes in you say that n-squared is the number of edges in a graph. I think you mean that n-squared is the maximum number of edges in a graph. Your own diagram only shows 6 edges for a 3 node graph proving that n-squared is not always the number of edges in a graph. Also, the maximum number of edges will depend on the type of graph.", "likes": 0}}, {"topLevelComment": {"id": "UgwmNXkcN217uunOeBd4AaABAg", "publishedAt": "2022-02-17T04:52:51Z", "author": "Pianochess 1", "text": "1:40:45 wouldnt the convention be (4,3), i.e. (x,y) ?", "likes": 0}}, {"topLevelComment": {"id": "UgyZg8Ttj2lLp-ACK2Z4AaABAg", "publishedAt": "2022-02-15T16:59:07Z", "author": "ChiefSittingStill", "text": "Excellent overall but one minor quibble: I hit a problem with Island Count in C++. If like me you're not particularly au fait with mathematical notation, you may go astray here too.\n\nThe C++ code on the website for the explore helper function uses what I believe it be a representation of the mathematical 'less than or equal to' symbol. It's not valid C++ (to my knowledge) and I can't even recreate it on my keyboard! I (incorrectly) took it to mean the C++ 'less than' symbol; this isn't correct, but it's not a glaringly obvious mistake - if you put that in and use Alvin's test cases, that error only manifests itself in the results of test_01 (I got 3 islands returned, not 4 as expected).\n\nTo make it clear for anyone else who makes the same mistake I did, I went with these as the first lines of code in my explore function (which is basically otherwise identical to Alvin's):\n\nconst unsigned int ZERO{0};\nbool rowInbounds = (ZERO <= row) && (row < grid.size());\nbool columnInbounds = (ZERO <= column) && (column < grid[ZERO].size());\n\nThis works fine.", "likes": 0}}, {"topLevelComment": {"id": "UgxUhj77Wk_Kdjc9mX54AaABAg", "publishedAt": "2022-02-14T15:47:22Z", "author": "Johnson Tian", "text": "Thank you Alvin! Your explanation is GOLD!!! It's such a phenomenal tutorial that I find myself learning so much more efficiently!", "likes": 1}}, {"topLevelComment": {"id": "UgzoLhezGh3b6QLUqdx4AaABAg", "publishedAt": "2022-02-13T15:42:14Z", "author": "Manuel Jos\u00e9 Garc\u00eda Rodr\u00edguez", "text": "very well explained!! excellente!!", "likes": 0}}, {"topLevelComment": {"id": "UgyFfymAraUv-R99Keh4AaABAg", "publishedAt": "2022-02-13T09:42:24Z", "author": "Ramesh Reddy", "text": "Nice course. I wish it included topological stuff too.", "likes": 1}}, {"topLevelComment": {"id": "UgyDlkqRbkdiGlT4__N4AaABAg", "publishedAt": "2022-02-12T11:29:53Z", "author": "yadiki shameer", "text": "This guy literally changed the way I look at dynamic programming.", "likes": 3}}, {"topLevelComment": {"id": "Ugzop72AL1Y9jAjL9w94AaABAg", "publishedAt": "2022-02-12T00:48:30Z", "author": "Santosh Vaza", "text": "Awesome, thank you", "likes": 0}}, {"topLevelComment": {"id": "UgyykVKpuZp1RuDXPBZ4AaABAg", "publishedAt": "2022-02-10T10:48:54Z", "author": "Dan Levy", "text": "Incredible!! thank you so much", "likes": 0}}, {"topLevelComment": {"id": "UgzoB2rsbnOtdIBHmbd4AaABAg", "publishedAt": "2022-02-09T12:09:45Z", "author": "Harry Zachariou", "text": "Great video! At 1:00:00 isn't there a slight optimisation where you add the src to visited, as it will add it twice as it goes back up the stack so could wrap in a conditional to only add to visited if it doesn't already exist in visited?", "likes": 2}}, {"topLevelComment": {"id": "Ugz0y4rrOHUN2grI2WJ4AaABAg", "publishedAt": "2022-02-08T03:40:08Z", "author": "x", "text": "0:00 my expression whenever someone used to talk to me about graph algorithms before this video.", "likes": 0}}, {"topLevelComment": {"id": "UgzalMCtyFBio_wp4XJ4AaABAg", "publishedAt": "2022-02-06T13:18:24Z", "author": "sachin sasi", "text": "Abdf or ace .1 should follow  or 2 can be also followed", "likes": 0}}, {"topLevelComment": {"id": "UgzpoVMZlnq-E1AMujx4AaABAg", "publishedAt": "2022-02-06T10:02:58Z", "author": "VIKAS ER", "text": "Best video on Graphs.", "likes": 0}}, {"topLevelComment": {"id": "UgwS1p6GqfQ7vVjOMoB4AaABAg", "publishedAt": "2022-02-03T23:06:58Z", "author": "Shir Ganot", "text": "Why the islands problems are considered graph problems? Also, great video:)", "likes": 0}}, {"topLevelComment": {"id": "Ugz7Vb3Tixg_ABwjMbV4AaABAg", "publishedAt": "2022-02-02T13:52:24Z", "author": "\u9673\u51a0\u5ef7", "text": "Thank you, Alvin.\nYour explanation is very clear and easy to understand!", "likes": 0}}, {"topLevelComment": {"id": "UgzmXBdSn-wXJ1iFCNB4AaABAg", "publishedAt": "2022-02-02T04:31:37Z", "author": "Kayla M", "text": "Thank you !", "likes": 0}}, {"topLevelComment": {"id": "UgxCgyrxh62k6VpyXpx4AaABAg", "publishedAt": "2022-02-02T02:11:58Z", "author": "d papa", "text": "excellent - thanks", "likes": 0}}, {"topLevelComment": {"id": "UgwJFCiqOou72gFJjON4AaABAg", "publishedAt": "2022-01-31T06:56:10Z", "author": "rajasaurus", "text": "nice, right, cool, awesome!", "likes": 0}}, {"topLevelComment": {"id": "UgwXmZC2Cuc-M8VraX14AaABAg", "publishedAt": "2022-01-30T19:56:40Z", "author": "Wesley", "text": "In the future would you mind please not talking with so much vocal fry (or stop chain smoking, whatever the case may be). It would provide a way better listening experience. thanks.", "likes": 0}}, {"topLevelComment": {"id": "Ugxfq4WCwK7xgFoW2Ml4AaABAg", "publishedAt": "2022-01-29T04:07:40Z", "author": "velie a", "text": "time complexity of shortest path problem, starting at [1.24.03]. Why is linear complexity? We have a while loop and inside we have for loop. Is not it supposed to be (N square)", "likes": 0}}, {"topLevelComment": {"id": "UgwqFWi1jSBzhUWXNsx4AaABAg", "publishedAt": "2022-01-25T12:55:53Z", "author": "Oscar Molina", "text": "Hey Alvin, I've observed in the minimum island count problem (2:10:00) is that you initialize minSize = infinity. I believe the worst case here is that the entire grid is an island, therefore you could've simply initialize minSize = len(grid) * len(grid[0]) (in Python code). Other than that, great recursive solution!", "likes": 0}}, {"topLevelComment": {"id": "Ugy225uJNEw8YfYp0Tt4AaABAg", "publishedAt": "2022-01-25T12:31:38Z", "author": "Oscar Molina", "text": "Great video, thanks for sharing! In the island count problem (1:58:40) did you miss the grid[0].length upper limit for the column bound? If so, I'm not sure how your solution still works! I solved this problem using a slightly different approach, more related to my background in numerical simulations, which was first to convert the grid into a directed graph and then perform a breadth-first search at every node that hasn't been visited yet. Also, my solution seems to run a bit faster (~50 ms). \n\nHere's is my (more complex!) solution (in Python):\n\ndef island_count(grid):\n  graph, nodes = gridToGraph(grid)\n  count = 0\n  visited = set()\n  for i in nodes:\n    if (i not in visited):\n      if (bfs(graph, nodes, i, visited) == True):\n        count += 1\n  return count\n\ndef gridToGraph(grid):\n  nx = len(grid[0])\n  ny = len(grid)\n  size = nx * ny\n  \n  nodes = {}  \n  graph = {}\n  \n  for m in range(size):\n    i = m % nx\n    j = int(m / nx) % (nx * ny)\n    \n    nodes[m] = grid[j][i]\n    \n    left = None\n    right = None\n    up = None\n    down = None\n    \n    if (i > 0):\n      left = [m - 1, grid[j][i - 1]]\n    if (i < nx - 1):\n      right = [m + 1, grid[j][i + 1]]\n    if (j > 0):\n      up = [m - nx, grid[j - 1][i]]\n    if (j < ny - 1):\n      down = [m + nx, grid[j + 1][i]]\n        \n    if (m not in graph.keys()):\n      graph[m] = []\n    if (left != None):\n      graph[m].append(m - 1)\n    if (right != None):\n      graph[m].append(m + 1)\n    if (up != None):\n      graph[m].append(m - nx)\n    if (down != None):\n      graph[m].append(m + nx)\n    \n  return graph, nodes\n\ndef bfs(graph, nodes, n, visited):\n  if (n not in visited): visited.add(n)\n  if (nodes[n] == 'W'): return False\n  q = [n]\n  while (len(q) > 0):\n    i = q.pop()\n    for e in graph[i]:\n      if (e not in visited and nodes[e] == 'L'):\n        visited.add(e)\n        q.append(e)\n  return True", "likes": 2}}, {"topLevelComment": {"id": "UgwzHKEOV4zFiqkfUAh4AaABAg", "publishedAt": "2022-01-22T20:38:50Z", "author": "rahul", "text": "watched your lecture on Dynamic Programming and now I am here. You are such a phenomenal teacher, thanks a ton for making these tutorials!", "likes": 4}, "replies": [{"id": "UgwzHKEOV4zFiqkfUAh4AaABAg.9XWSX3f7--z9dNJO056yxx", "publishedAt": "2022-07-12T07:05:33Z", "author": "patrick udochukwu", "text": "Please @rahul what's the DP link", "likes": 0}]}, {"topLevelComment": {"id": "UgxIuSmpO2ZHTEHoPK94AaABAg", "publishedAt": "2022-01-19T20:51:07Z", "author": "Zeryab Alam", "text": "This course is exceptionally well done. Completely understood the theory and implementation behind them damned graphs.", "likes": 15}}, {"topLevelComment": {"id": "Ugw9fhw6SEJzOhgVbPJ4AaABAg", "publishedAt": "2022-01-18T19:32:12Z", "author": "Saptarshi Ghosh", "text": "@39:26 , you don't have to wait until the current == dest, an optimal approach is to maintain a visited set and add element to it when a un-visited neighbour is found. check if dest in the visited set or not, if yes then break the loop and return a True. The logic behind here, if you have seen your dest already you don't have to wait until it pops out. This won't change the asymptotic upper-bound but optimises the average case runtime with early stopping. N.B. same logic is applicable for iterative and recursive DFS.", "likes": 0}}, {"topLevelComment": {"id": "UgwmMAFfIa5kPw63egJ4AaABAg", "publishedAt": "2022-01-11T23:32:41Z", "author": "WEN LIN", "text": "Why is number of edges n^2? It looks like it's just 2n, maybe an edge to the node itself count as one edge too?", "likes": 0}}, {"topLevelComment": {"id": "UgyBDT72TjvdJmt-LJ94AaABAg", "publishedAt": "2022-01-09T19:16:05Z", "author": "undefined undefined", "text": "Love your explanation , you are the best ! Thanks for the course!", "likes": 0}}, {"topLevelComment": {"id": "UgxX4HXctlF1xYBw1u14AaABAg", "publishedAt": "2022-01-09T14:32:42Z", "author": "P Z", "text": "Just finished the Dynamic Programming from Alvin and now back at the Graph algorithm. ", "likes": 2}}, {"topLevelComment": {"id": "Ugy7HWj6k23vbe3ztnV4AaABAg", "publishedAt": "2022-01-07T06:46:21Z", "author": "Eternal Wanderer", "text": "Thank you so much. This is the only video on YouTube which addresses the graph algorithms the way they should be addressed - graphical visualization, pseudocode and actual problem solving.", "likes": 0}}, {"topLevelComment": {"id": "UgwKFEgqZIn2j9nTgDx4AaABAg", "publishedAt": "2022-01-07T02:24:32Z", "author": "Gustavo Lopes", "text": "Amazing video! Thanks Alvin <3", "likes": 0}}, {"topLevelComment": {"id": "UgwzTm2mH6nlPV5Ww-t4AaABAg", "publishedAt": "2022-01-03T23:30:27Z", "author": "Monika Jha", "text": "Alvin, you literally took away my fear of Graph DS. Cannot thank you enough.", "likes": 0}}, {"topLevelComment": {"id": "UgztfYxd2_bGL9ZJEMh4AaABAg", "publishedAt": "2022-01-03T19:43:13Z", "author": "Fine Mouche", "text": "34:31 : you mean 2n, no ?", "likes": 0}}, {"topLevelComment": {"id": "Ugxr-S2Di8D0qIMogZJ4AaABAg", "publishedAt": "2022-01-03T12:21:51Z", "author": "Fine Mouche", "text": "32:20 ; for f to j (the reverse) it's easy to answer : j is in dependency of 0 letters / j is not in a dependency of a letter. so no path from all letters to j.", "likes": 0}}, {"topLevelComment": {"id": "UgyBCa4LZtEIOQp-FD94AaABAg", "publishedAt": "2022-01-03T11:29:23Z", "author": "Fine Mouche", "text": "24:55 for this graph i have infinite loop beetween e and f :\ndependency={'a':('b','e'), 'b':('a','c','d'), 'c':('b','e'), 'd':('b'), 'e':('a','c','f'), 'f':('e')} for the non recursvive algo and beetween a and b for the recursive one.\n(i see an undirected graph section, will see if it answer my issue)", "likes": 0}}, {"topLevelComment": {"id": "Ugx75hB8x5p9ltzPWc54AaABAg", "publishedAt": "2022-01-03T00:40:56Z", "author": "Vibhusha Jain", "text": "Thank you for making graphs so easy for me! Appreciate your patience to make these videos and share", "likes": 2}}, {"topLevelComment": {"id": "UgyFUtEUGW7MKUAl-uh4AaABAg", "publishedAt": "2022-01-02T11:21:05Z", "author": "Samuel Wahlberg", "text": "Great teacher!", "likes": 0}}, {"topLevelComment": {"id": "UgwGHjqsr-uxgjOR4DR4AaABAg", "publishedAt": "2022-01-01T18:55:18Z", "author": "toordog", "text": "This is a decent tutorial,  but the approach to edges and graph data is extremely fragmented. This clearly needs a pre train to make this more effective and efficient.", "likes": 0}}, {"topLevelComment": {"id": "Ugy_0QoKVtJ60Z8CZvt4AaABAg", "publishedAt": "2022-01-01T04:29:20Z", "author": "Doug", "text": "This is awesome! I've been struggling with graphs until I saw this video, great course.", "likes": 0}}, {"topLevelComment": {"id": "UgzRyNB0xTvl6LgqJrJ4AaABAg", "publishedAt": "2022-01-01T00:21:43Z", "author": "Fine Mouche", "text": ".push = .append/.add in python but what could be .shift ?", "likes": 0}, "replies": [{"id": "UgzRyNB0xTvl6LgqJrJ4AaABAg.9WdCYH_hK379Wjb9ShL5JJ", "publishedAt": "2022-01-03T12:00:58Z", "author": "Fine Mouche", "text": "ok it's pop(0) / popleft()", "likes": 0}]}, {"topLevelComment": {"id": "UgyffhPmdVXYdfXERWh4AaABAg", "publishedAt": "2021-12-31T21:17:28Z", "author": "0ffset92", "text": "A true master, living legend. thank you so much", "likes": 0}}, {"topLevelComment": {"id": "UgwQKHa-eqrVHo4xMGl4AaABAg", "publishedAt": "2021-12-26T16:53:32Z", "author": "Pranav Kumar", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"id": "UgwyV0SDsqOPsuMUeJl4AaABAg", "publishedAt": "2021-12-26T01:48:45Z", "author": "Leo John", "text": "Hello. I was wondering why you don't use the visited array or map to denote the visited node? Because it may have a cycle in the graph.", "likes": 0}}, {"topLevelComment": {"id": "UgyLX7PaWchVZngS32h4AaABAg", "publishedAt": "2021-12-25T09:33:09Z", "author": "Kaiser Konok", "text": "Best course for learning graph algorithm\ud83d\udd25\ud83d\udd25", "likes": 0}}, {"topLevelComment": {"id": "UgwyyQ5ONHUfgD2JdQd4AaABAg", "publishedAt": "2021-12-21T18:16:19Z", "author": "gustav gans", "text": "Hey, CSauce! Michael here", "likes": 0}}, {"topLevelComment": {"id": "UgzBLpcvNM6YQoERC2d4AaABAg", "publishedAt": "2021-12-19T23:47:52Z", "author": "Shrikant Chaudhari", "text": "shouldn't be a number of edges in the directed graph equal to \"n(n-1)\"? instead of n^2? @Alvin the Programmer", "likes": 1}}, {"topLevelComment": {"id": "Ugyo9YRsfy6Jy8eVnwt4AaABAg", "publishedAt": "2021-12-19T07:37:14Z", "author": "CDMusicGroup", "text": "\u201cLater on in the tutorial we\u2019ll go over examples of when u might use one over the other\u201d\n\nWhat a breath of fresh air \ud83d\ude4f\ud83c\udffc", "likes": 0}}, {"topLevelComment": {"id": "Ugy341CPJaPwp1ud-UR4AaABAg", "publishedAt": "2021-12-18T18:48:33Z", "author": "Mandi Haase", "text": "All of Alvin's content is amazing! I signed up for Structy after doing this course and the course on trees, and love it!", "likes": 1}}, {"topLevelComment": {"id": "Ugx-daEdQZICQic-lJd4AaABAg", "publishedAt": "2021-12-17T17:24:57Z", "author": "No code infusion", "text": "This guy is amazing..", "likes": 0}}, {"topLevelComment": {"id": "Ugy008gegp30H1EMELl4AaABAg", "publishedAt": "2021-12-17T12:25:40Z", "author": "lulusaikou", "text": "Wonderful video!!! I am familiar with graph now, thank you Alvin\ud83d\udc95 I will follow your next video and looking forward to your more courses. Thanks fcc too.\u2764", "likes": 0}}, {"topLevelComment": {"id": "Ugz9aoUnIchyFiwb92B4AaABAg", "publishedAt": "2021-12-15T16:13:57Z", "author": "Santhosh Sankar", "text": "Just a excellent explanation. After some point i started solving the problem before looking into your explanation.", "likes": 0}}, {"topLevelComment": {"id": "UgyahazWcq6vtWLhRsJ4AaABAg", "publishedAt": "2021-12-15T04:11:57Z", "author": "Sakithya Gopinath", "text": "This is the best! Thank you for doing this :)", "likes": 0}}, {"topLevelComment": {"id": "UgxDGX1CMrcfKlNiOgp4AaABAg", "publishedAt": "2021-12-15T00:53:04Z", "author": "Gunratna More", "text": "Helpful enough \ud83d\udc4d", "likes": 0}}, {"topLevelComment": {"id": "Ugw94SSZuKyaQVYbQcZ4AaABAg", "publishedAt": "2021-12-14T17:04:07Z", "author": "Anil Chaudhary", "text": "very clear and precise", "likes": 0}}, {"topLevelComment": {"id": "UgwZCoIVid3OaVOWS8d4AaABAg", "publishedAt": "2021-12-12T18:30:31Z", "author": "tybaltmercutio", "text": "Overall quite nice.\nBut in my opinion the explanation of the the relationship between the number of number of nodes and the number of edges was pretty bad.\nIt was totally unclear from the example why the number of edges should be O(n^2) since 3^2 != 6, where n = Number of nodes.\n\nIt would have been better to say that that the in the worst case scenario the number of edges can be obtained from the number of nodes n by n^2 - n. Then, in big O notation only the dominant terms survive, i.e. the n^2 term.", "likes": 0}}, {"topLevelComment": {"id": "UgyCeKDbE3crF5svxy94AaABAg", "publishedAt": "2021-12-09T17:24:49Z", "author": "Aakash Goyal", "text": "Very nice explanation. I hardly liked graphs before watching this video. Now they make a lot of sense to me and now I know how to at least proceed to solve a graph problem. Thanks for the great content.", "likes": 0}}, {"topLevelComment": {"id": "UgzowjgK16RCKOBiCj54AaABAg", "publishedAt": "2021-12-09T01:24:15Z", "author": "Terah Bruce", "text": "Alvin is the by far the best programming teacher on youtube imo", "likes": 0}}, {"topLevelComment": {"id": "UgxwtM_CCspV_GnyQ4p4AaABAg", "publishedAt": "2021-12-08T09:21:19Z", "author": "doodeoo", "text": "Great video but you should stop saying \"..right?\" at the end of every other sentence", "likes": 0}}, {"topLevelComment": {"id": "UgwSjskXtDk9JpQ64DJ4AaABAg", "publishedAt": "2021-12-08T05:26:14Z", "author": "Pranav Kumar", "text": "Wish Corona was only a depth first preferring virus :(", "likes": 0}}, {"topLevelComment": {"id": "Ugz6xro6m8ZN9W5MRhZ4AaABAg", "publishedAt": "2021-12-07T16:48:47Z", "author": "Mohamed Saligh", "text": "Best explanation I ever watched in Youtube. You deserve a thumbs up and a comment from a laziest person on earth!", "likes": 1}}, {"topLevelComment": {"id": "UgyUb0okHg4bmX6jgpF4AaABAg", "publishedAt": "2021-12-07T05:01:55Z", "author": "PsychoCoder", "text": "i've only learned python, would you consider this to be a good introductory course that could teach me the basics of coding in javascript?", "likes": 0}, "replies": [{"id": "UgyUb0okHg4bmX6jgpF4AaABAg.9VdKjZryQYd9a4AZoAYDDl", "publishedAt": "2022-04-21T07:08:46Z", "author": "Code Cleric", "text": "Not really, as it's highly focused to just coding graphs. I'd recommend going through some exercises on FreeCodeCamp.org's JavaScript section on their website for a good overview. Also the channel Fun Fun Function is a great channel for learning good JavaScript practices.", "likes": 0}]}, {"topLevelComment": {"id": "UgysWKP3__BwKaWmQWd4AaABAg", "publishedAt": "2021-12-04T13:59:26Z", "author": "Arslan Ahmed Qureshi", "text": "It was great course yo should hunt one for geometry one too. i will look forward towards that too happily", "likes": 0}}, {"topLevelComment": {"id": "UgzIOwE1arlKzXHD7kJ4AaABAg", "publishedAt": "2021-12-02T17:01:52Z", "author": "Spring Dev", "text": "34:24 n= nodes n^2 = edges ...but in diagram there are 3 nodes and 6 edges which is clearly not 9 ..how is it possible ..can anyone explain please", "likes": 0}}, {"topLevelComment": {"id": "Ugxn7wNEQghuMD2sCD14AaABAg", "publishedAt": "2021-12-02T12:51:59Z", "author": "Mazen Khaled", "text": "The guy that's in the intro of every freeCodeCamp videos scares me idk", "likes": 0}}, {"topLevelComment": {"id": "Ugw5izEJ_xfq_OxVQed4AaABAg", "publishedAt": "2021-12-01T23:18:49Z", "author": "Sukhwant Samra", "text": "video at round 34:40 you described if n nodes then there could be n*n edges, but should it be 2n?", "likes": 0}}, {"topLevelComment": {"id": "UgwDAS5XZXLcY43CRh94AaABAg", "publishedAt": "2021-12-01T16:59:57Z", "author": "praveen rawat", "text": "wow your explanation is just amazing! Never thought it would so easy.", "likes": 0}}, {"topLevelComment": {"id": "UgyVQYIJIs5FJ4n3csF4AaABAg", "publishedAt": "2021-11-30T10:11:19Z", "author": "Andy Miller", "text": "Repost, so I can like it again!", "likes": 0}}, {"topLevelComment": {"id": "Ugx6KMOf1_DMV1fBLcV4AaABAg", "publishedAt": "2021-11-29T07:17:20Z", "author": "Sean Nakasone", "text": "wow, you explain very well.  well done.", "likes": 0}}, {"topLevelComment": {"id": "UgwfIPsnDUcrssV-Gst4AaABAg", "publishedAt": "2021-11-26T05:18:35Z", "author": "Bhavyaa Sharma", "text": "Very nicely explained", "likes": 0}}, {"topLevelComment": {"id": "UgwbhRQOlDzjnP-eiJB4AaABAg", "publishedAt": "2021-11-23T14:45:22Z", "author": "Alex", "text": ": 34:27 wouldn\u2019t number of edges be 2n (2 times n) instead of n^2 (worst case graph)?", "likes": 4}, "replies": [{"id": "UgwbhRQOlDzjnP-eiJB4AaABAg.9V5KNekgxVy9Wvu_Ee-bSV", "publishedAt": "2022-01-08T06:41:32Z", "author": "smn", "text": "it's not the exact number of edges but complexity. The max number of edges can be n * (n - 1) ~ O(n^2)", "likes": 1}]}, {"topLevelComment": {"id": "Ugyt7nuFk5GrF02wog94AaABAg", "publishedAt": "2021-11-21T13:55:02Z", "author": "Samuel Agyakwa", "text": "Wow, wow, wow. I've always struggled with graph algorithms and this video basically just taught me everything I need to know about them. I have an onsite with google soon and its safe to say if they ask any graph questions, even if it's not in this video, I'm going to crush it. I highly recommend this video to anyone who is unsure if they should spend the 2 hours watching. THANK YOU FOR THIS VIDEO!", "likes": 4}}, {"topLevelComment": {"id": "UgyiefOYZ2MkSu3g-2B4AaABAg", "publishedAt": "2021-11-20T12:08:25Z", "author": "njgamez", "text": "One issue in the shortest path,  1:36:16  , its that whenever you find the destination you always return it. Its not always the shortest path. \nYou can maintain a min counter to maintain the shortest distance.\nAlso thanks for the wonderful video,  just by following the videos , I could do the implementation on my own", "likes": 0}, "replies": [{"id": "UgyiefOYZ2MkSu3g-2B4AaABAg.9UyK1VnAg6B9VKO0VFbz1u", "publishedAt": "2021-11-29T11:05:46Z", "author": "njgamez", "text": "@Siddhant Gupta correct,  thanks for the detailed explaination. I came to know about this after doing many bfs problems. I dont knw if it was mentioned in this video, if not then it should be mentioned :) happy coding", "likes": 1}, {"id": "UgyiefOYZ2MkSu3g-2B4AaABAg.9UyK1VnAg6B9VHdxpeYBhs", "publishedAt": "2021-11-28T09:36:05Z", "author": "Siddhant Gupta", "text": "I think that would have been an issue if we were using DFS, considering the nature of BFS and visited set that we are using, whenever we find the destination, that path will always be the shortest.", "likes": 1}]}, {"topLevelComment": {"id": "Ugzf4SqaDd5IxpqBYSl4AaABAg", "publishedAt": "2021-11-20T04:56:41Z", "author": "hpandeymail", "text": "Love the details author has shared .. thank you very much Sir \ud83d\ude4f\ud83d\ude4f", "likes": 0}}, {"topLevelComment": {"id": "UgwkMj7vTLrw5LQAlTd4AaABAg", "publishedAt": "2021-11-19T19:37:22Z", "author": "Christopher Mitchell", "text": "100% the best teacher I've seen. You are legit the best, my dude.", "likes": 0}}, {"topLevelComment": {"id": "Ugws4szt6ufidI1GqKx4AaABAg", "publishedAt": "2021-11-15T07:52:14Z", "author": "Jenkins J", "text": "when i implemented his breadth-first code, \n\nconst breadthFirstPrint = (graph, source) => {\n\u00a0 \u00a0 const queue = [source];\n\n\u00a0 \u00a0 while (queue.length > 0) {\n\u00a0 \u00a0 \u00a0 \u00a0 const current = queue.shift();\n\u00a0 \u00a0 \u00a0 \u00a0 console.log(current);\n\n\u00a0 \u00a0 \u00a0 \u00a0 for (let neighbour of graph[current]) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 queue.push(neighbour);\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 }\n};\n\n// javascript object with constant look-up\nconst graph = {\n\u00a0 \u00a0 a: ['b', 'c'],\n\u00a0 \u00a0 b: ['d'],\n\u00a0 \u00a0 c: ['e'],\n\u00a0 \u00a0 d: ['f'],\n\u00a0 \u00a0 e: [],\n\u00a0 \u00a0 f: []\n};\n\nconsole.log(breadthFirstPrint(graph, 'a')); // a, b, c, d, e, f\n\ni am getting an 'undefined' at the end. he is not getting that 'undefined'. can anybody clarify this???", "likes": 0}}, {"topLevelComment": {"id": "UgxrZMNQE8IfTvboGGJ4AaABAg", "publishedAt": "2021-11-14T20:35:26Z", "author": "sukhoiskunk", "text": "nice.", "likes": 0}}, {"topLevelComment": {"id": "Ugy1EETna5Zbh7ug3eZ4AaABAg", "publishedAt": "2021-11-14T18:24:10Z", "author": "Vladimir Podesva", "text": "Hello, Thanks lot very helpful. For someone who is interested I have another solution for the before last example. It is to create a graph from the grid and use the graph to extract number of islands by using previous algorithms. Here is the code:\n\n    vector<vector<int>> islands = { {0,1,0,0,0,0,0,0,0,1},\r\n                                    {0,1,0,0,0,0,0,0,0,0},\r\n                                    {0,0,0,0,1,0,0,0,0,0},\r\n                                    {0,0,0,0,0,0,0,0,1,1},\r\n                                    {0,0,0,0,0,0,0,0,0,1},\r\n                                    {0,0,0,1,0,0,0,0,1,1} };\n\n//Counting islands of land\r\nstatic int CountIslands(const vector<vector<int>> &area)\r\n{\r\n   set<pair<int,int>> visited;\r\n   vector<pair<int,int>> points;\r\n   int unique = 0;\r\n\r\n   for(int row = 0; row < area.size(); ++row)\r\n   {\r\n       for(int col = 0; col < area.at(row).size(); ++col)\r\n       {\r\n          if(col < area.at(row).size() - 1)\r\n          {\r\n             if(((area[row][col] == 1) && (area[row][col + 1] == 1)))\r\n             {\r\n                points.push_back(make_pair(unique, unique + 1));\r\n             }\r\n          }\r\n\r\n          if(row < area.size() - 1)\r\n          {\r\n             if(((area[row][col] == 1) && (area[row + 1][col] == 1)))\r\n             {\r\n                points.push_back(make_pair(unique, unique + area.at(row).size()));\r\n             }\r\n          }\r\n\r\n          if( (area[row][col] == 1) && points.back().first != unique)\r\n          {\r\n              points.push_back(make_pair(unique, unique));\r\n          }\r\n           unique++;\r\n       }\r\n   }\r\n\r\n   return ConnectedComponents(BuildGraph(points));\r\n}", "likes": 0}}, {"topLevelComment": {"id": "Ugzh_ycKhxiw_6mAA_x4AaABAg", "publishedAt": "2021-11-11T14:49:18Z", "author": "Tugrul Pinar", "text": "Thanks a lot Alvin! This is awesome", "likes": 0}}, {"topLevelComment": {"id": "Ugz3irLCHCU_UAKVTY54AaABAg", "publishedAt": "2021-11-10T12:24:32Z", "author": "kovardhan rajesh", "text": "1:57:59,the varaible \"visited\" ain't mentioned global anywhere but still it gets updated after it gets into the function, can amyone explain this one...", "likes": 0}, "replies": [{"id": "Ugz3irLCHCU_UAKVTY54AaABAg.9UZavpZU4T49Ucm4akjrzq", "publishedAt": "2021-11-12T03:18:57Z", "author": "kovardhan rajesh", "text": "@Alvin the Programmer understood\nAwesome work bro \ud83d\ude31", "likes": 1}, {"id": "Ugz3irLCHCU_UAKVTY54AaABAg.9UZavpZU4T49UcLdAR391A", "publishedAt": "2021-11-11T23:19:08Z", "author": "Alvin the Programmer", "text": "Hey! In JavaScript, non-primitive types (types that are not simple boolean, number, string, etc..) behave \"as pass by reference\". This means if we mutate a non-primitive argument like a visited Set, the mutation persists even after the function returns. In other words, when we pass the set as an argument, we are passing the actual set in memory, we are not passing a \"copy\" of the set.\n\nHope that clarifies!\nAlvin", "likes": 0}]}, {"topLevelComment": {"id": "UgyNsK6r19Ri9yyNcvJ4AaABAg", "publishedAt": "2021-11-08T13:40:24Z", "author": "Gusto", "text": "Thanks a lot!", "likes": 0}}, {"topLevelComment": {"id": "UgwQfBFKCN7dnXbJGxN4AaABAg", "publishedAt": "2021-11-06T15:16:26Z", "author": "Jamandiin Savkhlan", "text": "D enters through the back and behind C. Hmmmmmm", "likes": 1}}, {"topLevelComment": {"id": "UgzEWf-sjJpzFmDoUQV4AaABAg", "publishedAt": "2021-11-02T11:17:19Z", "author": "Vinay KR", "text": "My question regarding shortest path problem.\nAssume there are multiple paths from src to dest. how are you ensuring that the minimum path is picked ? since we are not storing the minimu path. we are returning the distance as soon as curr and dest match. What if we find the longer path earlier than the shorter path.", "likes": 0}, "replies": [{"id": "UgzEWf-sjJpzFmDoUQV4AaABAg.9UEssUW8zwW9Wk_QfyBf25", "publishedAt": "2022-01-03T21:05:05Z", "author": "Where", "text": "Because we're using Breadth First Search instead of Depth First Search. Breath First Search is an algorithm that visits all the children nodes one by one before going deeper in the graph so that means the first path we find using BFS is the shortest path.", "likes": 0}]}, {"topLevelComment": {"id": "Ugw-i1o_jPGIKkRxcL54AaABAg", "publishedAt": "2021-11-02T11:08:54Z", "author": "Tytus Gierycz", "text": "I'm grateful for this wonderful material it's so smooth and fine great for my algorithm edge grinding :)", "likes": 0}}, {"topLevelComment": {"id": "UgzKFHxns4bFBku7S6x4AaABAg", "publishedAt": "2021-11-01T06:06:11Z", "author": "Evie Uyen Ta", "text": "by far the best tutorial!!! i finally am getting better at this. THANKS A TON!", "likes": 0}}, {"topLevelComment": {"id": "UgxAcDbMMdpDrLREv5F4AaABAg", "publishedAt": "2021-10-31T20:04:13Z", "author": "Derek Williams", "text": "This guy teaches so well I thought I was learning how to make a sandwich!", "likes": 3}}, {"topLevelComment": {"id": "UgxTdCkTrv3Id458IyZ4AaABAg", "publishedAt": "2021-10-29T18:05:10Z", "author": "Ranjan Venkatesh", "text": "Thanks", "likes": 0}}, {"topLevelComment": {"id": "UgxVoKxeqt3h_o4blqN4AaABAg", "publishedAt": "2021-10-28T18:35:13Z", "author": "B\u00fc\u015fra Tun\u00e7dan", "text": "What a clear explanation. Thanks a lot!", "likes": 0}}, {"topLevelComment": {"id": "UgzoukQVPRD8kKOR2TB4AaABAg", "publishedAt": "2021-10-26T23:56:46Z", "author": "TickkuN", "text": "\u3081\u3061\u3083\u304f\u3061\u3083\u5206\u304b\u308a\u3084\u3059\u304b\u3063\u305f!!\nAlvin\u3055\u3093\u3042\u308a\u304c\u3068\u3046!!", "likes": 0}}, {"topLevelComment": {"id": "UgzzIRKDNs9w2eRKUx54AaABAg", "publishedAt": "2021-10-25T19:37:33Z", "author": "gardening 0712", "text": "amazing video!", "likes": 0}}, {"topLevelComment": {"id": "Ugy_IW4GxKpUcoYnOMh4AaABAg", "publishedAt": "2021-10-25T19:15:50Z", "author": "Night Fury", "text": "I feel my brain expanding", "likes": 1}}, {"topLevelComment": {"id": "UgxPBq4vARDwLe4Z1eR4AaABAg", "publishedAt": "2021-10-24T04:01:50Z", "author": "Matt Skelton", "text": "Totes profesh.", "likes": 0}}, {"topLevelComment": {"id": "UgyqIn9x0MtDnJDluF94AaABAg", "publishedAt": "2021-10-24T03:22:43Z", "author": "Yuna F", "text": "By far the best video that I have ever seen on this topic, thank you for all the effort you put into this Alvin!", "likes": 0}}, {"topLevelComment": {"id": "Ugx5fPSxZSDEyBFkQL94AaABAg", "publishedAt": "2021-10-24T02:40:36Z", "author": "Locdness Momster", "text": "In the future, please please please don't go for such a bright background.", "likes": 0}}, {"topLevelComment": {"id": "UgzGHIitNztSGuLajap4AaABAg", "publishedAt": "2021-10-23T02:56:28Z", "author": "instagib783", "text": "Yooo, I just realized that this is how AI pathfinding works in video games. Neat.", "likes": 0}}, {"topLevelComment": {"id": "UgzEZ12sN8KZG3rRu8l4AaABAg", "publishedAt": "2021-10-22T23:16:10Z", "author": "Israel McCulley", "text": "Excellent presentaion! The visuals and code are explained very clearly, very easy to follow", "likes": 0}}, {"topLevelComment": {"id": "Ugxnj0ohgZEu5R9z7jV4AaABAg", "publishedAt": "2021-10-22T23:10:32Z", "author": "Ashish Kumar", "text": "Easy Java Solution: \r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\npublic class Graph {\r\n    \r\n    public static HashMap<Integer, List<Integer>> edgeArrayToAdjacencyList(int [][] edges){\r\n\r\n        HashMap<Integer, List<Integer>> adjacencyList = new HashMap<>();\r\n        if(edges.length == 0) return adjacencyList;\r\n\r\n        for(int edge[] : edges){\r\n            int v1 = edge[0];\r\n            int v2 = edge[1];\r\n            List<Integer> adj = new ArrayList<>();\r\n            if(!adjacencyList.containsKey(v1)){\r\n                adj.add(v2);\r\n                adjacencyList.put(v1, adj);\r\n            }\r\n            else adjacencyList.get(v1).add(v2);\r\n            adj.clear();\r\n            if(!adjacencyList.containsKey(v2)){\r\n                adj.add(v1);\r\n                adjacencyList.put(v2, adj);\r\n            }\r\n            else adjacencyList.get(v2).add(v1);\r\n        }\r\n        return adjacencyList;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        int edges[][] = {{0,0}};\r\n        System.out.println(\" Adjacency List : \"+edgeArrayToAdjacencyList(edges));\r\n\r\n    }\r\n}", "likes": 0}}, {"topLevelComment": {"id": "Ugzzn1__ZpKUMDFARu54AaABAg", "publishedAt": "2021-10-22T17:04:07Z", "author": "Dibin Nadar", "text": "Tries to like the video twice...", "likes": 0}}, {"topLevelComment": {"id": "UgxQUAjcEnilzLCVW_d4AaABAg", "publishedAt": "2021-10-21T15:04:07Z", "author": "Govinda Pandey", "text": "Amazing", "likes": 0}}, {"topLevelComment": {"id": "UgwKaUnKo0Vc_dW8Xul4AaABAg", "publishedAt": "2021-10-21T09:07:27Z", "author": "KALI BENYBEN", "text": "It's confusing when the object contains the same keys as values, but it still a good course, thank you", "likes": 0}}, {"topLevelComment": {"id": "Ugz6cZKj6hYZCeK4Is94AaABAg", "publishedAt": "2021-10-21T09:04:48Z", "author": "Douglas Chiang", "text": "Can someone further explain to me why we can say the time complexity of BFS/DFS can be O(n^2), the worst case presented in the video which had 3 nodes and 6 edges is not quite clear to me. Shouldn't n^2 = 3^2 = 9?", "likes": 1}, "replies": [{"id": "Ugz6cZKj6hYZCeK4Is94AaABAg.9TkkAQ1tFo89UwrRSwqdYi", "publishedAt": "2021-11-19T22:30:34Z", "author": "Khalil Ben Safta", "text": "Am reading in another comment that the number of edges in an n-nodes complete (complete means here alla nodes connected to all nodes) graph is n(n-1) (which make sense, since each node has to connect to the n-1 remaining nodes) and confirms the 6 edges for 3-nodes graph example in the video", "likes": 0}, {"id": "Ugz6cZKj6hYZCeK4Is94AaABAg.9TkkAQ1tFo89UwqaXbFWdu", "publishedAt": "2021-11-19T22:23:13Z", "author": "Khalil Ben Safta", "text": "Same question for me", "likes": 0}]}, {"topLevelComment": {"id": "Ugxi5WZ4lYhK-zH_Sft4AaABAg", "publishedAt": "2021-10-17T02:45:44Z", "author": "Camilo Salazar", "text": "Question how do you convert an edge list to an adjacency list  when the sub array can be any size nth length?  when you have something like this case:\nedge = [\n[1,2],\n[2,3,4],\n[3,5],\n[]\n]?\nLove your videos man!", "likes": 0}, "replies": [{"id": "Ugxi5WZ4lYhK-zH_Sft4AaABAg.9T_lbWNj7cm9VL11gpzIOE", "publishedAt": "2021-11-29T17:04:11Z", "author": "ABHIRUP DAS", "text": "graph={ }\nfor i,neighbourhood in ennumerate(edge):\n     graph[i]=[ ]\n     graph[i].extend(neighbourhood)\n\n#This is the required code...provided that in the edge list the index corresponds to the node and all the other nodes in list are its neighbours.\n\n\ngraph={ }\nfor edgelist in edge:\n     if(len(edgelist)>0):\n        graph[edgelist[0]]=[ ]\n        for edges in range(1,len(edgelist)):\n             graph[edgelist[0]].append(edges)\n\n#This is the code if each of the first element ofsublist corresponds to the node and other elements corresponds to its neighbour...which is the case in most of the questions.", "likes": 0}]}, {"topLevelComment": {"id": "UgyIB0MbwIAIzf0ebrB4AaABAg", "publishedAt": "2021-10-16T10:03:50Z", "author": "Madhukiran Attivilli", "text": "@1:49:00 -- Island Count problem -- Instead of adding [row, col] to visited set, change grid[row][col] value from 'L' (for land) to 'V' (for visited). Helps to avoid an additional Set DS!", "likes": 1}}, {"topLevelComment": {"id": "UgzxIYJ5lI0jsRZZ-2B4AaABAg", "publishedAt": "2021-10-15T02:49:44Z", "author": "aayush samant", "text": "can anyone tell me how that space complexity is \"n Square\" as it says no. of edges.", "likes": 0}}, {"topLevelComment": {"id": "UgzyBxblKZNzBKmU0Lx4AaABAg", "publishedAt": "2021-10-14T00:51:56Z", "author": "Madhukiran Attivilli", "text": "@5:45 : How can u say that a map provides constant time lookup?\n\nMap is a hashtable. Doesn't matter how efficient is the hash function, how efficient is the probing function to resolve collision, how perfect is the prime number used as hash table size, etc, a hashtable can provide constant time lookup only when there is no collision\n\nConstant time lookup by avoiding collision, and very quick lookup after a collision using the probing function -- both depend on the load factor. The smaller the load factor (like 0.4 or 0.3) the better probability to get constant time lookup\n\nBut such low load factor requires very frequent resizing which takes linear time O(n) (n: HT size)\n\nSo, it is safe to say that except an array nothing can guarantee a constant time lookup\n\nAn adjacency list can be represented as an array of arrays. Since most of the graph problems uses static graphs (i.e. graphs doesn't dynamically change), array sizes are known at the beginning itself.\n\nOuter array size: |V|\nEach inner array size: |Ev| (Ev: # of outgoing edges of node v)\n\nWe need a map only to maintain a relation between the node names (either strings or literals) and node indices (indices of outer array).\n\nPlease comment/correct.", "likes": 0}}, {"topLevelComment": {"id": "UgzpKf-fiudZxJ5sH1B4AaABAg", "publishedAt": "2021-10-12T19:03:45Z", "author": "Chimera Black", "text": "I don't understand big O.  It seems to have no rhyme or reason to me. People just randomly say things declaratively and never explain where it comes from.", "likes": 0}}, {"topLevelComment": {"id": "Ugw4Ia4zOzuz48SINVl4AaABAg", "publishedAt": "2021-10-12T17:35:22Z", "author": "Angel Sanchez", "text": "Thank you Alvin!", "likes": 0}}, {"topLevelComment": {"id": "UgzuoNawzfJhqbgFIyp4AaABAg", "publishedAt": "2021-10-12T17:19:24Z", "author": "Benhard Sim", "text": "MY GOD this is really good thank you soon much", "likes": 0}}, {"topLevelComment": {"id": "UgzX1oUNoMiudIfFvkN4AaABAg", "publishedAt": "2021-10-12T08:13:39Z", "author": "Gevorg Galstyan", "text": "Hey Alvin. Thank you for this wonderful video. I have recently purchased subscription on structy.net and I would like to thank you for such amazing product. It is definitely the best platform to learn core principles of DS&A. There are currently 100 questions on platform and I am wondering if you planing to add additional problems???", "likes": 0}}, {"topLevelComment": {"id": "UgwAlMGJVnJdKVslMFZ4AaABAg", "publishedAt": "2021-10-09T02:53:44Z", "author": "Bart Zumba", "text": "why talk so fast like you are trying to get this done asap.. but appreciate the effort since its free just kinda hard to follow and slowing down sounds like robot", "likes": 0}}, {"topLevelComment": {"id": "Ugw6rX3iZ_RNAG_ri454AaABAg", "publishedAt": "2021-10-09T00:39:37Z", "author": "just for fun", "text": "why this amazing course is not in cpp.", "likes": 1}}, {"topLevelComment": {"id": "UgxWn6lUqLq11Uv4fEV4AaABAg", "publishedAt": "2021-10-08T13:22:46Z", "author": "Rob Rosario", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"id": "Ugw375Jcvrw2JN0SBH54AaABAg", "publishedAt": "2021-10-08T00:00:12Z", "author": "Fadi Hanna Al-Kass", "text": "This was a nice refresher since my college days", "likes": 0}}, {"topLevelComment": {"id": "Ugx9Id8Yi8phrFTl1614AaABAg", "publishedAt": "2021-10-05T22:57:55Z", "author": "Unknown User", "text": "this class is only confusing people. does not really help", "likes": 0}}, {"topLevelComment": {"id": "UgwK0scYB5E3Q_K3VQ94AaABAg", "publishedAt": "2021-10-05T13:12:18Z", "author": "Aastha Aggarwal", "text": "really learnt a lot ..thanks ..keep making such mesmerizing content", "likes": 0}}, {"topLevelComment": {"id": "UgzzsGpQOLbO46l64FF4AaABAg", "publishedAt": "2021-10-05T10:47:47Z", "author": "Matthew Cochrane", "text": "Is Casually Explained your alt channel?  Your voice sounds so similar \ud83e\udd23", "likes": 0}}, {"topLevelComment": {"id": "UgwwjJ0eWH7BNZDb9qd4AaABAg", "publishedAt": "2021-10-05T00:52:40Z", "author": "Aman", "text": "He makes it look so easy, wish I had jumped across these tutorials earlier. But will use them now.", "likes": 0}}, {"topLevelComment": {"id": "Ugw1h60I53zaqyCGVRx4AaABAg", "publishedAt": "2021-10-04T09:29:12Z", "author": "Kanak Mittal", "text": "Man! you have my respect. This was the best course for getting started with graph problems I have ever seen. Thank You so much.", "likes": 26}}, {"topLevelComment": {"id": "Ugwb2JaPLweOoshFZMB4AaABAg", "publishedAt": "2021-09-29T04:13:24Z", "author": "Bin Wang", "text": "The reason that DFS has a recursive implementation while BFS doesn't is because recursive is basically taking advantage of the call/frame stack implicitly (LIFO), no luck for BFS.", "likes": 1}, "replies": [{"id": "Ugwb2JaPLweOoshFZMB4AaABAg.9Sr_KrLL0cv9SzBvD0pldw", "publishedAt": "2021-10-02T03:13:58Z", "author": "Bin Wang", "text": "@Carlo Bagnoli indeed. indeed", "likes": 0}, {"id": "Ugwb2JaPLweOoshFZMB4AaABAg.9Sr_KrLL0cv9Sysljiambj", "publishedAt": "2021-10-02T00:17:55Z", "author": "Carlo Bagnoli", "text": "That's a partial lie, it doesn't have a recursive implementation if you follow the exact path he took, but the recursive BFS is actually really simple.\nconst BFS = (graph, source) => source.length && BFS(graph, [...graph[source.pop()], ...source])\nAnd hence you just do: BFS(graph, ['a'])", "likes": 0}]}, {"topLevelComment": {"id": "UgzEtivJrhtbTYGj4w94AaABAg", "publishedAt": "2021-09-28T13:10:54Z", "author": "kelvin muza", "text": "My guy, I don't know how to thank you. You have a marvelous way of teaching. This has really helped me a lot", "likes": 3}}, {"topLevelComment": {"id": "UgxhEiDO6-Qa966IMQV4AaABAg", "publishedAt": "2021-09-28T04:05:37Z", "author": "Shy Guy Mercedes Benz", "text": "You did a great job covering this material.\nBut is this really all it is?\nThere's gotta be more, right?\nIt's the same thing every time... Usually a DFS, sometimes a BFS. Nothing else.\nIs that really all a graph question will ever be?\nAt Google or Facebook, etc?", "likes": 1}}, {"topLevelComment": {"id": "UgwtuUq1reO3iYv1wER4AaABAg", "publishedAt": "2021-09-28T01:54:15Z", "author": "Novum", "text": "How is it possible to solve shortest path using DFS, since DFS does not guarantee that nodes it encounters first are closer than nodes it encounters later?", "likes": 0}}, {"topLevelComment": {"id": "UgzqAlpX7_xpImMLKzl4AaABAg", "publishedAt": "2021-09-27T03:51:28Z", "author": "Eidmone", "text": "Better than watching a movie<3", "likes": 0}}, {"topLevelComment": {"id": "UgxqGkO-GSHEmBHKpQV4AaABAg", "publishedAt": "2021-09-26T21:38:37Z", "author": "akhil chandra", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"id": "Ugzn0KV8ja9Y-ToOgxJ4AaABAg", "publishedAt": "2021-09-23T03:30:40Z", "author": "entcune", "text": "You made such high level topic like a walk in park thanks alot man. Waiting for more such videos from you.", "likes": 0}}, {"topLevelComment": {"id": "UgwfnHRYlBtOifIuleZ4AaABAg", "publishedAt": "2021-09-22T03:33:46Z", "author": "Vinayak Tyagi", "text": "Can you please make a video on Greedy Algorithm ?", "likes": 0}}, {"topLevelComment": {"id": "Ugy7ZIRbAnSJALgQkpZ4AaABAg", "publishedAt": "2021-09-22T01:03:00Z", "author": "White Bear", "text": "Awesome", "likes": 0}}, {"topLevelComment": {"id": "Ugyt_Pfr06G-ZAq3fUh4AaABAg", "publishedAt": "2021-09-22T00:22:12Z", "author": "Emmanuel Wada", "text": "Wow, this is such a huge help !", "likes": 0}}, {"topLevelComment": {"id": "Ugzf85xSoCqjuLg1Pe14AaABAg", "publishedAt": "2021-09-17T09:43:54Z", "author": "Ahmed Mohiy", "text": "first thanks for this video, Second in the last two examples u wrote in the for loop grid[0].length i think it should be grid[r].length cause if the grid is not squared if not pls explain thanks so much", "likes": 0}}, {"topLevelComment": {"id": "UgzYey6BkZWiCUDItvZ4AaABAg", "publishedAt": "2021-09-15T06:09:30Z", "author": "The Punisher", "text": "Just for correction, Islands count problem, inside DFS function for checking boundaries, for 'j' check for j < grid[0].length, because if in NxM grid N !== M, in that case j < grid.length cannot check for true boundary and result will be wrong, I just wanna mention that in case", "likes": 0}}, {"topLevelComment": {"id": "UgyGO3jexHf-I2PdfmZ4AaABAg", "publishedAt": "2021-09-13T05:24:22Z", "author": "PHILLBERT PHINTO (RA1811003020550)", "text": "Thanks for this video man!!", "likes": 0}}, {"topLevelComment": {"id": "UgxeVzOYF1pUH5iMlE14AaABAg", "publishedAt": "2021-09-12T10:45:40Z", "author": "Kaspar", "text": "8:50 you mean for the first two iterations of the algorithm, not three, right?", "likes": 0}}, {"topLevelComment": {"id": "UgydrzCFnrQG-Wd7EfJ4AaABAg", "publishedAt": "2021-09-11T02:24:19Z", "author": "Mishkat Hossain", "text": "We want more tutorial of Alvin. \nThis guy kills it!!!", "likes": 0}}, {"topLevelComment": {"id": "UgyP4y4LDvspfYS31RJ4AaABAg", "publishedAt": "2021-09-10T09:55:22Z", "author": "Alan Almeida", "text": "Was the algorithm we used for shortest path Djisktra's algo?", "likes": 1}}, {"topLevelComment": {"id": "Ugwpwf-TG0lbp1RrHU54AaABAg", "publishedAt": "2021-09-10T06:40:12Z", "author": "Alan Almeida", "text": "Thanks a lot! just finished the first section (dfs and bfs) and it got soldered into my brain! well taught!", "likes": 1}}, {"topLevelComment": {"id": "UgzDo9qnGfk9q4EffaB4AaABAg", "publishedAt": "2021-09-09T15:30:49Z", "author": "simsim", "text": "Can anyone explain me how does this recursion call is adding 1 to size? (minimum island)\n size = 1\r\n size += explore_size(grid, r - 1, c, visited)", "likes": 0}, "replies": [{"id": "UgzDo9qnGfk9q4EffaB4AaABAg.9S4HxyGR1H-9S9Bl0Pgkm4", "publishedAt": "2021-09-11T13:12:49Z", "author": "Keerthi", "text": "It is weekend, go get some sleep", "likes": 0}]}, {"topLevelComment": {"id": "UgxmS80WpEv4dk7TyMV4AaABAg", "publishedAt": "2021-09-09T15:22:54Z", "author": "Alessio Celentano", "text": "I never comment on YouTube, but I love the way Alvin explains concepts. Thanks a lot for your work!", "likes": 5}}, {"topLevelComment": {"id": "Ugz3qXdMfuJjDKc4N6J4AaABAg", "publishedAt": "2021-09-09T09:38:34Z", "author": "Ram Chhabra", "text": "1:39:32", "likes": 0}}, {"topLevelComment": {"id": "Ugw_oH47FS7j_fHC5tl4AaABAg", "publishedAt": "2021-09-09T03:54:35Z", "author": "Senthil Kumar", "text": "Good Job . well done .  Keep it up !!!!", "likes": 0}}, {"topLevelComment": {"id": "Ugx7Mge4RZyqsmZcLQp4AaABAg", "publishedAt": "2021-09-07T03:34:29Z", "author": "Xu XinXu", "text": "I knew it was gonna be good before I watched it, the DP course was phenomenal.", "likes": 1}}, {"topLevelComment": {"id": "UgwmUb370r7Rwmm90MZ4AaABAg", "publishedAt": "2021-09-06T17:34:42Z", "author": "Shailendra Maurya", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"id": "UgxIG_FTBodvAyMof9p4AaABAg", "publishedAt": "2021-09-06T09:25:07Z", "author": "Eyal Pery", "text": "This content is pure gold", "likes": 0}}, {"topLevelComment": {"id": "UgzPlhWkx5U3Hl8tZnp4AaABAg", "publishedAt": "2021-09-05T19:46:09Z", "author": "Yichi Zhang", "text": "For island count, shouldn't the guard be:\n    const rowinbounds = 0 <= r && r < grid.length;\r\n    const columnInbounds = 0 <= c && c < grid[0].length;\n\nsince the island could be bigger on the side.\n\n1:58:37", "likes": 0}}, {"topLevelComment": {"id": "Ugz5pSF2XAbsyK1BBgt4AaABAg", "publishedAt": "2021-08-31T20:41:41Z", "author": "benjamin peterson", "text": "Alvin sensei sugoi", "likes": 0}}, {"topLevelComment": {"id": "Ugzk_OJy1TWdjDznFQ14AaABAg", "publishedAt": "2021-08-30T13:46:09Z", "author": "Sede", "text": "This course is hands-down, unequivocally fantastic!!! Best useful course I've seen about graphs. It ties together the algorithms with concrete use cases which just clicked. Thank you for the fantastic job!!!!", "likes": 7}}, {"topLevelComment": {"id": "Ugy-_utXYGRw9XfBBtN4AaABAg", "publishedAt": "2021-08-27T09:08:18Z", "author": "Pratibha Gupta", "text": "Alvin, your way of explaining stuff is just amazing. I never understood graphs and recursion so well before that. I have found your DP tutorial too, that is also wonderful. If you can provide links to your other tutorials of algorithms, that will be great.\n\nAlso, I am struggling a little bit to understand to get all the possible paths from a source to destination. I have followed other tutorials as well, but I wish you would have covered this too.", "likes": 6}, "replies": [{"id": "Ugy-_utXYGRw9XfBBtN4AaABAg.9RY7qz7vWNN9RYjoBqXYGH", "publishedAt": "2021-08-27T14:48:43Z", "author": "Alvin the Programmer", "text": "Glad to hear you found value in my content! If you'd like to check out more of my data structure and algorithm work, you'll want to check out my platform, Structy (link in the video description). There I cover all data structures with plenty of free problems to check out!\n\nBest,\nAlvin", "likes": 1}]}, {"topLevelComment": {"id": "UgzaSz7-vdK3RZITbyV4AaABAg", "publishedAt": "2021-08-26T07:11:48Z", "author": "Data Str and Algo", "text": "I want to like this video 100 more times. I could like it only one time.", "likes": 0}}, {"topLevelComment": {"id": "UgyETRSnWvP6v1n_hb94AaABAg", "publishedAt": "2021-08-25T02:50:50Z", "author": "Naman Jain", "text": "Sadly this cannot be followed in c++ I tried and failed to create even a map cuz array cannot be taken as value in map someone helpppp", "likes": 0}, "replies": [{"id": "UgyETRSnWvP6v1n_hb94AaABAg.9RSJ3Zw4AgZ9RWII24XRSE", "publishedAt": "2021-08-26T16:01:02Z", "author": "Alvin the Programmer", "text": "@Naman Jain Cheers :)", "likes": 1}, {"id": "UgyETRSnWvP6v1n_hb94AaABAg.9RSJ3Zw4AgZ9RWHyju9UFz", "publishedAt": "2021-08-26T15:58:16Z", "author": "Naman Jain", "text": "@Alvin the Programmer omg that clears a lot of stuff again thank you so much finally I can continue the lesson! My Hero!!", "likes": 0}, {"id": "UgyETRSnWvP6v1n_hb94AaABAg.9RSJ3Zw4AgZ9RWHXnFqmQl", "publishedAt": "2021-08-26T15:54:27Z", "author": "Alvin the Programmer", "text": "@Naman Jain Say we had an unordered map initialized as this:\n\n std::unordered_map<std::string, std::vector<std::string>> graph {\n  { \"f\", {\"g\", \"i\"} },\n  { \"g\", {\"h\"} },\n  { \"h\", {} },\n  { \"i\", {\"g\", \"k\"} },\n  { \"j\", {\"i\"} },\n  { \"k\", {} }\n };\n\nUnordered_maps represent a key,value pair of data. Using the template type <std::string, std::vector<std::string>> , we are saying that the keys are strings and the values are vectors of strings. Looking at the first entry of the map, { \"f\", {\"g\", \"i\"} },  it means that \"f\" is a key and its corresponding value is the vector of {\"g\", \"i\"}. In the context of our graph it means that node \"f\" has an edge pointing to \"g\" and an edge pointing to \"i\".\n\nHope that helps!\n\n\n-AZ", "likes": 1}, {"id": "UgyETRSnWvP6v1n_hb94AaABAg.9RSJ3Zw4AgZ9RUkzXnVDi6", "publishedAt": "2021-08-26T01:42:01Z", "author": "Naman Jain", "text": "@Alvin the Programmer still can you explain what is the logic here? sorry I'm just a beginner and thanks again.", "likes": 0}, {"id": "UgyETRSnWvP6v1n_hb94AaABAg.9RSJ3Zw4AgZ9RUkaTX0wQI", "publishedAt": "2021-08-26T01:38:37Z", "author": "Naman Jain", "text": "@Alvin the Programmer thank you so much you are the best!", "likes": 0}]}, {"topLevelComment": {"id": "Ugx0kkXhwbxDrqVMuIR4AaABAg", "publishedAt": "2021-08-24T19:44:22Z", "author": "Naman Jain", "text": "When we made dictionary, actually in c++ there are maps so I don't know how to make array of characters as a value in maps can anybody help?", "likes": 0}}, {"topLevelComment": {"id": "Ugws4fSJoPwUb-c2fM14AaABAg", "publishedAt": "2021-08-24T15:21:58Z", "author": "snehalkumar.singh.cse20", "text": "while writing an arrow function, we often end up typing + than =, such a common problem!!", "likes": 0}}, {"topLevelComment": {"id": "Ugy8Xwbad1fnxRH8P_94AaABAg", "publishedAt": "2021-08-24T07:53:07Z", "author": "dArShAN rOck", "text": "How did we arrive to decision that we need to use graph for that matrix island question, we could learn the algorithms but where to apply and how to get to know  that this algorithm fits this problem is important.  may be there could be  another ways to solve the same problem. hmmm its very confusing.  somehow the approach you're teaching us is great.", "likes": 0}}, {"topLevelComment": {"id": "UgzIx8uv_TgbdazhZfZ4AaABAg", "publishedAt": "2021-08-24T01:58:21Z", "author": "dante dt", "text": "Best!", "likes": 0}}, {"topLevelComment": {"id": "UgwhPL6OY8ht_267vdB4AaABAg", "publishedAt": "2021-08-22T18:21:54Z", "author": "Dragan Ostojic", "text": "Instead of stringifying pair [r, c] it could be converted into an integer uniquely as follows: r * col_length + c.", "likes": 1}}, {"topLevelComment": {"id": "UgwEBpw2tSXm7Q6fw1J4AaABAg", "publishedAt": "2021-08-22T18:13:29Z", "author": "Dragan Ostojic", "text": "In the inner loop of grid traversal, it would be more general to use for (let c = 0; c < grid[r].length; c += 1) This will take care of different row lengths.", "likes": 1}, "replies": [{"id": "UgwEBpw2tSXm7Q6fw1J4AaABAg.9RMEGZ4m6ZW9RvSuYlI-rB", "publishedAt": "2021-09-05T19:54:04Z", "author": "Yichi Zhang", "text": "Agreed!", "likes": 0}]}, {"topLevelComment": {"id": "Ugy0GSdBGHOnX7rO5754AaABAg", "publishedAt": "2021-08-22T13:36:53Z", "author": "Annant Sharma", "text": "Thanks for the video. To be honest, this is one of the best graph tutorials I have ever witnessed. My core concepts and understanding towards this Data Structure has improved and I really appreciate the efforts you have put in to make this video.\ud83d\ude4f", "likes": 1}}, {"topLevelComment": {"id": "UgwwfPRX09G1YR7zr6Z4AaABAg", "publishedAt": "2021-08-20T05:14:40Z", "author": "RodneyTV", "text": "Phenomenal! I wish you were my prof in Uni \ud83d\ude2d", "likes": 5}}, {"topLevelComment": {"id": "UgytpH7zxsANlityhM94AaABAg", "publishedAt": "2021-08-19T18:41:48Z", "author": "Svetlana Parvathi", "text": "God bless you! Eternal blessings \ud83d\ude4f\ud83d\udc9e", "likes": 0}}, {"topLevelComment": {"id": "UgxbpRO62gKI5ErLZ8l4AaABAg", "publishedAt": "2021-08-19T06:52:27Z", "author": "abcd and Ajinkya", "text": "I love his smooth voice", "likes": 0}}, {"topLevelComment": {"id": "UgyzKRU3A257ti7MNWl4AaABAg", "publishedAt": "2021-08-18T21:46:12Z", "author": "Marland Kennedy", "text": "I wish you where teaching this when I took this class.", "likes": 0}}, {"topLevelComment": {"id": "UgzyB21IsSvP0qFH3kl4AaABAg", "publishedAt": "2021-08-17T16:55:59Z", "author": "Bhargav Pandya", "text": "I just cannot believe how good this explanation was! Thanks Alvin!!", "likes": 1}}, {"topLevelComment": {"id": "UgzLCZFBHI6bMOaGMRB4AaABAg", "publishedAt": "2021-08-17T05:14:13Z", "author": "Sri", "text": "In a directed graph, how to count the number of cycles ? what approach to follow ??", "likes": 0}}, {"topLevelComment": {"id": "Ugz5r1xLpdwzAyOBhx14AaABAg", "publishedAt": "2021-08-17T05:13:23Z", "author": "Sri", "text": "In a graph how to count the number of cycles ?", "likes": 0}}, {"topLevelComment": {"id": "UgwrVpNgJPb7toRzlht4AaABAg", "publishedAt": "2021-08-16T19:04:31Z", "author": "Joan N", "text": "Is the connected components part the same as union find?", "likes": 0}}, {"topLevelComment": {"id": "UgxQJorcpGNrq9ykWKJ4AaABAg", "publishedAt": "2021-08-16T11:11:43Z", "author": "Robin", "text": "Your course on DP helped me big time.", "likes": 0}}, {"topLevelComment": {"id": "UgwhgEIZbVR6C0SqAYZ4AaABAg", "publishedAt": "2021-08-16T06:33:07Z", "author": "OLIWEB", "text": "I'd always been scared of learning graphs, even though I wanted to... but this course took my fear away \ud83d\ude0e\ud83d\udc4d\ud83c\udffb excelente course, as always!", "likes": 71}}, {"topLevelComment": {"id": "Ugw7dbsH9DjXyqc1xgJ4AaABAg", "publishedAt": "2021-08-15T13:23:58Z", "author": "DI NERO-COSTA", "text": "This was probably the most useful tutorial I've seen on YT. Great work!", "likes": 1}}, {"topLevelComment": {"id": "UgzjpuHrusJ4fd3r2FF4AaABAg", "publishedAt": "2021-08-15T06:47:52Z", "author": "yilmaz bingol", "text": "is this guy something, or is he something :)", "likes": 0}}, {"topLevelComment": {"id": "UgylEFP-QER-EAoPmMh4AaABAg", "publishedAt": "2021-08-15T02:05:30Z", "author": "DHANESH S", "text": "Do full course on tree data structures \ud83d\ude4f\ud83d\ude4f\nThese complete courses are so impressive", "likes": 0}}, {"topLevelComment": {"id": "UgzbJICn7Yo8dSFzmyx4AaABAg", "publishedAt": "2021-08-14T00:32:00Z", "author": "gooash", "text": "This is a very outstanding course. Thanks", "likes": 0}}, {"topLevelComment": {"id": "Ugyn7S107UBnGaGC5Rx4AaABAg", "publishedAt": "2021-08-12T17:50:07Z", "author": "Amarnath Prasad", "text": "This was a really good video. Thank you Alvin and FCC.", "likes": 1}}, {"topLevelComment": {"id": "Ugyi9zULp31wzhbBQvJ4AaABAg", "publishedAt": "2021-08-12T13:02:53Z", "author": "Thee Greatest Ever", "text": "Have yet to work on this but want to express my gratitude and wish you greatness in all aspects of your life!", "likes": 0}}, {"topLevelComment": {"id": "UgyIl5QCQC_cMpZuLQB4AaABAg", "publishedAt": "2021-08-12T10:13:54Z", "author": "Chandradhar Rao", "text": "First dp and now graph!Thas so kind!Thanks!", "likes": 0}}, {"topLevelComment": {"id": "UgxwtyZZ8apQRW70I-d4AaABAg", "publishedAt": "2021-08-12T08:55:08Z", "author": "algoRanger", "text": "I saw the video and rushed to like it...without the need to see the video and then feel oh its good and then be like lets click on the like button..", "likes": 0}}, {"topLevelComment": {"id": "UgysA2dVEAzy_jOgetJ4AaABAg", "publishedAt": "2021-08-11T20:13:22Z", "author": "karthik K", "text": "Awesome course and great explanation\u2728Thanks a lot alwin and  freecodecamp team", "likes": 0}}, {"topLevelComment": {"id": "Ugzt8Zu0l9X8jMRyyaZ4AaABAg", "publishedAt": "2021-08-11T17:35:06Z", "author": "Mounish Savier", "text": "Your voice is so soothing too! Amazing video, i've always had a bit of a block when it comes to these graph algorithms but your approach/explanations finally helped me grasp them!!", "likes": 0}}, {"topLevelComment": {"id": "Ugzabw-zO55ddkWfK914AaABAg", "publishedAt": "2021-08-10T20:20:03Z", "author": "Ryan Le", "text": "know him from DP course. So amazing. Thank you Alvin", "likes": 0}}, {"topLevelComment": {"id": "UgxkEejLGhfCCWVChVx4AaABAg", "publishedAt": "2021-08-10T19:31:26Z", "author": "simsim", "text": "53:44 how to do this in Python?", "likes": 0}, "replies": [{"id": "UgxkEejLGhfCCWVChVx4AaABAg.9QsTe2mr6N39S3187LAPLs", "publishedAt": "2021-09-09T03:44:33Z", "author": "simsim", "text": "@Alvin the Programmer Thanks and i would like to tell that you are a great teacher. I have always feared using non linear ds like graph but you made it so easy to learn! Never in my life have i written a code by myself just by watching a video. So thanks for the video!", "likes": 1}, {"id": "UgxkEejLGhfCCWVChVx4AaABAg.9QsTe2mr6N39QtNgbeJSsX", "publishedAt": "2021-08-11T03:58:36Z", "author": "Alvin the Programmer", "text": "I have created Python video walkthroughs for all of these same problems if you visit the Structy website. Check out the link in the video description. Once you are on the platform, you can set the language to Python in the top left corner. Hope that helps.", "likes": 0}]}, {"topLevelComment": {"id": "UgzorEmFjUNDHpQURxp4AaABAg", "publishedAt": "2021-08-10T15:37:28Z", "author": "a2406", "text": "I know it's a stupid question, but you have to start from somewhere. At 34:06 it says n = # nodes, and n^2 = # edges. However, in the \"worst case\" illustration we clearly see 3 nodes. 3^2 = 9, but as the picture shows, the maximum amount of edges can be only 6. What's going on here?", "likes": 1}, "replies": [{"id": "UgzorEmFjUNDHpQURxp4AaABAg.9Qs2sKk3aHL9Qs6x2RqNJ8", "publishedAt": "2021-08-10T16:13:03Z", "author": "a2406", "text": "@Alvin the Programmer It sure does! Thanks a lot for your answer!", "likes": 0}, {"id": "UgzorEmFjUNDHpQURxp4AaABAg.9Qs2sKk3aHL9Qs4dpSEOA_", "publishedAt": "2021-08-10T15:52:57Z", "author": "Alvin the Programmer", "text": "No such thing as a stupid question! Great question. The 3 edges that are missing are the trivial edges that leave and enter from the same node, i.e. a node that points to itself. Although uncommon, it is possible to have self referential edges like that. If we disallow self referential edges, then the worst case edges is n * (n - 1). We minus 1, because a node cannot point to itself. However, even with this constraint this is still described as O(n^2). Following the simplification rules: O(n * (n - 1)) = O(n^2 - n) = O(n^2).\n\nHope that clarifies! -AZ", "likes": 4}]}, {"topLevelComment": {"id": "UgxPxCvrLh7VtCScYi14AaABAg", "publishedAt": "2021-08-10T02:50:52Z", "author": "Ming Li", "text": "Interesting and useful", "likes": 0}}, {"topLevelComment": {"id": "UgyAK-_PON79d86oKSd4AaABAg", "publishedAt": "2021-08-09T17:06:45Z", "author": "Chris Korbel", "text": "This guy is phenomenal. His course on dynamic programming was exceptionally well done as well.", "likes": 396}, "replies": [{"id": "UgyAK-_PON79d86oKSd4AaABAg.9QpdIO41L_r9hrGy1skoW4", "publishedAt": "2022-10-31T17:46:25Z", "author": "_oskr", "text": "@Mohamed Siddic Literally the comment above you", "likes": 0}, {"id": "UgyAK-_PON79d86oKSd4AaABAg.9QpdIO41L_r9hqgZgPRffQ", "publishedAt": "2022-10-31T12:19:39Z", "author": "Mohamed Siddic", "text": "Please share the dynamic programming link", "likes": 0}, {"id": "UgyAK-_PON79d86oKSd4AaABAg.9QpdIO41L_r9h6xmpwJJF6", "publishedAt": "2022-10-13T08:45:50Z", "author": "_oskr", "text": "@Elad 8 months too late, but here you go https://www.youtube.com/watch?v=oBt53YbR9Kk :P", "likes": 0}, {"id": "UgyAK-_PON79d86oKSd4AaABAg.9QpdIO41L_r9eRaCXTwQF6", "publishedAt": "2022-08-07T19:29:38Z", "author": "Chris Korbel", "text": "@Shubham Patrick https://youtu.be/oBt53YbR9Kk", "likes": 0}, {"id": "UgyAK-_PON79d86oKSd4AaABAg.9QpdIO41L_r9eRaB4VbJOP", "publishedAt": "2022-08-07T19:29:26Z", "author": "Chris Korbel", "text": "@George G https://youtu.be/oBt53YbR9Kk", "likes": 0}]}, {"topLevelComment": {"id": "UgxNRBp62xDQ8otbBfd4AaABAg", "publishedAt": "2021-08-09T09:36:34Z", "author": "Amadou Djoulde Barry", "text": "the course is amazing thank you", "likes": 1}}, {"topLevelComment": {"id": "UgwGJCdoEG1uQb38ixd4AaABAg", "publishedAt": "2021-08-09T05:04:23Z", "author": "Ahbar Ahad", "text": "Thank you Alvin, loved the DP course and this one as well", "likes": 2}}, {"topLevelComment": {"id": "UgzrManzQxMLYDc_yQJ4AaABAg", "publishedAt": "2021-08-08T21:13:23Z", "author": "Prashant Nigam", "text": "This was awesome. Can we please have next video on Union Find, Fenwick Trees, etc?", "likes": 0}}, {"topLevelComment": {"id": "UgwAfx0ScKkzTrrCjRV4AaABAg", "publishedAt": "2021-08-08T17:09:44Z", "author": "shaad Ishtiaque", "text": "Wow... impressive tutorial.", "likes": 2}}, {"topLevelComment": {"id": "UgysGIlc23O7PIF4ixJ4AaABAg", "publishedAt": "2021-08-08T16:08:52Z", "author": "shanguang", "text": "My two years of fear just gone in two hours. Thank you sir.", "likes": 1}}, {"topLevelComment": {"id": "UgzfFNOmX3R9zRJMAhV4AaABAg", "publishedAt": "2021-08-08T15:01:41Z", "author": "Varun Shridhar", "text": "The course on DP was a winner. Course on Graph algo is another winner. Hope to learn a lot more from you.", "likes": 99}, "replies": [{"id": "UgzfFNOmX3R9zRJMAhV4AaABAg.9QmqBZaLK119fCalXE2wrm", "publishedAt": "2022-08-26T20:17:19Z", "author": "jooarago", "text": "@Travis Quigg \n\nin prolog:\n\nwinner(alvin).\nwinner(X) :- appreciates(X,Y), winner(Y).\n\nthat's it!", "likes": 0}, {"id": "UgzfFNOmX3R9zRJMAhV4AaABAg.9QmqBZaLK119f3AKzKsfo3", "publishedAt": "2022-08-23T04:24:28Z", "author": "Travis Quigg", "text": "@Tetrax you are a winner for appreciating a winner who also appreciated a winner who also appreciated a winner.", "likes": 0}, {"id": "UgzfFNOmX3R9zRJMAhV4AaABAg.9QmqBZaLK119b094Np2GnU", "publishedAt": "2022-05-14T14:10:10Z", "author": "Varun Shrivastava", "text": "if no_of_comments >= 6:\n              return \"Every One's a winnner!\"", "likes": 2}, {"id": "UgzfFNOmX3R9zRJMAhV4AaABAg.9QmqBZaLK119XGqBIt4egm", "publishedAt": "2022-01-16T19:06:28Z", "author": "Tetrax", "text": "@LDAR let\u2019s assume we\u2019re on an alternate universe where leetcode doesn\u2019t have a time limit", "likes": 2}, {"id": "UgzfFNOmX3R9zRJMAhV4AaABAg.9QmqBZaLK119XE7wb2I5VN", "publishedAt": "2022-01-15T17:52:38Z", "author": "LDAR", "text": "@Tetrax this recursive call stack gotta stop somewhere XD", "likes": 3}]}, {"topLevelComment": {"id": "UgxI84clO9pnJuVNHrh4AaABAg", "publishedAt": "2021-08-08T14:16:08Z", "author": "shayak ghosh", "text": "Can someone provide the c++ codes?", "likes": 1}}, {"topLevelComment": {"id": "UgzGJ5phg6S18plaRHd4AaABAg", "publishedAt": "2021-08-08T14:15:03Z", "author": "shayak ghosh", "text": "Great explanation, thanks a lot. You are the reason i learnt a great deal about dynamic programming.", "likes": 0}}, {"topLevelComment": {"id": "UgzQZGs9MPvCxDVDyF14AaABAg", "publishedAt": "2021-08-08T11:33:18Z", "author": "Ignacio Rubio", "text": "Congratulations on this course, really well explained by Alvin.", "likes": 4}}, {"topLevelComment": {"id": "Ugz_WS3p3obw4A5JYiF4AaABAg", "publishedAt": "2021-08-08T10:05:59Z", "author": "Jan Joska", "text": "Thank you. Drawing all that graphics had to take a lot of time.", "likes": 1}}, {"topLevelComment": {"id": "Ugz5U0p4I--xkc8XzdJ4AaABAg", "publishedAt": "2021-08-08T04:50:13Z", "author": "Prashant Nigam", "text": "More practice problems on LeetCode: \n* https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/\n* https://leetcode.com/problems/number-of-islands/\n* https://leetcode.com/problems/number-of-provinces/\n* https://leetcode.com/problems/max-area-of-island/", "likes": 2}, "replies": [{"id": "Ugz5U0p4I--xkc8XzdJ4AaABAg.9QlkD4pzXj19QxN-CoSDH7", "publishedAt": "2021-08-12T17:09:30Z", "author": "Amarnath Prasad", "text": "Thanks!", "likes": 0}]}, {"topLevelComment": {"id": "Ugy5NpRN2KjyImPT1vt4AaABAg", "publishedAt": "2021-08-08T02:51:41Z", "author": "Vinod Kumar", "text": "You're doing an amazing job Alvin\ud83d\udc4dI'm always on lookout for your contents. Thank you!", "likes": 3}}, {"topLevelComment": {"id": "UgymzZYKAPlCVh98jh54AaABAg", "publishedAt": "2021-08-07T22:21:33Z", "author": "Rohit", "text": "Can't thank you enough guys :)", "likes": 1}}, {"topLevelComment": {"id": "UgwTgHSpdFYSswEZUv54AaABAg", "publishedAt": "2021-08-07T21:40:52Z", "author": "Punith Ujwal Nayak", "text": "Thanks Alwin for this great tutorial. I had been trying to understand and get an answer to a similar set of problems for a very long time. You made my day, ...probably my life!", "likes": 6}}, {"topLevelComment": {"id": "Ugxh-y-nQ7Kl2L0QkYN4AaABAg", "publishedAt": "2021-08-07T16:22:49Z", "author": "Hao Shan", "text": "Your content is really helpful, respect!!", "likes": 1}}, {"topLevelComment": {"id": "Ugz2ldQlC9T8BELEpLF4AaABAg", "publishedAt": "2021-08-07T14:12:16Z", "author": "Kai Tuo", "text": "Hey I know this guy from video in which he built a mern stack in 30 minutes!", "likes": 0}}, {"topLevelComment": {"id": "UgzYSWswNPa8CyFdIJ14AaABAg", "publishedAt": "2021-08-07T05:36:44Z", "author": "Sam", "text": "Python please", "likes": 0}, "replies": [{"id": "UgzYSWswNPa8CyFdIJ14AaABAg.9QjFjtGo71g9QkKMRGFfS6", "publishedAt": "2021-08-07T15:36:20Z", "author": "Alvin the Programmer", "text": "Python video walkthroughs for all of these same problems are available on structy! You can find a link to the platform in the video description. Hope you find them useful.", "likes": 1}]}, {"topLevelComment": {"id": "UgzfZiisMASp-iwJT5x4AaABAg", "publishedAt": "2021-08-07T04:39:17Z", "author": "Tr\u00e2n Nguy\u1ec5n", "text": "I love this course", "likes": 0}}, {"topLevelComment": {"id": "UgxsNdl7MyptKYv86Ct4AaABAg", "publishedAt": "2021-08-07T04:39:08Z", "author": "Tr\u00e2n Nguy\u1ec5n", "text": "I love the courses", "likes": 0}}, {"topLevelComment": {"id": "UgyLgKp9uQAqva96aad4AaABAg", "publishedAt": "2021-08-07T04:37:44Z", "author": "Tr\u00e2n Nguy\u1ec5n", "text": "Thanks a bunch", "likes": 0}}, {"topLevelComment": {"id": "UgxWRJ87i9Rtr9Qokxl4AaABAg", "publishedAt": "2021-08-07T04:36:34Z", "author": "Tr\u00e2n Nguy\u1ec5n", "text": "Very very thank you", "likes": 0}}, {"topLevelComment": {"id": "UgzsglhuLdERopHZLS54AaABAg", "publishedAt": "2021-08-07T04:36:25Z", "author": "Tr\u00e2n Nguy\u1ec5n", "text": "Thank you so much", "likes": 0}}, {"topLevelComment": {"id": "Ugxi8G67jE1qoG9QH5p4AaABAg", "publishedAt": "2021-08-06T23:49:03Z", "author": "Rajan Sippy", "text": "Thanks", "likes": 2}}, {"topLevelComment": {"id": "UgxpqRpXBr5mOfCHUfF4AaABAg", "publishedAt": "2021-08-06T16:36:12Z", "author": "Bhargav Pandya", "text": "I had no idea about graphs. Just decided to try the video out either way. I am quite surprised at how well this awesome person explains this concept to me! \n\nMake sure you understand a programming language pretty well and know some basics of BigO before watching this one. \n\nMind blowing explanation though!", "likes": 0}}, {"topLevelComment": {"id": "UgzG3rhALhPJgjT1cGJ4AaABAg", "publishedAt": "2021-08-06T06:10:53Z", "author": "Gianni Zamora", "text": "FCC uploads right when we think of something to study and somehow it's that topic.", "likes": 0}}, {"topLevelComment": {"id": "Ugzwilh5L99GMQfDsTt4AaABAg", "publishedAt": "2021-08-06T04:02:18Z", "author": "Prashant Nigam", "text": "OMG this guy is back!!! \ud83d\ude0d", "likes": 1}}, {"topLevelComment": {"id": "UgxzzaVQCDPDyzS46P14AaABAg", "publishedAt": "2021-08-06T03:03:42Z", "author": "Drone256", "text": "Thank you!  I learned this many years ago but watched just because your explanation is so elegant and relaxing. Lol.", "likes": 1}, "replies": [{"id": "UgxzzaVQCDPDyzS46P14AaABAg.9QgPR5EzncE9Qhn1JobvQ2", "publishedAt": "2021-08-06T15:57:52Z", "author": "Alvin the Programmer", "text": ":)", "likes": 0}]}, {"topLevelComment": {"id": "UgwZL_dA_JcxInHr1P14AaABAg", "publishedAt": "2021-08-05T19:36:07Z", "author": "Subash Raj", "text": "Awesome teaching.. Thanks.", "likes": 0}}, {"topLevelComment": {"id": "UgxDHloQ86QzCpK9OBZ4AaABAg", "publishedAt": "2021-08-05T11:57:44Z", "author": "Nilay Aslan", "text": "A very nice share. php turkey on a channel that I will recommend to you.", "likes": 0}}, {"topLevelComment": {"id": "UgygM-dL9Pi2EAnHT-d4AaABAg", "publishedAt": "2021-08-05T11:09:27Z", "author": "Tic tok trending ", "text": "This guy is the best ....", "likes": 0}}, {"topLevelComment": {"id": "UgypV9hk0Lo2msNz9tV4AaABAg", "publishedAt": "2021-08-05T10:29:41Z", "author": "Made on Earth by humans \u4eba\u985e", "text": "hey i love ur t-shirt where i can buy officially rather than donate , i want to buy merchandise from freecode", "likes": 0}, "replies": [{"id": "UgypV9hk0Lo2msNz9tV4AaABAg.9QecfiUqS-G9S2EgSKvW8R", "publishedAt": "2021-09-08T20:23:44Z", "author": "freeCodeCamp.org", "text": "You can get shirts here: https://freecodecamp.creator-spring.com/", "likes": 0}]}, {"topLevelComment": {"id": "Ugyjhkjp1dVLi22q7IN4AaABAg", "publishedAt": "2021-08-05T08:29:01Z", "author": "Utsav Arora", "text": "This is very good \nPlease can you bring one for the tree data structure also", "likes": 0}}, {"topLevelComment": {"id": "Ugx7x2hPuYCGeQ1RnW94AaABAg", "publishedAt": "2021-08-05T06:07:04Z", "author": "aditya", "text": "https://youtube.com/channel/UC-L61Y_YRMZrFnXvetHO_Lg", "likes": 0}}, {"topLevelComment": {"id": "UgwOFHDnAK_uZAgUSkZ4AaABAg", "publishedAt": "2021-08-05T04:13:52Z", "author": "Sashi Kant Shaw", "text": "was expecting at-least 1 mid to hard problem to be solved. All were easy ones. :(", "likes": 0}}, {"topLevelComment": {"id": "Ugz1_3XinFpX37_kRs94AaABAg", "publishedAt": "2021-08-05T02:06:01Z", "author": "kondor1554", "text": "# of edges in a directed graph is n(n-1), not n^2", "likes": 1}, "replies": [{"id": "Ugz1_3XinFpX37_kRs94AaABAg.9Qdj1jjv_he9QjRBRg9NS4", "publishedAt": "2021-08-07T07:16:45Z", "author": "Soumik Sarkhel", "text": "@Siddhartha Gogoi yeah. Here meaning order of n\u00b2. Which is true for n(n-1)", "likes": 0}, {"id": "Ugz1_3XinFpX37_kRs94AaABAg.9Qdj1jjv_he9QjQX6UsoaS", "publishedAt": "2021-08-07T07:10:58Z", "author": "Siddhartha Gogoi", "text": "@Soumik Sarkhel Big Oh is for time complexity..", "likes": 0}, {"id": "Ugz1_3XinFpX37_kRs94AaABAg.9Qdj1jjv_he9QhAzbMxC4c", "publishedAt": "2021-08-06T10:16:42Z", "author": "Soumik Sarkhel", "text": "That's O(n\u00b2) still", "likes": 0}]}, {"topLevelComment": {"id": "UgxRTXixP5uvUNfC3DF4AaABAg", "publishedAt": "2021-08-05T01:21:06Z", "author": "pravat Yadav", "text": "Do more technical interview questions.... Sadly the project are only looked by interviewers after one passes coding challenge, in my country.. So unless you have made a project, framework that is likely to make million dollars, tech companies are not interested to hire you", "likes": 0}}, {"topLevelComment": {"id": "Ugyv9MMkr2zFZq6vIvZ4AaABAg", "publishedAt": "2021-08-05T00:43:24Z", "author": "Marc", "text": "If you get stuck, always throw a hash map at the problem.", "likes": 0}}, {"topLevelComment": {"id": "UgzfiLemR641hHmJdZh4AaABAg", "publishedAt": "2021-08-04T21:35:02Z", "author": "Lewisnt_", "text": "are these questions asked in front end interviews???", "likes": 1}}, {"topLevelComment": {"id": "UgzQ536tbYmiijV-VaN4AaABAg", "publishedAt": "2021-08-04T19:01:25Z", "author": "Q Ultimas", "text": "Thank you, this helps in brushing up on basic graph stuff :)", "likes": 2}}, {"topLevelComment": {"id": "Ugy1cFvmdf2KX9WVJUB4AaABAg", "publishedAt": "2021-08-04T18:46:50Z", "author": "Yogendra Tala", "text": "Thanks a lot", "likes": 0}}, {"topLevelComment": {"id": "Ugx7khCXxRfEdXXSiOB4AaABAg", "publishedAt": "2021-08-04T17:28:17Z", "author": "Davit Mamrikishvili", "text": "49:16 Wouldn't the space complexity be O(n^2), as we are creating an adjacency list?", "likes": 1}, "replies": [{"id": "Ugx7khCXxRfEdXXSiOB4AaABAg.9QcnmpovAwP9ScM2L2lY4Q", "publishedAt": "2021-09-23T06:19:55Z", "author": "entcune", "text": "@Davit Mamrikishvili ya sorry i just completed it and was going through comment section and didn't see your comment was 1 month old \ud83d\ude05", "likes": 1}, {"id": "Ugx7khCXxRfEdXXSiOB4AaABAg.9QcnmpovAwP9ScLw1AxQvt", "publishedAt": "2021-09-23T06:18:55Z", "author": "entcune", "text": "@Davit Mamrikishvili by complete you mean every node is connected to every other node in graph correct! In that case also the time complexity will be equal to total no of edges.", "likes": 1}, {"id": "Ugx7khCXxRfEdXXSiOB4AaABAg.9QcnmpovAwP9ScHQC_2lcP", "publishedAt": "2021-09-23T05:39:29Z", "author": "Davit Mamrikishvili", "text": "I watched this a while ago I might be wrong", "likes": 1}, {"id": "Ugx7khCXxRfEdXXSiOB4AaABAg.9QcnmpovAwP9ScHJKc0pnR", "publishedAt": "2021-09-23T05:38:33Z", "author": "Davit Mamrikishvili", "text": "@entcune The graph could be complete.", "likes": 1}, {"id": "Ugx7khCXxRfEdXXSiOB4AaABAg.9QcnmpovAwP9Sc2NOOurgP", "publishedAt": "2021-09-23T03:28:02Z", "author": "entcune", "text": "You can create adjacency list by just one pass through given edges list. So, that's just e time complexity.", "likes": 0}]}, {"topLevelComment": {"id": "UgzjfTv14J6Kk2OPqvh4AaABAg", "publishedAt": "2021-08-04T17:13:43Z", "author": "venkatesh kagalavadi", "text": "Sooper excited for this!! Thanks you! Your DP course is excellent!", "likes": 0}}, {"topLevelComment": {"id": "Ugw02UbahAmTltfKbdt4AaABAg", "publishedAt": "2021-08-04T16:13:00Z", "author": "Daniel Fletcher", "text": "Thank you so much!!!!!!", "likes": 0}}, {"topLevelComment": {"id": "UgzHItUSyz763QEO-J54AaABAg", "publishedAt": "2021-08-04T15:26:58Z", "author": "Kailash Ram", "text": "someone tell how I can pull myself out of online course purgatory!", "likes": 0}}, {"topLevelComment": {"id": "UgxR2ReuXoM25pJi3vR4AaABAg", "publishedAt": "2021-08-04T15:22:39Z", "author": "Robot Programmer", "text": "do whole dsa and algorithms in javascript", "likes": 1}}, {"topLevelComment": {"id": "Ugy3YBesmwUvnTC-jR14AaABAg", "publishedAt": "2021-08-04T15:15:49Z", "author": "Pete Davidson", "text": "hey programmers. congrats Alvin & shoutout to all the a/A grads too", "likes": 3}, "replies": [{"id": "Ugy3YBesmwUvnTC-jR14AaABAg.9QcZc_nnziR9Qf30fmSmsI", "publishedAt": "2021-08-05T14:28:36Z", "author": "Christian Cozma", "text": "@angelo oyardo It's App Academy, a coding bootcamp. Alvin was an instructor at App Academy a while back.", "likes": 0}, {"id": "Ugy3YBesmwUvnTC-jR14AaABAg.9QcZc_nnziR9Qf2vvmKahg", "publishedAt": "2021-08-05T14:27:49Z", "author": "Christian Cozma", "text": "a/A Represent!", "likes": 0}, {"id": "Ugy3YBesmwUvnTC-jR14AaABAg.9QcZc_nnziR9Qe2b7lyVSg", "publishedAt": "2021-08-05T05:05:44Z", "author": "angelo oyardo", "text": "sorry, what's a/A?", "likes": 0}]}, {"topLevelComment": {"id": "UgzWqqpQ_IomP800Fbt4AaABAg", "publishedAt": "2021-08-04T15:08:48Z", "author": "Rohit K", "text": "We need more problems on trees", "likes": 0}}, {"topLevelComment": {"id": "Ugyr3y1ZvnTucnUGsup4AaABAg", "publishedAt": "2021-08-04T14:51:50Z", "author": "M L", "text": "I know him from the DP tutorial. This guy is amazing.", "likes": 75}, "replies": [{"id": "Ugyr3y1ZvnTucnUGsup4AaABAg.9QcWsyXilr_9Tv3apymZgC", "publishedAt": "2021-10-25T09:15:43Z", "author": "Ujjawal", "text": "Me also\ud83d\ude02", "likes": 0}, {"id": "Ugyr3y1ZvnTucnUGsup4AaABAg.9QcWsyXilr_9TtQJ9EXbRI", "publishedAt": "2021-10-24T17:55:39Z", "author": "Rakesh Katti", "text": "https://youtu.be/oBt53YbR9Kk", "likes": 1}, {"id": "Ugyr3y1ZvnTucnUGsup4AaABAg.9QcWsyXilr_9T4eXAgOv8A", "publishedAt": "2021-10-04T15:28:08Z", "author": "Bhoomtawath Plinsut", "text": "Here's the link https://youtu . be/oBt53YbR9Kk", "likes": 0}, {"id": "Ugyr3y1ZvnTucnUGsup4AaABAg.9QcWsyXilr_9Sg5w3JmTAn", "publishedAt": "2021-09-24T17:16:05Z", "author": "Shashank Tiwari", "text": "Link?", "likes": 0}]}, {"topLevelComment": {"id": "UgxvrsvnkhqigN1VOHJ4AaABAg", "publishedAt": "2021-08-04T14:50:09Z", "author": "Day Dream", "text": "This is great \u2764\ufe0f", "likes": 0}}, {"topLevelComment": {"id": "UgyctXHQjOd6mbiyAGZ4AaABAg", "publishedAt": "2021-08-04T14:48:57Z", "author": "Oriol Cantarell i Sala", "text": "perfect!", "likes": 0}}, {"topLevelComment": {"id": "UgwUZY6dwJ5FjI2_QAF4AaABAg", "publishedAt": "2021-08-04T14:45:41Z", "author": "iDevBrandon", "text": "Yes! its explained in JAVASCRIPT!! THANK YOU SO MUCH", "likes": 3}}, {"topLevelComment": {"id": "UgxvqHesrO-_1hJADRh4AaABAg", "publishedAt": "2021-08-04T14:38:53Z", "author": "Mohammed Zaid", "text": "Please upload a latest complete java course", "likes": 0}}, {"topLevelComment": {"id": "Ugwkt0zCHZY4lTeSN2d4AaABAg", "publishedAt": "2021-08-04T14:35:59Z", "author": "Ankit Dubey", "text": "Unbelievable sir  thanku so much\ud83d\ude0d", "likes": 0}}, {"topLevelComment": {"id": "UgwT5WhjP0T02QFT9Mt4AaABAg", "publishedAt": "2021-08-04T14:34:57Z", "author": "Rohit K", "text": "Lol I searched a lot about graph algorithms...but I hope this will solve my problems", "likes": 0}}, {"topLevelComment": {"id": "UgwVt13pSxVkDtPAPSp4AaABAg", "publishedAt": "2021-08-04T14:34:40Z", "author": "Franklin Ghosh", "text": "Wow!, Your DP course was phenomenal, now you came up with Graph theory too, Thank you", "likes": 84}, "replies": [{"id": "UgwVt13pSxVkDtPAPSp4AaABAg.9QcUv90CsTJ9Qs3tA2mUxU", "publishedAt": "2021-08-10T15:46:18Z", "author": "Alvin the Programmer", "text": "@Vinayak Tyagi Likely trees or linked lists next. You can check out my platform, Structy (link in the video description), if you want to check it out early before it premiers on free code camp.", "likes": 4}, {"id": "UgwVt13pSxVkDtPAPSp4AaABAg.9QcUv90CsTJ9Qpz9DHFvNL", "publishedAt": "2021-08-09T20:17:44Z", "author": "Mykola Zakharchuk", "text": "@Alvin the Programmer this is really true! you are the best!", "likes": 0}, {"id": "UgwVt13pSxVkDtPAPSp4AaABAg.9QcUv90CsTJ9Qkc1wWHoWZ", "publishedAt": "2021-08-07T18:19:33Z", "author": "Vinayak Tyagi", "text": "@Alvin the Programmer  what next ?", "likes": 0}, {"id": "UgwVt13pSxVkDtPAPSp4AaABAg.9QcUv90CsTJ9Qhn6QDsILT", "publishedAt": "2021-08-06T15:58:34Z", "author": "Alvin the Programmer", "text": "Glad to hear you found value in my content! More coming soon.", "likes": 10}]}, {"topLevelComment": {"id": "Ugzm8vlidrPmvEx6Kcd4AaABAg", "publishedAt": "2021-08-04T14:27:44Z", "author": "ManaphyGames", "text": "First", "likes": 0}}, {"topLevelComment": {"id": "UgxWnA2bkVU4DvnJsHh4AaABAg", "publishedAt": "2021-08-04T14:27:13Z", "author": "Night Code", "text": "Leap Year Program | HTML , CSS & JavaScript\r\n\r\nhttps://youtu.be/DVzeO95HjkI", "likes": 0}}, {"topLevelComment": {"id": "Ugx2niDscoXMuY3wbK94AaABAg", "publishedAt": "2021-08-04T14:27:10Z", "author": "Night Code", "text": "Leap Year Program | HTML , CSS & JavaScript\r\n\r\nhttps://youtu.be/DVzeO95HjkI", "likes": 0}}, {"topLevelComment": {"id": "Ugyy_W2NRu0Rkw4sciN4AaABAg", "publishedAt": "2021-08-04T14:27:00Z", "author": "Night Code", "text": "Leap Year Program | HTML , CSS & JavaScript\r\n\r\nhttps://youtu.be/DVzeO95HjkI", "likes": 0}}, {"topLevelComment": {"id": "UgyZJodFUwpGf0rnaS94AaABAg", "publishedAt": "2021-08-04T14:26:57Z", "author": "Night Code", "text": "Leap Year Program | HTML , CSS & JavaScript\r\n\r\nhttps://youtu.be/DVzeO95HjkI", "likes": 0}}, {"topLevelComment": {"id": "UgxPQkUobOLO-a2RYFt4AaABAg", "publishedAt": "2021-08-04T14:26:20Z", "author": "rishabh yadav", "text": "Was waiting for you sunshine", "likes": 0}}, {"topLevelComment": {"id": "Ugwon2JYmCFkyqL7rj14AaABAg", "publishedAt": "2021-08-04T14:26:13Z", "author": "Max Knley", "text": "wow i love this dude", "likes": 1}}, {"topLevelComment": {"id": "UgwKt0V1EN0MMKQapYd4AaABAg", "publishedAt": "2021-08-04T14:23:31Z", "author": "Utkarsh Rastogi", "text": "Was looking for something like this and can't beleive you just uploaded it!", "likes": 51}, "replies": [{"id": "UgwKt0V1EN0MMKQapYd4AaABAg.9QcTdVCwHlW9QcW2SLbo5a", "publishedAt": "2021-08-04T14:44:32Z", "author": "Karam Kassem", "text": "Me too", "likes": 2}]}, {"topLevelComment": {"id": "UgzUFyfYDVLUBCtsBjd4AaABAg", "publishedAt": "2021-08-04T14:21:57Z", "author": "Vpundir 30", "text": "But I am a 12 year old pro programmer \ud83d\udc68\u200d\ud83d\udcbb but don\u2019t like the first like and other things", "likes": 2}}, {"topLevelComment": {"id": "UgwbQ7AKnRbscjDxZAl4AaABAg", "publishedAt": "2021-08-04T14:21:53Z", "author": "Aditya Singh", "text": "Tech interviews are not this easy. Lets do a course on DP on trees and graphs.", "likes": 0}}, {"topLevelComment": {"id": "UgwibumvIsXZfcZa0Px4AaABAg", "publishedAt": "2021-08-04T14:21:49Z", "author": "Webcodingo [Programming Tips]", "text": "Awesome work! You inspired me to start my coding channel!", "likes": 8}}, {"topLevelComment": {"id": "UgyGHuAKokRhtWZOZY54AaABAg", "publishedAt": "2021-08-04T14:21:02Z", "author": "Vpundir 30", "text": "A 4 views in 10 seconds can be only of the people who says first like or first Comment", "likes": 1}}, {"topLevelComment": {"id": "UgzM8wUqpLmhQy3VqpJ4AaABAg", "publishedAt": "2021-08-04T14:20:53Z", "author": "Alexandra Reznikov", "text": "Definitely was looking for this! Thanks! \u2764\ufe0f", "likes": 3}}, {"topLevelComment": {"id": "Ugzsd57IRaDFlg7z5Wd4AaABAg", "publishedAt": "2021-08-04T14:20:36Z", "author": "Anonymous", "text": "First \u2764\ufe0f", "likes": 0}}, {"topLevelComment": {"id": "UgxpY_0-W_m8lBjeuYp4AaABAg", "publishedAt": "2021-08-04T14:20:22Z", "author": "No Copyright Gameplay Stock Videos", "text": "\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25", "likes": 2}}, {"topLevelComment": {"id": "UgxaFmORhlAtv7bX8ON4AaABAg", "publishedAt": "2021-08-04T14:20:06Z", "author": "Sanjay K", "text": "Wow! Was waiting for this", "likes": 3}}, {"topLevelComment": {"id": "UgxXc9DyoRWCiYiC8Dt4AaABAg", "publishedAt": "2021-08-04T14:20:04Z", "author": "Vibhash ranjan ray", "text": "Second", "likes": 1}}, {"topLevelComment": {"id": "Ugyz7j31ROOhwcjmT4V4AaABAg", "publishedAt": "2021-08-04T14:19:53Z", "author": "Amrit Singh", "text": "First", "likes": 1}}]}