{"video": {"id": "dM_JHpfFITs", "title": "Heap Data Structure (max and min)- Beau teaches JavaScript", "description": "A binary heap is a partially ordered binary tree which satisfies the heap property. What is the heap property? Watch the video to find out! Also see how to implement a min heap in JavaScript.\n\nThanks to Sean Smith for the code!\n\n\ud83d\udcbb Code: http://codepen.io/beaucarnes/pen/JNvENQ?editors=0010\n\n\ud83d\udd17 Heap visualization: https://www.cs.usfca.edu/~galles/visualization/Heap.html\n\n\ud83d\udc26 Beau Carnes on Twitter: https://twitter.com/carnesbeau\n\n\u2b50JavaScript Tutorials Playlists\u2b50\n\u25b6JavaScript Basics: https://www.youtube.com/playlist?list=PLWKjhJtqVAbk2qRZtWSzCIN38JC_NdhW5\n\u25b6Data Structures and Algorithms: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ\n\u25b6Design Patterns: https://www.youtube.com/playlist?list=PLWKjhJtqVAbnZtkAI3BqcYxKnfWn_C704\n\u25b6ES6: https://www.youtube.com/playlist?list=PLWKjhJtqVAbljtmmeS0c-CEl2LdE-eR_F\n\u25b6Clean Code: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh\n\n-\nWe're busy people who learn to code, then practice by building projects for nonprofits. Learn Full-stack JavaScript, build a portfolio, and get great references with our open source community.\n\nJoin our community at https://freecodecamp.com\nRead great tech articles at https://medium.freecodecamp.com", "duration": "PT14M42S", "likes": "557", "views": "41292"}, "comments": [{"topLevelComment": {"author": "Coding Literacy", "text": "Why do you have to sacrifice index zero?  Since most arrays always start at zero, we can then use the following formulas:\n\nLeft child: 2n+1\nRight child: 2n+2", "likes": 2}}, {"topLevelComment": {"author": "Snoudoubts", "text": "0:00 was enough to make me pause the video and search for another video", "likes": 0}}, {"topLevelComment": {"author": "Amitav", "text": "why would you write \"heap.splice(heap.length - 1)\" when you can do the same thing with heap.pop() ???", "likes": 0}}, {"topLevelComment": {"author": "_7 __7", "text": "Destructuring syntax creates new arrays and increases space complexity.", "likes": 0}}, {"topLevelComment": {"author": "Tyler Crews", "text": "at 10:38, in the remove function you use .splice(heap.length-1); to splice off the last element of our array..\nis it faster to use splice instead of a .pop(); there?", "likes": 1}}, {"topLevelComment": {"author": "Stacey Wilson", "text": "Although, this works... There is a better way to implement a min or max heap.", "likes": 0}}, {"topLevelComment": {"author": "Dave Redacted", "text": "While I appreciate the info, why did he choose to show the diagram for a max heap and then walk through the code of a min heap? He even showed us that he has the code for a min heap already there, so why show one thing and explain how to build the opposite? Even more nonsensical, he leaves the diagram of the max heap side by side the whole time he's walking through the code of the min heap. Anyone who wants a visual representation of the min heap while he explains the code has to ignore the diagram displayed side by side with the code.", "likes": 5}}, {"topLevelComment": {"author": "Jeffrey Eggink", "text": "whats the best way to implement createReadStream with this?", "likes": 0}}, {"topLevelComment": {"author": "MAX L.", "text": "My I ask what is the draw tool?", "likes": 0}}, {"topLevelComment": {"author": "Michael Salo", "text": "I feel like this code could be clarified with some helper functions.  Ex: getParent, getLeftChild, getRightChild", "likes": 13}, "replies": [{"author": "ConvolutionalNN", "text": "@miguel petrarca I dont learn how to insert...How can i make Min Heap...I copy the code down...But i dont know how to insert etc etc", "likes": 0}, {"author": "miguel petrarca", "text": "in your helper method, I would assume you would pass the index of a node for these methods, also if they dont have a left child or right, would method return null", "likes": 0}, {"author": "miguel petrarca", "text": "for real lol. I hate seeing cryptic unreadable code, hurts my soul and eyes", "likes": 1}, {"author": "Saransh Dhingra", "text": "Funnily, when I was practicing, I did create those functions myself :D But, the logic explanation seems good.", "likes": 0}]}, {"topLevelComment": {"author": "berkin bakis", "text": "Thank you Beau. My question is; when you sort the heap, you also remove everything in the actual heap. Is this expected? I mean, if I sort it and then insert another element, the heap will have only 2 elements; the null and the last thing I added.", "likes": 2}, "replies": [{"author": "berkin bakis", "text": "Hence, I changed it this way:\n\nthis.sort = function(){\r\n    let tempHeap = [ ...heap ] ;\r\n    let result= [ ] ;\r\n    while( heap.length > 1 ){\r\n      result.push(this.remove( )) ;\r\n    }\r\n    heap = tempHeap ;\r\n    return result;\r\n  }", "likes": 2}]}, {"topLevelComment": {"author": "Ebrahim Mansour", "text": "This is wrong, because if there is an element in the left, then we need to check\nif (this.heap[left] == undefined || this.heap[right] == undefined) {  \n  break;\n}", "likes": 4}}, {"topLevelComment": {"author": "DD", "text": "nice video!", "likes": 0}}, {"topLevelComment": {"author": "Michael Jiang", "text": "Yo dude how should i run this? in node?", "likes": 0}}, {"topLevelComment": {"author": "Michael Jiang", "text": "if we cut off the last element on line 57, we would be left with just the array with one element in is which is null, then why are we cutting it off?", "likes": 0}}, {"topLevelComment": {"author": "Allo Vince", "text": "demo code is wrong!\nif heap is 1,2,3,4,5\nrun heap.remove() will get 2,5,3,4\nbut correct should be 2,4,3,5", "likes": 3}, "replies": [{"author": "Wayne Li", "text": "if (heap[right] === undefined) {\n  if (heap[i] >= heap[left]) {\n     [heap[i], heap[left]] = [heap[left], heap[i]];\n   }\n   break;\n}\nif (heap[left] === undefined) {\n   break;\n}", "likes": 1}, {"author": "Michael Jiang", "text": "lol havent run the program to check it, but yeah", "likes": 0}, {"author": "Puneet Rana", "text": "culprit is condition checking undefined for left and right in remove function. instead of OR we should have AND", "likes": 1}]}, {"topLevelComment": {"author": "Muhammed Sami", "text": "thank you for your help but your insert function does not work properly", "likes": 0}}, {"topLevelComment": {"author": "ndurocher85", "text": "How do we add to the heap?", "likes": 1}, "replies": [{"author": "Bill Windsor", "text": "+ndurocher85  You add a node to the heap by finding the first empty node at the bottom of the heap, and then ordering the heap nodes by successive comparisons to compare and swap nodes. See this tutorial with good animations:  https://youtu.be/t0Cq6tVNRBA", "likes": 0}]}, {"topLevelComment": {"author": "Ranesh", "text": "shouldn't we replace the || with and && here:\n if(heap[left] == undefined || heap[right] == undefined){\n     break;\n} \n\nbe this instead: \n\nif(heap[left] == undefined && heap[right] == undefined){ \n    break;\n}\n\nbecause we still want to swap even if the parent has only \"one\" child.", "likes": 0}}, {"topLevelComment": {"author": "\u5e7f\u4e1c\u9753\u4ed4", "text": "\"this._heap[left] === undefined || this.heap[right] === undefined\" \nI think || sign should be && sign and other logic should be changed respectively", "likes": 2}, "replies": [{"author": "Michael Jiang", "text": "we'll, we don't need to check that both is undefined, if we know that the left one is undefined then we know for sure that the right one is also empty. But if the left one is not undefined we can still run the look", "likes": 2}, {"author": "Ivan Tsybulin", "text": "if (heap[right] === undefined || heap[left] > | < heap[right]) ..", "likes": 0}]}, {"topLevelComment": {"author": "Caroline Robin", "text": "Super helpful, thanks Beau for all of your contributions.  All of your Data Structure videos are fantastic.  Been sharing them with my cohort!", "likes": 8}, "replies": [{"author": "Beau Carnes", "text": "Thanks!", "likes": 2}]}, {"topLevelComment": {"author": "prakash avvaru", "text": "what's the use of if(idx>=1) statement as checking is already done on while statement.(In min heap insert program)", "likes": 5}, "replies": [{"author": "Ebrahim Mansour", "text": "There is no need to this condition, because after swapping, if the index if less than 2 the loop will break.\nconsider the condition of (idx >= 1) is false, what will happen?? infinite looooop", "likes": 0}]}, {"topLevelComment": {"author": "Harrison Mai", "text": "Thanks for making this video!", "likes": 1}}, {"topLevelComment": {"author": "LobsterCanary", "text": "I'm sorry, but this video is not very helpful. There's not one word about WHY heaps are used, so I'm not given any incentive to learn HOW.", "likes": 14}, "replies": [{"author": "jtnix", "text": "pretty much any social site with a ranking system is using a max and/or min heap sort to manage their scoreboard rankings.  think of stackoverflow's or reddit's contributor ranking systems, which likely use optimized, object store backed max heaps to manage the user ranks.", "likes": 4}, {"author": "LobsterCanary", "text": "Okay, a few words about WHY, then. :-) But yes, I definitely think mentioning that (or even better: showing a practical example) in the beginning would help.", "likes": 2}, {"author": "Beau Carnes", "text": "One of the main use cases is discussed later in the video. It is used in heapsort which is one of the fastest sorting algorithms. I guess I could have put that toward the beginning instead of the end. :)", "likes": 9}]}, {"topLevelComment": {"author": "Run", "text": "my head hurts watching this", "likes": 9}}]}