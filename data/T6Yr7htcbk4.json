{"video": {"id": "T6Yr7htcbk4", "title": "How not to become a senior developer (and what to do instead)", "description": "Learn great tips for NOT becoming a senior developer.\n\nTalk by Ted Johansson at Junior Developers Singapore.\n\nThis talk is licensed as creative commons with reuse allowed. freeCodeCamp is not associated with this talk but we are excited to share it with more people.\n\nTalk originally from the Engineers.SG channel: https://www.youtube.com/channel/UCjRZr5HQKHVKP3SZdX8y8Qw\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://medium.freecodecamp.org", "duration": "PT37M4S", "likes": "340", "views": "15118"}, "comments": [{"topLevelComment": {"author": "ncardez", "text": "Love this video, it sums up my experiences about Sr. developer role - wow.", "likes": 0}}, {"topLevelComment": {"author": "WhiteHat Co", "text": "Watch at 2x speed", "likes": 1}}, {"topLevelComment": {"author": "WebMaster", "text": "Too many ads...", "likes": 1}}, {"topLevelComment": {"author": "Tom Wright", "text": "Hmm, I think there's something wrong with me (well I know there's something wrong with me). But I kind of dislike the idea of \"senior of developer\". I mean.... I recognise that activities are craft and value getting better at a craft, but I'm suspicious that the notion of a senior developer creates a system of \"knowledge\" where there is none.\n\nI guess that's what I don't like really, senior X's know about Y, when we have no idea what Y is. It feels a bit like pseudoknowledge.\n\nI suppose I should think about what expertise consists of. I would define this as being cognizant of and having critiqued the cutting edge of a field both practically and theoretically. Of course, the problem with software development is that is quiet broad, and the probably with \"business function\" is that businesses, social groups, and individuals are quite heterogenous.", "likes": 3}, "replies": [{"author": "Edgar Nova", "text": "I also do not like the concept of a senior developer, but I would say that when you have a little bit of experience developing, and you start to work actively to make your products easier to maintain, have better performance, and learning and applying better practices, you are no longer a \"junior\" developer.", "likes": 1}]}, {"topLevelComment": {"author": "Anand Undavia", "text": "\"how long is a string\" is the developer's version of  \"what is the age of the captain\".\n\nFor someone looking for more info: https://en.wikipedia.org/wiki/Age_of_the_captain", "likes": 2}}, {"topLevelComment": {"author": "Sergey Vlasov", "text": "Who talks? Ted! Ted talks!", "likes": 9}}, {"topLevelComment": {"author": "Vijay Roy", "text": "This  is really a good video for developer he guides junior developer to think and solve the problem in the right direction and while guiding junior and beginner  future developer he points out some of the helpful  tips that how not to get trapped and mess with the wrong approach to solve problems. Keep upload more of this type of video FCC.", "likes": 8}}, {"topLevelComment": {"author": "Eddy Vinck", "text": "Starts at 1:55\nWhat should you do 9:30", "likes": 35}}, {"topLevelComment": {"author": "Z3R01d", "text": "First ?", "likes": 0}}]}