{"video": {"id": "5cU1ILGy6dM", "publishedAt": "2017-03-26T19:50:46Z", "title": "Binary Search Tree - Beau teaches JavaScript", "description": "A binary search tree is a tree data structure with only two branches for every node. Learn how to implement a binary search tree in JavaScript ES6!\n\n\ud83d\udcbb Code: http://codepen.io/beaucarnes/pen/ryKvEQ?editors=0011\n\n\ud83d\udd17 Info: https://en.wikipedia.org/wiki/Binary_search_tree\n\n\ud83d\udc26 Beau Carnes on Twitter: https://twitter.com/carnesbeau\n\n\u2b50JavaScript Playlists\u2b50\n\u25b6JavaScript Basics: https://www.youtube.com/playlist?list=PLWKjhJtqVAbk2qRZtWSzCIN38JC_NdhW5\n\u25b6Data Structures and Algorithms: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ\n\u25b6Design Patterns: https://www.youtube.com/playlist?list=PLWKjhJtqVAbnZtkAI3BqcYxKnfWn_C704\n\u25b6ES6: https://www.youtube.com/playlist?list=PLWKjhJtqVAbljtmmeS0c-CEl2LdE-eR_F\n\u25b6Clean Code: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh\n\n-\nWe're busy people who learn to code, then practice by building projects for nonprofits. Learn Full-stack JavaScript, build a portfolio, and get great references with our open source community.\n\nJoin our community at https://freecodecamp.com\nRead great tech articles at https://medium.freecodecamp.com", "duration": "PT13M34S", "likes": "1609", "views": "99473"}, "comments": [{"topLevelComment": {"id": "UgxRGie1-pc075lUbJ54AaABAg", "publishedAt": "2022-12-24T17:11:46Z", "author": "Leandro Angeli", "text": "High Complex topic brilliantly explained.Thank you very much !", "likes": 0}}, {"topLevelComment": {"id": "UgzQVuIn9ftBe68ia9x4AaABAg", "publishedAt": "2022-12-02T19:37:32Z", "author": "Daniel Sanchez", "text": "hi just some questions :D, why data is 23 and why in 5:25 23 it says that is null when in the graphic obviously appears?, im new in all this about nodeTrees.", "likes": 0}}, {"topLevelComment": {"id": "UgyHuIc5D49Q2Pe1gx14AaABAg", "publishedAt": "2022-12-01T01:25:01Z", "author": "Eslam", "text": "love it, thanks so much", "likes": 0}}, {"topLevelComment": {"id": "UgyBdSTKHB8LOfrNkxx4AaABAg", "publishedAt": "2022-10-28T22:26:18Z", "author": "some", "text": "what happens is the left sub node after the right sub node is lower than the left node??? for example instead of 1 it was a 2, and instead of 4 you had a 1. Then you would be replacing 3 for one which would have two children greater than itself.", "likes": 0}}, {"topLevelComment": {"id": "UgwvJ7wCLGsMeLsnCIF4AaABAg", "publishedAt": "2022-10-27T22:31:36Z", "author": "some", "text": "can you explain in one video what would be the real life applications for it?", "likes": 0}}, {"topLevelComment": {"id": "Ugwqf66q8MVikLRjxBN4AaABAg", "publishedAt": "2022-07-29T03:50:32Z", "author": "Timothy Lefkowitz", "text": "THANK YOU", "likes": 0}}, {"topLevelComment": {"id": "UgylAHxjGKznOHwDjzB4AaABAg", "publishedAt": "2022-06-10T15:44:53Z", "author": "Augusto S", "text": "jesus christ.. slow down a bit. You speak like if you are in a hurry", "likes": 1}}, {"topLevelComment": {"id": "UgytSH8bnjz4sC1OlpN4AaABAg", "publishedAt": "2022-05-23T19:40:29Z", "author": "Aldwin Samano", "text": "Thank you so much!", "likes": 0}}, {"topLevelComment": {"id": "Ugx_cJe0X555hWZvhcZ4AaABAg", "publishedAt": "2022-04-23T13:55:18Z", "author": "\u30ea\u30f3\u30b4\u9162", "text": "A balanced binary tree, also referred to as a height-balanced binary tree, is defined as a binary tree in which the height of the left and right subtree of any node differ by not more than 1.", "likes": 0}}, {"topLevelComment": {"id": "Ugw1nPHnil8hsexvFoJ4AaABAg", "publishedAt": "2022-03-26T06:06:32Z", "author": "Victor Von Doom", "text": "wat about 17 number that you were about to delete , theres no right node  with left child so what should i do in such a case", "likes": 0}}, {"topLevelComment": {"id": "UgxOLxfjdei8aulLSXx4AaABAg", "publishedAt": "2022-03-21T16:45:14Z", "author": "D B", "text": "I had to slow down the video because you speak too fast to follow the code while you explain it. The explanation was really clear. Thanks.", "likes": 1}}, {"topLevelComment": {"id": "Ugxg3e7HSeI4yzhtzKt4AaABAg", "publishedAt": "2022-03-19T18:56:47Z", "author": "Satish kumar", "text": "thanks so much", "likes": 0}}, {"topLevelComment": {"id": "UgxqSOcmXcKCllFR0N94AaABAg", "publishedAt": "2021-12-08T11:18:20Z", "author": "Raj Banna Sa", "text": "Thank you so much sir \u2764\ufe0f", "likes": 0}}, {"topLevelComment": {"id": "UgwXcGlZ16qVq0_T0e94AaABAg", "publishedAt": "2021-11-25T02:03:44Z", "author": "Marshall Trimble", "text": "Can we all appreciate how well he went over this and well he tried to make sure that the depth of this was covered along with walking the viewer through a journey of creating a mental map and understanding of a BST.", "likes": 12}}, {"topLevelComment": {"id": "UgxtYwmnuupbnrBul394AaABAg", "publishedAt": "2021-11-17T06:41:24Z", "author": "Biikaaa.", "text": "wwhat if the note down there also has children?", "likes": 0}}, {"topLevelComment": {"id": "UgwIufSKNfoqIzhA4RB4AaABAg", "publishedAt": "2021-07-09T21:57:21Z", "author": "Emmanuel Amoako", "text": "thank you, I enjoy your teaching. You good!!", "likes": 0}}, {"topLevelComment": {"id": "Ugw_bRGtWNZl-VabDiN4AaABAg", "publishedAt": "2021-06-16T11:14:16Z", "author": "Yogesh Sharma", "text": "Because of diagrammatically explanation it cleared all my doubts..\nThank you so much for this amazing idea of teaching \ud83d\ude4c", "likes": 1}}, {"topLevelComment": {"id": "UgwI8auJF0t-6vbDwbF4AaABAg", "publishedAt": "2021-04-15T19:07:08Z", "author": "Sejin Majnaric", "text": "Thanks a lot, Beau! :)", "likes": 0}}, {"topLevelComment": {"id": "UgzfPXh1xl_-CmgMb8l4AaABAg", "publishedAt": "2021-02-28T04:29:41Z", "author": "Tho\u1ea1i L\u00fd", "text": "I'm wondering if there are any built-in BST classes in JavaScript because I don't want to implement the tree every time I want to use it", "likes": 1}, "replies": [{"id": "UgzfPXh1xl_-CmgMb8l4AaABAg.9KI8snTh5_B9asmXQpCzBb", "publishedAt": "2022-05-11T08:10:30Z", "author": "Charles Lamb", "text": "Would probably be cool, but perhaps abstraction is required for something like a Bst. \n\nOtherwise people would inevitably have complaints about the way it is implemented in Javascript natively.\n\nPreference creates conflict.\n\nSolution: just write it once the way you like it, then push to your github/bitbucket.\n\nThen reuse whenever necessary =)", "likes": 0}]}, {"topLevelComment": {"id": "UgzqbGiEycjoV0iwlAN4AaABAg", "publishedAt": "2021-02-01T15:10:21Z", "author": "Mathias Salome", "text": "The implementation example you showed just flicked on the switch! oh those wasted hours tearing my hair out, Why oh why didn't my instructors just give us a damned clear example??", "likes": 1}}, {"topLevelComment": {"id": "Ugwqn-uaxogGxnG-l9B4AaABAg", "publishedAt": "2021-01-02T07:43:24Z", "author": "raha", "text": "Can someone explain why are we setting the value of this.root to the return value of removeNode() ?", "likes": 0}, "replies": [{"id": "Ugwqn-uaxogGxnG-l9B4AaABAg.9I-ijmX2OWc9XD97f7ZBgt", "publishedAt": "2022-01-15T08:43:46Z", "author": "anil kumar d", "text": "Basically it's a recursive function... So once removal of a node is done it will return you complete modified tree which is pointed to root..check stack trace to see it... If you inspect root, it is nothing but the modified tree..", "likes": 0}, {"id": "Ugwqn-uaxogGxnG-l9B4AaABAg.9I-ijmX2OWc9JHg-ymBWbi", "publishedAt": "2021-02-03T03:37:16Z", "author": "SSDEMILOVATIC", "text": "I thought the same thing, I console logged it and  I don\u2019t see why we need to assign it to this.root.", "likes": 0}]}, {"topLevelComment": {"id": "UgyJ4JYlZUjfX5L3KtZ4AaABAg", "publishedAt": "2020-09-01T19:49:01Z", "author": "Constantin", "text": "`if (node.left === null) { ... } else if (node.left !== null) {...}. We can remove the 2nd if statement.   \nI think that `if (!node.left) {...} else {...}`  is more readable", "likes": 0}, "replies": [{"id": "UgyJ4JYlZUjfX5L3KtZ4AaABAg.9D4J-cKlyCy9G-Nc_30N5s", "publishedAt": "2020-11-13T11:27:24Z", "author": "patrick mwangi", "text": "What if node.value = 0; Zero also returns false and it would cause issues.", "likes": 2}]}, {"topLevelComment": {"id": "UgwE0MAntM5rNDAs0Ix4AaABAg", "publishedAt": "2020-08-03T02:54:51Z", "author": "Doon's Sunshine", "text": "Clear Explanation", "likes": 0}}, {"topLevelComment": {"id": "UgxfsDGuObn_yxkYs4F4AaABAg", "publishedAt": "2020-07-09T07:42:38Z", "author": "xerxius", "text": "Very well explained !\n\nHere is the shorter version of add function if anybody wants a terse code\n\nadd(data, node = this.root) {\r\n   if (this.root === null) this.root = new Node(data);\r\n   else if (node === null) return new Node(data);\r\n   else if (data === node.data) return; \r\n   else if (data < node.data) node.left = this.add(data, node.left) || node.left;\r\n   else node.right = this.add(data, node.right) || node.right;\r\n}", "likes": 0}}, {"topLevelComment": {"id": "Ugz0gckxTp7xKT0NRxR4AaABAg", "publishedAt": "2020-06-18T14:43:29Z", "author": "emura qhan", "text": "Thank you so much! :\"", "likes": 0}}, {"topLevelComment": {"id": "UgzemdawRzPiDZuu4PZ4AaABAg", "publishedAt": "2020-06-05T23:38:18Z", "author": "jumpman23nith", "text": "What if you want to remove a node but its right node doesn't have a left child? Which node will take the place of the node to be removed? Just wanted to confirm my guess.. It is going to be the right node?", "likes": 1}, "replies": [{"id": "UgzemdawRzPiDZuu4PZ4AaABAg.99Y7HwpQe3N9JHhHwXjkCV", "publishedAt": "2021-02-03T03:48:27Z", "author": "SSDEMILOVATIC", "text": "Yup that\u2019s correct.. You can even test it in the console,", "likes": 0}]}, {"topLevelComment": {"id": "Ugz98rWJnsxjrVSZpC14AaABAg", "publishedAt": "2020-05-31T05:37:20Z", "author": "Rowan Olson", "text": "Thank you! was struggling with this.", "likes": 0}}, {"topLevelComment": {"id": "UgyyoMZCumSeTZsWvmF4AaABAg", "publishedAt": "2020-02-17T14:45:45Z", "author": "Amin Kedir", "text": "is there any way to donate to this guy? i mean i pay for shitty subscriptions already, it's nice knowing your money is going to someone who deserves it for once.", "likes": 0}}, {"topLevelComment": {"id": "UgziwoXHQeahWFx0O8V4AaABAg", "publishedAt": "2019-11-24T17:12:41Z", "author": "Jo Ris", "text": "Hi, thanks for the materials. Is there any reason for not implementing isPresent() recursively in your exemple ?", "likes": 0}}, {"topLevelComment": {"id": "Ugxvzedqc-kJ82N5GA54AaABAg", "publishedAt": "2019-08-05T03:26:06Z", "author": "Vishnu Umakanthan", "text": "Thanks a Lot, man..really appreciate the effort you took.", "likes": 1}}, {"topLevelComment": {"id": "Ugw_Dvz9f8w81gmAh5x4AaABAg", "publishedAt": "2019-07-26T10:52:51Z", "author": "Jorge Chinchilla", "text": "thanks a lot!", "likes": 0}}, {"topLevelComment": {"id": "UgyojDhhQS3gXawfaNJ4AaABAg", "publishedAt": "2019-01-15T10:06:14Z", "author": "MyALPHAguy", "text": "What is this tree for? When am I going to use it?", "likes": 4}, "replies": [{"id": "UgyojDhhQS3gXawfaNJ4AaABAg.8q7BKdo7uRD943Fr8diHQ3", "publishedAt": "2020-01-21T17:19:43Z", "author": "John Smith", "text": "Technical interviews and school. Aside from that, not much in the work place.", "likes": 1}]}, {"topLevelComment": {"id": "Ugz4kswp0A3_jLE6vPh4AaABAg", "publishedAt": "2018-12-31T16:21:52Z", "author": "mo swilam", "text": "Thanks for the upload, in my opinion, I think it could have been better and more clear if you built it from scratch while explaining step by step, coz I think a lot of people got a bit overwhelmed when they saw that bunch of code the first moment of the video. but thanks again anyway..", "likes": 9}, "replies": [{"id": "Ugz4kswp0A3_jLE6vPh4AaABAg.8pXEOebereU93CgxkUBpP4", "publishedAt": "2019-12-31T12:47:03Z", "author": "Pi St", "text": "You're right that it feels a little overwhelming, but after the first example you see its not actually very complicated. Just lots of decision-making with ifs. \nI think Its better this way - you watch his explanations AND THEN you try to build YOUR OWN tree and see if it checks out with his", "likes": 1}]}, {"topLevelComment": {"id": "UgxmbF1zUXkYI6BCb8t4AaABAg", "publishedAt": "2018-08-23T14:34:30Z", "author": "beqa sirbiladze", "text": "4:23 23 left child is 19 and not right", "likes": 6}}, {"topLevelComment": {"id": "UgybyEYohoCBYmA-lut4AaABAg", "publishedAt": "2017-12-15T21:26:36Z", "author": "Mote Zart", "text": "Is there something weird with the add function on the codepen link? It doesn't seem to have a closing bracket. Maybe it's just me but bst.add(10), for example returns null.\n**Not sure why, but prob seems gone now.", "likes": 0}}, {"topLevelComment": {"id": "UgyIF8ihJQuI8FGeZ0p4AaABAg", "publishedAt": "2017-12-09T22:33:01Z", "author": "Ganpat Kakar", "text": "Thank you for providing such a valuable data structure tutorial, but i have one point about binary search data :-\n1. How we can make this binary search tree as a sorted binary search tree.\nLets say i want to insert this data :-\nbst.add(50);\nbst.add(23);\nbst.add(72);\nbst.add(67);\nbst.add(55);\nbst.add(62);\n\nAfter adding this data my data structure will look like this :- \n{\n    data:50\n    left: {\n        data:23,\n        left:null,\n        right:null\n    }\n    right: {\n        data:72,\n        left:{\n            data:67,\n            left:{\n                data:55, \n                left:null,\n            right:{\n                    data: 62,\n                    left:null,\n                    right:null\n                }\n            }\n        }\n    }\n}\n\nBut As you can see this data structure is not correctly sorted for a sorted binary search tree.\nAs i came to this conclusion that, first we need to sort our inserting data then only our binary tree can be sorted.", "likes": 0}, "replies": [{"id": "UgyIF8ihJQuI8FGeZ0p4AaABAg.8_yPEPt0PGB9eBlmUzRTc-", "publishedAt": "2022-08-01T16:02:56Z", "author": "lucasJRS", "text": "how come that is not a sorter binary tree? All the nodes left from 50 are minor (just 23) and all at right are bigger (72, and then 67, 55 and 62 are less than 72).", "likes": 0}]}, {"topLevelComment": {"id": "Ugxfs27JPai489JCWMV4AaABAg", "publishedAt": "2017-11-20T19:56:41Z", "author": "maves9", "text": "tree ? its more like roots", "likes": 1}}, {"topLevelComment": {"id": "UgzNL9PkTqC7F77q7qJ4AaABAg", "publishedAt": "2017-11-13T19:39:37Z", "author": "Adrianne Kelly", "text": "This was great! Thank you!", "likes": 0}}, {"topLevelComment": {"id": "UgwdOgW2saJ6Jsh1vwh4AaABAg", "publishedAt": "2017-08-24T02:11:46Z", "author": "suyash gautam", "text": "thank you! Finally understood node insertion in BST after watching your video!!!!!!!!", "likes": 0}}, {"topLevelComment": {"id": "Ugy230pFgu3zH_dqn6Z4AaABAg", "publishedAt": "2017-08-02T01:16:41Z", "author": "Bry G", "text": "Thank You so much. Your data structure videos have made the difference for me in cs fundamentals.", "likes": 0}}, {"topLevelComment": {"id": "Ugg2jC8otcHsnngCoAEC", "publishedAt": "2017-07-18T18:08:17Z", "author": "Dmitry Akentyev", "text": "add(data) code is horrible! Just put first if(node===null) inside searchTree() and you can remove half of  \"else if\" EASY", "likes": 1}}, {"topLevelComment": {"id": "Ugg1s8cCtlzanngCoAEC", "publishedAt": "2017-06-06T21:12:01Z", "author": "atsepa", "text": "In the final example is 4 the root ?? Is the root the first value you add always??", "likes": 0}, "replies": [{"id": "Ugg1s8cCtlzanngCoAEC.8TUK6Vqen6c8TUKI0-c2ZK", "publishedAt": "2017-06-06T21:13:36Z", "author": "atsepa", "text": "after rewatching .... yes the first element added will be the root", "likes": 0}]}, {"topLevelComment": {"id": "Ugg2jlBi1pZ5hngCoAEC", "publishedAt": "2017-05-23T16:34:17Z", "author": "Alberto Ferreira", "text": "You talk too fast.", "likes": 15}, "replies": [{"id": "Ugg2jlBi1pZ5hngCoAEC.8SumC-JPQGv8mcF996xyUr", "publishedAt": "2018-10-20T10:49:44Z", "author": "Ulric Van statter", "text": "You just gotta study up more bro.", "likes": 1}, {"id": "Ugg2jlBi1pZ5hngCoAEC.8SumC-JPQGv8gceKiagvun", "publishedAt": "2018-05-24T11:30:09Z", "author": "Jess\u00e9 Poiatti", "text": "You complain too much (don't take it personal, just using the same style you've used in your reply).", "likes": 4}, {"id": "Ugg2jlBi1pZ5hngCoAEC.8SumC-JPQGv8afRsulpF_6", "publishedAt": "2017-12-27T10:21:58Z", "author": "Tigran Petrossian", "text": "Grades no worries. You\u2019ll get a full refund.", "likes": 3}]}, {"topLevelComment": {"id": "UgjYlDYDAocHxHgCoAEC", "publishedAt": "2017-05-11T01:27:21Z", "author": "Jay P", "text": "Cool. Another tip is to try and use while loops instead of recursion for better performance. One way to do this is to say while(node), check your cases, set the node equal to the left or right child. The while loop will terminate on null. This is done for the findMin, findMax functions but not for the add function. As an exercise, see if you can rewrite the add function using a while loop instead.", "likes": 1}, "replies": [{"id": "UgjYlDYDAocHxHgCoAEC.8SPFryyt1ne9hk2wGsueTH", "publishedAt": "2022-10-28T22:29:10Z", "author": "some", "text": "can you do remove without recursion tho?", "likes": 0}]}, {"topLevelComment": {"id": "UggS-g8KCYMZf3gCoAEC", "publishedAt": "2017-05-03T13:16:36Z", "author": "petrolhead88", "text": "You should provide exercises if you post only theory, it is almost useless.\nWhy you won't write some problems and publish it as a PDF?.", "likes": 0}, "replies": [{"id": "UggS-g8KCYMZf3gCoAEC.8S5vfetM6M68S6ZUu_nWm_", "publishedAt": "2017-05-03T19:13:15Z", "author": "petrolhead88", "text": "Great! Thanks for the info.", "likes": 0}, {"id": "UggS-g8KCYMZf3gCoAEC.8S5vfetM6M68S6J-zy81pI", "publishedAt": "2017-05-03T16:49:14Z", "author": "freeCodeCamp.org", "text": "Your in luck! Most of these videos align with exercises on the beta freeCodeCamp curriculum. There are 10 interactive challenges based on Binary Search Trees. Here is the first one: http://beta.freecodecamp.com/en/challenges/coding-interview-data-structure-questions/find-the-minimum-and-maximum-value-in-a-binary-search-tree", "likes": 5}]}, {"topLevelComment": {"id": "UghWy0-WyOb9mHgCoAEC", "publishedAt": "2017-04-16T16:53:36Z", "author": "Rick Mottola", "text": "Awesome video and explanation.", "likes": 0}}, {"topLevelComment": {"id": "UgjJAa3eM3WBE3gCoAEC", "publishedAt": "2017-04-11T19:52:59Z", "author": "Adrian Grozavu", "text": "The audio quality could be better, but otherwise I'm liking it", "likes": 1}}, {"topLevelComment": {"id": "UgwXMZF7Gqbqju4jWal4AaABAg", "publishedAt": "2017-03-29T14:42:46Z", "author": "Jugz Gz", "text": "Clear and detailed way of explaining BST, thanks! Amused by the way you say \"root\" :-)", "likes": 3}, "replies": [{"id": "UgwXMZF7Gqbqju4jWal4AaABAg.8Qgxi5deKSc9RiZSycg-Gq", "publishedAt": "2021-08-31T19:41:12Z", "author": "CST1992", "text": "Why amused? It's the perfectly accurate pronunciation of the word.", "likes": 0}]}, {"topLevelComment": {"id": "UgzWp1fWXCik-yzpGQh4AaABAg", "publishedAt": "2017-03-29T09:23:45Z", "author": "ermal gashi", "text": "Thank you, loved the way you approached the subject, and it all clicked in for me. Thank you.", "likes": 0}}, {"topLevelComment": {"id": "UgxXYVk6FG4HF-53nct4AaABAg", "publishedAt": "2017-03-27T00:07:37Z", "author": "piperxy", "text": "Yes, What Dusan Marsa said, some real life examples please?", "likes": 1}, "replies": [{"id": "UgxXYVk6FG4HF-53nct4AaABAg.8QaEyaBDjKd8QbQJ56ciSe", "publishedAt": "2017-03-27T11:05:54Z", "author": "piperxy", "text": "Appreciated!", "likes": 0}, {"id": "UgxXYVk6FG4HF-53nct4AaABAg.8QaEyaBDjKd8Qa_hxNP6C7", "publishedAt": "2017-03-27T03:17:35Z", "author": "Isamar", "text": "Check my reply to Dusan. :)", "likes": 1}]}, {"topLevelComment": {"id": "Ugxvvuz8mi4dxMI7ljR4AaABAg", "publishedAt": "2017-03-26T20:51:11Z", "author": "Du\u0161an Marsa", "text": "Good tutorial, but where i can use it in JavaScript? What is it good for? Some reallife examples? :) Thanks", "likes": 8}, "replies": [{"id": "Ugxvvuz8mi4dxMI7ljR4AaABAg.8Q_tUt4MQ2Q9QwQ_aXb2xB", "publishedAt": "2021-08-12T08:21:35Z", "author": "night owl", "text": "Folders and sub folders", "likes": 0}, {"id": "Ugxvvuz8mi4dxMI7ljR4AaABAg.8Q_tUt4MQ2Q8YrAWQ6hT1V", "publishedAt": "2017-10-18T10:06:55Z", "author": "Manoj Singh", "text": "What you are saying is correct. But usually the data would be in a database and to check if a username or email is taken we can query the database table using a key column which we can index in a db and hence the search would be really fast. Correct me If I am wrong.", "likes": 2}, {"id": "Ugxvvuz8mi4dxMI7ljR4AaABAg.8Q_tUt4MQ2Q8RGVZdg6IUW", "publishedAt": "2017-04-12T19:19:58Z", "author": "JustBanter", "text": "BSTs have many applications,  they are used in a lot of languages' search implementations such as maps or sets. They naturally retain the order in which you insert them. \n\nEfficient search, in-order forward/backwards traversal from any given element, predecessor /successor element search, range searches, and max /min queries, with the added benefit of efficient inserts and deletes. With a self-balancing binary search tree (BST), all of the above run in logarithmic time.\n\nA real life application: \n\"Each IP packet sent by an Internet host is stamped with a 16-bit id that must be unique for that source-destination pair. Linux kernel uses an AVL tree(height balanced)(a self balancing BST) indexed by IP address. Hashing would be faster, but want to avoid an attacker sending IP packets with worst-case inputs.\"\nsource http://web.stanford.edu/~blp/papers/libavl-abstract.pdf\n\nThey are a reasonable alternative to a hash tables in critical systems because they do not have the vulnerability of someone potentially figuring out your hashing algorithm and then sending a large amount of data that creates collisions. see collision attack:\nhttps://learncryptography.com/hash-functions/hash-collision-attack", "likes": 3}, {"id": "Ugxvvuz8mi4dxMI7ljR4AaABAg.8Q_tUt4MQ2Q8QanMioh5hi", "publishedAt": "2017-03-27T05:16:53Z", "author": "Du\u0161an Marsa", "text": "Ok thanks, :) help a lot. And to author, you can add some real life tips for this types of videos. It helps a lot to understand what is going on :) thx", "likes": 7}, {"id": "Ugxvvuz8mi4dxMI7ljR4AaABAg.8Q_tUt4MQ2Q8QampWMK-Xv", "publishedAt": "2017-03-27T05:12:13Z", "author": "David", "text": "Du\u0161an Marsa yep JS can alphabetize by doing comparisons. \"AZ\" > \"AA\" === true. You can use this to have a fast binary search for the given string value.", "likes": 4}]}]}