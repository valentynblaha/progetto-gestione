{"video": {"id": "-Eiw_-v__Vo", "title": "Big O Notation: A Few Examples", "description": "This video is about Big O Notation: A Few Examples\n\nTime complexity is commonly estimated by counting the number of elementary operations (elementary operation = an operation that takes a fixed amount of time to preform) performed in the algorithm.\n\nTime complexity is classified by the nature of the function T(n). O represents the function, and (n) represents the number of elements to be acted on. \n\nWorst-case time complexity, the longest it could possibly take with any valid input, is the most common way to express time complexity. When you discuss Big-O notation, that is generally referring to the worst case scenario. For example, if we have to search two lists for common entries, we will calculate as if both entries would be at the very end of each list, just to be safe that we don't underestimate how long it could take.\n\nO(1) - determining if a number is odd or even. O(1) is a static amount of time, the same no matter how much information is there or how many users there are.\n\nO(log N) - finding a word in the dictionary (using binary search). Binary search is an example of a type of \"divide and conquor\" algorithm. \n\nO(N) - reading a book\n\nO(N log N) - sorting a deck of playing cards (using merge sort)\n\nO(N^2) - checking if you have everything on your shopping list in your cart\n\nO(infinity) - tossing a coin until it lands on heads\n\nAs a rule of thumb, anything with N^2 or any other exponent is NOT a good algorithm for a site with multiple users. If your algorithm slows down exponentially with the input, you're going to want to look for a more efficient way to solve that problem.\n\nWhenever you\u2019re coding loops within loops, you want to be especially mindful of time complexity.\n\nhttp://bigocheatsheet.com/\nBig O Cheat Sheet is the place to look once you can classify your algorithm, like as a \"merge-sort\" or a \"quick-sort\". \n\nhttps://www.coursera.org/course/algs4partI\nPrinceton Coursera course is NOT for the faint of heart. With examples and practice in Java, this course will cover iterating over data specifically with Java, sorting, and searching algorithms.", "duration": "PT3M41S", "likes": "1614", "views": "187972"}, "comments": [{"topLevelComment": {"author": "How to Use", "text": "can anyone solve this Q?\nQ.) List the complexity of following algorithms using BIG-O notation.\r\n (i) Merge Sort   \n (ii) Quick Sort \n(iii) Bubble Sort\n (iv) Linear Search\r\n (v) Binary Search \n(vi) Push Operation\n (vii) Pop Operation \n(viii) Stack Traversal", "likes": 0}}, {"topLevelComment": {"author": "Priyanshu Bansal", "text": "she is really gorgeous", "likes": 0}}, {"topLevelComment": {"author": "Ric J", "text": "what a beautiful and intelligent woman!! congratulations", "likes": 0}}, {"topLevelComment": {"author": "Ashish Yadav", "text": "i can not concentrate on board", "likes": 1}}, {"topLevelComment": {"author": "The xD", "text": "O(n^2) is quadratic, not exponential \nO(b^n) is exponential where b <= 1 .", "likes": 2}}, {"topLevelComment": {"author": "The Gorillaz", "text": "i m subscribing this channel because of this chick not for the topics and stuff she delivers.", "likes": 0}, "replies": [{"author": "THIAGooo", "text": "shame on u", "likes": 1}]}, {"topLevelComment": {"author": "mk17173n", "text": "she is beautiful and smart.", "likes": 0}}, {"topLevelComment": {"author": "Orkhan Ahmadov", "text": "FreeCodeCamp i love you guys", "likes": 0}}, {"topLevelComment": {"author": "Nick Feldman", "text": "Thank you for the help in understanding the meanings!", "likes": 0}}, {"topLevelComment": {"author": "Ahmed Hassan", "text": "You're O(hot) :D :D ^_^", "likes": 3}}, {"topLevelComment": {"author": "Shubham Singh", "text": "Can I know your name?", "likes": 0}, "replies": [{"author": "ARM 9", "text": "Lol. Pervert Alert", "likes": 10}]}, {"topLevelComment": {"author": "Shubham Singh", "text": "I love your teaching!!", "likes": 0}}, {"topLevelComment": {"author": "Shubham Singh", "text": "U are fabulous \ud83d\ude0a\ud83d\ude0a", "likes": 0}}, {"topLevelComment": {"author": "Ubaid Parvaiz", "text": "best explanation ..", "likes": 1}}, {"topLevelComment": {"author": "Pritam Banik", "text": "Beautiful!!", "likes": 6}}, {"topLevelComment": {"author": "AFT", "text": "i couldnt learn anything because i thought about motorboating you the whole time.", "likes": 0}}, {"topLevelComment": {"author": "ishouldbestudying", "text": "she just made me more confused, so how is merge sort n log n and binary search logn, is this because for sorting we sort the elements and searching we are just picking an element?hmm so confused....", "likes": 1}}, {"topLevelComment": {"author": "Francois Smit", "text": "I came here looking for the explanation of the log time complexity, but she just talks about it. Bad video.", "likes": 1}}, {"topLevelComment": {"author": "Cesar Omiste", "text": "when you hear \"you don't have to understand it completely\" you know it's time to bail on this video", "likes": 2}, "replies": [{"author": "freeCodeCamp.org", "text": "Everyone learns incrementally and not everyone needs to know everything.", "likes": 1}]}, {"topLevelComment": {"author": "Hamad Nasser", "text": "You already have a big o in your chest \ud83d\udc40", "likes": 7}}, {"topLevelComment": {"author": "Laspark - FMGordillo", "text": "Just for a reference: http://bigocheatsheet.com/", "likes": 0}}, {"topLevelComment": {"author": "Huy V\u00f5 L\u00ea", "text": "convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson convergent into lesson", "likes": 1}}, {"topLevelComment": {"author": "Samvit Agarwal", "text": "What if you were to implement an algorithm that iterates through a list multiple times? Although 1 iteration is O(n) time, would multiple iterations be exponential? (Every time you iterate, the size decreases by one)", "likes": 1}}, {"topLevelComment": {"author": "Sina", "text": "The board half a meter to the right with less light from the left would have made the presentation better", "likes": 1}}, {"topLevelComment": {"author": "Logomonic Learning", "text": "Youre blocking the board hun.", "likes": 4}}, {"topLevelComment": {"author": "Govind Mishra", "text": "She is cute.... okay let her teach anything...hhaha", "likes": 10}}, {"topLevelComment": {"author": "GameBinge\u2122", "text": "Good that English is your first language or else your video would be a laughing stock. Exponential and polynomial ain't no same (hohohohohoho)", "likes": 1}}, {"topLevelComment": {"author": "Bytler", "text": "Thanks freecodecamp :)! Helped me", "likes": 1}}, {"topLevelComment": {"author": "Goshine splash of colours", "text": "It's a good attempt on your path, but you have be a little more precise when talking about algorithm because things could get complicated really quickly.\nThese are the seven common orders for big O notations: O(1) is called 'constant',(not static - static is a overloaded word in computer science)  O(n) is called 'linear' and O(log n) , (`logarithmic`, O(n log n)* is called `logarithmic`, O(n^2)  is called 'Quadratic', O(n^3 ) is called 'Cubic', O(2^n) is  called 'exponential' ... you should also touch on: Big-O, Big-Omega and Big-Theta and there relation ship.", "likes": 6}, "replies": [{"author": "ThunderAppeal", "text": "She explains it fine for someone who wants a basic understanding.\nBut she explains the same way that most other people explain it and that is by not differentiating the circumstances of how these asymptotic calculations are made or what they may be based on.", "likes": 0}]}, {"topLevelComment": {"author": "Nands", "text": "This Is wrong in So many ways.\n1)Divide and Conquer Cannot be branded as O(logn) e.g Merge Sort is Divide  and Conquer that takes  O(nlogn) and Quick Sort takes O(nlogn) in average and may go upto O(n^2) in worst case if the pivot is not randomised.\n2)Merge Search Wtf?\n3)An algorithm is said to be\u00a0exponential time, if\u00a0T(n) is upper bounded by 2^poly(n), where poly(n) is some polynomial in\u00a0n. More formally, an algorithm is exponential time if\u00a0T(n) is bounded by O(2^nk) for some constant\u00a0k.", "likes": 6}, "replies": [{"author": "Jigar Patel", "text": "Yo binary search is divide conquer. Check your facts. If you don't believe check this course from University of California: https://www.coursera.org/lecture/algorithmic-toolbox/binary-search-TTWqe", "likes": 0}]}, {"topLevelComment": {"author": "mickeyman", "text": "Wth..\nO(N^2) is not exponencial! It has a quadratic complexity NOT exponencial. \nHowever O(2^N) is exponencial....", "likes": 4}, "replies": [{"author": "Fouad Boukredine", "text": "Both are exponential. check with actual real numbers examples in a graph, draw a line on the graph on both, and you'll see they both are indeed exponential. O(n^2) is a little bit more exponential than O(2^n) but they are both exponential though.", "likes": 0}]}, {"topLevelComment": {"author": "Matt Jackson", "text": "Maybe I'm confused, but isn't merge search just n and then the actual merge is logn? Help me if I'm mistaken, I'm still trying to grasp this.", "likes": 1}, "replies": [{"author": "ffatheranderson", "text": "Mere search does (there is merge SORT not SEARCH) not exist and O(n^2) is not exponential it is quadratic(O(2^n) is exponential).", "likes": 0}]}, {"topLevelComment": {"author": "Simon Somlai", "text": "Decent and short explanation with good examples!", "likes": 2}, "replies": [{"author": "ffatheranderson", "text": "And with errors. Mere search does (there is merge SORT not SEARCH) not exist and O(n^2) is not exponential it is quadratic(O(2^n) is exponential). Woman.... what can you expect from here....", "likes": 0}]}, {"topLevelComment": {"author": "Henri Maes", "text": "O(N^2) is NOT exponential, O(2^n) is exponential, there's a big difference.", "likes": 110}, "replies": [{"author": "Mundry", "text": "@Fouad Boukredine O(n^2) is quadratic not exponential.", "likes": 0}, {"author": "Electric ResonanZ", "text": "@Asmit Basu.  You know what she meant lol", "likes": 0}, {"author": "Dylan Gy", "text": "@Fouad Boukredine n^2 is not exponential. For something to be exponential a constant must be raised to the variable. This does matter as O(2^n) will have much greater values as x gets larger", "likes": 2}, {"author": "Fouad Boukredine", "text": "O(2^n) is indeed exponential because as x grows, 2^n will grow exponentially with greater values. O(n^2) is not exponential, but there are special cases where O(n^2) grows kind of exponentially, where the chart looks close enough to be considered exponential.", "likes": 1}, {"author": "Karmesh Patel", "text": "isn't O(2^n) when 2 recursive calls are made?", "likes": 0}]}, {"topLevelComment": {"author": "Mehedi Hasan Abir", "text": "very helpful for computer science", "likes": 1}}, {"topLevelComment": {"author": "InsomiaticEwok", "text": "Now I can Ace my exam, thank you!!", "likes": 3}}, {"topLevelComment": {"author": "Talha Amjad", "text": "Thanks", "likes": 1}}, {"topLevelComment": {"author": "Ameenah Palmer", "text": "Thank you so much", "likes": 1}}, {"topLevelComment": {"author": "Tom G", "text": "This just scratches the surface, but its a start I guess.", "likes": 2}}, {"topLevelComment": {"author": "RockPrincess", "text": "Great analogies. Thank you.", "likes": 11}}, {"topLevelComment": {"author": "\u6731\u5b66\u8fdb", "text": "According to this MIT paper, O(n^2) us quadratic not exponential.\n\nhttp://web.mit.edu/16.070/www/lecture/big_o.pdf", "likes": 17}, "replies": [{"author": "ManzRzl Music", "text": "Henry Zhu Thanks for doing the good job.", "likes": 0}, {"author": "Wop wop", "text": "Henry Zhu I honestly love it that a youtube comment cites a page from MIT. I dream of a future where everyone is like you", "likes": 2}, {"author": "EDUARDO12348", "text": "Thank you for sharing the link to that paper, it really helped to understand Big-O notation.", "likes": 0}, {"author": "zack roberts", "text": "Nah it would be O(x^n) where n is the number of elements and x is the base.", "likes": 0}, {"author": "Rick Hernandez", "text": "Exponential would be O(n^x)", "likes": 3}]}, {"topLevelComment": {"author": "Shepherd Yannis", "text": "I like the audio effect", "likes": 1}}, {"topLevelComment": {"author": "Sarbbottam Bandyopadhyay", "text": "Interesting classification. Did you mean merge sort instead of merge search?", "likes": 3}, "replies": [{"author": "Samar Srivastava", "text": "FrankTheTechTank You guys  aren't as intelligent as us Indians and then you blame us that we're taking your jobs? LMAO.\nstudy up, be that capable of holding a job", "likes": 1}, {"author": "Nik Sieber", "text": "I hope this is a joke. There's unlimited jobs for anyone with the skills. Study up!", "likes": 2}, {"author": "Colonel Bagshot", "text": "HERE COMES THE H1B's RUN!", "likes": 0}, {"author": "Frank S", "text": "@***** Enjoy your cholera", "likes": 0}, {"author": "Bashir", "text": "+wtfPlaypus Loser", "likes": 3}]}, {"topLevelComment": {"author": "Thunderwolf666", "text": "O(n^2) isn't exponential, it's polynomial. O(2^n) would be exponential. Good explanations though.", "likes": 21}, "replies": [{"author": "Thunderwolf666", "text": "But also generally in Big O notation we're less interested in the specifics of indices and more in the type of function. But hey, we're both correct so who cares?", "likes": 1}, {"author": "Sighmon", "text": "true, i was just referring to the fact that generally, when the degree is 2 in a function, they are referred as specifically quadratic. you are right though, either way", "likes": 0}, {"author": "Thunderwolf666", "text": "Quadratic functions ARE polynomial functions. It's Polynomial.", "likes": 0}, {"author": "Sighmon", "text": "its quadratic, any bigger of exponent to N would probably polynomial, though", "likes": 0}, {"author": "Ali Meree", "text": "You are completely right . I agree with you.", "likes": 1}]}, {"topLevelComment": {"author": "PHLLY\u6797\u6717\u65b0", "text": "how can you tell if an algorithm is tight?\nwhenever an algorithm is of complexity theta, doesnt that already imply it is tight?\nfor example, if an algorihtm is of upper-bound n and lower bounds nlogn...;.", "likes": 1}}, {"topLevelComment": {"author": "Memorable Name", "text": "no offense but, unless you give code examples this is utterly useless. I have been studying this for 30mins and i could give a better explanation", "likes": 6}, "replies": [{"author": "Memorable Name", "text": "@***** \nstack overflow have great answers", "likes": 0}, {"author": "Bashir", "text": "what videos do you recommend then? I have an exam tomorrow", "likes": 0}, {"author": "Memorable Name", "text": "@wtfPlatypus proud of you Platypus keep it up, youll learn big O one day. I actually had this come up on an exam and i smashed it hell yeah SLAMMIN peace.", "likes": 0}, {"author": "Memorable Name", "text": "@wtfPlatypus i don't drink soda pop", "likes": 0}, {"author": "Frank S", "text": "@Raymond Berry How about we get some Sodie Pops?", "likes": 0}]}, {"topLevelComment": {"author": "David Johnson", "text": "I tried the coursera algorithm course and got completely lost after the first week. I had to pause the video every 15 seconds or so and write down what the professor was doing. Way too difficult for me", "likes": 4}, "replies": [{"author": "Nabil Tech", "text": "Same bro.Maybe that method is not suitables for you.U can still try any methods.", "likes": 0}]}, {"topLevelComment": {"author": "digitalconsciousness", "text": "I liked that all of the notations were listed out from best to worst. I didn't really understand what log n meant for the longest time, so I had no idea if n^2 was better or worse than log n for instance. This makes it a lot clearer.", "likes": 4}, "replies": [{"author": "Nell MV", "text": "You are good!", "likes": 0}, {"author": "Fluets", "text": "Log means the opposite of a power. So assuming that log base two of N\u00a0was used here (the opposite of N^2), it would be working out 'to what power must\u00a02 be to equal N'.For example, Log(2) would be 1 since N = 2 and 2 to the power of 1 is 2.Log(4) = 2 since 2^2 is 4.As you can see, this can make values much smaller, so it's very good. :)", "likes": 3}]}, {"topLevelComment": {"author": "Harsh Gupta", "text": "I was expecting some problems with functions as well", "likes": 2}, "replies": [{"author": "Abhimanyu Aryan", "text": "go to geeksforgeeks", "likes": 0}, {"author": "Harsh Gupta", "text": "+Maati Grouni I mean some examples for e.g  Prove that running time\u00a0\nT(n) = n3(read as n cube)  + 20n is \u2126(n2(read as n square))", "likes": 1}, {"author": "Lama", "text": "+Harsh Gupta problems what", "likes": 0}]}]}