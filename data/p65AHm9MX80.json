{"video": {"id": "p65AHm9MX80", "publishedAt": "2019-02-19T13:52:50Z", "title": "Python Algorithms for Interviews", "description": "Learn about common algorithm concepts in Python and how to solve algorithm challenges you may encounter in an interview.\n\n\u2b50\ufe0fContents\u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Big O Notation\n\u2328\ufe0f (0:22:08) Big O Examples\n\u2328\ufe0f (0:43:01) Array Sequences\n\u2328\ufe0f (0:53:23) Dynamic Arrays\n\u2328\ufe0f (1:06:26) Array Algorithms\n\u2328\ufe0f (1:20:40) Largest Sum\n\u2328\ufe0f (1:31:27) How to Reverse a String\n\u2328\ufe0f (1:57:32) Array Analysis\n\u2328\ufe0f (2:00:00) Array Common Elements\n\u2328\ufe0f (2:28:54) Minesweeper\n\u2328\ufe0f (3:08:16) Frequent Count\n\u2328\ufe0f (3:16:58) Unique Characters in Strings\n\u2328\ufe0f (3:28:35) Non-Repeat Elements in Array\n\nTutorial from CupofCode 01. Check out their YouTube channel: https://www.youtube.com/channel/UCwptawgtdrxkG2kWY0OO5mQ\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://medium.freecodecamp.org\n\nAnd subscribe for new videos on technology: https://youtube.com/subscription_center?add_user=freecodecamp", "duration": "PT3H47M8S", "likes": "14577", "views": "761440"}, "comments": [{"topLevelComment": {"id": "UgwZDcrLUYxr3DpaWLB4AaABAg", "publishedAt": "2023-01-20T08:53:25Z", "author": "Abhay Sagar", "text": "You are solved by dictionary and hashmap \u2753", "likes": 0}}, {"topLevelComment": {"id": "UgwDqN2RVW24abiN2zx4AaABAg", "publishedAt": "2023-01-19T19:28:09Z", "author": "Umair Gillani", "text": "copied everything from Udemy's Jose Portilla course!", "likes": 0}}, {"topLevelComment": {"id": "UgzmvwPx6aShDnJloU94AaABAg", "publishedAt": "2023-01-18T11:57:33Z", "author": "Raphael Gregorio", "text": "kontennya tidak pernah membosankan ,, semoga sukses dan sehat selalu supaya bisa selalu berbagi konten\u00b2", "likes": 0}}, {"topLevelComment": {"id": "Ugxdl3wIYZlF7eXlDdF4AaABAg", "publishedAt": "2022-11-25T20:29:28Z", "author": "Y", "text": "I guess, the codes are not provided.", "likes": 0}}, {"topLevelComment": {"id": "UgxnJnGQwlwG70-AeWx4AaABAg", "publishedAt": "2022-10-22T17:09:30Z", "author": "Rados\u0142aw Marek", "text": "2:22:20 why do we do p2 += 2 instead of += 1 like in p1", "likes": 0}}, {"topLevelComment": {"id": "UgwhQMxGcyMV7Wzi8Q14AaABAg", "publishedAt": "2022-10-21T12:40:32Z", "author": "Mahmoud Sharqawi", "text": "where can i get the jupyter material he uses its really so good and might want to come back and read it again and again later", "likes": 0}}, {"topLevelComment": {"id": "UgyFqukmnu3DEpVoezx4AaABAg", "publishedAt": "2022-10-20T11:15:52Z", "author": "C Stone", "text": "I woke up to this. Who else did?", "likes": 0}}, {"topLevelComment": {"id": "UgyqXLnep93WxSMPVyB4AaABAg", "publishedAt": "2022-10-15T14:17:44Z", "author": "1NH20CS171 Punith. K. K", "text": "Really a great video\ud83d\ude0d\ud83d\ude0d...was veryyy helpful....nd can understand it veryy easily by debugging....thanks for this great content\u2764\ufe0f\u2764\ufe0f\ud83d\udca5", "likes": 0}}, {"topLevelComment": {"id": "UgxgImuoKGNJ7f9OAGF4AaABAg", "publishedAt": "2022-10-09T08:51:43Z", "author": "CoolCoder_", "text": "such a king. I dropped out of college because I cant afford it, and now I am learning my passion for free. Thank you so much!", "likes": 1}}, {"topLevelComment": {"id": "Ugyu5QG9qARx3Idg5iZ4AaABAg", "publishedAt": "2022-10-07T21:46:48Z", "author": "Maria Cristina Arezzi", "text": "014679", "likes": 0}}, {"topLevelComment": {"id": "UgxxhggxsOxUxExt56h4AaABAg", "publishedAt": "2022-10-02T11:56:08Z", "author": "Clutch Gaming", "text": "I\u2019m ooooo\n\n\ud83d\ude2e on", "likes": 1}}, {"topLevelComment": {"id": "UgyzyzU8xVqSgC5vNy54AaABAg", "publishedAt": "2022-09-21T20:19:18Z", "author": "Ronan Downes", "text": "Is the Jupyter file available somewhere?", "likes": 0}}, {"topLevelComment": {"id": "UgzaeO9soliCwOZcqo54AaABAg", "publishedAt": "2022-09-21T01:25:48Z", "author": "David Adu-Tenkorang", "text": "So much in love with this tuto. A great tutorial for a confused beginner.", "likes": 0}}, {"topLevelComment": {"id": "Ugww7tQm_V0BiLZXELx4AaABAg", "publishedAt": "2022-08-19T14:09:38Z", "author": "Dan R", "text": "Appreciate the course! Did you mean largest contiguous sum (1:20:40) ? If so the algo provided doesn't work. This one seems to work on my computer and keeps O(n) time:\ndef largest(arr):\n    if len(arr) == 0:\n        return False\n    elif len(arr) == 1:\n        return arr[0]\n    max_sum = curr_sum = arr[0]\n    \n    for num in arr[1:]:\n        if num >= 0:\n            curr_sum = curr_sum + num\n            max_sum = max(curr_sum, max_sum)\n        else:\n            max_sum = max(curr_sum, max_sum)\n            if curr_sum + num < 0:\n                curr_sum = 0\n            else:\n                curr_sum += num\n    return max_sum", "likes": 0}}, {"topLevelComment": {"id": "UgzyoUtOOtR_VX00tn54AaABAg", "publishedAt": "2022-08-17T17:38:17Z", "author": "Gabriel Burgos", "text": "This is great, also, love the Mass Effect menu music", "likes": 0}}, {"topLevelComment": {"id": "UgwYp3rjuaW60N0d7GF4AaABAg", "publishedAt": "2022-08-13T11:58:30Z", "author": "New Poste", "text": "Hi I like your channels", "likes": 0}}, {"topLevelComment": {"id": "UgzF_DxiK7ml_0VwygB4AaABAg", "publishedAt": "2022-08-12T07:25:34Z", "author": "Gada Wakjira youtube", "text": "continue it is a good reffort", "likes": 0}}, {"topLevelComment": {"id": "Ugx6GNJrn1NHHgs27GV4AaABAg", "publishedAt": "2022-08-03T17:22:57Z", "author": "Jek", "text": "bah, using memes for interviews. I'll rely on the quality of my character thank you. Plus its not like im going to remember every coding strategy ever and be able to recall them rapidly in a job setting. Real engineers use the internet to remember easy stuff, yknow in the job world, not the world of memedemia. Just seems kinda like it doesnt actully prove engineering quality to be able to memorize stuff that computers remember for us. It's just a meme to show you can jump through hoops and reference what other smart people have said in the past", "likes": 0}}, {"topLevelComment": {"id": "Ugzb55c4BBfvs39W1yp4AaABAg", "publishedAt": "2022-07-24T19:10:05Z", "author": "Ryker Edits", "text": "Autoplay brought me here...", "likes": 0}}, {"topLevelComment": {"id": "Ugxp46xMJ-iFVZlJfip4AaABAg", "publishedAt": "2022-06-26T01:13:35Z", "author": "Zeus Runa", "text": "For non repeating this work:\ndef nonRepeating(str):\r\n    str = str.replace(' ', '').lower()\r\n    \r\n    char_count = {}\r\n    \r\n    list = []\r\n    \r\n    for letter in str:\r\n        if letter in char_count:\r\n            char_count[letter] += 1\r\n        else:\r\n            char_count[letter] = 1\r\n    \r\n    for k , v in char_count.items():\r\n      if v < 2:\r\n        list.append(k)\r\n    \r\n    if not list:\r\n        return False \r\n    \r\n    return list", "likes": 0}}, {"topLevelComment": {"id": "UgxfJIN-xZrU9zGru2h4AaABAg", "publishedAt": "2022-06-22T15:13:42Z", "author": "LrdKGB", "text": "@CupofCode 01 is the best instructor so far \ud83d\udc4d", "likes": 0}}, {"topLevelComment": {"id": "UgzFpkylcQDMFj1y1EF4AaABAg", "publishedAt": "2022-06-04T21:02:35Z", "author": "Moratakki", "text": "I just like how background music changes at 27:30 from chill to mission impossible vibes", "likes": 0}}, {"topLevelComment": {"id": "UgzJ8Jhyep-Mf5txJrx4AaABAg", "publishedAt": "2022-05-28T19:49:12Z", "author": "nandini r m", "text": "Theme should have been black", "likes": 0}}, {"topLevelComment": {"id": "Ugx98vW4zOGXUNhMmWd4AaABAg", "publishedAt": "2022-05-27T14:15:15Z", "author": "Handsome_Hero", "text": "Who cares", "likes": 0}}, {"topLevelComment": {"id": "UgxnbxX-xeacNASiDXh4AaABAg", "publishedAt": "2022-05-11T15:20:55Z", "author": "\ud83d\udc49txt iphone_unlocker247\ud83d\udc48 on Instagram", "text": "The confidence you\u2b06\ufe0f\u2b06\ufe0f take in your work is really inspiring and amazing, special thanks.\ud83d\ude4f", "likes": 0}}, {"topLevelComment": {"id": "Ugyz0TYwXW_Hz6iDG3x4AaABAg", "publishedAt": "2022-05-06T14:35:12Z", "author": "Charles Peck", "text": "Thanks for this amazing tutorial", "likes": 0}}, {"topLevelComment": {"id": "Ugxn4NOTQ1Pa5espF7R4AaABAg", "publishedAt": "2022-04-24T05:24:18Z", "author": "Nav", "text": "anyone knows the background music track ?", "likes": 0}}, {"topLevelComment": {"id": "UgxnlJBbDbS0J0Q2jkN4AaABAg", "publishedAt": "2022-04-23T14:10:44Z", "author": "Decorum Lopez", "text": "listen to this while sleeping to open the dark portal.", "likes": 0}}, {"topLevelComment": {"id": "UgxBbnBjXy_qLCKokH14AaABAg", "publishedAt": "2022-04-19T13:29:12Z", "author": "raj Muchahary", "text": "Sir I'm a new to programming language. I wanna know what make Python easy then C, C++ ?", "likes": 0}}, {"topLevelComment": {"id": "UgypdndUPdc3qDHHzAh4AaABAg", "publishedAt": "2022-04-12T07:40:17Z", "author": "Content Karishma", "text": "nice video :)", "likes": 0}}, {"topLevelComment": {"id": "UgzhWH4YBNeYaKAlN354AaABAg", "publishedAt": "2022-04-09T04:59:25Z", "author": "Blockchain Domain", "text": "Love the click bait thumbnail lol", "likes": 0}}, {"topLevelComment": {"id": "Ugw43YkTdJOpw9Wbcst4AaABAg", "publishedAt": "2022-04-08T11:53:54Z", "author": "stumit_tech", "text": "At 15:01 when you said the bigo function was O(n**3) I stopped watching. The output value has nothing to do with scalability. The bigo function is O(1). Regardless of the value of n provided the function is and always will be:\n   45 * n * n * n + 20 * n * n + 19\nIt will always have 5 multiplations and 2 additions. The scale of operatons will remain the same whatever n is, hence O(1).", "likes": 0}}, {"topLevelComment": {"id": "UgygBWxbgCrTZjkEiU94AaABAg", "publishedAt": "2022-04-01T19:13:57Z", "author": "maryambanoo7", "text": "it was great, super useful. thanks a lot", "likes": 0}}, {"topLevelComment": {"id": "UgwoDJ_-sIsJdZ_Ouul4AaABAg", "publishedAt": "2022-03-26T15:29:50Z", "author": "Uponn1", "text": "27:16 this is something new, wasn't there at the 1st part :D", "likes": 0}}, {"topLevelComment": {"id": "UgxiBDWVExO0rI4kYPl4AaABAg", "publishedAt": "2022-03-18T10:47:22Z", "author": "lol", "text": "can you share this Jupiter notebook somewhere?", "likes": 0}}, {"topLevelComment": {"id": "UgyO26WU_qIa0ilECu14AaABAg", "publishedAt": "2022-03-17T17:26:03Z", "author": "Dr Kenny", "text": "return len(string) == len(dict.fromkeys([char for char in string.lower()]).keys())\n\nunique charter boolean", "likes": 0}}, {"topLevelComment": {"id": "UgwqznwS98cOsmN-1Gd4AaABAg", "publishedAt": "2022-03-16T06:42:36Z", "author": "Boxsewatio Doxsewstio", "text": "nice", "likes": 0}}, {"topLevelComment": {"id": "UgwgwpnCxXI09W_LUXF4AaABAg", "publishedAt": "2022-03-15T20:31:04Z", "author": "Dom", "text": "TONG SENG YENG FAI CHENGS", "likes": 0}}, {"topLevelComment": {"id": "Ugzvu4VD6teezVKhbbh4AaABAg", "publishedAt": "2022-03-15T02:19:19Z", "author": "Nitesh Kumar", "text": "I'm didnt watch your video and three time before see ad try to open the video but still add in starting  so I'm unsubscribed your channel", "likes": 0}}, {"topLevelComment": {"id": "Ugw8nclVkem5DML5mTV4AaABAg", "publishedAt": "2022-03-14T00:09:07Z", "author": "Scott Dungy", "text": "In your compare element method p2 should increment by 1 not 2 if a[p1] and b[p2] are equal otherwise if the first two values are equal it will miss the second", "likes": 3}, "replies": [{"id": "Ugw8nclVkem5DML5mTV4AaABAg.9ZX_KydNoAy9dMNvS0z7wi", "publishedAt": "2022-07-11T22:25:58Z", "author": "Guru E", "text": "I was thinking the same and was bamboozled When he got correct answer", "likes": 0}]}, {"topLevelComment": {"id": "Ugzrvj--nHq1ObpeD_t4AaABAg", "publishedAt": "2022-03-10T10:33:06Z", "author": "Subhobrata Mukharjee", "text": "Any has the notebook for this tutorial", "likes": 0}}, {"topLevelComment": {"id": "UgxWk4wKM1croO1wxBJ4AaABAg", "publishedAt": "2022-03-07T18:15:56Z", "author": "Kasey Moloney", "text": "I have $60,000 how do I invest it?", "likes": 0}}, {"topLevelComment": {"id": "UgzB_C4rb8GYaSDN-HZ4AaABAg", "publishedAt": "2022-03-03T00:30:56Z", "author": "Terry Yang", "text": "Thank you for the great content. I really think the question for the largest sum should be:find the sum of a contiguous subarray with the largest sum.", "likes": 1}, "replies": [{"id": "UgzB_C4rb8GYaSDN-HZ4AaABAg.9Z5I562ACht9ZOcb3_RAKP", "publishedAt": "2022-03-10T12:44:30Z", "author": "BIG DICRIC", "text": "I\u2019m\nnnnn\nI\u2019mma\nIkmkm", "likes": 0}, {"id": "UgzB_C4rb8GYaSDN-HZ4AaABAg.9Z5I562ACht9ZOcb3WLJQx", "publishedAt": "2022-03-10T12:44:30Z", "author": "BIG DICRIC", "text": "I\u2019m\nnnnn\nI\u2019mma\nIkmk", "likes": 0}]}, {"topLevelComment": {"id": "UgzT5g6uAk7_bWdMpaF4AaABAg", "publishedAt": "2022-02-21T16:09:23Z", "author": "Ravi Krishnan", "text": "is the jupyter notebook available?", "likes": 0}}, {"topLevelComment": {"id": "UgxvVUvxCKyeG01RmHR4AaABAg", "publishedAt": "2022-02-17T03:42:33Z", "author": "Max EBong", "text": "How do I set up my debugger in PyCharm so it is similar to his, its very helpful", "likes": 0}}, {"topLevelComment": {"id": "UgyVrgOVYFKPXaOuuuh4AaABAg", "publishedAt": "2022-02-12T16:06:54Z", "author": "Ramkrishna Sharma", "text": "Checking in..", "likes": 0}}, {"topLevelComment": {"id": "UgwGHyyvIvoI8JXH6j54AaABAg", "publishedAt": "2022-02-08T17:23:49Z", "author": "manoj padiyar", "text": "Rap in python", "likes": 0}}, {"topLevelComment": {"id": "UgwxaJJXf035TLuIPml4AaABAg", "publishedAt": "2022-01-21T14:15:28Z", "author": "Hetansh mehta", "text": "27:16", "likes": 0}}, {"topLevelComment": {"id": "UgyuTr4IvURTGff4QR14AaABAg", "publishedAt": "2021-12-31T05:07:47Z", "author": "Sawan Sihag", "text": "In reverse string function, you have to return reversed(words) instead of reversed (s).", "likes": 5}, "replies": [{"id": "UgyuTr4IvURTGff4QR14AaABAg.9Wb8UYLq1Nb9Xw5SdO748v", "publishedAt": "2022-02-02T04:56:45Z", "author": "DS", "text": "He said not using Python built-in functions then still use built-in reversed function in his own reverse function. It\u2019s so confusing. He only implemented the functionality of split function by his own code. In real interview, you need to also implement the reverse part by your own code.", "likes": 1}]}, {"topLevelComment": {"id": "Ugz9edMazSHO0tpSXqx4AaABAg", "publishedAt": "2021-12-27T07:56:37Z", "author": "Thee Greatest Ever", "text": "Wow I actually get Big O notation now after all this time. Thank you for this series and I am gonna be putting timestamps for myself here\nDay 1 - 43:04", "likes": 2}, "replies": [{"id": "Ugz9edMazSHO0tpSXqx4AaABAg.9WS8caKYiaD9jSAQI5yFQ4", "publishedAt": "2022-12-10T07:31:47Z", "author": "Venky karthz", "text": "yo where  is day 2", "likes": 0}]}, {"topLevelComment": {"id": "UgwzY-uRIbp18QMICw14AaABAg", "publishedAt": "2021-12-25T11:48:27Z", "author": "divjot singh", "text": "The horror tunes at back is weird and spooky", "likes": 0}}, {"topLevelComment": {"id": "UgytzAjcYc7Exy3H4gZ4AaABAg", "publishedAt": "2021-12-24T00:26:26Z", "author": "Yifan J", "text": "For finding common array question at 2:27:00, if a[p1]==a[p2], the next action should be p1 +=1, p2 +=1 right? instead of p2 +=2", "likes": 1}, "replies": [{"id": "UgytzAjcYc7Exy3H4gZ4AaABAg.9WJbik4dm6v9WZR2ctSF3q", "publishedAt": "2021-12-30T03:52:16Z", "author": "Jeff chin", "text": "Yes it should be p1 +=1, p2 +=1, if not it will  skip 1 element in p2 after finding the matches", "likes": 0}]}, {"topLevelComment": {"id": "UgwsQ2E2xcdtjPTd8Kp4AaABAg", "publishedAt": "2021-12-22T22:29:10Z", "author": "Leaders Heir", "text": "Super helpful video. By why's there music playing in the background???", "likes": 0}}, {"topLevelComment": {"id": "UgxHrOBkKY61e_F_5g54AaABAg", "publishedAt": "2021-12-20T04:09:18Z", "author": "Yifan J", "text": "For the Reverse a String problem, why does the function return \"\".join(reversed(s))? Using reversed() on the original input string can directly output 'tseb eht si sihT', the algorithm inside the defined function was not used at all right?", "likes": 0}}, {"topLevelComment": {"id": "UgxqK5MUEQ8HkueLDJ14AaABAg", "publishedAt": "2021-12-19T06:22:30Z", "author": "Yifan J", "text": "Question about the Array Algo starting at 01:06:33, this method will only work for array that contains perfect pairs, won't work for arrays like [1,5,2,2,3,3,4] and k = 6, there's an additional 2 that doesn't have another number to make up a pair. How do we deal with this type of input arrays? Thank you!", "likes": 2}}, {"topLevelComment": {"id": "UgyJ69tf5mvuEu9xPk54AaABAg", "publishedAt": "2021-12-06T02:33:13Z", "author": "Dylan Ogden", "text": "Is there mass effect music playing in the background???", "likes": 0}}, {"topLevelComment": {"id": "UgzLEShvsQlcba-6TR94AaABAg", "publishedAt": "2021-11-28T19:49:04Z", "author": "Osama Sidahmed", "text": "Shouldn't he used return ' '.join(reversed(words)) instead of return ' '.join(reversed(s)) on `How to Reverse a String`?", "likes": 0}}, {"topLevelComment": {"id": "Ugw2ysZIEHt3HzQ8Hp94AaABAg", "publishedAt": "2021-10-25T10:29:46Z", "author": "Son Hills", "text": "Omg, this cant come at a better time than now. Thank you", "likes": 0}}, {"topLevelComment": {"id": "UgzJhIHi8iHeM50zOuZ4AaABAg", "publishedAt": "2021-10-23T06:34:37Z", "author": "Arnon Marcus", "text": "It's difficult to follow when you first write code and only later explain what you're doing. It's also exactly what you should not do in an interview. You should come up with a purely verbal explanation, perhapse do some sketch of it - well before you write a single line of code. What makes it easier for an inteviewer understand what you want to do, also makes it easier for your own viewers here (and it's also what'd be expected in a real inteview, so ideally you should demonstrate that).", "likes": 1}}, {"topLevelComment": {"id": "UgyMC_iNd_NubZOrX6B4AaABAg", "publishedAt": "2021-10-22T00:40:55Z", "author": "RKadeGames", "text": "For largest sum, why are you taking max(current_sum + item, current_sum) instead of just current_sum + item ? I am getting the same answer and I'm confused. Wouldn't \"current_sum + item\" always be larger than item?", "likes": 0}, "replies": [{"id": "UgyMC_iNd_NubZOrX6B4AaABAg.9TmQInOKyT69TmgdvrHAhY", "publishedAt": "2021-10-22T03:12:30Z", "author": "RKadeGames", "text": "List comprehension is actually faster than the answer shown for Array Common Elements \n\ndef common_elements(arr1: List, arr2: List) -> List:\r\n    if len(arr1) != len(arr2):\r\n        return print(\"Please use two arrays of the same size!\")\r\n    return [item for item in arr1 if item in arr2]", "likes": 0}, {"id": "UgyMC_iNd_NubZOrX6B4AaABAg.9TmQInOKyT69TmefqYJfBo", "publishedAt": "2021-10-22T02:55:17Z", "author": "RKadeGames", "text": "The array rotation code also did not work for me:\n\ndef rotation(arr1: List, arr2: List) -> bool:\r\n    if len(arr1) != len(arr2):\r\n        return False\r\n\r\n\r\n    if sorted(arr1) != sorted(arr2):\r\n        return False\r\n\r\n    return True", "likes": 0}, {"id": "UgyMC_iNd_NubZOrX6B4AaABAg.9TmQInOKyT69Tm_d1vwwR7", "publishedAt": "2021-10-22T02:11:12Z", "author": "RKadeGames", "text": "Interview question wasn't answered correctly here's the correct code: \n\n\r\n    # Reverse String interview solution\r\n    words: List = []\r\n    i: int = 0\r\n    length = len(s)\r\n    start: int = 0\r\n    while i < length:\r\n        if s[i] == \" \":\r\n            words.append(s[start:i])\r\n            start = i + 1\r\n        i += 1\r\n\r\n    words.append(s[start:i])  # append out last word\r\n    return words[::-1]", "likes": 0}]}, {"topLevelComment": {"id": "Ugx1rBsHuWXINjZGcJV4AaABAg", "publishedAt": "2021-10-18T02:03:46Z", "author": "Andr\u00e9 Toscano", "text": "Thanks!", "likes": 0}}, {"topLevelComment": {"id": "Ugw8TFeFtFteV4AY0Mh4AaABAg", "publishedAt": "2021-10-12T03:30:02Z", "author": "Bruno Cabral", "text": "Too many errors", "likes": 0}}, {"topLevelComment": {"id": "UgwGY_gwGHb-wTC-_1d4AaABAg", "publishedAt": "2021-10-11T20:48:10Z", "author": "Ibby", "text": "Great content. Quick question, though: For the array common elements, why not change one array into a set and then check if each element of the other array is in that set and append to the output list if they are? Is this not optimal?\n\nAlso, in the non-repeating elements in array problem, when iterating over the sorted items of the dictionary, comparing the letter frequency to the lowest frequency in the dictionary doesn't guarantee uniqueness. If you change the input string to \"I Apple is Ape Peels\" you'd get back [ i, a, l, s] since they have the lowest frequencies of 2. The code should be changed to \"if item[1] == 1:\" to guarantee the letter is unique/only shows up once in the string.", "likes": 3}, "replies": [{"id": "UgwGY_gwGHb-wTC-_1d4AaABAg.9TNFiFuqy4R9gkfk4RSkEK", "publishedAt": "2022-10-04T07:45:38Z", "author": "Tyler Napier", "text": "T       Bc          To s\ud83c\udf89\ud83d\ude2eSad I love \u2764\ud83d\ude22\ud83d\ude2e\u2764\ud83c\udf89\u2764\u2764\ud83d\ude22\ud83d\ude22\u2764\ud83d\ude22\ud83c\udf89\ud83c\udf89\ud83c\udf89\ud83c\udf89", "likes": 0}]}, {"topLevelComment": {"id": "UgywUaDBIxNqGKxQOGp4AaABAg", "publishedAt": "2021-10-10T17:53:30Z", "author": "duggin", "text": "did anyone see that picture of that female in video 2 ????", "likes": 0}}, {"topLevelComment": {"id": "Ugw5FAk_T3SgmP_5pvh4AaABAg", "publishedAt": "2021-09-20T18:18:39Z", "author": "will2see", "text": "You are talking (babbling) way too much!", "likes": 1}}, {"topLevelComment": {"id": "UgxOsm_tVexfZYCm_NB4AaABAg", "publishedAt": "2021-09-20T18:06:28Z", "author": "will2see", "text": "5:30 - No! By a factor of 1000. Or you may say by 3 orders of magnitude, but not by a factor of 3 !!!", "likes": 0}}, {"topLevelComment": {"id": "Ugy8WpUFMckWRNrz_494AaABAg", "publishedAt": "2021-09-16T05:56:36Z", "author": "/u/forgotmy_username", "text": "It's in your notebook but I thought it is worth pointing out - n^to any power is polynomial. No need to make a distinction between n^2 or n^3.", "likes": 0}}, {"topLevelComment": {"id": "UgyXrjfF2dv79Ux8Pv54AaABAg", "publishedAt": "2021-08-29T02:11:45Z", "author": "Harshad K", "text": "..when we observe data based iterative calculations long enough then we can come up with formulas", "likes": 0}}, {"topLevelComment": {"id": "UgwfYHyNxd6ouMAnu494AaABAg", "publishedAt": "2021-08-29T01:24:15Z", "author": "Kenichi Mori", "text": "O bytes.", "likes": 0}}, {"topLevelComment": {"id": "Ugw-qIU0nk5inZTfyCB4AaABAg", "publishedAt": "2021-08-25T17:59:31Z", "author": "S B", "text": "Python algorithms for interviews -\n\nWhat? Now snakes need to know how to program just to get a job to live at the zoo?\n\n\uff2c\uff35\uff2c\uff3a", "likes": 0}}, {"topLevelComment": {"id": "Ugw_gAYjy-ihrUHvtq94AaABAg", "publishedAt": "2021-08-24T18:08:08Z", "author": "RiverSome", "text": "my asmr session", "likes": 0}}, {"topLevelComment": {"id": "Ugx2ooQlhP0XLoHN9YR4AaABAg", "publishedAt": "2021-08-19T16:14:17Z", "author": "aanay bhure", "text": "#eazzylearninglab", "likes": 0}}, {"topLevelComment": {"id": "Ugzz9ZenSbxOCKrIQER4AaABAg", "publishedAt": "2021-08-18T17:50:02Z", "author": "Galymzhan Kenesbekov", "text": "please, do more of these videos", "likes": 0}}, {"topLevelComment": {"id": "Ugz_KvkAjMdZdN56mPF4AaABAg", "publishedAt": "2021-08-14T23:15:15Z", "author": "Xavier", "text": "Best vdo I have ever seen.... Ever \ud83d\udd25", "likes": 0}}, {"topLevelComment": {"id": "UgyBv5AwhNdB-e51Xql4AaABAg", "publishedAt": "2021-08-10T05:54:33Z", "author": "Akash Manoj Choudhary", "text": "Can you share the notebooks used in this video?", "likes": 0}}, {"topLevelComment": {"id": "UgybE_h0-RgoPRXOivd4AaABAg", "publishedAt": "2021-08-09T21:21:49Z", "author": "sonabTV", "text": "\"the operation gonna be exponential because we are O(n^2)\" NO the operation is going to be quadratic. 2^n is exponential.", "likes": 1}}, {"topLevelComment": {"id": "UgzwQnDhe4eozrJTkx54AaABAg", "publishedAt": "2021-08-08T22:44:19Z", "author": "Mr. Pickle", "text": "Bruh you really catfished us with that thumbnail", "likes": 0}}, {"topLevelComment": {"id": "UgzlMLBtYY8gIy5pyiJ4AaABAg", "publishedAt": "2021-08-08T21:49:18Z", "author": "Punky Pinko", "text": "The fact that you're here to learn algorithms for interviews just shows how dumb these interview questions are. People who ask you these questions in interviews have no idea how to actually interview people. If you get asked these questions in an interview, and you care about finding a good place to work, look elsewhere. Asking \"gotcha questions\" in interviews is a sure sign you would be working with people who are just going through the motions with no real appreciation for solving actual problems and doing good work.", "likes": 1}}, {"topLevelComment": {"id": "UgxmlfHGl9MnMXeVP354AaABAg", "publishedAt": "2021-08-08T19:50:22Z", "author": "George", "text": "Wrong! 45*n^3 + 20*n^2 + 19 has O(1) complexity. Because for n = 1 and for n = 10000000000 you need to do exactly the same amount of multiplications.", "likes": 0}}, {"topLevelComment": {"id": "Ugz8XVyYZWsz1DcMQHF4AaABAg", "publishedAt": "2021-07-30T06:51:17Z", "author": "Crypto Cicada", "text": "Thank you guys", "likes": 0}}, {"topLevelComment": {"id": "UgyV_LSvo_4S870kGuF4AaABAg", "publishedAt": "2021-07-29T22:40:06Z", "author": "Moonlight", "text": "In last algorithm to get non_repeating elements in array, the last if statement  which compares  each element in sorted y with y[0][1] is not a good idea, string with no unique chars will break this part and will return list with elements which are repeated  min time instead of empty list, so it is better to compare to one, like if item[i] == 1", "likes": 1}}, {"topLevelComment": {"id": "Ugzr-WaftcKnOai-yql4AaABAg", "publishedAt": "2021-07-29T21:44:50Z", "author": "Ishwarya J", "text": "you could have explained it more slower it is difficult to understand because English is not my native language", "likes": 0}}, {"topLevelComment": {"id": "UgxYt2hKu6c6T7GWJbN4AaABAg", "publishedAt": "2021-07-29T15:06:20Z", "author": "Moonlight", "text": "For finding Array Common Elements,  in first if statement when we find common element we need to increase p1 and p2 by one. Because for input like: a = [1,2,3,8,9], b = [2,4,7,8,9] we get not correct answer if we move p2  to two position forward.", "likes": 9}, "replies": [{"id": "UgxYt2hKu6c6T7GWJbN4AaABAg.9QO5lvMX4Qc9gX6smBu9B9", "publishedAt": "2022-09-28T16:02:53Z", "author": "varun pratap", "text": "I was also wondering the same. So I looked into comments to confirm \ud83d\ude0a.", "likes": 0}]}, {"topLevelComment": {"id": "UgyEYRhftd2Qg_oZIct4AaABAg", "publishedAt": "2021-07-26T14:55:02Z", "author": "Bob Marley", "text": "3:22 _\"Someone's gonna complain about that right ...F.U\"_ \ud83d\ude02 exactly, F them... F them all", "likes": 0}}, {"topLevelComment": {"id": "UgwjoZDaLv-BC3cyn654AaABAg", "publishedAt": "2021-07-20T21:16:35Z", "author": "antonio escajeda", "text": "The minesweeper exercise is prety simple if you knwo how to play it", "likes": 0}}, {"topLevelComment": {"id": "UgwD1clvlI0laSD0cRt4AaABAg", "publishedAt": "2021-07-19T15:39:37Z", "author": "Phan G B", "text": "1:39:34", "likes": 0}}, {"topLevelComment": {"id": "UgwfpK40OVMOuANfO594AaABAg", "publishedAt": "2021-06-29T14:16:17Z", "author": "sachin pandey", "text": "where we can get that code file link", "likes": 0}}, {"topLevelComment": {"id": "UgzvSGIqn_Lzmf7MbvF4AaABAg", "publishedAt": "2021-06-28T12:24:24Z", "author": "Clement Soja Zonko", "text": "Good", "likes": 0}}, {"topLevelComment": {"id": "UgyEtJ6AC152riOgAa54AaABAg", "publishedAt": "2021-06-25T20:17:41Z", "author": "klemen komel", "text": "reverse = string[-1::-1] ?", "likes": 0}}, {"topLevelComment": {"id": "UgwCr3vmGBv6H8jrF9h4AaABAg", "publishedAt": "2021-06-19T04:34:16Z", "author": "rajeeev ranjan", "text": "whr I can get this notebook?", "likes": 0}}, {"topLevelComment": {"id": "UgyIE41AZmzOqy1P4_F4AaABAg", "publishedAt": "2021-06-17T22:05:10Z", "author": "chrisposeed", "text": "1:08:15, that's what she said.", "likes": 0}}, {"topLevelComment": {"id": "Ugzw4A1Z8lTyj8aTclN4AaABAg", "publishedAt": "2021-06-01T00:08:25Z", "author": "Void Vis Vires", "text": "I hear that corpus warframe music in the background in the Array Sequences part. I kept thinking I had the game open even though ik i closed it before watching lol", "likes": 1}}, {"topLevelComment": {"id": "UgxJBSd82lTH6K9cO754AaABAg", "publishedAt": "2021-05-25T07:39:11Z", "author": "Jessie L", "text": "For the reverse() function, you just made a small mistake when you return. You should have reversed words instead of s. Hope you did find out later.", "likes": 14}}, {"topLevelComment": {"id": "Ugwh3tAtBAyj2anAWZF4AaABAg", "publishedAt": "2021-05-23T07:57:44Z", "author": "Jessie L", "text": "How is number of loops calculated? Why sum1(100) has 100000 loops and sum2(100) has 10000000 loops? And how to calculate the total time spent? Is it number of loops*time spent per loop?", "likes": 0}}, {"topLevelComment": {"id": "Ugw8ElSTf6CC5N5P8St4AaABAg", "publishedAt": "2021-05-12T23:28:16Z", "author": "Walt Whit", "text": "i like algorithms.", "likes": 0}}, {"topLevelComment": {"id": "Ugw4qsVvslkFauHUN6N4AaABAg", "publishedAt": "2021-05-12T15:04:48Z", "author": "SoupconianAbundance", "text": "How to Reverse a String: You're returning s instead of words. You could remove your loop and still have the same result.", "likes": 1}}, {"topLevelComment": {"id": "UgygINNd_yaS6hxaAk14AaABAg", "publishedAt": "2021-05-12T08:09:05Z", "author": "Marek Provazn\u00edk", "text": "Correct me if I'm wrong but I think there's a little bug on line 23 in 59:12. I think there should be count[letter] = -1 rather than count[letter] = 1 because this way function returns True for anagram(\"Clint Eastwood\", \"Old WEST ActionKK\") even if the K letter is not in the first sentence at all.", "likes": 5}, "replies": [{"id": "UgygINNd_yaS6hxaAk14AaABAg.9NEW0_ZYtME9WU1S3ZwPIf", "publishedAt": "2021-12-28T01:32:21Z", "author": "newmerek", "text": "Its not actually a bug because his algorithm would actually return false for your example because the length check would return true so then the function would return false. and even if you changed the input to have the length the same, yes 'k's count would equal 0, but 1 or more other characters would have a non-zero count because for every unmatching character in one string there must be a corresponding unmatching character in the other string. Also you could actually just return false instead of setting count[letter] = -1, because you already know at this point that count['k'] will not equal 0. It wouldn't change big o but would still make the function slightly faster.", "likes": 1}]}, {"topLevelComment": {"id": "Ugyu4C_muOZTaUNktwl4AaABAg", "publishedAt": "2021-05-11T14:25:04Z", "author": "SoupconianAbundance", "text": "Can someone refer me to the optimal solution for the Trio Sum example? \n\nI made the exercise but can't verify whether its properly written.\n\ndef example_trio_sum_01(values, k):\n    start_time = time()\n    output = set()\n    seen_1 = set()\n    seen_2 = set()  # list numbers which appeared at least twice in the values-list\n\n    if len(values) < 3:\n        return output\n\n    for val in values:\n        target = k - val\n        for s in seen_1:  # loop through seen_1 and check whether a value in seen_1 plus a value in seen_2 is gets the target\n            target_2 = target - s\n            if target_2 in seen_1 and (target_2 != s or target_2 in seen_2):\n                mx = max([val, s, target_2])\n                mn = min([val, s, target_2])\n                me = int(np.median([val,s,target_2]))\n                output.add((mx, me, mn))\n        if val in seen_1:\n            seen_2.add(val)\n        else:\n            seen_1.add(val)\n    print(\"example_trio_sum_02--- %s seconds ---\" % (time() - start_time))\n    return output", "likes": 0}}, {"topLevelComment": {"id": "Ugx3v6swiP_Lx5UZ2hR4AaABAg", "publishedAt": "2021-05-08T08:34:31Z", "author": "Weiming Shi", "text": "In array common elements, if you put p2 += 2, then input list with for example, [1,3,4,5,6,7,8], [1,3,7,8,9,10]. you get result of [1,7] which clearly wrong, because the algorithm is skipping p2[1] which p1[1] equals to.\n\nIt should be revised as p2 += 1", "likes": 0}}, {"topLevelComment": {"id": "Ugwz1c2Vd-zSSgSU7t14AaABAg", "publishedAt": "2021-05-05T02:04:07Z", "author": "Lack", "text": "Great Tutorial", "likes": 0}}, {"topLevelComment": {"id": "Ugxn7znc7iDG4m5s9nV4AaABAg", "publishedAt": "2021-04-27T13:48:35Z", "author": "Needa Addressa", "text": "Good God, this man has a soporific voice, at whatever speed. The fact that he's way too fast at normal, but the best sleep aid ever at 0.75 is killing me. \n\nHelpful information for sure, but dangggggggggggggg.", "likes": 0}}, {"topLevelComment": {"id": "UgzHyQXvhqMvj34awhl4AaABAg", "publishedAt": "2021-04-27T01:11:25Z", "author": "Nitesh Rijal", "text": "in the minesweeper question, there's negative indexing into play for the 3x3 matrix checks", "likes": 0}}, {"topLevelComment": {"id": "UgwMBwsjUdkz51f3raN4AaABAg", "publishedAt": "2021-04-24T14:37:30Z", "author": "Devesh sety", "text": "pause at 27.17 lol", "likes": 0}}, {"topLevelComment": {"id": "UgxtR_UpMU5NdhvTVYR4AaABAg", "publishedAt": "2021-04-23T10:51:37Z", "author": "Mario D\u00fcrndorfer", "text": "print(common_elements([1,3,4,6,7,9],[1,3,4,5,9,10])) is not working correctly (same second element)\n\ni think the p2 += 2 is a typo...the value should be 1", "likes": 1}}, {"topLevelComment": {"id": "UgynSCU6yonSZ9fmXeB4AaABAg", "publishedAt": "2021-04-19T15:14:41Z", "author": "Soapsy Doopsy", "text": "This is best of python video I saw till date with explanation and perfect debugging which helped me understand the stuff I missed. And TBT I take around a week to month to complete a video of this time range. This I did in just 3 days. Too awesome to let it wait. Thanks", "likes": 5}, "replies": [{"id": "UgynSCU6yonSZ9fmXeB4AaABAg.9MK2RfinQsH9h3YexMZlt1", "publishedAt": "2022-10-12T00:59:50Z", "author": "Nian's Channel", "text": "1 y late but same", "likes": 0}]}, {"topLevelComment": {"id": "UgwxJCg4G4xFQyuGXFp4AaABAg", "publishedAt": "2021-04-19T04:49:14Z", "author": "Tarun K", "text": "Please share a link to this notebook!", "likes": 0}}, {"topLevelComment": {"id": "UgyBAl3_FJKSxkYcwyF4AaABAg", "publishedAt": "2021-04-16T06:49:59Z", "author": "Jeevan Nagendra B S", "text": "thanks for the vidio , i learn a lot of new things .. got an idea how to implement things.. love from india", "likes": 0}}, {"topLevelComment": {"id": "Ugw-gYkhIPfwY0L6e8Z4AaABAg", "publishedAt": "2021-04-11T21:08:12Z", "author": "Jason Li", "text": "Thank you so much. For the maximum sum, should we update the current sum as:  current_sum = max(current_sum, current_sum + num) ?", "likes": 5}, "replies": [{"id": "Ugw-gYkhIPfwY0L6e8Z4AaABAg.9M04XrbvpFu9XAgLHlfvgG", "publishedAt": "2022-01-14T09:45:00Z", "author": "\u0411\u0435\u043a\u0437\u0430\u0442 \u0422\u0443\u0440\u0430\u0440\u043e\u0432", "text": "I agree with you, if you change like that then we don't need `max_sum` variable", "likes": 0}]}, {"topLevelComment": {"id": "UgxpIUcrMkM0Mqwex0d4AaABAg", "publishedAt": "2021-04-07T10:49:12Z", "author": "Yousef", "text": "background music is weird", "likes": 0}}, {"topLevelComment": {"id": "UgzO1Qi-_axna9-Gi-t4AaABAg", "publishedAt": "2021-03-24T10:53:03Z", "author": "Tabirca Adrian", "text": "I tought I forgot to put the playback speed from 1.5x  back to normal but it was already on normal hehe", "likes": 192}, "replies": [{"id": "UgzO1Qi-_axna9-Gi-t4AaABAg.9LGcpgIP1gv9imxwRH5iQr", "publishedAt": "2022-11-23T22:05:53Z", "author": "Lit Tricks", "text": "That's not how a coder would phraseit", "likes": 0}, {"id": "UgzO1Qi-_axna9-Gi-t4AaABAg.9LGcpgIP1gv9gpPcIX3kfu", "publishedAt": "2022-10-06T03:52:13Z", "author": "Amin Asbai", "text": "@Emir K a ver qu\u00e9 te dicen cosas de las buenas y en la que estamos a sus padres tb y no se puede hacer el w y todo esto va bien el d\u00eda durmiendo y no podemos vernos en alg\u00fan d\u00eda aunque no lo que te parezca bien un beso grande para ti y a todos lados y vosotros y me dijo el m\u00e9dico me ha contestado muchas felicidades en este caso much\u00edsimas felicidades por el momento much\u00edsimas felicidades por el momento much\u00edsimas felicidades por el momento de la amistad much\u00edsimas felicidades por el momento much\u00edsimas felicidades besos dulces abrazos besos y abrazos para todos los besos besos abrazos abrazos besos y saludos obtener el nuestro saludo gracias por informarme vuestro saludo gracias por su atenci\u00f3n Saludos saludos saludos enviado Saludos saludos salud y cordial escaneado saludos saludos Saludos Saludos saludos Saludos Saludos obtener el t\u00edtulo del mundo compartir vuestros sue\u00f1os pasarlo a la vuestras felicitaciones por vuestras vuestras vuestras vuestras felicitaciones por el momento much\u00edsimas bendiciones seguiremos en nuestros d\u00edas de perfil feliz d\u00eda saludos saludos enviado desde un favor me puedes ayudar saludos y gracias espero vuestra w saludos saludos enviado saludos saludos desde Espa\u00f1a de vacaciones en pareja para ti y tu tambi\u00e9n puedes hacer el bizum jajaja para ti y tu tambi\u00e9n puedes compartir en la foto gracias Saludos saludos cordiales enviado saludos cordiales obtener el nuestro abrazo y muchas felicidades Saludos saludos obtener www xrW saludo gracias por la ma\u00f1ana Saludos saludos enviado enviado enviado el martes saludo gracias por su apoyo para la casa de la salud w deseo de vuestros sue\u00f1os y muchos abrazos abrazos dulces sue\u00f1os abrazos abrazos abrazos abrazos abrazos abrazo abrazo obtener el nuestro saludo saludos obtener el nuestro es que est\u00e1is muchos saludos cordiales obtener obtener compartir con nuestros nuestros disfrutar saludos obtener saludos saludos cordiales seguir encantado nuestros servicios compartir nuestros servicios y ustedes puedas vuestros deseos ww saludos saludos saludos saludos cordiales obtener vuestras felicitaciones por el resto del trabajador feliz d\u00eda est\u00e1is seguimos en deseo de tus ancestros y deseo que tengas un buen lugar deseo saludos cordial disfrutar saludos cordiales saludos saludos cordiales obtener participar alegro que te hab\u00e9is saludo saludos cordiales obtener el siguiente", "likes": 0}, {"id": "UgzO1Qi-_axna9-Gi-t4AaABAg.9LGcpgIP1gv9XBtdAgG_HB", "publishedAt": "2022-01-14T21:00:25Z", "author": "Soumyakant Swain", "text": "Put the playback speed slower", "likes": 0}, {"id": "UgzO1Qi-_axna9-Gi-t4AaABAg.9LGcpgIP1gv9RSmwYYQEYg", "publishedAt": "2021-08-25T07:20:37Z", "author": "Roman Snyder", "text": "@Emir K oooo", "likes": 0}, {"id": "UgzO1Qi-_axna9-Gi-t4AaABAg.9LGcpgIP1gv9RSmw8uK45i", "publishedAt": "2021-08-25T07:20:34Z", "author": "Roman Snyder", "text": "@Emir K o", "likes": 0}]}, {"topLevelComment": {"id": "UgytFAHVnuD2QBuo4xh4AaABAg", "publishedAt": "2021-03-18T08:53:03Z", "author": "Patryk Kotarski", "text": "At 59:37 code is bugged. If the first string is 'aa' and the second string is 'aabb' the count will still equal 0 because you are adding the letter from the second string with a default value of 1. Instead you should just return False...", "likes": 1}, "replies": [{"id": "UgytFAHVnuD2QBuo4xh4AaABAg.9L0yKSHgSt29WUFR98DKvK", "publishedAt": "2021-12-28T03:34:33Z", "author": "newmerek", "text": "@Patryk Kotarski \nhere is a version with one loop if you are interested\nI do a little swap at the beginning to minimize checking for index out of bounds, I also do waste one array size for totalCount to simplify the algorithm. This function does have a high probability of returning before going thru the entire input in the false case.\ndef anagram2(s1, s2):\r\n\t\r\n\tif len(s1) < len(s2):\r\n\t\ttemp = s1\r\n\t\ts1 = s2\r\n\t\ts2 = temp\r\n\r\n\ts1len = len(s1)\r\n\ts2len = len(s2)\r\n\t\r\n\tcount = {}\r\n\ttotalCount = [0,0,0]\r\n\t\r\n\tdef updateCount(s, delta):\r\n\t\tletter = s[i]\r\n\t\tif letter == ' ':\r\n\t\t\treturn\r\n\t\tletter = letter.lower()\r\n\t\tif letter in count:\r\n\t\t\tcount[letter] += delta\r\n\t\t\tif count[letter] * delta > 0:\r\n\t\t\t\ttotalCount[delta] += 1\r\n\t\t\telse:\r\n\t\t\t\ttotalCount[delta * -1] -= 1\r\n\t\telse:\r\n\t\t\tcount[letter] = delta\r\n\t\t\ttotalCount[delta] += 1\r\n\r\n\tfor i in range(s1len):\r\n\t\tupdateCount(s1, 1)\r\n\t\tif i < s2len:\r\n\t\t\tupdateCount(s2, -1)\r\n\t\tif totalCount[1] > s2len - i:\r\n\t\t\treturn False\r\n\t\tif totalCount[-1] > s1len - 1:\r\n\t\t\treturn False\r\n\t\r\n\treturn True\r\n\r\nprint(anagram2(\"aa\",\"aabb\"))", "likes": 1}, {"id": "UgytFAHVnuD2QBuo4xh4AaABAg.9L0yKSHgSt29L0yadsyNTR", "publishedAt": "2021-03-18T08:55:23Z", "author": "Patryk Kotarski", "text": "Just realised it is not bugged because this only happens when length is different but you check for that at the beginning\nHowever you still do useless cycles over the strings,\nAnother optimisation would be not to remove spaces nor lowercase characters but simply skip them while iterating and lowercase them\n\nAlso all of this can be done with 2 cycles, one to update the dict and the second one to count zeros", "likes": 0}]}, {"topLevelComment": {"id": "UgzDJavvL0GIDtcQuLF4AaABAg", "publishedAt": "2021-02-28T11:12:44Z", "author": "No Copyright Gameplay Stock Videos", "text": "Damn!  The background music is so inspiring and soothing and calming! It literally got me to write code forcibly!", "likes": 2}}, {"topLevelComment": {"id": "UgzHOSTbuEDKE3yj_mJ4AaABAg", "publishedAt": "2021-02-26T17:47:07Z", "author": "Anthony O'Halloran", "text": "If you set playback speed to x0.75 so you have time to comprehend..... the music becomes more sinister.", "likes": 17}}, {"topLevelComment": {"id": "UgwSOpDzNpMBL-KwKZV4AaABAg", "publishedAt": "2021-02-24T05:18:31Z", "author": "Elite Defender", "text": "Hoping this tutorial will make me win every battles in clash of code", "likes": 6}}, {"topLevelComment": {"id": "UgyF8psKqD5aBtlVVF94AaABAg", "publishedAt": "2021-02-20T08:45:59Z", "author": "Mercurius", "text": "There is an error in Common Elements.\ndef common_elements(a,b):\n    p1 = 0\n    p2 = 0\n    result = []\n\n    while p1 < len(a) and p2 < len(b):\n        if a[p1] == b[p2]:\n            result.append(a[p1])\n            p1 += 1\n      \ud83d\udc49  p2 += 2(here should 1, if it's 2, it will overlook an element in b after the same element)\n\n        elif a[p1] > b[p2]:\n            p2 += 1\n\n        else:\n            p1 += 1\n\n    return result\nprint(common_elements([1,3,4,5,6,7,9],[1,4,5,9,10]))\nOutput:[1,5]", "likes": 1}}, {"topLevelComment": {"id": "UgydRfByJlIuW2fY4mt4AaABAg", "publishedAt": "2021-02-15T13:30:14Z", "author": "Merle Abat", "text": "I like the speed and the background music", "likes": 1}}, {"topLevelComment": {"id": "Ugyc5hkjaFNF6UxLYuV4AaABAg", "publishedAt": "2021-02-13T10:14:21Z", "author": "Gameplay", "text": "The array algorithms part is a bit vague for me. \nSet does not allow you to add the same element more than once, so if you write it using if-else there is no need for max or min, this does the same:\n        if target not in seen:\n            seen.add(num)\n        else:\n            output.add((target, num))\n\nOn the other hand you can reverse the logic and remove the else, use the min/max and achieve the same result:\n\nif target in seen:\n    output.add((min(target, num), max(target, num)))\nseen.add(num)\n\nCan somebody give this thinking a sanity check?", "likes": 1}}, {"topLevelComment": {"id": "Ugwt4AvxbEoJ5IvHX8V4AaABAg", "publishedAt": "2021-02-07T19:52:13Z", "author": "Momo", "text": "25:34", "likes": 1}}, {"topLevelComment": {"id": "UgyXqBMVSh9A4Ex_R_F4AaABAg", "publishedAt": "2021-01-27T07:39:52Z", "author": "Shawn Irwin", "text": "If(item in lst):\n    return True\n\nNo need for a for loop.", "likes": 1}}, {"topLevelComment": {"id": "UgyboUcU3QYEll9iI_94AaABAg", "publishedAt": "2021-01-19T22:24:07Z", "author": "John Mahugu", "text": "BEEN LOOKING FOR THIS, THANK YOU SO MUCH :D", "likes": 1}}, {"topLevelComment": {"id": "UgzG4vSawuIcQEtzAFJ4AaABAg", "publishedAt": "2021-01-13T08:43:46Z", "author": "Konstantin Gorbunov", "text": "for last one. This solution is better:\ndef all_unique(s):\r\n    s = s.replace(' ', '').lower()\r\n\r\n    char_count = {}\r\n\r\n    unique_chars = []\r\n\r\n    for c in s:\r\n        if c in char_count:\r\n            char_count[c] += 1\r\n        else:\r\n            char_count[c] = 1\r\n\r\n    for c in s:\r\n        if char_count[c] == 1:\r\n            unique_chars.append(c)\r\n\r\n    return unique_chars", "likes": 1}, "replies": [{"id": "UgzG4vSawuIcQEtzAFJ4AaABAg.9IS9OS_-qoT9Qt9nYsjFKT", "publishedAt": "2021-08-11T01:57:13Z", "author": "Mykhailo Shutkov", "text": "I'm sure that this code should be simple\nfrom collections import Counter\r\nspam = lambda x: max(Counter(x.replace(\" \",\"\")).values())==1\r\nham = lambda x: len(x.replace(\" \",\"\"))==len(set(x.replace(\" \",\"\")))\r\ndef eggs(x):\r\n    s = set()\r\n    for i in x:\r\n        if i in s and i!=\" \": return False\r\n        elif i!=\" \": s.add(i)\r\n    return True", "likes": 0}]}, {"topLevelComment": {"id": "Ugz0R8HKX8MKf0c_cpN4AaABAg", "publishedAt": "2021-01-12T14:43:54Z", "author": "Konstantin Gorbunov", "text": "This is better for mine_sweeper\nfor i in row_range:\r\n            if 0 <= i < num_rows:\r\n                for j in col_range:\r\n                    if 0 <= j < num_cols and field[i][j] != -1:\r\n                        field[i][j] += 1", "likes": 0}}, {"topLevelComment": {"id": "UgyzrI-k16di01hWyJt4AaABAg", "publishedAt": "2021-01-12T11:46:23Z", "author": "Konstantin Gorbunov", "text": "I think you made a mistake in common_elements. It has to be p2 += 1 instead of p2 +=2", "likes": 7}}, {"topLevelComment": {"id": "UgyWP4kLi8mpt2b6zUF4AaABAg", "publishedAt": "2021-01-12T07:27:22Z", "author": "Konstantin Gorbunov", "text": "Back music name?", "likes": 0}, "replies": [{"id": "UgyWP4kLi8mpt2b6zUF4AaABAg.9IPRr0_GMRU9IPSMeB2TYJ", "publishedAt": "2021-01-12T07:31:49Z", "author": "Konstantin Gorbunov", "text": "found \r\nDeus Ex: Mankind Divided (Original Soundtrack)", "likes": 0}]}, {"topLevelComment": {"id": "UgxcsUXFQCiaJNn8kE94AaABAg", "publishedAt": "2021-01-09T21:27:37Z", "author": "md kaiser ali", "text": "you are an angel for us ....love from india", "likes": 2}}, {"topLevelComment": {"id": "UgxyY-x2EC4luTqKInp4AaABAg", "publishedAt": "2020-12-17T22:51:38Z", "author": "thempenguindrums0", "text": "thanks for the video! does the link to the Jupiter exist anywhere?", "likes": 1}}, {"topLevelComment": {"id": "UgzHGjD3QxWQJdD_SwV4AaABAg", "publishedAt": "2020-12-10T21:55:33Z", "author": "Intruder", "text": "My man rocking Deus Ex MD soundtrack during the tutorial", "likes": 12}}, {"topLevelComment": {"id": "Ugyj7PNuXBkhMUnTe9h4AaABAg", "publishedAt": "2020-12-09T17:04:32Z", "author": "A V", "text": "Who else saw the image for the big o \ud83d\ude02", "likes": 0}, "replies": [{"id": "Ugyj7PNuXBkhMUnTe9h4AaABAg.9H2vs_UbF6C9JAmC6jpyrh", "publishedAt": "2021-01-31T11:16:40Z", "author": "Patrick Klein", "text": "It looked more like she's possessed by a demon...", "likes": 0}]}, {"topLevelComment": {"id": "UgwRPHsk8EMLmYv0o5p4AaABAg", "publishedAt": "2020-12-08T03:23:32Z", "author": "Mike", "text": "if i want video game music, i go play video game. what a joke,", "likes": 0}}, {"topLevelComment": {"id": "UgzP6Ix5WgrQZm_HTgV4AaABAg", "publishedAt": "2020-11-28T08:53:26Z", "author": "afsdf sdfsdf", "text": "27:16", "likes": 15}}, {"topLevelComment": {"id": "Ugxt64B_Tl3VuqwdP9Z4AaABAg", "publishedAt": "2020-11-24T08:36:41Z", "author": "MOVIE MANIA", "text": "Is there any student of 8th grade like me?\ud83d\ude0a\ud83d\ude0a", "likes": 1}}, {"topLevelComment": {"id": "UgyRUEl_gSoxKa2px1N4AaABAg", "publishedAt": "2020-11-15T15:17:12Z", "author": "Best of TikTok", "text": "who's from russia?", "likes": 1}}, {"topLevelComment": {"id": "UgzoyAzpKkL5apKKwpd4AaABAg", "publishedAt": "2020-11-04T06:38:01Z", "author": "Trywell Washington", "text": "44:30 The time for a computer to recall (given that you instruct \n the computer to recall) the contents of a part of an array does not always change based on ... (Im havin trouble finishing that statement) the number of different memory addresses the array consumes in total? (Thats close, in my mind: if the array consumed all memory available to it, the time for the computer to recall the contents of a part of the array would not definitely change for every recall instruction. There is a fixed maximum time the recall would take. Because there's a fixed maximum time (worst case scenario) the task is called a constant-time task--O(1).", "likes": 1}, "replies": [{"id": "UgzoyAzpKkL5apKKwpd4AaABAg.9FcgMDX1tCa9FcpvKIn5C3", "publishedAt": "2020-11-04T08:01:35Z", "author": "Trywell Washington", "text": "1:19:25 ? join(map(str.list)) whatever\n\nalso variable names here should be better", "likes": 0}]}, {"topLevelComment": {"id": "UgyzjVsteYntgJLWeqV4AaABAg", "publishedAt": "2020-10-29T18:03:15Z", "author": "MusiQ8dict", "text": "@27:16 The lady in pic is in Orgasm.. was it due to the algorithm or the background music :D", "likes": 0}}, {"topLevelComment": {"id": "UgwU8LAZQagx1eOfUnB4AaABAg", "publishedAt": "2020-10-18T17:14:04Z", "author": "Bonjour Tech", "text": "thank you so much", "likes": 1}}, {"topLevelComment": {"id": "UgwzaPQlo6zGEUop3QN4AaABAg", "publishedAt": "2020-10-18T12:27:05Z", "author": "Lord shiv", "text": "did anybody notice girl face??", "likes": 0}}, {"topLevelComment": {"id": "UgwqTwDWUVgrT4J6Rdt4AaABAg", "publishedAt": "2020-10-15T21:36:33Z", "author": "Imane Belle", "text": "for the largest sum could you instead have an if statement within the for loop to say if num<0 maxsum=maxum else maxsum=+num", "likes": 2}, "replies": [{"id": "UgwqTwDWUVgrT4J6Rdt4AaABAg.9EqnHk2JK8u9PkVs96BfMu", "publishedAt": "2021-07-13T20:45:31Z", "author": "Movies Night", "text": "nah he changed the statement later. He said he was finding the maximum of the largest continuous sum of that array.", "likes": 1}, {"id": "UgwqTwDWUVgrT4J6Rdt4AaABAg.9EqnHk2JK8u9OmqVGQ2gJB", "publishedAt": "2021-06-19T22:01:35Z", "author": "Barry Ma", "text": "exactly lol", "likes": 0}]}, {"topLevelComment": {"id": "UgzYJ1tMdJZid22JbEh4AaABAg", "publishedAt": "2020-09-22T00:10:47Z", "author": "Public Security Secion 9", "text": "\"public relations\" is an anagram for \"crap built on lies\" lol.", "likes": 2}}, {"topLevelComment": {"id": "UgwxIhB7FVoYgC0f5AB4AaABAg", "publishedAt": "2020-09-07T10:38:52Z", "author": "Mokroargra", "text": "I'm new to learning Algo's the proper way, I've been coding with Python going on 2 years. I had a question about Array common elements (2HR Timestamp). I assume the example you gave is used for a reason but I am curious about the difference of that and...\n\ndef comp(a, b):\n    result = []\n    \n    for num in a:\n        if num in b:\n            result.append(num)\n    print(f'Numbers found in both list: {result}')\ncomp([1, 3, 4, 6, 7, 9], [1, 2, 4, 5, 9, 10])\n\nNumbers found in both list: [1, 4, 9]\n\nLike I said I am just curious if its a time complexity thing, proper way of doing this problem, most pythonic whatever the case may be just wanted to get more info. Thanks.", "likes": 1}, "replies": [{"id": "UgwxIhB7FVoYgC0f5AB4AaABAg.9DIloTowDdG9PkUUaURMbV", "publishedAt": "2021-07-13T20:33:26Z", "author": "Movies Night", "text": "May be im late to reply you but still i'll give my answer. here in your code you have given one for loop which counts n elements of array \"a\". so its complexity will be O(n). And here we can neglect all if else statements as it will give only constants. So the final time complexity will be O(n). Hope this helps you", "likes": 0}]}, {"topLevelComment": {"id": "UgwW7NXy9nsG-MfSAFR4AaABAg", "publishedAt": "2020-08-26T23:21:50Z", "author": "L G", "text": "1:20:40 explanation: the wording of the problem is confusing but his solution is still correct.  What you are actually looking for is at which point of the array the total of the array is at the maximum height. It helps to graph this to better visualize it. original numbers [ 7, 1, 2, -1, 3, 4,10, -12, 3, 21,-19] possible peaks where numbers are summed. [ 8, 10, 9, 12, 16, 26, 14, 17, 38, 19] If you graph this out you will see several local maximums such as 10, 26 and 38.", "likes": 5}, "replies": [{"id": "UgwW7NXy9nsG-MfSAFR4AaABAg.9CqEaALN6r09XQs5ymkqhA", "publishedAt": "2022-01-20T16:35:37Z", "author": "AJ Troupe", "text": "@\u00c9va Nagyn\u00e9 i was scrolling through comments trying to find this, confused me for a sec", "likes": 0}, {"id": "UgwW7NXy9nsG-MfSAFR4AaABAg.9CqEaALN6r09FWXTdCyj_7", "publishedAt": "2020-11-01T11:56:58Z", "author": "\u00c9va Nagyn\u00e9", "text": "Yep but in this case instead of:\ncurrent_sum = max(current_sum + num, num)\nyou sould use:\ncurrent_sum += num", "likes": 1}]}, {"topLevelComment": {"id": "UgzdrLleI-JlVTAAddJ4AaABAg", "publishedAt": "2020-08-09T23:09:59Z", "author": "Yousef Emad", "text": "27:16  what", "likes": 10}}, {"topLevelComment": {"id": "UgywIQ-8pF9vlSbWBBV4AaABAg", "publishedAt": "2020-08-03T08:24:47Z", "author": "pritesh chhajed", "text": "The Array Common Elements code didn't work for some cases (when there are more than 2 consecutive integers in a list), for example:\ncommon_elements([1,2,3,4,5,6,7],[1,3,4,5,7,9,10]) gives [1, 4, 7].........?", "likes": 1}, "replies": [{"id": "UgywIQ-8pF9vlSbWBBV4AaABAg.9BtPdrTIXRv9Jz0FAE0LZj", "publishedAt": "2021-02-20T08:49:25Z", "author": "Mercurius", "text": "change p2 += 2 to p2 += 1", "likes": 0}]}, {"topLevelComment": {"id": "Ugyz0g_l8JT9GUw5QqV4AaABAg", "publishedAt": "2020-08-02T07:22:37Z", "author": "pritesh chhajed", "text": "In the \"Reverse String\" code (the one without using split), you used:\nreturn ' '.join(reversed(s))\nI think it should be:\nreturn ' '.join(reversed(words))", "likes": 13}, "replies": [{"id": "Ugyz0g_l8JT9GUw5QqV4AaABAg.9BqijbtdBUu9N0o0Wd9IGX", "publishedAt": "2021-05-07T00:25:44Z", "author": "Dave Redacted", "text": "@Justin A Ah, got it- no worries!", "likes": 0}, {"id": "Ugyz0g_l8JT9GUw5QqV4AaABAg.9BqijbtdBUu9N0mfWern6h", "publishedAt": "2021-05-07T00:13:59Z", "author": "Justin A", "text": "@Dave Redacted my bad dave, I meant to reply to OP, agreeing that \"words\" should have been used instead of \"s\"", "likes": 1}, {"id": "Ugyz0g_l8JT9GUw5QqV4AaABAg.9BqijbtdBUu9N0l-_o-R0v", "publishedAt": "2021-05-06T23:59:23Z", "author": "Dave Redacted", "text": "@Justin A What are you talking about? Run my code- the result is \"best the is This\". There's no list being made. The .join method takes the list and concatenates the elements into a string with spaces between each. Then the print function prints the string. Dunno what you're talking about, but if you copy and paste my code verbatim into an ide and run the script, you will get the string \"best the is This\".", "likes": 0}, {"id": "Ugyz0g_l8JT9GUw5QqV4AaABAg.9BqijbtdBUu9N0cp_HS_mI", "publishedAt": "2021-05-06T22:47:59Z", "author": "Justin A", "text": "@Dave Redacted The problem is unfinished. Simply created a new list with the words", "likes": 0}, {"id": "Ugyz0g_l8JT9GUw5QqV4AaABAg.9BqijbtdBUu9MVFVc9UM14", "publishedAt": "2021-04-23T23:40:28Z", "author": "Dave Redacted", "text": "@N K You shouldn't be saying:\n\"\".join(reversed(words))\nYou need to be saying:\n\" \".join(reversed(words))\n\nThe first one is just reversing the order of the words in the list and smashing them together in a string, which is \"besttheisThis\". The second one is reversing the order of the list and smashing them together in a string with a space between each word, which is \"best the is This\".\n\nAll in all, the code should look like this:\n\ndef reverse(s):\n    length = len(s)\n    spaces = [' ']\n    words = []\n    i = 0\n\n    while i < length:\n        if s[i] not in spaces:\n            word_start = i\n\n            while i < length and s[i] not in spaces:\n                i += 1\n\n            words.append(s[word_start:i])\n        \n        i += 1\n\n    return \" \".join(reversed(words))\n\nprint(reverse(\"This is the best\"))", "likes": 1}]}, {"topLevelComment": {"id": "Ugx361zEkNPYhT2VwJZ4AaABAg", "publishedAt": "2020-07-28T02:47:24Z", "author": "George Smith", "text": "For consistency, I would include O(log(n)) and O(n*log(n)) in the notebook. You did only constant, linear, and quadratic.", "likes": 8}}, {"topLevelComment": {"id": "UgzUvBGu5JmMDlHYLXB4AaABAg", "publishedAt": "2020-07-28T02:40:30Z", "author": "George Smith", "text": "Thanks for the video, very informative.\nPlease just: remove\n1. The cryptic music\n2. The weird woman at timestamp 27:16 - looks like she is having fun but I don't think she belongs in your Jupyter notebook", "likes": 5}, "replies": [{"id": "UgzUvBGu5JmMDlHYLXB4AaABAg.9BdLTwMQAMo9GIjT6m55L8", "publishedAt": "2020-11-20T23:52:31Z", "author": "D D", "text": "she is having a big O", "likes": 2}, {"id": "UgzUvBGu5JmMDlHYLXB4AaABAg.9BdLTwMQAMo9FPStTks9t8", "publishedAt": "2020-10-29T18:02:15Z", "author": "MusiQ8dict", "text": "An Orgasmic ad suggested from authors search history ;)", "likes": 0}, {"id": "UgzUvBGu5JmMDlHYLXB4AaABAg.9BdLTwMQAMo9C9IdXMx9eQ", "publishedAt": "2020-08-09T21:50:40Z", "author": "opensauce", "text": "lol", "likes": 0}]}, {"topLevelComment": {"id": "UgztAXNP5W3LpuSBdH14AaABAg", "publishedAt": "2020-07-12T09:29:43Z", "author": "Stoy Thomas", "text": "beautiful", "likes": 1}}, {"topLevelComment": {"id": "Ugy67v1_9gpegmuDbHt4AaABAg", "publishedAt": "2020-07-11T06:18:39Z", "author": "Mae Saguil", "text": "thank you", "likes": 1}}, {"topLevelComment": {"id": "Ugyohdm7B6GBxM-hrjp4AaABAg", "publishedAt": "2020-06-19T00:07:11Z", "author": "Han22", "text": "I wonder... what's the point of python if u not gonna use any of the built-ins. Isn't that one of the main points of using Python. We all know Python is slow, so we use the built-in fast methods to get the solution to work.... THEN, much later on we focus on optimization later when we example rewrite the code in c++ or any other faster language.", "likes": 4}, "replies": [{"id": "Ugyohdm7B6GBxM-hrjp4AaABAg.9A3dvtUZ2CW9dgR_aDI8pa", "publishedAt": "2022-07-20T02:41:59Z", "author": "Breitgespielt", "text": "v 7", "likes": 0}]}, {"topLevelComment": {"id": "Ugw2P6KoKBT8zt5mNfF4AaABAg", "publishedAt": "2020-06-18T22:53:56Z", "author": "Han22", "text": "not sure what u mean with \"largest continues sum\" as u wrote 'find the maximum sum'... which is 31, not 38. I mean, I could just take 21+10+7+4+3+2+1 and that would be a larger continues sum than 38, wouldn't it?", "likes": 2}, "replies": [{"id": "Ugw2P6KoKBT8zt5mNfF4AaABAg.9A3WYPhVPMb9CqEUQHV0uT", "publishedAt": "2020-08-26T23:20:55Z", "author": "L G", "text": "the problem is confusing but his solution is still correct.  What you are actually looking for is at which point of the array the total of the array is at the maximum height. It helps to graph this to better visualize it. original numbers [ 7, 1, 2, -1, 3, 4,10, -12, 3, 21,-19] possible peaks where numbers are summed. [ 8, 10, 9, 12, 16, 26, 14, 17, 38, 19] If you graph this out you will see several local maximums such as 10, 26 and 38.", "likes": 1}]}, {"topLevelComment": {"id": "UgyT5MEf6uIoA4h3XB14AaABAg", "publishedAt": "2020-05-31T01:51:37Z", "author": "Ron Plum", "text": "If you don\u2019t put out some noise from your mouth, that video will be a perfect .", "likes": 0}}, {"topLevelComment": {"id": "UgwQJxwxgrN8ekn7Q2B4AaABAg", "publishedAt": "2020-05-28T03:57:23Z", "author": "Rakesh Dash", "text": "where is python coding practice????", "likes": 1}}, {"topLevelComment": {"id": "UgxXUjGeA4D68tIt6jh4AaABAg", "publishedAt": "2020-05-27T01:50:08Z", "author": "Jerred Rogero", "text": "23:29 had to do a double-take XD", "likes": 4}}, {"topLevelComment": {"id": "UgyqT9rzlT2x1mH1acJ4AaABAg", "publishedAt": "2020-05-26T04:53:34Z", "author": "Limmy", "text": "This man is talking at 50 miles an hour", "likes": 2}}, {"topLevelComment": {"id": "UgzRNigndkMY5thtamF4AaABAg", "publishedAt": "2020-05-25T21:53:23Z", "author": "Chun Wai Ho", "text": "oppsy daisy, jesus christmas lol", "likes": 1}}, {"topLevelComment": {"id": "UgxWXqkvFNxe2mesKul4AaABAg", "publishedAt": "2020-05-22T11:59:40Z", "author": "gunner", "text": "Can u share this video's notes through git . It will help us a lot", "likes": 0}}, {"topLevelComment": {"id": "UgxHksxhD-LwCDCeFGJ4AaABAg", "publishedAt": "2020-05-20T06:43:33Z", "author": "Yifan", "text": "At 2:25:00 getting common elements from two lists, shouldn't it be p2 +=1 instead of p2 += 2 for the if a[i] == b[j] condition ?", "likes": 4}, "replies": [{"id": "UgxHksxhD-LwCDCeFGJ4AaABAg.98s6Rii-Ujq9QN6vRZwT49", "publishedAt": "2021-07-29T05:57:08Z", "author": "keshav N", "text": "I was looking for this comment", "likes": 0}, {"id": "UgxHksxhD-LwCDCeFGJ4AaABAg.98s6Rii-Ujq9FJ665jxd7w", "publishedAt": "2020-10-27T06:47:41Z", "author": "Divyank Kulshrestha", "text": "Yes you're right.", "likes": 0}]}, {"topLevelComment": {"id": "Ugx7T7URTB3QVN1PLqR4AaABAg", "publishedAt": "2020-05-19T06:10:24Z", "author": "Yifan", "text": "Did python3 changed the size of array reservation? I ran the getsizeof() code at 51:00 and the size i get is increasing the same way as length", "likes": 1}}, {"topLevelComment": {"id": "Ugx2ySP0cAhyRfrk14Z4AaABAg", "publishedAt": "2020-04-29T06:11:16Z", "author": "Vivek Karn", "text": "Feels as if you're in hurry when you speak.", "likes": 5}, "replies": [{"id": "Ugx2ySP0cAhyRfrk14Z4AaABAg.980z2sT3YXZ9JJwitxeqAs", "publishedAt": "2021-02-04T00:41:49Z", "author": "Anthony O'Halloran", "text": "You can change the playback speed if that helps.", "likes": 0}]}, {"topLevelComment": {"id": "UgwnmUzyC1jJ2mMs4j94AaABAg", "publishedAt": "2020-04-09T20:50:29Z", "author": "3D Printer guy tbh", "text": "4 hours long but this guy is still faster the eminems doubletime", "likes": 1}}, {"topLevelComment": {"id": "UgxvIii9dSQd90qUB254AaABAg", "publishedAt": "2020-04-07T18:13:10Z", "author": "Pavel Myznikov", "text": "2:14:17 Nice, and now check rotation([1,2,3,4], [1,2,3,4])...\nIt definitely should be something like\nkey_index = None\n...\nif key_index is None:\nreturn False\n\n\nIt is a great video in general, but why all tasks are tested only in one case? At least, a negative test must be examined to be more confident that the code works.", "likes": 1}, "replies": [{"id": "UgxvIii9dSQd90qUB254AaABAg.979cAy63HFA97SK0B-3EEd", "publishedAt": "2020-04-15T00:31:14Z", "author": "Oksana Serhiivna", "text": "I guess as soon as it returns 0, implying that both lists start with the same value (as in the case with [1,2,3,4], [1,2,3,4]), and given the condition that we have sorted arrays, it already means that lists are not rotated, therefore it returns False. Thus there is no need in initial \"None\" value for the key_index. But I might miss something else in your point.", "likes": 0}]}, {"topLevelComment": {"id": "UgyqZ0aMpqWbtulGWF54AaABAg", "publishedAt": "2020-03-29T14:37:51Z", "author": "Dime K.", "text": "Hello, just a few notes for Dynamic array example: \n\n\n- the approach with a dict implementation is maybe better in the sense that it shows the knowledge of algorithms, but the timing is the issue  -  on my machine, it runs approx. 5x times slower than the function with sorted()\n\n\n- the dict implementation can be more pythonic, you can use dict.get() method for your advantage for counting the characters:\n\n\n       for character in string_1:\r\n            d[character] = d.get(character, 0) + 1\n\n\n- another approach instead of using hash maps might be just iterating over zip(string_1, string_2) while updating total sum with ord(character_1) - ord(character_2). Then, an anagram is found if the total sum equals to 0 (btw, this implementation still sucks compared with the first approach, but it is still better than the dict one, timewise):\n\n\n      def is_anagram_3(s1, s2):\r\n               total = 0\r\n\r\n               s1 = s1.replace(\" \", \"\").lower()\r\n               s2 = s2.replace(\" \", \"\").lower()\r\n\r\n               if not len(s1) == len(s2):\r\n                       return False\r\n\r\n              for char_1, char_2 in zip(s1, s2):\r\n                     total += ord(char_1) - ord(char_2)\r\n              return not total\n\n\nBut anyway, thanks for the video. This is just my notes, not a hate :)", "likes": 2}}, {"topLevelComment": {"id": "Ugx9A_vPHqOfBUDUXMh4AaABAg", "publishedAt": "2020-03-08T12:50:04Z", "author": "Rajeev", "text": "Array common element code here returns the same output even when arrays are [1,2,4,6,7,9] and [1,2,4,5,9,10] . Because of the way p2 is incremented. Nonetheless , thanks a lot for the video, its  awesome and well explained compared to many others.", "likes": 4}, "replies": [{"id": "Ugx9A_vPHqOfBUDUXMh4AaABAg.95wnMGggEVD97SJ3H-NB32", "publishedAt": "2020-04-15T00:22:55Z", "author": "Oksana Serhiivna", "text": "I was looking for a remark like this here before duplicating with my comment on this issue.", "likes": 0}]}, {"topLevelComment": {"id": "UgwOOb32on_w0wJRwqx4AaABAg", "publishedAt": "2020-02-25T06:26:45Z", "author": "Grave Wait", "text": "Contents\u2b50\ufe0f \u2328\ufe0f (0:00:00) Big O Notation \u2328\ufe0f (0:22:08) Big O Examples \u2328\ufe0f (0:43:01) Array Sequences \u2328\ufe0f (0:53:23) Dynamic Arrays \u2328\ufe0f (1:06:26) Array Algorithms \u2328\ufe0f (1:20:40) Largest Sum \u2328\ufe0f (1:31:27) How to Reverse a String \u2328\ufe0f (1:57:32) Array Analysis \u2328\ufe0f (2:00:00) Array Common Elements \u2328\ufe0f (2:28:54) Minesweeper \u2328\ufe0f (3:08:16) Frequent Count \u2328\ufe0f (3:16:58) Unique Characters in Strings \u2328\ufe0f (3:28:35) Non-Repeat Elements in Array", "likes": 1}, "replies": [{"id": "UgwOOb32on_w0wJRwqx4AaABAg.95SCxHuQPAf9C9IqXajxoh", "publishedAt": "2020-08-09T21:52:26Z", "author": "opensauce", "text": "(27:16) Porn Break", "likes": 0}]}, {"topLevelComment": {"id": "UgzGBpvboK1ks53t_MB4AaABAg", "publishedAt": "2020-02-17T04:49:21Z", "author": "Widy Nuryadi", "text": "Looks like I should decrease the video speed a little bit", "likes": 0}}, {"topLevelComment": {"id": "UgwHnVwbeplwEMmqe594AaABAg", "publishedAt": "2020-02-16T16:34:00Z", "author": "Multitudes", "text": "45:30 Pretty sure that Python uses UTF-8, \u00a0a\u00a0variable-length encoding and not just 2 bytes...", "likes": 1}}, {"topLevelComment": {"id": "UgyUeGaYw3AFvfN-wEN4AaABAg", "publishedAt": "2020-02-05T23:58:26Z", "author": "Loren\u00e7o", "text": "where\u2019s code files for that ?", "likes": 1}}, {"topLevelComment": {"id": "UgwqMl4a9NK8NLjJVbJ4AaABAg", "publishedAt": "2020-02-04T02:24:08Z", "author": "David Martinez", "text": "Thank you for this. This is helping me sharpen my fundamentals for my YouTube technical interview.", "likes": 6}, "replies": [{"id": "UgwqMl4a9NK8NLjJVbJ4AaABAg.94ahUyv1Qub9RZeu4V43r_", "publishedAt": "2021-08-27T23:25:04Z", "author": "sachin maroky", "text": "hows your interview?", "likes": 0}, {"id": "UgwqMl4a9NK8NLjJVbJ4AaABAg.94ahUyv1Qub99zvGnjiyoN", "publishedAt": "2020-06-17T04:02:31Z", "author": "Mujtaba Hussain", "text": "Good luck\ud83d\udc4d", "likes": 1}, {"id": "UgwqMl4a9NK8NLjJVbJ4AaABAg.94ahUyv1Qub95BYcV_DdEt", "publishedAt": "2020-02-18T19:09:03Z", "author": "Wentworth Miller", "text": "Learning from YouTube to work at YouTube. That's Inception level cyclical reference! Good luck! Do update how it went.", "likes": 4}]}, {"topLevelComment": {"id": "Ugxu2XoAfiIf_UkImdB4AaABAg", "publishedAt": "2020-01-21T11:22:49Z", "author": "Blueprint Programmer", "text": "What is the music track at 28 minutes?", "likes": 0}}, {"topLevelComment": {"id": "Ugyj0xH3b2sWAxWJ2aB4AaABAg", "publishedAt": "2020-01-14T23:10:45Z", "author": "JurassicTrance", "text": "Dig the Mass Effect music.", "likes": 2}}, {"topLevelComment": {"id": "UgwZUnHbZHhkHBsKp3p4AaABAg", "publishedAt": "2020-01-10T03:46:11Z", "author": "VP", "text": "It's inevitable that at some point you'll be approached with a problem you have no solution for. This is the consequence of memorizing solutions. So it's generally not wise to memorize solutions to problems. Better to understand the patterns commonly used to solve problems as well as programming concepts.", "likes": 2}}, {"topLevelComment": {"id": "UgxdzwaevtIko2BHsPt4AaABAg", "publishedAt": "2019-12-23T23:19:18Z", "author": "William Thompson", "text": "The explanation for the Largest Sum algorithm is a little vague. He says that the the algorithm is looking for the \"maximum sum of the array\", but the algorithm doesn't take subarrays into account. It seems that the algorithm is starting from the first element, and then seeing how far you can iterate down the array to get the maximum, before adding new elements decreases your current_sum.", "likes": 10}, "replies": [{"id": "UgxdzwaevtIko2BHsPt4AaABAg.92uDxVZJrWD9Z5HMsaJQBJ", "publishedAt": "2022-03-03T00:24:37Z", "author": "Terry Yang", "text": "I think the algorithm in this video here is for the question:find the largest sum for a contiguous subarray of the original array", "likes": 0}, {"id": "UgxdzwaevtIko2BHsPt4AaABAg.92uDxVZJrWD9CYXL80f7ln", "publishedAt": "2020-08-19T17:00:06Z", "author": "TRI\u0394NGLE", "text": "It does takes into account sub-arrays. Try it with different input, you will get correct result.", "likes": 0}]}, {"topLevelComment": {"id": "Ugw35V5HPzZFFQJ_2Nt4AaABAg", "publishedAt": "2019-12-23T00:47:46Z", "author": "Bhanu Teja Patibandla", "text": "I guess for common elements instead of p2+=2 use p2+=1 that fixes any issues", "likes": 6}}, {"topLevelComment": {"id": "UgzjPHQIBzGT56JvWhl4AaABAg", "publishedAt": "2019-11-28T03:03:26Z", "author": "Jose Dahlson", "text": "Warning: Don't pause the video at 27:16", "likes": 5}, "replies": [{"id": "UgzjPHQIBzGT56JvWhl4AaABAg.91rfwImSjUj92vQy9MtfMr", "publishedAt": "2019-12-24T10:32:14Z", "author": "Ajith S Devadiga", "text": "\ud83e\udd23\ud83e\udd23\ud83e\udd23\ud83e\udd23", "likes": 0}]}, {"topLevelComment": {"id": "Ugw1G64SWENXWYj2lhx4AaABAg", "publishedAt": "2019-11-21T22:10:21Z", "author": "Reda Simo L", "text": "This is awesome, could you do more? Is there more vids like this?", "likes": 1}}, {"topLevelComment": {"id": "Ugz4akEfVyPGTxgKrz14AaABAg", "publishedAt": "2019-11-09T17:12:54Z", "author": "Ashiq Muhammad", "text": "Hey could you post the link to download your Jupyter folder.", "likes": 2}}, {"topLevelComment": {"id": "UgyPU3oHTPuhByAiyKF4AaABAg", "publishedAt": "2019-11-06T19:04:26Z", "author": "Kailash", "text": "At 2:09:53 what if both arrays are identical and have the same element at 0th position(Best case scenario) in such case it key_index will have a value of 0 and algorithm will return false.", "likes": 3}}, {"topLevelComment": {"id": "Ugzd5Z0xadM5_S__sZJ4AaABAg", "publishedAt": "2019-11-01T12:51:52Z", "author": "Alex", "text": "Did you just explain limits disguised as computer science?", "likes": 1}}, {"topLevelComment": {"id": "Ugz0qcMFWGV5ohObQCZ4AaABAg", "publishedAt": "2019-10-16T18:29:33Z", "author": "Idan", "text": "Difficulty - easy (high school level) / intro to CS.", "likes": 2}}, {"topLevelComment": {"id": "UgyFOLZPheYOLrAxRyt4AaABAg", "publishedAt": "2019-10-04T14:15:31Z", "author": "Umang Mahant", "text": "You are just awesome! specially the sound effect papapa.. ooo.. haha!", "likes": 3}, "replies": [{"id": "UgyFOLZPheYOLrAxRyt4AaABAg.9-fG7i4oj7P9KDrXDhLjSQ", "publishedAt": "2021-02-26T12:32:21Z", "author": "Ash Raf", "text": "\ud83d\ude05\ud83d\ude05 are you a programmer \ud83d\ude0a?", "likes": 0}]}, {"topLevelComment": {"id": "UgwD3249R-AT2YB00_14AaABAg", "publishedAt": "2019-09-27T20:48:24Z", "author": "Bhishan Poudel", "text": "Awesome tutorial at nice speed. Especially I liked the pycharm debugging examples rather than just jupyter-notebook typings.", "likes": 20}}, {"topLevelComment": {"id": "UgwSf4fiTVjW82rVD6F4AaABAg", "publishedAt": "2019-09-17T05:02:56Z", "author": "Akshay", "text": "I dont understand why Non-Repeat Elements in Array has that extra step where you sort the stuff first.. also why you have y[0][1] on line 22 when you can just write \"1\" instead", "likes": 3}, "replies": [{"id": "UgwSf4fiTVjW82rVD6F4AaABAg.8zyVNXc5Ma_97USkVLA31p", "publishedAt": "2020-04-15T20:26:05Z", "author": "Oksana Serhiivna", "text": "I second that, since we can loop through the dictionary itself and get the same result in the same order:\nfor item in char_count.items():\n        if item[1] == 1:\n            all_uniques.append(item)", "likes": 0}, {"id": "UgwSf4fiTVjW82rVD6F4AaABAg.8zyVNXc5Ma_91A7tLdtkz_", "publishedAt": "2019-11-10T19:50:36Z", "author": "syed fayaz", "text": "I was just thinking about that. \"y[0][1]\" this will work only in scenario where you have at-least one unique element.", "likes": 0}]}, {"topLevelComment": {"id": "Ugw83gwBf7vVazoNXSh4AaABAg", "publishedAt": "2019-09-16T05:30:28Z", "author": "Akshay", "text": "Your method of coding before explaining the logic is really confusing", "likes": 1}}, {"topLevelComment": {"id": "UgwD9ldv5E1luhQu9jB4AaABAg", "publishedAt": "2019-09-14T08:30:31Z", "author": "Akshay", "text": "For largest sum, if you had  the array as [1,3,2,2,3], you would get the same match of 1,3 twice!!", "likes": 1}, "replies": [{"id": "UgwD9ldv5E1luhQu9jB4AaABAg.8zr8kHOxMGb9PkUhlOZfJA", "publishedAt": "2021-07-13T20:35:22Z", "author": "Movies Night", "text": "here he has used set  to store this array which will take only unique elements. so no repetition :)", "likes": 0}]}, {"topLevelComment": {"id": "UgzrNMAjVSSgCD77vEx4AaABAg", "publishedAt": "2019-09-12T15:44:53Z", "author": "English Please", "text": "please kindly provide a full tutorial how to build web based whiteboard ( that can be inserted image/video/audio file and all participants can talk each other through it ) just like online whiteboard name:Ziteboard or Stoodle etc..thank you in advance", "likes": 1}, "replies": [{"id": "UgzrNMAjVSSgCD77vEx4AaABAg.8zmlryrrPm194ZI_RkqJXh", "publishedAt": "2020-02-03T03:59:12Z", "author": "Way2Code", "text": "English Please lol. It\u2019s like \u201chey, you can solder? Provide me instruction how to build my own spaceship! Thank you in advance\u201d. So specific things you must learn do yourself. If you can\u2019t right know or doesn\u2019t know how to start, then it is to early for that task for you anyway", "likes": 0}]}, {"topLevelComment": {"id": "UgztetFeDAJtiikBo0J4AaABAg", "publishedAt": "2019-09-09T22:29:32Z", "author": "Cem Unden", "text": "In Array Algorithms , you should check if target exists in array ?\n*if target not in seen : ( ??? )  \nif target not in array  , gives better performance", "likes": 3}}, {"topLevelComment": {"id": "Ugx5Af7ufhAr7SyGT7B4AaABAg", "publishedAt": "2019-09-07T21:46:49Z", "author": "Siddharth Manu", "text": "Why would you return print(\"...\")?", "likes": 1}}, {"topLevelComment": {"id": "UgxdvUVwDJ-kaLTgDPZ4AaABAg", "publishedAt": "2019-09-06T15:40:50Z", "author": "zzz", "text": "Just what I need right now. Comprehensive and clear. Thank you :)", "likes": 22}}, {"topLevelComment": {"id": "UgwQgHfV5FAGLNQrfrd4AaABAg", "publishedAt": "2019-08-25T12:12:02Z", "author": "David Shook", "text": "is there anyway to avoid that keyboard noise like better microphone placement?", "likes": 0}}, {"topLevelComment": {"id": "UgyY-exiNN1uq3THbYR4AaABAg", "publishedAt": "2019-08-22T21:27:23Z", "author": "Micha\u0142 Ligocki", "text": "annoying background music is annoying", "likes": 0}}, {"topLevelComment": {"id": "Ugxi60_8ZwkbomIf7ol4AaABAg", "publishedAt": "2019-08-20T14:02:56Z", "author": "Mayank Pant", "text": "Hey good sir. Pls provide the link to this notebook. It will be very helpfull to us student. \ud83e\udd7a\ud83e\udd7a\ud83d\ude0a", "likes": 2}}, {"topLevelComment": {"id": "UgyBHaB5giSwE721YOF4AaABAg", "publishedAt": "2019-08-16T19:33:47Z", "author": "Alla Abdella", "text": "The code for two common elements, doesn't include 9 when I run it.", "likes": 2}}, {"topLevelComment": {"id": "UgyhceZmCwS_sURk9pZ4AaABAg", "publishedAt": "2019-08-13T17:04:55Z", "author": "Rahul Baliyan", "text": "why background music, its getting trouble", "likes": 3}}, {"topLevelComment": {"id": "Ugw0S68wfW4ns6X2DNR4AaABAg", "publishedAt": "2019-08-12T13:05:09Z", "author": "ThinkingOnyx", "text": "i like the pace and the background music. Well done!", "likes": 5}}, {"topLevelComment": {"id": "UgwIwk_s80th6ZoYvEZ4AaABAg", "publishedAt": "2019-08-02T16:43:36Z", "author": "Mr Sinux", "text": "Thanks! I like your pace. I don't have to speed up the tutorial :)", "likes": 7}}, {"topLevelComment": {"id": "UgxBvQ3x0YCbBzp3d2Z4AaABAg", "publishedAt": "2019-07-31T05:50:16Z", "author": "Noajm IsMy Name", "text": "Nice background track", "likes": 1}}, {"topLevelComment": {"id": "Ugzq6a6L4ZUmDIR8XK14AaABAg", "publishedAt": "2019-07-26T18:36:02Z", "author": "RandomShowerThoughts", "text": "this video is amazing", "likes": 1}}, {"topLevelComment": {"id": "Ugya4MjOxZrdLKlZW714AaABAg", "publishedAt": "2019-07-11T13:00:28Z", "author": "Sammy", "text": "asshole is talking to himself. impossible. there is the guy with the hat and nasa t-shirt??", "likes": 0}}, {"topLevelComment": {"id": "UgwO7xwN5Szilp0aQrl4AaABAg", "publishedAt": "2019-07-01T09:46:46Z", "author": "sven", "text": "My last brain cell : *This video on speed 2x*", "likes": 5}, "replies": [{"id": "UgwO7xwN5Szilp0aQrl4AaABAg.8wq9r65Jojm9BueLCPnGNT", "publishedAt": "2020-08-03T20:01:09Z", "author": "Alex Drago43", "text": "Stupid idea", "likes": 0}]}, {"topLevelComment": {"id": "UgzVL-05LisGfOgXKMZ4AaABAg", "publishedAt": "2019-06-29T07:10:31Z", "author": "Happy Panda", "text": "def common_elements(a, b):\n    result = []\n    for i in a:\n        if i in b:\n            result.append(i)\n\n\n    return result\n\n\n\n\nprint(common_elements([1, 3, 4, 6, 7, 9], [1, 2, 4, 5, 9, 10]))\n\n\nWould this fail for an unforeseen test case?", "likes": 1}}, {"topLevelComment": {"id": "Ugw0ntW92BwabeWlfsR4AaABAg", "publishedAt": "2019-06-24T19:18:08Z", "author": "birds flying", "text": "Who's the limiting factor here ?  Certainly you", "likes": 0}}, {"topLevelComment": {"id": "Ugyq3pZXVr3nlPhWCY14AaABAg", "publishedAt": "2019-06-09T19:17:28Z", "author": "keshav mor", "text": "there is prolem in reverse program  using while loop , you at the end mention reversed (s) which mean you are not using the splited value which stored in words variable.. actually you created a method split which we have built in.", "likes": 4}}, {"topLevelComment": {"id": "Ugx7zZBDzws87yJeg8p4AaABAg", "publishedAt": "2019-06-09T07:37:44Z", "author": "vinoth kumar", "text": "On \"Non-Repeat Elements in Array\" problem, if item[1] == y[0][1]: will produce the first item's count which can't be one when there are no unique chars in a string e.g \"aa bb\". It must be replaced with \"if item[1] == 1\"", "likes": 12}}, {"topLevelComment": {"id": "Ugy4wcciwTHxibqP_ut4AaABAg", "publishedAt": "2019-06-09T04:54:17Z", "author": "vinoth kumar", "text": "You have done all the hard work for splitting the string \"s\" and returned reversed(s) instead of reversed(words) @ 1.47.00  :)", "likes": 13}, "replies": [{"id": "Ugy4wcciwTHxibqP_ut4AaABAg.8vwztgz88Bo9541CkgTVap", "publishedAt": "2020-02-15T21:02:22Z", "author": "AL", "text": "I was thinking I was crazy about the reverse words!  :), nevertheless great tutorial! thank you very much from Bolivia!", "likes": 1}, {"id": "Ugy4wcciwTHxibqP_ut4AaABAg.8vwztgz88Bo90PoCTpqJWo", "publishedAt": "2019-10-23T01:26:19Z", "author": "IYI WOLF IYI", "text": "@Bhishan Poudel nah vinoth is right I was so confused following this because the return statement doesn't use the words array that was built using the method and instead just applies reverse to the s string that we inputted. After he uses the debugger he points with the mouse to the words array explaining that words was reversed but in reality it never was... Glad someone else caught that too :)", "likes": 1}, {"id": "Ugy4wcciwTHxibqP_ut4AaABAg.8vwztgz88Bo9-OwNUyI_MF", "publishedAt": "2019-09-27T20:47:05Z", "author": "Bhishan Poudel", "text": "Because you are learning Algorithms in python which applies to general programming, not just how to do things in python, in interviews interviewer want general algo.", "likes": 0}]}, {"topLevelComment": {"id": "Ugx-qkaK3_3xg_tDnUh4AaABAg", "publishedAt": "2019-06-08T17:05:34Z", "author": "Spinosaurus BOT", "text": "2:28:00 this doesn't work properly, if it were [1,3,4,6,7,9]  , [1,3,4,5,9,10] the result again will be  [1, 4, 9] (or did I misunderstand something?)", "likes": 4}, "replies": [{"id": "Ugx-qkaK3_3xg_tDnUh4AaABAg.8vvimtp_Hc_94lMVAJ2CC3", "publishedAt": "2020-02-08T05:43:34Z", "author": "\u5433\u627f\u7ff0", "text": "because the author mistype p2+=2 in the first if command line, namely it should be p1+=1 p2+=1 after appending an element.", "likes": 1}]}, {"topLevelComment": {"id": "UgzHyKR3lt_2KsKHZyN4AaABAg", "publishedAt": "2019-05-30T19:31:35Z", "author": "Aldo Porcallo", "text": "for the largest continuos sum 1:30:25 the result is 38 but as per Kadane's algorithm I think this is not correct, think the result should be 24 (3 + 21) which is the greatest continuos, 38 is from adding up all numbers from index 0 to lenght -1. Can anyone clarify?", "likes": 4}, "replies": [{"id": "UgzHyKR3lt_2KsKHZyN4AaABAg.8vZoLTlI2Ey9d8CsxRimv8", "publishedAt": "2022-07-06T10:20:08Z", "author": "Affechon", "text": "Noticed the problem when I read it from left to right so I replaced the \ncurrent_sum = max(current_sum +num, num) \nto\ncurrent_sum = max(max_sum +num , num)", "likes": 0}, {"id": "UgzHyKR3lt_2KsKHZyN4AaABAg.8vZoLTlI2Ey94ZIAMfhyMH", "publishedAt": "2020-02-03T03:55:39Z", "author": "Way2Code", "text": "I am too doesn\u2019t understand point of this implementation. And in doc string he write \u201cmax sum of that array\u201d - and that will be if we ignore all negatives... something wrongs here", "likes": 1}]}, {"topLevelComment": {"id": "UgwUzalvKgOgsnxluFV4AaABAg", "publishedAt": "2019-05-29T05:45:43Z", "author": "Anurag", "text": "link for the Notebooks used ?", "likes": 2}}, {"topLevelComment": {"id": "UgxcZNor84EW0a28vap4AaABAg", "publishedAt": "2019-05-29T05:45:43Z", "author": "Anurag", "text": "link for the Notebooks used ?", "likes": 0}}, {"topLevelComment": {"id": "UgzMZEOFWYFH-ld1Si94AaABAg", "publishedAt": "2019-05-09T03:40:59Z", "author": "Ahrav Dutta", "text": "On the last problem when looking for uniques, I am not sure why you needed to sort your dictionary. By doing so I believe you increased your time complexity to O(n log n). Instead just loop through the dictionary and if the value is equal to 1, just append either just the key (character) to your uniques list or if you want the (character and value) just append a tuple. This will keep your time complexity at O(n), since looping through a dictionary is linear time.\n\ndef non_repeating(s):\n    s = s.replace(\" \", \"\").lower()\n    char_count = {}\n    uniques = []\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n    for key, value in char_count.items():\n        if value == 1:\n            uniques.append((key, value))\n    return uniques\n\n\nprint(non_repeating('i apple ape peels '))", "likes": 1}}, {"topLevelComment": {"id": "UgyZHunh6YS3NaMbzDl4AaABAg", "publishedAt": "2019-04-29T17:53:50Z", "author": "the reap", "text": "OMG what is 3:29:10?", "likes": 2}}, {"topLevelComment": {"id": "Ugxx-_JmJ4Y_Z-TbjfR4AaABAg", "publishedAt": "2019-04-16T11:48:38Z", "author": "CheburashkO66", "text": "Fount it by accident \n\nhttps://github.com/jmportilla/Python-for-Algorithms--Data-Structures--and-Interviews", "likes": 0}}, {"topLevelComment": {"id": "UgxhVqrmqhT1Z6IfF8J4AaABAg", "publishedAt": "2019-04-13T16:58:09Z", "author": "tISSUES", "text": "whose out here down voting this?", "likes": 0}}, {"topLevelComment": {"id": "UgxOZNgpu6VZrFvD6q54AaABAg", "publishedAt": "2019-03-28T12:49:29Z", "author": "Max Eisenhardt", "text": "Why is this stupid music playing in the background?", "likes": 1}}, {"topLevelComment": {"id": "Ugy8lmjMGHa9SDFeDsh4AaABAg", "publishedAt": "2019-03-21T22:47:24Z", "author": "Pradeep Sahoo", "text": "Did anyone notice the bug in the last function he wrote? He compared the counts of letters with the count of the first item in the dictionary which itself may not be 1 if there are no uniques. It should have been compared with 1. Hence, we should always thoroughly test our code at various stages before deploying.", "likes": 3}, "replies": [{"id": "Ugy8lmjMGHa9SDFeDsh4AaABAg.8skv6PgLdIu8zwDAXC-27S", "publishedAt": "2019-09-16T07:45:23Z", "author": "Akshay", "text": "too many bugs in this video", "likes": 1}]}, {"topLevelComment": {"id": "UgzzbOrtloeUzd8K7dB4AaABAg", "publishedAt": "2019-03-19T16:16:59Z", "author": "Debjit Chattopadhyay", "text": "speak slowly dude!!!!!!!!!", "likes": 0}}, {"topLevelComment": {"id": "UgxI9aAz0ORyvaPxVVN4AaABAg", "publishedAt": "2019-03-18T21:58:39Z", "author": "daniel feng", "text": "also, the last function can be written as: \ndef non_repeating(s):\r\n    s = s.replace(' ', '').lower()\r\n    char_count = {}\r\n\r\n    for c in s:\r\n        if c in char_count:\r\n            char_count[c] += 1\r\n        else:\r\n            char_count[c] = 1\r\n\r\n    all_uniques = []\r\n\r\n    for item in char_count:\r\n        if char_count[item] == 1:\r\n            all_uniques.append(item)\r\n\r\n    return all_uniques\r\n\r\n\r\nprint(non_repeating(\"I apple Ape peels\"))\n\n\nworks better, lol", "likes": 1}, "replies": [{"id": "UgxI9aAz0ORyvaPxVVN4AaABAg.8sd68hoVkOJ8skukc3In01", "publishedAt": "2019-03-21T22:44:17Z", "author": "Pradeep Sahoo", "text": "Did you notice the bug in the last function he wrote? He compared the counts of letters with the count of the first item in the dictionary which itself may not be 1 if there are no uniques. It should have been compared with 1. His algo had a bug", "likes": 0}, {"id": "UgxI9aAz0ORyvaPxVVN4AaABAg.8sd68hoVkOJ8sd6LS_kX_D", "publishedAt": "2019-03-18T22:00:23Z", "author": "daniel feng", "text": "I meant easier to understand", "likes": 0}]}, {"topLevelComment": {"id": "UgwZffStdowOqOliGo54AaABAg", "publishedAt": "2019-03-18T16:20:55Z", "author": "daniel feng", "text": "it took me 2 days to fully understand the mine_sweeper, lol", "likes": 20}}, {"topLevelComment": {"id": "Ugwc2JVMqMxi86mc2RB4AaABAg", "publishedAt": "2019-03-13T06:49:28Z", "author": "Beverly Pham", "text": "So many mistakes. This video isn't very great. You can see my code for the challenges at https://github.com/zarkle/code_challenges/tree/master/fcc_pyalgo (does not contain any of his jupyter notebook stuff)", "likes": 0}}, {"topLevelComment": {"id": "Ugxv4YnKXRWqiJX0yzN4AaABAg", "publishedAt": "2019-03-07T20:12:01Z", "author": "Pritam Manerao", "text": "Hasn't anyone noticed that here at 1:55:41 he had to reverse the \"words\" list and not the string \"s\" itself.\r\n\r\nreturn \" \".join(reversed(words))\r\n\r\ninstead of \r\n\r\nreturn \"\".join(reversed(s))\n\n\nand again to reverse the string he used python built-in reverse function :|", "likes": 13}, "replies": [{"id": "Ugxv4YnKXRWqiJX0yzN4AaABAg.8sBaC6Uoyms8skRiMq-ZDA", "publishedAt": "2019-03-21T18:21:50Z", "author": "Pradeep Sahoo", "text": "Yeah, I think he could have used indexing to reverse the list easily instead of the reversed function, and it should have been the words list and not s.", "likes": 0}, {"id": "Ugxv4YnKXRWqiJX0yzN4AaABAg.8sBaC6Uoyms8sLhzzK8Jzz", "publishedAt": "2019-03-11T18:32:32Z", "author": "Pritam Manerao", "text": "@Beverly Pham Cool :+1:", "likes": 0}, {"id": "Ugxv4YnKXRWqiJX0yzN4AaABAg.8sBaC6Uoyms8sCEKy8-LhE", "publishedAt": "2019-03-08T02:11:29Z", "author": "Beverly Pham", "text": "yup, see my comment from 3 days ago", "likes": 1}, {"id": "Ugxv4YnKXRWqiJX0yzN4AaABAg.8sBaC6Uoyms8sBeZ92ynUh", "publishedAt": "2019-03-07T20:50:07Z", "author": "Jean DAVID", "text": "I noticed it too !", "likes": 0}]}, {"topLevelComment": {"id": "UgxSCaGecG55KHn9Sbl4AaABAg", "publishedAt": "2019-03-07T16:06:04Z", "author": "Mihail Fernandes", "text": "Is there an error for the \"Array Common Elements\"?\nWhat happens if there are two sets of equal elements in a row? \nFor example a=[1,2,3] and b=[1,2,99]. After the first match a[0] = 1, b[0]=1 we increse the endexex p1+=1 and p2+=2 and skip the second match.", "likes": 21}, "replies": [{"id": "UgxSCaGecG55KHn9Sbl4AaABAg.8sB92iKtGff9JLrAptl9E_", "publishedAt": "2021-02-04T18:31:49Z", "author": "Athanikar Ammy", "text": "yeah the same thing was bothering me too.. thanxx for expressing the doubt..", "likes": 1}, {"id": "UgxSCaGecG55KHn9Sbl4AaABAg.8sB92iKtGff8sktwwgP40O", "publishedAt": "2019-03-21T22:37:13Z", "author": "Pradeep Sahoo", "text": "I was wondering about that one", "likes": 7}, {"id": "UgxSCaGecG55KHn9Sbl4AaABAg.8sB92iKtGff8sCEF2f4QBR", "publishedAt": "2019-03-08T02:10:40Z", "author": "Beverly Pham", "text": "yes p2 should be incrementing by 1 not 2. his code would not return the correct result for [1, 3, 4, 6, 7, 9] and [1, 3, 4, 5, 9, 10]. it would be missing the 3", "likes": 19}]}, {"topLevelComment": {"id": "UgyaIZKEPt8flInhrH54AaABAg", "publishedAt": "2019-03-04T21:33:16Z", "author": "Beverly Pham", "text": "how to reverse a string is incorrect.  He reversed the string instead of the words. The return line should be `return ' '.join(reversed(words))`  not `return ''.join(reversed(s))`. All that code to make the words array and then he doesn't even use it!", "likes": 1}, "replies": [{"id": "UgyaIZKEPt8flInhrH54AaABAg.8s406ZMxSlL8skS02grnA5", "publishedAt": "2019-03-21T18:24:23Z", "author": "Pradeep Sahoo", "text": "He had a brain-fade perhaps", "likes": 0}, {"id": "UgyaIZKEPt8flInhrH54AaABAg.8s406ZMxSlL8sBeg-Ez7F0", "publishedAt": "2019-03-07T20:51:11Z", "author": "Jean DAVID", "text": "lol", "likes": 0}]}, {"topLevelComment": {"id": "UgyLSOiwWjrRNVJ5KbJ4AaABAg", "publishedAt": "2019-03-03T08:47:59Z", "author": "YukinoTime", "text": "Could you share the notebook?", "likes": 32}}, {"topLevelComment": {"id": "UgzXMgoeyLjZ68EXre54AaABAg", "publishedAt": "2019-02-28T22:00:43Z", "author": "duncpol", "text": "1:54:18 Instead of 'return \" \".join(reversed(s)', 'return \"  \".join(reversed(words))' should by typed to get the same result as for the former functions", "likes": 35}, "replies": [{"id": "UgzXMgoeyLjZ68EXre54AaABAg.8rul475zQXG9dzIo76nr6Y", "publishedAt": "2022-07-27T10:30:53Z", "author": "Dariusz Spiewak", "text": "@Pablo Vera Apart from the fact that inserting into a list is a painfully slow operation in Python because if you insert in the middle of an array or at the beginning all the other elements must be moved one index forward. For the task at hand the best data structure to use would be a (doubly-)linked list which has insertion complexity (when inserting at the end or beginning) of O(1).", "likes": 0}, {"id": "UgzXMgoeyLjZ68EXre54AaABAg.8rul475zQXG9YSbVpvLr2P", "publishedAt": "2022-02-15T05:20:29Z", "author": "Pablo Vera", "text": "Using insert instead of append would be a better approach.\n\n\ndef rev_str(s):\r\n \r\n    l = len(s)\r\n    i = 0\r\n    spaces = [' ']\r\n    words = []\r\n    while i < l:\r\n        if s[i] not in spaces:\r\n            word_start = i\r\n            while i < l and s[i] not in spaces:\r\n                i +=1\r\n            words.insert(0,s[word_start:i])\r\n        i += 1\r\n\r\n    return \" \".join(words)\n\r\nprint(rev_str(\"this is the best code\"))", "likes": 0}, {"id": "UgzXMgoeyLjZ68EXre54AaABAg.8rul475zQXG9QMB_4WUT_s", "publishedAt": "2021-07-28T21:18:31Z", "author": "keshav N", "text": "s = \"this is the best\"\nreversed(s) -> \"tseb eht si siht\"\nwords =[ this, is , the , best].\nreversed(words) -> [best, the , is , the]\n\"\".join(reversed(words) -> \"best the is the\"\n\nSo instead of returning \"\".join.reversed(words) he returned \"\".join.reversed(s) which gave him the wrong answer.", "likes": 3}, {"id": "UgzXMgoeyLjZ68EXre54AaABAg.8rul475zQXG9MT96wN8Kni", "publishedAt": "2021-04-23T04:06:11Z", "author": "K", "text": "I don't understand any of this...", "likes": 0}]}, {"topLevelComment": {"id": "UgwoJOzpDDko9G4FX1R4AaABAg", "publishedAt": "2019-02-28T21:37:49Z", "author": "Wolf Rogner", "text": "I stopped watching after 2:29. \nThe algorithm has an error (p1 += 1, p2 +=2). Not even beginners should make mistakes like this.\nCheck a=[1,2,4,5,8,9] b=[1,2,5,8,9,10] -> [1,5,9] (should give [1,2,5,9]", "likes": 2}}, {"topLevelComment": {"id": "Ugyw1AeksQKV_0hcybl4AaABAg", "publishedAt": "2019-02-27T19:07:23Z", "author": "Sohel Shaikh", "text": "\u2b50\ufe0fContents\u2b50\ufe0f\n\u2328\ufe0f (0:00:00) Big O Notation\n\u2328\ufe0f (0:22:08) Big O Examples\n\u2328\ufe0f (0:43:01) Array Sequences\n\u2328\ufe0f (0:53:23) Dynamic Arrays\n\u2328\ufe0f (1:06:26) Array Algorithms\n\u2328\ufe0f (1:20:40) Largest Sum\n\u2328\ufe0f (1:31:27) How to Reverse a String\n\u2328\ufe0f (1:57:32) Array Analysis\n\u2328\ufe0f (2:00:00) Array Common Elements\n\u2328\ufe0f (2:28:54) Minesweeper\n\u2328\ufe0f (3:08:16) Frequent Count\n\u2328\ufe0f (3:16:58) Unique Characters in Strings\n\u2328\ufe0f (3:28:35) Non-Repeat Elements in Array", "likes": 26}, "replies": [{"id": "Ugyw1AeksQKV_0hcybl4AaABAg.8rrsRnS8wtf9HjvS5rSdfh", "publishedAt": "2020-12-26T19:07:22Z", "author": "Sohel Shaikh", "text": "@Akshat Singh i made this comment when timestamps were not clickable on mobile devices", "likes": 4}, {"id": "Ugyw1AeksQKV_0hcybl4AaABAg.8rrsRnS8wtf9Hi9BkpyFYd", "publishedAt": "2020-12-26T02:37:43Z", "author": "Akshat Singh", "text": "don't copy from description.", "likes": 0}, {"id": "Ugyw1AeksQKV_0hcybl4AaABAg.8rrsRnS8wtf8sPZxhUJj17", "publishedAt": "2019-03-13T06:30:32Z", "author": "Beverly Pham", "text": "Array Common Elements should be 2:18:00", "likes": 0}]}, {"topLevelComment": {"id": "Ugzd8izGaObYfsaWGbp4AaABAg", "publishedAt": "2019-02-27T09:49:32Z", "author": "MoreThanProgrammer", "text": "There are fundamentals that are easy to forget.", "likes": 1}}, {"topLevelComment": {"id": "UgxajSKNhiRAmMZ3DjZ4AaABAg", "publishedAt": "2019-02-26T15:11:53Z", "author": "David A", "text": "That background music - it's like trying to read a book with a strobe light.", "likes": 153}, "replies": [{"id": "UgxajSKNhiRAmMZ3DjZ4AaABAg.8rosh0451bH9SxsXzruhy8", "publishedAt": "2021-10-01T14:56:39Z", "author": "Alina G.", "text": "Yes can we not please", "likes": 0}, {"id": "UgxajSKNhiRAmMZ3DjZ4AaABAg.8rosh0451bH9NXUWXIRypL", "publishedAt": "2021-05-19T17:01:32Z", "author": "vani sood", "text": "@Momo   M no m m o o  NK  mommy  no o moo. Ok. The o o o o o o o. Ok ok o ok. O o  m mmm o o. I ok.  O o o. Ok o. O o o. O. O o o o. O o o. O o o.  O o. O o o. Koi ooo o o o o o o ooo o. O ooo o o. O. Ok mm o  o o. O o o o o o. O. O o. O o. M koi o ok o.  Nookoo. Ok moo ok. O ok. O o o o ok. Moo.   Mojo.  Ok.  O o o o o.  O ok o. O o o ok o o o o o oo.  O. O ok ok no o o. O o o o. O o o okomoooo o o o o. Ok o o. O o ok o ok o.  O ok o o. O. Moo ooo on kkk o", "likes": 0}, {"id": "UgxajSKNhiRAmMZ3DjZ4AaABAg.8rosh0451bH9LXPIhG7W8U", "publishedAt": "2021-03-30T23:13:10Z", "author": "Matt Graves", "text": "I thought my dog bowl was acting up again... kept pausing to go look at it and it's fine lol.\nEdit, after listening to it closely and hearing the music I was able to \"hear\" it in the background instead of an irritating noise.", "likes": 1}, {"id": "UgxajSKNhiRAmMZ3DjZ4AaABAg.8rosh0451bH9KEQhG4COiC", "publishedAt": "2021-02-26T17:48:26Z", "author": "Anthony O'Halloran", "text": "By glad it wasn't happy hardcore :)", "likes": 0}, {"id": "UgxajSKNhiRAmMZ3DjZ4AaABAg.8rosh0451bH9H2usDpW8T7", "publishedAt": "2020-12-09T16:55:44Z", "author": "A V", "text": "Feels like pronouncing each word while reading instead of scanning during a timed exam", "likes": 2}]}, {"topLevelComment": {"id": "Ugz_b3PsPJFSXDTTsPd4AaABAg", "publishedAt": "2019-02-26T04:59:25Z", "author": "Graham Joss", "text": "bro no background music please", "likes": 2}}, {"topLevelComment": {"id": "UgxgKN4TDLJ8ffM_sPB4AaABAg", "publishedAt": "2019-02-26T01:58:41Z", "author": "Chiaki Nanami", "text": "Just a thought...maybe break these multi-hour courses into a video playlist instead?", "likes": 2}, "replies": [{"id": "UgxgKN4TDLJ8ffM_sPB4AaABAg.8rnSvP1txuu8uugEi4zml2", "publishedAt": "2019-05-14T10:52:39Z", "author": "Derebor", "text": "Read description, find author's channel. Get your playlist.", "likes": 2}]}, {"topLevelComment": {"id": "UgztTzglfuYfBw6S8nB4AaABAg", "publishedAt": "2019-02-24T22:36:54Z", "author": "William Shaw", "text": "I couldn't keep watching. It looks like the presenter doesn't understand big-O. Big-O measures the growth in the number of computer operations (addition, multiplication, etc.) required to execute the algorithm, not the power of the variable. So no matter how big \"n\" is, \"n**3\" takes the same number of operations. It doesn't take more computer operations to calculate 10**3 than to calculate 2**3.", "likes": 1}, "replies": [{"id": "UgztTzglfuYfBw6S8nB4AaABAg.8rkX1bMWmn08skSfp0_1kR", "publishedAt": "2019-03-21T18:30:13Z", "author": "Pradeep Sahoo", "text": "n is the number of operations in this case. The example he showed with the math expression was confusing, but that's not the point he was making", "likes": 0}, {"id": "UgztTzglfuYfBw6S8nB4AaABAg.8rkX1bMWmn08sBezv2Dohw", "publishedAt": "2019-03-07T20:53:54Z", "author": "Jean DAVID", "text": "Wrong ! n**3 is a number of operations executed not one lonely operation", "likes": 0}]}, {"topLevelComment": {"id": "UgxcIX4Zxt69pKsi2eZ4AaABAg", "publishedAt": "2019-02-24T16:46:51Z", "author": "Swethavarnaa U", "text": "great tutorial", "likes": 1}}, {"topLevelComment": {"id": "UgzmAIc_Fy-OJpRfUVt4AaABAg", "publishedAt": "2019-02-24T09:52:03Z", "author": "Dhaval Shah", "text": "8:48 I realize your talking about \"P vs Np\" problem, the amount of calputation required in propostion to the size or scale of input, I was very fasinated with this subject, I happy to see it in action now", "likes": 1}}, {"topLevelComment": {"id": "UgxLiowuGVB4CSzRYo14AaABAg", "publishedAt": "2019-02-23T23:26:28Z", "author": "Brother Lui", "text": "The for-loop in function sum1(n) is crap. In the first iteration x equals zero. Nonsense to add zero to zero, even for demonstration purposes. for x in range(1, n+1): would also get rid of this awesome +1 in O(n+1) and make in a simple O(n) example.", "likes": 2}, "replies": [{"id": "UgxLiowuGVB4CSzRYo14AaABAg.8ri1uoaYidr8skSLWpCS3s", "publishedAt": "2019-03-21T18:27:19Z", "author": "Pradeep Sahoo", "text": "I think his example was to demonstrate that constants can be ignored for time complexity using Big O notation. But, in reality the constant still matters if n is small. So, the average case can be improved by not using the 0 assignment.", "likes": 0}]}, {"topLevelComment": {"id": "UgwTH2SMeyG26m0k46h4AaABAg", "publishedAt": "2019-02-23T05:44:11Z", "author": "Milford Yong", "text": "as far as i understand when f(n)= n^2+n,  it is O(n^2). what if i rewrite the function f(n)= n*(n+1), is it still O(n^2) or O(n)?", "likes": 1}, "replies": [{"id": "UgwTH2SMeyG26m0k46h4AaABAg.8rg8LPTqez58skT3W2Wn6s", "publishedAt": "2019-03-21T18:33:35Z", "author": "Pradeep Sahoo", "text": "Are you asking about O(f(n)) when f(n) = n**2 + n vs n * (n + 1)? It's the same in both cases and that would be O(n**2)", "likes": 1}, {"id": "UgwTH2SMeyG26m0k46h4AaABAg.8rg8LPTqez58rqzCq9jmpj", "publishedAt": "2019-02-27T10:47:16Z", "author": "Mr Yod", "text": "I think you got it wrong: Big-O measures the number of iterations/loops/whatevers (in other words operations) necessary to solve a certain algorithm, not the mathematic operation per se.\nSo O(n^2) doesn't mean you solve the equation y = x^2, it means you have a loop that repeats n^2 times.\n\nDon't focus on the crappy example the guy did in the beginning, watch the video @0:22:08", "likes": 1}]}, {"topLevelComment": {"id": "UgzPYlgt1h1SnbfuYPx4AaABAg", "publishedAt": "2019-02-22T22:57:23Z", "author": "Project 876 Brogad", "text": "Are we just going to pretend like we didn't see a screenshot of a topless girl getting drugged at what appears to be a party?", "likes": 2}, "replies": [{"id": "UgzPYlgt1h1SnbfuYPx4AaABAg.8rfPmtFxioS8skuGzds4Fh", "publishedAt": "2019-03-21T22:40:06Z", "author": "Pradeep Sahoo", "text": "I think that was intended to be a joke about the Big \"O\". It's quite common.", "likes": 0}]}, {"topLevelComment": {"id": "UgwIab0NgcAnfrt-L7l4AaABAg", "publishedAt": "2019-02-22T22:46:22Z", "author": "Bernice Anne W. Chua", "text": "Great tutorial! And this is a tangent, but this guy plays Warframe LOL! Corpus theme music at 40:20 .\n\nEDIT: Apparently, also Mass Effect (1:00:30 is the star chart / map music).", "likes": 4}, "replies": [{"id": "UgwIab0NgcAnfrt-L7l4AaABAg.8rfOXIWckp38swDtnzo8nw", "publishedAt": "2019-03-26T08:11:56Z", "author": "Venkteshprasad Maya Rao", "text": "It's filled with videogame OSTs", "likes": 0}]}, {"topLevelComment": {"id": "UgwErkVzPxrLENdsUnN4AaABAg", "publishedAt": "2019-02-22T16:17:10Z", "author": "Danny Lai", "text": "Is there any recommended free jupyter services ?", "likes": 1}}, {"topLevelComment": {"id": "Ugx3LjOSxvLv9LuGj3V4AaABAg", "publishedAt": "2019-02-22T13:03:44Z", "author": "seveno1", "text": "Looking forward to when AI teaches and you can pick type of voice .:).", "likes": 1}, "replies": [{"id": "Ugx3LjOSxvLv9LuGj3V4AaABAg.8reLquLu1Nf8sku3ggiAQX", "publishedAt": "2019-03-21T22:38:17Z", "author": "Pradeep Sahoo", "text": "@Fraz Ik can it fix its own bugs though... \ud83d\ude09", "likes": 0}, {"id": "Ugx3LjOSxvLv9LuGj3V4AaABAg.8reLquLu1Nf8rh68e9KmwH", "publishedAt": "2019-02-23T14:44:12Z", "author": "Fraz Ik", "text": "not looking forward to when it can program everything itself though", "likes": 0}]}, {"topLevelComment": {"id": "UgxExPAAVzpgzYipUtB4AaABAg", "publishedAt": "2019-02-22T10:40:04Z", "author": "Sandy Morley", "text": "Thanks! This covers plenty that my self-directed learning hasn't!\n\nCan I echo Craig and Pratiksha? That jupyter notebook looks incredibly helpful!", "likes": 18}}, {"topLevelComment": {"id": "Ugz7Cpvu1xyTcaV4cJ14AaABAg", "publishedAt": "2019-02-22T07:10:26Z", "author": "siddharth sharma", "text": "do you have that in Java ?", "likes": 0}, "replies": [{"id": "Ugz7Cpvu1xyTcaV4cJ14AaABAg.8rdiQD770kB8skTGynlo58", "publishedAt": "2019-03-21T18:35:26Z", "author": "Pradeep Sahoo", "text": "You can apply the algorithms in any programming language you want. Ofcourse, there will be variations in the actual code depending on the language.", "likes": 0}, {"id": "Ugz7Cpvu1xyTcaV4cJ14AaABAg.8rdiQD770kB8rfpw-k0cOn", "publishedAt": "2019-02-23T02:54:33Z", "author": "Akash Shetty", "text": "Data structures and algorithms r in every language", "likes": 0}]}, {"topLevelComment": {"id": "UgxMo36GsfcGzXp1UbB4AaABAg", "publishedAt": "2019-02-22T02:42:09Z", "author": "tuxmusicman", "text": "Somebody's gonna complain about that . . . fu . . .", "likes": 8}}, {"topLevelComment": {"id": "Ugy6OltJm4hhxW4TxSd4AaABAg", "publishedAt": "2019-02-22T01:44:40Z", "author": "howard smith", "text": "Where can I find the notebooks for the lesson?", "likes": 1}}, {"topLevelComment": {"id": "UgyUJKNh9iJsDi2048h4AaABAg", "publishedAt": "2019-02-20T07:18:06Z", "author": "Haniel", "text": "Can you please share the jupyter notebook", "likes": 6}, "replies": [{"id": "UgyUJKNh9iJsDi2048h4AaABAg.8rZ_hgQThZF9MVsuT5nqpM", "publishedAt": "2021-04-24T05:33:31Z", "author": "chandu shekar", "text": "Did you get the jupyter notebook?", "likes": 0}]}, {"topLevelComment": {"id": "UgzP4kEpgkjASpIzVwZ4AaABAg", "publishedAt": "2019-02-20T05:55:21Z", "author": "Lincoln Sand", "text": "Python is a silly language to use for this. Should be used C", "likes": 2}}, {"topLevelComment": {"id": "UgwH8UipgAaICt4D_W14AaABAg", "publishedAt": "2019-02-19T19:05:52Z", "author": "Pratiksha Patnaik", "text": "Can I get the link to the Jupyter notebook documentation presented in the video", "likes": 7}}, {"topLevelComment": {"id": "UgzjC6lTyPEFbCxYR2h4AaABAg", "publishedAt": "2019-02-19T18:42:04Z", "author": "tsmspace", "text": "I'm looking for the notebook that's presented in this video,,,, Can we have the notebook for download???", "likes": 0}, "replies": [{"id": "UgzjC6lTyPEFbCxYR2h4AaABAg.8rYEBFzME8p8ru-UgSK1x9", "publishedAt": "2019-02-28T14:56:10Z", "author": "tsmspace", "text": "I mean the specific notebook, so I can open it in jupyter notebooks", "likes": 0}, {"id": "UgzjC6lTyPEFbCxYR2h4AaABAg.8rYEBFzME8p8rdEf3QUHEK", "publishedAt": "2019-02-22T02:41:42Z", "author": "tuxmusicman", "text": "https://jupyter.org/", "likes": 0}, {"id": "UgzjC6lTyPEFbCxYR2h4AaABAg.8rYEBFzME8p8r_K60WozlT", "publishedAt": "2019-02-20T14:12:15Z", "author": "Ola Ola", "text": "Hi! This is probably Jupyter Notebook ;)", "likes": 0}]}, {"topLevelComment": {"id": "UgynCF1TMZpaWZDRVrp4AaABAg", "publishedAt": "2019-02-19T18:02:51Z", "author": "Drakibble", "text": "You can tell this is good when it has no dislikes!", "likes": 1}}, {"topLevelComment": {"id": "Ugz0HlM_J9UmY8JZa_Z4AaABAg", "publishedAt": "2019-02-19T17:37:51Z", "author": "Ola Ola", "text": "Thank You very much! <3 <3 <3", "likes": 10}}, {"topLevelComment": {"id": "UgzVcJMUfWEVXa8KBKR4AaABAg", "publishedAt": "2019-02-19T17:30:10Z", "author": "Himanshu Barman", "text": "At last a good tutorial for python Algo thanks", "likes": 2}}, {"topLevelComment": {"id": "UgzW67cFxGZo8OJClqV4AaABAg", "publishedAt": "2019-02-19T16:44:53Z", "author": "Akash Shetty", "text": "Is this tutorial?", "likes": 0}}, {"topLevelComment": {"id": "UgySRfy3_WPwjuMDlyd4AaABAg", "publishedAt": "2019-02-19T16:22:14Z", "author": "Charles Kubiak", "text": "Did you guys speed this up to compress the time of the listen or does the presenter actually speak this fast in real life?  Its great content, but it probably takes more time to watch when you factor in rewinding to review key concepts that zip by.", "likes": 6}, "replies": [{"id": "UgySRfy3_WPwjuMDlyd4AaABAg.8rXzBAswSV38rYh8rEFIwj", "publishedAt": "2019-02-19T23:03:52Z", "author": "Marcus Sparticus", "text": "Just slow the video down", "likes": 2}]}, {"topLevelComment": {"id": "UgxDkQfSUW-4joV0snJ4AaABAg", "publishedAt": "2019-02-19T15:31:46Z", "author": "Abhishek Kumar", "text": "Thank u for this awesome video", "likes": 1}}, {"topLevelComment": {"id": "Ugy-Nn0qbSHzwQCuFh94AaABAg", "publishedAt": "2019-02-19T15:27:52Z", "author": "Dev Gupta", "text": "Please make videos on ds and algo in python and c++ both like a course. It will be very helpful too", "likes": 3}}, {"topLevelComment": {"id": "UgzECYh4pPjuqCHVHr54AaABAg", "publishedAt": "2019-02-19T15:10:30Z", "author": "vikas", "text": "Bazanji vibes :D", "likes": 1}}, {"topLevelComment": {"id": "UgzIvIphRs8QGUZyS0h4AaABAg", "publishedAt": "2019-02-19T15:08:34Z", "author": "Arthur", "text": "Is he recording a beat ? Or a tutorial ?", "likes": 59}, "replies": [{"id": "UgzIvIphRs8QGUZyS0h4AaABAg.8rXqk_VJZQm93bnILtAyt2", "publishedAt": "2020-01-10T16:02:41Z", "author": "Ivaylo Ivanov", "text": "Beat production tutorial?", "likes": 1}]}, {"topLevelComment": {"id": "UgyqO5yGOieIRanDiKp4AaABAg", "publishedAt": "2019-02-19T14:45:36Z", "author": "Devanand Sharma", "text": "Watch at 0.75 , Sounds Better", "likes": 71}, "replies": [{"id": "UgyqO5yGOieIRanDiKp4AaABAg.8rXo7L1wLTb9B_6I0gkIiU", "publishedAt": "2020-07-26T11:10:50Z", "author": "alen jose", "text": "its still fast", "likes": 0}, {"id": "UgyqO5yGOieIRanDiKp4AaABAg.8rXo7L1wLTb91DeRCu8Imk", "publishedAt": "2019-11-12T04:41:27Z", "author": "Sai Tarun", "text": "haha thanks", "likes": 0}, {"id": "UgyqO5yGOieIRanDiKp4AaABAg.8rXo7L1wLTb8sK6ZYtVIxK", "publishedAt": "2019-03-11T03:37:30Z", "author": "Aditya Pai Thon", "text": "Lol he does sound drunk @Tom", "likes": 0}, {"id": "UgyqO5yGOieIRanDiKp4AaABAg.8rXo7L1wLTb8rfqVS3LU2W", "publishedAt": "2019-02-23T02:59:31Z", "author": "Tom H", "text": "Yes, thank you Akash!", "likes": 0}, {"id": "UgyqO5yGOieIRanDiKp4AaABAg.8rXo7L1wLTb8rfq-M9zWWM", "publishedAt": "2019-02-23T02:55:08Z", "author": "Akash Shetty", "text": "@Tom H nice, u got it right?", "likes": 0}]}, {"topLevelComment": {"id": "UgzXg_TmrBgVUAE6Q-94AaABAg", "publishedAt": "2019-02-19T14:36:36Z", "author": "Aditya Ranjan", "text": "Please upload full content of ds and algo for interviews", "likes": 13}}, {"topLevelComment": {"id": "Ugxea7LEmVI43bNc6NF4AaABAg", "publishedAt": "2019-02-19T14:30:18Z", "author": "igniculus", "text": "Perfect speed ...", "likes": 7}}, {"topLevelComment": {"id": "UgyBPfM-XU7_wltE6VF4AaABAg", "publishedAt": "2019-02-19T14:26:27Z", "author": "John Hopkins", "text": "To the narrator: DUDE! You talk WAY too damn fast. Chill out.", "likes": 6}, "replies": [{"id": "UgyBPfM-XU7_wltE6VF4AaABAg.8rXlwA2AQWs8sku8T3nbYE", "publishedAt": "2019-03-21T22:38:56Z", "author": "Pradeep Sahoo", "text": "Speed was good. I liked it.", "likes": 1}, {"id": "UgyBPfM-XU7_wltE6VF4AaABAg.8rXlwA2AQWs8rYhEYq_r_Y", "publishedAt": "2019-02-19T23:04:39Z", "author": "Marcus Sparticus", "text": "Just slow the video down", "likes": 1}, {"id": "UgyBPfM-XU7_wltE6VF4AaABAg.8rXlwA2AQWs8rY76DEd76M", "publishedAt": "2019-02-19T17:40:12Z", "author": "Lord Swaggity", "text": "I found it to be perfect \ud83d\ude09", "likes": 5}]}, {"topLevelComment": {"id": "Ugwmn9aqNf0_IOaDBAJ4AaABAg", "publishedAt": "2019-02-19T14:26:03Z", "author": "orewa pain", "text": "No dislike cause every one love's python \ud83d\ude0d\ud83d\ude0d\ud83d\ude0d\ud83d\ude18\ud83d\ude18", "likes": 1}}, {"topLevelComment": {"id": "UgxfxUgr5vMTyLI4mst4AaABAg", "publishedAt": "2019-02-19T14:00:27Z", "author": "Tarek Ali", "text": "Please like", "likes": 0}}, {"topLevelComment": {"id": "UgwPyY6vlB7nYCtTMAN4AaABAg", "publishedAt": "2019-02-19T13:53:42Z", "author": "Muheeb Kamali", "text": "Please like", "likes": 7}}]}