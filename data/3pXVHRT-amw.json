{"video": {"id": "3pXVHRT-amw", "title": "Module Design Pattern - Beau teaches JavaScript", "description": "The module design pattern in JavaScript is one of the most used designed pattern for keeping particular pieces of code independent from other parts. Learn how to use it in this quick video!\n\nCode: \n\ud83d\udd17 http://codepen.io/beaucarnes/pen/ygvoNM?editors=0010\nMore information:\n\ud83d\udd17 https://joshbedo.github.io/JS-Design-Patterns/\n\ud83d\udd17 http://www.2ality.com/2014/09/es6-modules-final.html\n\nBeau Carnes on Twitter: https://twitter.com/carnesbeau\n\n\u2b50JavaScript Playlists\u2b50\n\u25b6JavaScript Basics: https://www.youtube.com/playlist?list=PLWKjhJtqVAbk2qRZtWSzCIN38JC_NdhW5\n\u25b6ES6: https://www.youtube.com/playlist?list=PLWKjhJtqVAbljtmmeS0c-CEl2LdE-eR_F\n\u25b6Design Patterns: https://www.youtube.com/playlist?list=PLWKjhJtqVAbnZtkAI3BqcYxKnfWn_C704\n\u25b6Data Structures and Algorithms: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ\n\u25b6Clean Code: https://www.youtube.com/playlist?list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh\n\n-\nWe're busy people who learn to code, then practice by building projects for nonprofits. Learn Full-stack JavaScript, build a portfolio, and get great references with our open source community.\n\nJoin our community at https://freecodecamp.com\nFollow us on twitter: https://twitter.com/freecodecamp\nLike us on Facebook: https://www.facebook.com/freecodecamp\nFollow Quincy on Quora: https://www.quora.com/Quincy-Larson", "duration": "PT2M44S", "likes": "467", "views": "26465"}, "comments": [{"topLevelComment": {"author": "dddddr", "text": "This was plain incorrect, I'm dipping out early again. I expected something to be incorrect with freecodecamp as per usual but not at such basics.", "likes": 0}}, {"topLevelComment": {"author": "Noko Moko", "text": "A class isn't really the same as a revealing module pattern object. That class syntax has all its members public, and creates instances every time you call it. The module pattern uses closures for private members and only returns one object.", "likes": 5}}, {"topLevelComment": {"author": "Luk\u00e1\u0161 Han\u00e1k", "text": "Thanks! Very good explanation.", "likes": 0}}, {"topLevelComment": {"author": "S Danpite", "text": "How shopping list is private ?", "likes": 0}, "replies": [{"author": "Ksee", "text": "its not...you cant make private fields in javascript...however you can with typescript. You can do some hack ways of doing it though.", "likes": 0}]}, {"topLevelComment": {"author": "nanomosfet", "text": "this.shoppinglist is not private :(", "likes": 6}}, {"topLevelComment": {"author": "Kenji Miyashiro", "text": "is this like object oriented programming in other languages?", "likes": 0}}, {"topLevelComment": {"author": "TJ Walker", "text": "I think this content is grossly misleading. The \"new\"-ish Class syntax has little to do with the Module Pattern; the former does nothing in the way of enabling private member as the latter does.", "likes": 6}, "replies": [{"author": "Prince", "text": "And you say nothing that proves your point.", "likes": 0}, {"author": "Harshit Joshi", "text": "@Breakpoint thanks for the link", "likes": 0}, {"author": "Breakpoint", "text": "true, here is further reading for anyone confused https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15", "likes": 0}]}, {"topLevelComment": {"author": "TheHydrolyst", "text": "dude how fast do you type ?! :o @2:17", "likes": 22}, "replies": [{"author": "ELLIO7", "text": "It's a fast-forwarded. See the pointer.", "likes": 0}, {"author": "T Ruud", "text": "@Tsveti Stoyanov oh yeah It does =.=", "likes": 0}, {"author": "Tsveti Stoyanov", "text": "that was fast-paced.. are you blind, cursor blinks like crazy", "likes": 3}, {"author": "T Ruud", "text": "I came here to say this as well. I'm impressed", "likes": 0}]}, {"topLevelComment": {"author": "Ajai .A", "text": "Thank you!!", "likes": 0}}, {"topLevelComment": {"author": "J Work", "text": "Thanks so much! In short you explained what others take an hour to do!", "likes": 6}, "replies": [{"author": "Kawika", "text": "That's the principal so many tutorial creators seem to miss with their lengthy intro segments and too much information up front. I prefer the above method. Gets right to the point and we can always go to the channel for the intro. :)", "likes": 0}]}, {"topLevelComment": {"author": "Clorox Bleach #1", "text": "the shoppinglist isn't private", "likes": 15}, "replies": [{"author": "Breakpoint", "text": "Here is a good write up on how to make private variables and methods using a factory function (it uses closure).\n\nhttps://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15", "likes": 0}, {"author": "Breakpoint", "text": "It can be accessed still by typing shopping.shoppingList\n\nClasses actually can't make private variables or methods. Only closures can.", "likes": 6}, {"author": "JJ", "text": "can you explain?", "likes": 0}]}, {"topLevelComment": {"author": "wjrasmussen666", "text": "Do browsers support ES6?  I thought is wasn't supported fully.", "likes": 0}, "replies": [{"author": "Sumit Majumdar", "text": "Use a transpiler like Babel", "likes": 2}, {"author": "Akshay Jassal", "text": "you can use Babel", "likes": 2}]}, {"topLevelComment": {"author": "KozmicLuis", "text": "Without the syntax sugar and prototype orientation it'd look like:\n\nlet Module = (() => {\n  let private = 'secret'\n\n  function _privFunc() { console.log('Ayy LMAO') }\n  function publicFunc() { _privFunc() }\n\n  return { publicFunc }  \n}())", "likes": 13}}]}