{"video": {"id": "bcPahhyYEIk", "title": "Talking Clock - The Daily Programmer #321", "description": "Link to the problem in the video:\nhttps://www.reddit.com/r/dailyprogrammer/comments/6jr76h/20170627_challenge_321_easy_talking_clock/\n\nFollow Cody on Twitter: https://twitter.com/CodyLSeibert\n\nLearn to code for free and get a developer job: https://www.freecodecamp.com\n\nRead hundreds of articles on programming: https://medium.freecodecamp.com", "duration": "PT15M37S", "likes": "327", "views": "15460"}, "comments": [{"topLevelComment": {"author": "Eugene Novikov", "text": "Where is talking? u have deceived me", "likes": 0}}, {"topLevelComment": {"author": "Anuja Patole", "text": "Can you please upload videos of all previous challenges.", "likes": 0}}, {"topLevelComment": {"author": "Robert Vogelezang", "text": "Very good how you break down the problem into smaller ones and talk it out, great video!", "likes": 1}}, {"topLevelComment": {"author": "AZ Experiment", "text": "can someone please explain to me  about these signs `${}`", "likes": 0}}, {"topLevelComment": {"author": "Steve K", "text": "Do you guys plan on doing more daily programmer challenges? trying to learn javascript and this is really helpful.", "likes": 1}}, {"topLevelComment": {"author": "Steven Scott", "text": "you misspelled twelve", "likes": 0}, "replies": [{"author": "Ryan Daniels", "text": "and forty", "likes": 0}]}, {"topLevelComment": {"author": "Alexandre Chetrite", "text": "You are a very efficient and clear Javascript/Programmaing teacher! I learned more in 15 minutes with this course of yours than reading 1 houir of Javascript theory! Please do more and span all the logical algorithmic cases in Javascript!", "likes": 1}}, {"topLevelComment": {"author": "tony kempson", "text": "Thanks for the video. It's a good real-world example that shows quite a lot of JavaScript techniques for noobs like myself.", "likes": 1}}, {"topLevelComment": {"author": "Wing N.", "text": "thank you! as someone who has no background in coding, I have been feeling as if I have pieces to the puzzle but with not much of a clue how the big picture looks.  This video helps tie all the pieces together.", "likes": 1}}, {"topLevelComment": {"author": "Androzim", "text": "Great! Thank you for time you've spent to make this video :)", "likes": 0}, "replies": [{"author": "freeCodeCamp.org", "text": "You're welcome, glad you enjoyed it.", "likes": 0}]}, {"topLevelComment": {"author": "LBBO", "text": "You missed the HH:00 case. Currently, for 00:00 your function would output \"It's twelve oh am\" but the description requires it to output \"It's twelve am\" (see 0:43 ). However, if you were to just leave the minute string empty, you would have to spaces after each other in the output string (as you did at 13:41 ). You could handle that by filtering the array for empty strings before joining them or by replaceing two spaces with one in the output string.\n\nOtherwise, this is a nice video.", "likes": 2}, "replies": [{"author": "Artur Haurylkevich", "text": "I did a similar mistake leaving the minute string empty and get one extra space :) https://gist.github.com/dagolinuxoid/d10ad12873e09e318509b2b163474250", "likes": 0}, {"author": "freeCodeCamp.org", "text": "Nice catch!", "likes": 2}]}, {"topLevelComment": {"author": "paraglide01", "text": "Hmm, that Youtube algoritme gets me everytime, from cats chasing dogs to a talking clock.....", "likes": 0}}, {"topLevelComment": {"author": "Lewis Cowles", "text": "I'd have just made a massive array with the names for numbers. It's not a DB, there's no need for normalisation or processing. If you do want to avoid repeating constants, just reference unique words.", "likes": 0}, "replies": [{"author": "Lewis Cowles", "text": "https://gist.github.com/Lewiscowles1986/13f1f59035f80e73fd4cdc48e7fbc269", "likes": 0}]}, {"topLevelComment": {"author": "Chriszilla1123", "text": "What IDE is that?  I will be starting JS soon and I like the feature of how your console.log() function updates the result as you enter code.", "likes": 6}, "replies": [{"author": "Ryan Daniels", "text": "Is it the pro version? Because I just installed the Community version and it not doing that", "likes": 0}, {"author": "MarieBaringer", "text": "I noticed that in your console and looked it up.  Just started using VS Code yesterday, Quokka.js today - totally awesome! :-D", "likes": 4}, {"author": "freeCodeCamp.org", "text": "VS Code with the Quokka.js plugin", "likes": 7}, {"author": "sampath gonnuru", "text": "It's Microsoft visual code studio", "likes": 2}, {"author": "sampath gonnuru", "text": "Chris Hill it's Microsoft visual code studio", "likes": 1}]}, {"topLevelComment": {"author": "warth666", "text": "It's a bit to complicated approach for me. Can we just create one array from 1 to 30 and play let's say 13:35 -> It's tweny five to two pm? I think it's more straightforward. What do you think?", "likes": 0}, "replies": [{"author": "freeCodeCamp.org", "text": "Yeah, this could probably have been accomplished using a single array and changing up the logic to figure out which index to use.  See if you can implement it a better way and paste it here!", "likes": 0}]}, {"topLevelComment": {"author": "Vagelis Prokopiou", "text": "Pretty cool.", "likes": 1}}, {"topLevelComment": {"author": "keelaboosa", "text": "I'd like to see how you attach the speech part to this.  Nice video!", "likes": 1}, "replies": [{"author": "Sandip Nirmal", "text": "Nice video and thanks for introducing Package 'say'.\n\nWith 'say', above problem gets solved in 3 lines.\n\nconst say = require('say');\nconst date = new Date();\nsay.speak(date.toLocaleTimeString());", "likes": 3}, {"author": "freeCodeCamp.org", "text": "If you are familiar with node, you can just install an npm package called 'say' and pass it a string to have it read using text-to-speech.  https://www.npmjs.com/package/say", "likes": 4}]}]}